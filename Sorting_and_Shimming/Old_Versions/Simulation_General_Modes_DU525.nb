(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    810747,      15872]
NotebookOptionsPosition[    799917,      15693]
NotebookOutlinePosition[    800290,      15709]
CellTagsIndexPosition[    800247,      15706]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "Radia`"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radUtiDelAll", "[", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Erase", " ", "all", " ", "previous", " ", "elements"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadPlot3DOptions", "[", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.807016365949486*^9, 3.807016379214711*^9}, 
   3.8187775528742657`*^9, {3.818777737341374*^9, 3.818777737857004*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[111]:=",ExpressionUUID->"4cf52398-bf3e-4582-9c14-dcfb60d6a1f7"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Radia Version: \"\>", "\[InvisibleSpace]", "4.31`", 
   "\[InvisibleSpace]", "\<\" is loaded\"\>"}],
  SequenceForm["Radia Version: ", 4.31, " is loaded"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8070198591288614`*^9, 3.8070208889555883`*^9, 3.807020973852829*^9, 
   3.807021461852207*^9, 3.807024750620461*^9, 3.807026801846639*^9, {
   3.807026881688754*^9, 3.8070269095325065`*^9}, {3.8070269543454247`*^9, 
   3.807026974293238*^9}, 3.8070271384417686`*^9, 3.8070272522331505`*^9, 
   3.807027549198433*^9, 3.8070276489297895`*^9, 3.807027755776758*^9, 
   3.8070317135943265`*^9, 3.8070317696961117`*^9, 3.807031849271629*^9, 
   3.8070326096182675`*^9, 3.8070331660159383`*^9, 3.8070336145363445`*^9, 
   3.8070337793451977`*^9, 3.807033831886803*^9, 3.80703393062607*^9, 
   3.807034125921543*^9, 3.807034221256836*^9, 3.8070366974642363`*^9, 
   3.8070371791171007`*^9, 3.807041565318983*^9, 3.8070416722079306`*^9, 
   3.807042110606089*^9, 3.8072634547486734`*^9, 3.8072714447693563`*^9, 
   3.807271900885573*^9, 3.8072898900273495`*^9, 3.8072914274879065`*^9, 
   3.807292630260783*^9, 3.8073485071919017`*^9, 3.8073485923736124`*^9, 
   3.807348627533532*^9, 3.8073501029926796`*^9, 3.807350323590585*^9, 
   3.8073698620978956`*^9, 3.807370048003967*^9, 3.8075213329118824`*^9, 
   3.8078651606388683`*^9, 3.812101171426463*^9, 3.8121014373784*^9, 
   3.8121018810892763`*^9, 3.8124605722925606`*^9, 3.812460758180461*^9, 
   3.8124609116248794`*^9, 3.8124612414205203`*^9, 3.812461683793977*^9, 
   3.8124617439346457`*^9, 3.8124626652702227`*^9, 3.812462930261967*^9, 
   3.8124639104458504`*^9, 3.8124642741642437`*^9, 3.8124714562548704`*^9, 
   3.8124716315777793`*^9, 3.813047905393612*^9, 3.813049954950992*^9, 
   3.8130501708605323`*^9, 3.813050357527934*^9, 3.813050559600534*^9, 
   3.813051338157078*^9, 3.81305297952064*^9, 3.8130555666424475`*^9, 
   3.813064338094259*^9, {3.813066689639171*^9, 3.8130667089503074`*^9}, 
   3.8130667809140425`*^9, 3.8130674920548882`*^9, 3.8130705243347144`*^9, 
   3.8130718853236732`*^9, 3.813072761737774*^9, 3.813076040384308*^9, 
   3.813395563175749*^9, 3.813396960228257*^9, 3.813400594979704*^9, 
   3.8134028838755817`*^9, 3.8134047193658943`*^9, 3.8134065436960497`*^9, 
   3.8134117989143324`*^9, 3.813493524011303*^9, 3.8145195056946325`*^9, 
   3.8159897265738487`*^9, 3.8159900619868326`*^9, 3.816012699524167*^9, 
   3.816013107437126*^9, 3.816013334001794*^9, 3.8160133746639175`*^9, 
   3.8160735932497206`*^9, 3.8160887225338707`*^9, 3.816088935531989*^9, 
   3.816091030943383*^9, 3.816091570940025*^9, 3.8187556465638433`*^9, 
   3.8187557326047516`*^9, 3.8187565128380685`*^9, 3.818761276031769*^9, 
   3.818777693398958*^9, 3.818777742450733*^9, 3.8188342260250196`*^9, 
   3.818834367856579*^9, 3.818840861726987*^9, 3.8194658281233644`*^9, 
   3.819467520790428*^9, 3.8194677667851954`*^9, 3.8194686047646136`*^9, 
   3.8194688097829337`*^9, {3.8194689419221454`*^9, 3.8194689504784837`*^9}, 
   3.8194714751380453`*^9, 3.8194751133918657`*^9, 3.819475228850296*^9, 
   3.8194753233208494`*^9, 3.8194759971478143`*^9, 3.819477586531005*^9, 
   3.819478289113815*^9, 3.81947917511082*^9, 3.819532643252781*^9, 
   3.8195395436817274`*^9},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"b0eb5d2a-93c3-4583-b17c-24eb514dd1da"],

Cell[BoxData["\<\"Radia is copyright ESRF, France.\"\>"], "Print",
 CellChangeTimes->{
  3.8070198591288614`*^9, 3.8070208889555883`*^9, 3.807020973852829*^9, 
   3.807021461852207*^9, 3.807024750620461*^9, 3.807026801846639*^9, {
   3.807026881688754*^9, 3.8070269095325065`*^9}, {3.8070269543454247`*^9, 
   3.807026974293238*^9}, 3.8070271384417686`*^9, 3.8070272522331505`*^9, 
   3.807027549198433*^9, 3.8070276489297895`*^9, 3.807027755776758*^9, 
   3.8070317135943265`*^9, 3.8070317696961117`*^9, 3.807031849271629*^9, 
   3.8070326096182675`*^9, 3.8070331660159383`*^9, 3.8070336145363445`*^9, 
   3.8070337793451977`*^9, 3.807033831886803*^9, 3.80703393062607*^9, 
   3.807034125921543*^9, 3.807034221256836*^9, 3.8070366974642363`*^9, 
   3.8070371791171007`*^9, 3.807041565318983*^9, 3.8070416722079306`*^9, 
   3.807042110606089*^9, 3.8072634547486734`*^9, 3.8072714447693563`*^9, 
   3.807271900885573*^9, 3.8072898900273495`*^9, 3.8072914274879065`*^9, 
   3.807292630260783*^9, 3.8073485071919017`*^9, 3.8073485923736124`*^9, 
   3.807348627533532*^9, 3.8073501029926796`*^9, 3.807350323590585*^9, 
   3.8073698620978956`*^9, 3.807370048003967*^9, 3.8075213329118824`*^9, 
   3.8078651606388683`*^9, 3.812101171426463*^9, 3.8121014373784*^9, 
   3.8121018810892763`*^9, 3.8124605722925606`*^9, 3.812460758180461*^9, 
   3.8124609116248794`*^9, 3.8124612414205203`*^9, 3.812461683793977*^9, 
   3.8124617439346457`*^9, 3.8124626652702227`*^9, 3.812462930261967*^9, 
   3.8124639104458504`*^9, 3.8124642741642437`*^9, 3.8124714562548704`*^9, 
   3.8124716315777793`*^9, 3.813047905393612*^9, 3.813049954950992*^9, 
   3.8130501708605323`*^9, 3.813050357527934*^9, 3.813050559600534*^9, 
   3.813051338157078*^9, 3.81305297952064*^9, 3.8130555666424475`*^9, 
   3.813064338094259*^9, {3.813066689639171*^9, 3.8130667089503074`*^9}, 
   3.8130667809140425`*^9, 3.8130674920548882`*^9, 3.8130705243347144`*^9, 
   3.8130718853236732`*^9, 3.813072761737774*^9, 3.813076040384308*^9, 
   3.813395563175749*^9, 3.813396960228257*^9, 3.813400594979704*^9, 
   3.8134028838755817`*^9, 3.8134047193658943`*^9, 3.8134065436960497`*^9, 
   3.8134117989143324`*^9, 3.813493524011303*^9, 3.8145195056946325`*^9, 
   3.8159897265738487`*^9, 3.8159900619868326`*^9, 3.816012699524167*^9, 
   3.816013107437126*^9, 3.816013334001794*^9, 3.8160133746639175`*^9, 
   3.8160735932497206`*^9, 3.8160887225338707`*^9, 3.816088935531989*^9, 
   3.816091030943383*^9, 3.816091570940025*^9, 3.8187556465638433`*^9, 
   3.8187557326047516`*^9, 3.8187565128380685`*^9, 3.818761276031769*^9, 
   3.818777693398958*^9, 3.818777742450733*^9, 3.8188342260250196`*^9, 
   3.818834367856579*^9, 3.818840861726987*^9, 3.8194658281233644`*^9, 
   3.819467520790428*^9, 3.8194677667851954`*^9, 3.8194686047646136`*^9, 
   3.8194688097829337`*^9, {3.8194689419221454`*^9, 3.8194689504784837`*^9}, 
   3.8194714751380453`*^9, 3.8194751133918657`*^9, 3.819475228850296*^9, 
   3.8194753233208494`*^9, 3.8194759971478143`*^9, 3.819477586531005*^9, 
   3.819478289113815*^9, 3.81947917511082*^9, 3.819532643252781*^9, 
   3.8195395436817274`*^9},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"15bad8fa-9d0c-4af7-9561-462b54155dd1"],

Cell[BoxData["\<\"Portions copyright Synchrotron SOLEIL, France.\"\>"], \
"Print",
 CellChangeTimes->{
  3.8070198591288614`*^9, 3.8070208889555883`*^9, 3.807020973852829*^9, 
   3.807021461852207*^9, 3.807024750620461*^9, 3.807026801846639*^9, {
   3.807026881688754*^9, 3.8070269095325065`*^9}, {3.8070269543454247`*^9, 
   3.807026974293238*^9}, 3.8070271384417686`*^9, 3.8070272522331505`*^9, 
   3.807027549198433*^9, 3.8070276489297895`*^9, 3.807027755776758*^9, 
   3.8070317135943265`*^9, 3.8070317696961117`*^9, 3.807031849271629*^9, 
   3.8070326096182675`*^9, 3.8070331660159383`*^9, 3.8070336145363445`*^9, 
   3.8070337793451977`*^9, 3.807033831886803*^9, 3.80703393062607*^9, 
   3.807034125921543*^9, 3.807034221256836*^9, 3.8070366974642363`*^9, 
   3.8070371791171007`*^9, 3.807041565318983*^9, 3.8070416722079306`*^9, 
   3.807042110606089*^9, 3.8072634547486734`*^9, 3.8072714447693563`*^9, 
   3.807271900885573*^9, 3.8072898900273495`*^9, 3.8072914274879065`*^9, 
   3.807292630260783*^9, 3.8073485071919017`*^9, 3.8073485923736124`*^9, 
   3.807348627533532*^9, 3.8073501029926796`*^9, 3.807350323590585*^9, 
   3.8073698620978956`*^9, 3.807370048003967*^9, 3.8075213329118824`*^9, 
   3.8078651606388683`*^9, 3.812101171426463*^9, 3.8121014373784*^9, 
   3.8121018810892763`*^9, 3.8124605722925606`*^9, 3.812460758180461*^9, 
   3.8124609116248794`*^9, 3.8124612414205203`*^9, 3.812461683793977*^9, 
   3.8124617439346457`*^9, 3.8124626652702227`*^9, 3.812462930261967*^9, 
   3.8124639104458504`*^9, 3.8124642741642437`*^9, 3.8124714562548704`*^9, 
   3.8124716315777793`*^9, 3.813047905393612*^9, 3.813049954950992*^9, 
   3.8130501708605323`*^9, 3.813050357527934*^9, 3.813050559600534*^9, 
   3.813051338157078*^9, 3.81305297952064*^9, 3.8130555666424475`*^9, 
   3.813064338094259*^9, {3.813066689639171*^9, 3.8130667089503074`*^9}, 
   3.8130667809140425`*^9, 3.8130674920548882`*^9, 3.8130705243347144`*^9, 
   3.8130718853236732`*^9, 3.813072761737774*^9, 3.813076040384308*^9, 
   3.813395563175749*^9, 3.813396960228257*^9, 3.813400594979704*^9, 
   3.8134028838755817`*^9, 3.8134047193658943`*^9, 3.8134065436960497`*^9, 
   3.8134117989143324`*^9, 3.813493524011303*^9, 3.8145195056946325`*^9, 
   3.8159897265738487`*^9, 3.8159900619868326`*^9, 3.816012699524167*^9, 
   3.816013107437126*^9, 3.816013334001794*^9, 3.8160133746639175`*^9, 
   3.8160735932497206`*^9, 3.8160887225338707`*^9, 3.816088935531989*^9, 
   3.816091030943383*^9, 3.816091570940025*^9, 3.8187556465638433`*^9, 
   3.8187557326047516`*^9, 3.8187565128380685`*^9, 3.818761276031769*^9, 
   3.818777693398958*^9, 3.818777742450733*^9, 3.8188342260250196`*^9, 
   3.818834367856579*^9, 3.818840861726987*^9, 3.8194658281233644`*^9, 
   3.819467520790428*^9, 3.8194677667851954`*^9, 3.8194686047646136`*^9, 
   3.8194688097829337`*^9, {3.8194689419221454`*^9, 3.8194689504784837`*^9}, 
   3.8194714751380453`*^9, 3.8194751133918657`*^9, 3.819475228850296*^9, 
   3.8194753233208494`*^9, 3.8194759971478143`*^9, 3.819477586531005*^9, 
   3.819478289113815*^9, 3.81947917511082*^9, 3.819532643252781*^9, 
   3.8195395437129726`*^9},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"6e2dea64-2c20-4577-91f6-d9fcac0476f6"],

Cell[BoxData["\<\"Portions copyright Wolfram Research, Inc.\"\>"], "Print",
 CellChangeTimes->{
  3.8070198591288614`*^9, 3.8070208889555883`*^9, 3.807020973852829*^9, 
   3.807021461852207*^9, 3.807024750620461*^9, 3.807026801846639*^9, {
   3.807026881688754*^9, 3.8070269095325065`*^9}, {3.8070269543454247`*^9, 
   3.807026974293238*^9}, 3.8070271384417686`*^9, 3.8070272522331505`*^9, 
   3.807027549198433*^9, 3.8070276489297895`*^9, 3.807027755776758*^9, 
   3.8070317135943265`*^9, 3.8070317696961117`*^9, 3.807031849271629*^9, 
   3.8070326096182675`*^9, 3.8070331660159383`*^9, 3.8070336145363445`*^9, 
   3.8070337793451977`*^9, 3.807033831886803*^9, 3.80703393062607*^9, 
   3.807034125921543*^9, 3.807034221256836*^9, 3.8070366974642363`*^9, 
   3.8070371791171007`*^9, 3.807041565318983*^9, 3.8070416722079306`*^9, 
   3.807042110606089*^9, 3.8072634547486734`*^9, 3.8072714447693563`*^9, 
   3.807271900885573*^9, 3.8072898900273495`*^9, 3.8072914274879065`*^9, 
   3.807292630260783*^9, 3.8073485071919017`*^9, 3.8073485923736124`*^9, 
   3.807348627533532*^9, 3.8073501029926796`*^9, 3.807350323590585*^9, 
   3.8073698620978956`*^9, 3.807370048003967*^9, 3.8075213329118824`*^9, 
   3.8078651606388683`*^9, 3.812101171426463*^9, 3.8121014373784*^9, 
   3.8121018810892763`*^9, 3.8124605722925606`*^9, 3.812460758180461*^9, 
   3.8124609116248794`*^9, 3.8124612414205203`*^9, 3.812461683793977*^9, 
   3.8124617439346457`*^9, 3.8124626652702227`*^9, 3.812462930261967*^9, 
   3.8124639104458504`*^9, 3.8124642741642437`*^9, 3.8124714562548704`*^9, 
   3.8124716315777793`*^9, 3.813047905393612*^9, 3.813049954950992*^9, 
   3.8130501708605323`*^9, 3.813050357527934*^9, 3.813050559600534*^9, 
   3.813051338157078*^9, 3.81305297952064*^9, 3.8130555666424475`*^9, 
   3.813064338094259*^9, {3.813066689639171*^9, 3.8130667089503074`*^9}, 
   3.8130667809140425`*^9, 3.8130674920548882`*^9, 3.8130705243347144`*^9, 
   3.8130718853236732`*^9, 3.813072761737774*^9, 3.813076040384308*^9, 
   3.813395563175749*^9, 3.813396960228257*^9, 3.813400594979704*^9, 
   3.8134028838755817`*^9, 3.8134047193658943`*^9, 3.8134065436960497`*^9, 
   3.8134117989143324`*^9, 3.813493524011303*^9, 3.8145195056946325`*^9, 
   3.8159897265738487`*^9, 3.8159900619868326`*^9, 3.816012699524167*^9, 
   3.816013107437126*^9, 3.816013334001794*^9, 3.8160133746639175`*^9, 
   3.8160735932497206`*^9, 3.8160887225338707`*^9, 3.816088935531989*^9, 
   3.816091030943383*^9, 3.816091570940025*^9, 3.8187556465638433`*^9, 
   3.8187557326047516`*^9, 3.8187565128380685`*^9, 3.818761276031769*^9, 
   3.818777693398958*^9, 3.818777742450733*^9, 3.8188342260250196`*^9, 
   3.818834367856579*^9, 3.818840861726987*^9, 3.8194658281233644`*^9, 
   3.819467520790428*^9, 3.8194677667851954`*^9, 3.8194686047646136`*^9, 
   3.8194688097829337`*^9, {3.8194689419221454`*^9, 3.8194689504784837`*^9}, 
   3.8194714751380453`*^9, 3.8194751133918657`*^9, 3.819475228850296*^9, 
   3.8194753233208494`*^9, 3.8194759971478143`*^9, 3.819477586531005*^9, 
   3.819478289113815*^9, 3.81947917511082*^9, 3.819532643252781*^9, 
   3.8195395437129726`*^9},
 CellLabel->
  "During evaluation of \
In[111]:=",ExpressionUUID->"efdbd0b7-0159-42a9-a300-59eb1ccabee5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters", "Section",
 CellChangeTimes->{{3.807016445560437*^9, 
  3.807016453245742*^9}},ExpressionUUID->"893d239c-3939-4112-ad7c-\
8e714d47b28e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"===", "===", "===", " ", 
    RowBox[{"Magnet", " ", "design"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"DU52", ".5", "mm"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"espessurab", "=", "13"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Block", " ", "Thickness"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dist", "=", "0.125"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"gap", " ", "between", " ", "blocks"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gap", "=", "13.6"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"Gap", " ", "for", " ", "chamber"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magn", "=", "1.37"}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"magnetization", " ", "of", " ", "blocks"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magnetization", "=", 
     RowBox[{"{", 
      RowBox[{"magn", ",", "0.00"}], "}"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"magnetization", " ", "of", " ", 
     RowBox[{"blocks", " ", "/", " ", "tolerance"}], " ", "of", " ", 
     "magnetization"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nperiods", "=", "21"}], ";", " ", 
    RowBox[{"periodL", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"espessurab", "+", "dist"}], ")"}], "*", "4"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "and", " ", "size", " ", "of", " ", "periods"}], 
    "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"layers", "=", 
     RowBox[{"nperiods", "*", "4"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "of", " ", "block", " ", "layers"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nblocks", "=", 
     RowBox[{"layers", "*", "4"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "n\[Degree]", " ", "of", " ", "normal", " ", "size", " ", "blocks"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nTblocks", "=", 
     RowBox[{"nblocks", "+", 
      RowBox[{"4", "*", 
       RowBox[{"(", 
        RowBox[{"4", "+", "3"}], ")"}]}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"n\[Degree]", " ", "total", " ", "of", " ", "Blocks"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "DU21mm", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"espessurab", "=", "5.2"}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{"Block", " ", "Thickness"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dist", "=", "0.05"}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{"gap", " ", "between", " ", "blocks"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"gap", "=", "7"}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{"Gap", " ", "for", " ", "chamber"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"magn", "=", "1.37"}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{"magnetization", " ", "of", " ", "blocks"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nperiods", "=", 
      RowBox[{"84", "/", "4"}]}], ";", " ", 
     RowBox[{"periodL", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"espessurab", "+", "dist"}], ")"}], "*", "4"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "and", " ", "size", " ", "of", " ", "periods"}], 
      "*)"}], " ", "\[IndentingNewLine]", 
     RowBox[{"layers", "=", 
      RowBox[{"nperiods", "*", "4"}]}], ";"}], " ", 
    RowBox[{"(*", 
     RowBox[{"number", " ", "of", " ", "block", " ", "layers"}], "*)"}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", " ", 
     RowBox[{"Computation", " ", "Parameters"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oversize", "=", "200"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"distance", " ", "[", "mm", "]"}], " ", "to", " ", "add", " ", 
      "on", " ", "both", " ", "sides", " ", "of", " ", "the", " ", 
      "undulator", " ", "length"}], ",", " ", 
     RowBox[{"for", " ", "calculations"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ex", "=", "0"}], ";", " ", 
    RowBox[{"ey", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Assembling", " ", "errors"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Field", " ", "Calculation"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ny", "=", "1000"}], ";", " ", 
    RowBox[{"nx", "=", "2000"}], ";"}], "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"xo", "=", 
     RowBox[{"-", "oversize"}]}], ";", " ", 
    RowBox[{"xf", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"nperiods", "+", "2"}], ")"}], "*", "periodL"}], "+", 
      "oversize"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Forces", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subdiv", "=", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "4"}], "}"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "4", ",", "4"}], "}"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subdivcass", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "2"}], "}"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"multipole", " ", "error"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yo", "=", 
     RowBox[{"-", "6"}]}], ";", 
    RowBox[{"yf", "=", "6"}], ";", 
    RowBox[{"zo", "=", 
     RowBox[{"-", "6"}]}], ";", 
    RowBox[{"zf", "=", "6"}], ";", " ", 
    RowBox[{"ney", "=", "500"}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8070163961948233`*^9, 3.807016397044488*^9}, {
   3.8070217265572577`*^9, 3.8070217282168283`*^9}, {3.8070264261432695`*^9, 
   3.8070264426922393`*^9}, {3.8070322344558325`*^9, 
   3.8070322608267517`*^9}, {3.8070325240555696`*^9, 
   3.8070325517230062`*^9}, {3.807289825614385*^9, 3.807289827800259*^9}, {
   3.8072914183039637`*^9, 3.8072914198577127`*^9}, {3.807292624572872*^9, 
   3.8072926247041917`*^9}, {3.8124611205874653`*^9, 3.812461155036809*^9}, {
   3.812463877141858*^9, 3.812463883305339*^9}, {3.8130527679948573`*^9, 
   3.8130529037290306`*^9}, 3.813062830817898*^9, 3.813062871064998*^9, {
   3.8159900399841204`*^9, 3.8159900420803328`*^9}, {3.8160126272396917`*^9, 
   3.816012637118058*^9}, {3.8187555250589237`*^9, 3.8187555315914288`*^9}, {
   3.818755705623468*^9, 3.818755706404725*^9}, {3.8187773857943287`*^9, 
   3.818777385966202*^9}, {3.8187775583430395`*^9, 3.818777568532256*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[114]:=",ExpressionUUID->"25319173-b35c-4f1e-b00d-db32905ebfc7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Chapter",
 CellChangeTimes->{{3.8072652750433397`*^9, 3.807265276061126*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"97afb4c8-5c47-403a-add0-cb68b9afcc8e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"nb1", "=", 
    RowBox[{
    "NotebookOpen", "[", "\"\<C:/Pedro/RADIA/Undulator_Functions.nb\>\"", 
     "]"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"SelectionMove", "[", 
    RowBox[{"nb1", ",", "All", ",", "Notebook"}], "]"}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"SelectionEvaluate", "[", "nb1", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"NotebookClose", "[", "nb1", "]"}], "*)"}], "*)"}]], "Input",
 CellChangeTimes->{{3.818763522738655*^9, 3.8187635330680285`*^9}, {
   3.818764916674013*^9, 3.8187649172208853`*^9}, {3.8187650492204037`*^9, 
   3.8187650626435394`*^9}, {3.818765208930373*^9, 3.8187652098991203`*^9}, {
   3.818765242502103*^9, 3.8187652461270957`*^9}, 3.819475204774125*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[130]:=",ExpressionUUID->"0a50c16e-20cd-44d9-aa9b-69f7ac2bc95d"],

Cell[CellGroupData[{

Cell["GenMag", "Section",
 CellChangeTimes->{{3.81402512933*^9, 3.8140251361881948`*^9}, {
  3.8146093930988417`*^9, 3.814609418090948*^9}, {3.8187535954130516`*^9, 
  3.8187536006161604`*^9}, {3.819475195095744*^9, 
  3.8194751973197255`*^9}},ExpressionUUID->"f441bd0d-c8ec-4835-ab4e-\
be0577b0f06b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", 
     RowBox[{"==", "\[IndentingNewLine]", 
      RowBox[{
      "A", " ", "partir", " ", "de", " ", "um", " ", "valor", " ", "de", " ", 
       "magnetiza\[CCedilla]\[ATilde]o", " ", "de", " ", 
       "refer\[EHat]ncia"}]}]}], ",", " ", 
    RowBox[{
    "erro", " ", "percentual", " ", "de", " ", 
     "magnetiza\[CCedilla]\[ATilde]o", " ", "e", " ", "um", " ", "input", " ",
      "pedindo", " ", "a", " ", "inclus\[ATilde]o", " ", "de", " ", "erros", 
     " ", "nos", " ", "blocos"}], ",", " ", 
    RowBox[{
     RowBox[{
     "gera", " ", "uma", " ", "lista", " ", "de", " ", 
      "magnetiza\[CCedilla]\[OTilde]es", " ", "para", " ", "os", " ", 
      "blocos", " ", "com", " ", "erros", " ", "aleat\[OAcute]rios", " ", 
      RowBox[{"aplicados", ".", " ", "A"}], " ", "lista", " ", "\[EAcute]", 
      " ", "gerada", " ", "na", " ", "ordem", " ", "de", " ", "montagem", " ",
       "dos", " ", "blocos", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"em", " ", "espiral"}], ",", " ", 
        RowBox[{
        "passando", " ", "pelos", " ", "quatro", " ", "blocos", " ", "de", 
         " ", "cada", " ", "layer", " ", "em", " ", "sequ\[EHat]ncia"}], ",", 
        " ", 
        RowBox[{"layer", " ", "por", " ", "layer"}]}], ")"}]}], 
     "\[IndentingNewLine]", "===", "===", "===", "===", "===", "===", "===", "===",
      "===", "===", "===", "===", "===", "===", "===", "===", "=="}]}], 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"genMag", "[", "magnetization_", "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"magn", ",", "periodMag", ",", "i", ",", "mag"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"magn", "=", 
         RowBox[{"magnetization", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Perfect", " ", "Magnetization"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"periodMag", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "magn"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "magn"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "magn"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", "magn"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"mag", "=", 
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", 
             RowBox[{"periodMag", ",", "#", ",", "1"}], "]"}], "&"}], ",", 
           "periodMag", ",", 
           RowBox[{"(", 
            RowBox[{"nperiods", "-", "1"}], ")"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "mag", "]"}]}]}], "\[IndentingNewLine]", "]"}],
      ";"}], "\[IndentingNewLine]", ")"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz1soQ3EAx/HDtCSpSeTSyaVWQkO5NmpJLVpE2sskpBbjDA8rU+bBmFzC
g2jJ3WSTVjZlbS9oGwq1kVJaWcqSy9qoufx/5+HX5/X3zepgmrqiKYqiyaBn
djps7A6ICrjCKBPRqfAeQNmH0Ap1yYs2WJ6pdcBtDhVyEbPnBZSbqDEG6+HR
4UMDnOTrW2BHSaccXonHFFD5Tg/Ay2xGBVcTakbgSm3dFFwu/JyGtN9tgJEn
0S70F9WdwLhjqQuWDgvsF0T5sI41ltd2C2N4faw+1UzPFVEfruyFjaM/ShiR
Ofvhb17ZArzeC7J+bfAfYRpv5xWKzYNvHmKCmXmHTekvnDvifquYB8+kgRQY
bxpPhRFLPg2LqwpyYJ/6jBskKtRe1vu8JAm/h3TvSVg3LTEXTuLE1t8NtCtH
HyAjifbBuQqZH863D37C53P1QrOC/DG0LkFDda71m3i/keiA3lBGi14ZEHUP
nbKG12xaqFl/ZP0HjhsGvQ==
  "],
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[131]:=",ExpressionUUID->"bd795e85-5884-44b2-a9ee-8e63b621bba6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Draw", "Section",
 CellChangeTimes->{{3.814020326459652*^9, 
  3.814020333471225*^9}},ExpressionUUID->"34f0457c-0a26-4be3-ade9-\
e0e22c2ba741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"draw", "[", 
   RowBox[{
   "mag_", ",", "magn_", ",", "ex_", ",", "ey_", ",", "checkgeo_", ",", 
    "espessurab_", ",", "periodL_", ",", "dist_", ",", "layers_", ",", "gap_",
     ",", "mod_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "j", ",", "block", ",", "error", ",", "thick", ",", 
        "displacement"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"block", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"nblocks", "+", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"4", "+", "3"}], ")"}]}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"undulator", "=", 
        RowBox[{"radObjCnt", "[", 
         RowBox[{"{", "}"}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"modeslist", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", "0", ",", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
             RowBox[{"1", "/", "4"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0", ",", 
             RowBox[{
              RowBox[{"-", "1"}], "/", "4"}]}], "}"}]}], "}"}], "*", 
         "periodL"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"mode", "=", 
        RowBox[{"modeslist", "[", 
         RowBox[{"[", "mod", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", "===", "===", "===", "===", "===", "===", " ", 
         RowBox[{"Reference", " ", "Geometry"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Geo", " ", "A1"}], ",", " ", 
         RowBox[{"Delta", " ", "52.5"}], ",", 
         RowBox[{"gap", " ", "13.6"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"checkgeo", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"geo1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "21.5"}], ",", 
               RowBox[{"-", "56.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21.5", ",", 
               RowBox[{"-", "56.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "55.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "48.6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "44.454"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "44.454"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "48.6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "55.8"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo2", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "44.454"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "40.746"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "40.746"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "44.454"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo3", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "40.746"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "36.6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "26.1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5.25", ",", 
               RowBox[{"-", "6.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5.25"}], ",", 
               RowBox[{"-", "6.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "26.1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "36.6"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "40.746"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"adjust1", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"6.8", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo1", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"adjust2", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"6.8", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo2", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"adjust3", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"6.8", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo3", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"geo1", "=", 
           RowBox[{"geo1", "+", "adjust1"}]}], ";", 
          RowBox[{"geo2", "=", 
           RowBox[{"geo2", "+", "adjust2"}]}], ";", 
          RowBox[{"geo3", "=", 
           RowBox[{"geo3", "+", "adjust3"}]}], ";"}]}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Geo", " ", "A1"}], ",", " ", 
         RowBox[{"Delta", " ", "22"}], ",", 
         RowBox[{"gap", " ", "7"}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"checkgeo", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"geo1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "10.75"}], ",", 
               RowBox[{"-", "28.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"10.75", ",", 
               RowBox[{"-", "28.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11.25", ",", 
               RowBox[{"-", "28.0"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11.25", ",", 
               RowBox[{"-", "24.4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"8.397", ",", 
               RowBox[{"-", "22.327"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "8.397"}], ",", 
               RowBox[{"-", "22.327"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "11.25"}], ",", 
               RowBox[{"-", "24.4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "11.25"}], ",", 
               RowBox[{"-", "28.0"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo2", "=", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"8.397", ",", 
               RowBox[{"-", "22.327"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"8.397", ",", 
               RowBox[{"-", "20.473"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "8.397"}], ",", 
               RowBox[{"-", "20.473"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "8.397"}], ",", 
               RowBox[{"-", "22.327"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo3", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"8.397", ",", 
               RowBox[{"-", "20.473"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11.25", ",", 
               RowBox[{"-", "18.4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"11.25", ",", 
               RowBox[{"-", "13.15"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"2.625", ",", 
               RowBox[{"-", "3.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "2.625"}], ",", 
               RowBox[{"-", "3.5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "11.25"}], ",", 
               RowBox[{"-", "13.15"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "11.25"}], ",", 
               RowBox[{"-", "18.4"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "8.397"}], ",", 
               RowBox[{"-", "20.473"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"adjust1", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"3.5", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo1", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"adjust2", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"3.5", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo2", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"adjust3", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"3.5", "-", 
                RowBox[{"gap", "/", "2"}]}]}], "}"}], ",", 
             RowBox[{"Length", "[", "geo3", "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"geo1", "=", 
           RowBox[{"geo1", "+", "adjust1"}]}], ";", 
          RowBox[{"geo2", "=", 
           RowBox[{"geo2", "+", "adjust2"}]}], ";", 
          RowBox[{"geo3", "=", 
           RowBox[{"geo3", "+", "adjust3"}]}], ";"}]}], "\[IndentingNewLine]",
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", "===", "===", "===", "===", "===", "===", " ", 
         RowBox[{"Termination", " ", "Front"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"thick", "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}], ",", 
           RowBox[{"3", "/", "4"}], ",", "1"}], "}"}], "*", "espessurab"}]}], 
       ";", " ", "\[IndentingNewLine]", 
       RowBox[{"magTerm", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "magn"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "magn"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "magn"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{"-", "magn"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "magn"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"magn", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "magn"}], ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", "4"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "4"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Define", " ", "Geometry"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"checkgeo", "\[Equal]", "1"}], " ", "||", " ", 
                RowBox[{"checkgeo", "\[Equal]", "2"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"obj1", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "0.875", "*", 
                    RowBox[{"(", 
                    RowBox[{"periodL", "/", "4"}], ")"}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "geo1", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj2", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "0.875", "*", 
                    RowBox[{"(", 
                    RowBox[{"periodL", "/", "4"}], ")"}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "geo2", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj3", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "0.875", "*", 
                    RowBox[{"(", 
                    RowBox[{"periodL", "/", "4"}], ")"}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ",", "geo3", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                   "]"}], "]"}], "=", 
                 RowBox[{"radObjCnt", "[", 
                  RowBox[{"{", 
                   RowBox[{"obj1", ",", "obj2", ",", "obj3"}], "}"}], "]"}]}],
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Aplica", " ", "Modo", " ", "de", " ", 
               "Opera\[CCedilla]\[ATilde]o"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"displacement", "=", 
              RowBox[{"radTrfTrsl", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mode", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], "}"}],
                "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                 "]"}], "]"}], ",", "displacement"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Aplica", " ", "Rota\[CCedilla]\[ATilde]o"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                 "]"}], "]"}], ",", 
               RowBox[{"radTrfRot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", 
                  RowBox[{"Pi", "/", "2"}]}]}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                "Aplica", " ", "Erros", " ", "de", " ", 
                 "Posi\[CCedilla]\[ATilde]o", "\[IndentingNewLine]", "erro"}],
                 "=", 
                RowBox[{"radTrfTrsl", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"radTrfOrnt", "[", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "erro"}], "]"}], ";"}],
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"vacodym745ap", "=", 
              RowBox[{"radMatLin", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.04", ",", "0.04"}], "}"}], ",", 
                RowBox[{"magTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                  "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radMatApl", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                 "]"}], "]"}], ",", "vacodym745ap"}], "]"}], ";", " ", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{"undulator", ",", 
               RowBox[{"{", 
                RowBox[{"block", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                  "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", "===", "===", "===", "===", "===", "===", " ", 
         "Periods"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", "layers"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "4"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Define", " ", "Geometry"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"checkgeo", "\[Equal]", "1"}], " ", "||", " ", 
                RowBox[{"checkgeo", "\[Equal]", "2"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"obj1", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"3.625", "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", "espessurab", ",",
                    "geo1", ",", 
                   RowBox[{"mag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj2", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"3.625", "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", "espessurab", ",",
                    "geo2", ",", 
                   RowBox[{"mag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj3", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"3.625", "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", "espessurab", ",",
                    "geo3", ",", 
                   RowBox[{"mag", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "4"}], ")"}], "*", "4"}], "+",
                     "i"}], "]"}], "]"}], "=", 
                 RowBox[{"radObjCnt", "[", 
                  RowBox[{"{", 
                   RowBox[{"obj1", ",", "obj2", ",", "obj3"}], "}"}], "]"}]}],
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Aplica", " ", "Modo", " ", "de", " ", 
               "Opera\[CCedilla]\[ATilde]o"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"displacement", "=", 
              RowBox[{"radTrfTrsl", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mode", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], "}"}],
                "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "4"}], ")"}], "*", "4"}], "+",
                   "i"}], "]"}], "]"}], ",", "displacement"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Aplica", " ", "Rota\[CCedilla]\[ATilde]o"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "4"}], ")"}], "*", "4"}], "+",
                   "i"}], "]"}], "]"}], ",", 
               RowBox[{"radTrfRot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", 
                  RowBox[{"Pi", "/", "2"}]}]}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                "Aplica", " ", "Erros", " ", "de", " ", 
                 "Posi\[CCedilla]\[ATilde]o", "\[IndentingNewLine]", "erro"}],
                 "=", 
                RowBox[{"radTrfTrsl", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"radTrfOrnt", "[", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "erro"}], "]"}], ";"}],
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"vacodym745ap", "=", 
              RowBox[{"radMatLin", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.04", ",", "0.04"}], "}"}], ",", 
                RowBox[{"mag", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                  "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radMatApl", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "4"}], ")"}], "*", "4"}], "+",
                   "i"}], "]"}], "]"}], ",", "vacodym745ap"}], "]"}], ";", 
             " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{"undulator", ",", 
               RowBox[{"{", 
                RowBox[{"block", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "4"}], ")"}], "*", "4"}], "+",
                    "i"}], "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", "===", "===", "===", "===", "===", "===", " ", 
         RowBox[{"Termination", " ", "Back"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", "3"}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "4"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Define", " ", "Geometry"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"checkgeo", "\[Equal]", "1"}], " ", "||", " ", 
                RowBox[{"checkgeo", "\[Equal]", "2"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"obj1", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.625", "+", "layers", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{"j", "*", "0.875", "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "+", "1"}], ")"}]}], "]"}], "]"}], ",", 
                   "geo1", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj2", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.625", "+", "layers", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{"j", "*", "0.875", "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "+", "1"}], ")"}]}], "]"}], "]"}], ",", 
                   "geo2", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"obj3", "=", 
                 RowBox[{"radObjThckPgn", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"3.625", "+", "layers", "-", "1"}], ")"}], "*", 
                    RowBox[{"periodL", "/", "4"}]}], "+", 
                    RowBox[{"j", "*", "0.875", "*", 
                    RowBox[{"periodL", "/", "4"}]}]}], ",", 
                   RowBox[{"thick", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"j", "+", "1"}], ")"}]}], "]"}], "]"}], ",", 
                   "geo3", ",", 
                   RowBox[{"magTerm", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                    "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "layers", "+", "4"}], ")"}], 
                    "*", "4"}], "+", "i"}], "]"}], "]"}], "=", 
                 RowBox[{"radObjCnt", "[", 
                  RowBox[{"{", 
                   RowBox[{"obj1", ",", "obj2", ",", "obj3"}], "}"}], "]"}]}],
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Aplica", " ", "Modo", " ", "de", " ", 
               "Opera\[CCedilla]\[ATilde]o"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"displacement", "=", 
              RowBox[{"radTrfTrsl", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mode", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], "}"}],
                "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "layers", "+", "4"}], ")"}], 
                   "*", "4"}], "+", "i"}], "]"}], "]"}], ",", 
               "displacement"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Aplica", " ", "Rota\[CCedilla]\[ATilde]o"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "layers", "+", "4"}], ")"}], 
                   "*", "4"}], "+", "i"}], "]"}], "]"}], ",", 
               RowBox[{"radTrfRot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", 
                  RowBox[{"Pi", "/", "2"}]}]}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                "Aplica", " ", "Erros", " ", "de", " ", 
                 "Posi\[CCedilla]\[ATilde]o", "\[IndentingNewLine]", "erro"}],
                 "=", 
                RowBox[{"radTrfTrsl", "[", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"error", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"4", "*", 
                    RowBox[{"(", 
                    RowBox[{"layers", "+", "i", "-", "1"}], ")"}]}], "+", 
                    "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"radTrfOrnt", "[", 
                RowBox[{
                 RowBox[{"block", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], ",", "erro"}], "]"}], ";"}],
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{"vacodym745ap", "=", 
              RowBox[{"radMatLin", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0.04", ",", "0.04"}], "}"}], ",", 
                RowBox[{"magTerm", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1"}], ")"}], "*", "4"}], "+", "i"}], 
                  "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radMatApl", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "layers", "+", "4"}], ")"}], 
                   "*", "4"}], "+", "i"}], "]"}], "]"}], ",", 
               "vacodym745ap"}], "]"}], ";", " ", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{"undulator", ",", 
               RowBox[{"{", 
                RowBox[{"block", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"j", "-", "1", "+", "layers", "+", "4"}], ")"}], 
                    "*", "4"}], "+", "i"}], "]"}], "]"}], "}"}]}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Rotate", " ", "undulator", " ", 
         RowBox[{"(", 
          RowBox[{
          "Vale", " ", "regra", " ", "da", " ", "m\[ATilde]o", " ", 
           "direita"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"radTrfOrnt", "[", 
        RowBox[{"undulator", ",", 
         RowBox[{"radTrfRot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "10"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"10", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{
            RowBox[{"-", "Pi"}], "/", "4"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Display", " ", "Drawing"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Plot Undulator\>\"", ",", 
          RowBox[{"Print", "[", 
           RowBox[{"Show", "[", 
            RowBox[{
             RowBox[{"Graphics3D", "[", 
              RowBox[{
               RowBox[{"radObjDrw", "[", "undulator", "]"}], ",", 
               RowBox[{
               "PlotLabel", "\[Rule]", "\"\<Delta Undulator 52.5\>\""}], ",", 
               RowBox[{"BaseStyle", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"14", ",", 
                  RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], 
                 "}"}]}]}], "]"}], ",", 
             RowBox[{"ImageMargins", "\[Rule]", "5"}], ",", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"600", ",", "350"}], "}"}]}]}], "]"}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Return", "[", "undulator", "]"}]}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8140202461961594`*^9, 3.814020281069009*^9}, {
   3.8140206299064426`*^9, 3.814020690787567*^9}, {3.8140208320168743`*^9, 
   3.8140208486743345`*^9}, {3.8140210487556305`*^9, 
   3.8140210635212045`*^9}, {3.8140211224110713`*^9, 
   3.8140211632042694`*^9}, {3.8140212017716875`*^9, 3.81402130714087*^9}, {
   3.814021340682911*^9, 3.8140213558547306`*^9}, {3.8140214055618095`*^9, 
   3.814021427530491*^9}, {3.8140214585291*^9, 3.8140214856865253`*^9}, {
   3.814021543752385*^9, 3.8140216113160048`*^9}, {3.814021933086876*^9, 
   3.8140219405927615`*^9}, 3.814022080743779*^9, {3.814022203036781*^9, 
   3.8140222175537047`*^9}, {3.8140222591711493`*^9, 
   3.8140223009670367`*^9}, {3.814022350625438*^9, 3.814022355969179*^9}, {
   3.8140224032669125`*^9, 3.8140224712762585`*^9}, {3.8140225195565453`*^9, 
   3.8140225260409083`*^9}, {3.8140229847803593`*^9, 
   3.8140229875928607`*^9}, {3.8140230216311316`*^9, 3.81402303882517*^9}, {
   3.8140231556587114`*^9, 3.814023210053254*^9}, {3.814023257540079*^9, 
   3.8140232903206596`*^9}, {3.8140234791486545`*^9, 3.814023480992413*^9}, {
   3.8140235127258177`*^9, 3.8140235186789093`*^9}, {3.814023558603325*^9, 
   3.814023569806876*^9}, {3.8140236092824197`*^9, 3.8140236375712004`*^9}, {
   3.8140236691661263`*^9, 3.8140237019808874`*^9}, {3.8140237538524036`*^9, 
   3.814023754758662*^9}, {3.814024850146475*^9, 3.8140249258663807`*^9}, {
   3.81402496010787*^9, 3.8140250462041264`*^9}, {3.81402511379749*^9, 
   3.81402512242377*^9}, {3.8140253030539985`*^9, 3.8140253068352323`*^9}, {
   3.8140988977756963`*^9, 3.8140989213863277`*^9}, {3.814099411644532*^9, 
   3.8140994463515453`*^9}, {3.8140994970361967`*^9, 
   3.8140994995049334`*^9}, {3.8151261469202127`*^9, 3.8151261705502987`*^9}, 
   3.8151262165224752`*^9, {3.815126885079596*^9, 3.8151268872985373`*^9}, {
   3.815128018920542*^9, 3.815128037036047*^9}, {3.815128082684188*^9, 
   3.815128085918831*^9}, {3.8151301756738014`*^9, 3.8151301859103284`*^9}, {
   3.8151309233430223`*^9, 3.8151309282653036`*^9}, {3.815131161318793*^9, 
   3.81513116560039*^9}, {3.8151312192058935`*^9, 3.8151312489908667`*^9}, {
   3.8151313985822678`*^9, 3.8151314350083723`*^9}, {3.8151314945454273`*^9, 
   3.815131501592882*^9}, {3.8151315606927705`*^9, 3.815131561020923*^9}, {
   3.815131804994257*^9, 3.8151318080726366`*^9}, {3.815131872202435*^9, 
   3.815131997426856*^9}, {3.815132076378535*^9, 3.81513207839433*^9}, 
   3.8151321175550613`*^9, {3.8152114919526186`*^9, 3.8152114921372223`*^9}, {
   3.8152123877861867`*^9, 3.8152123879859047`*^9}, {3.8152124479418383`*^9, 
   3.815212448072981*^9}, {3.8152320463572865`*^9, 3.815232061558346*^9}, {
   3.817136166298141*^9, 3.817136177015569*^9}, {3.8171367039592576`*^9, 
   3.8171367201605244`*^9}, {3.8171369909498725`*^9, 3.817136996044028*^9}, {
   3.817137078330971*^9, 3.8171370915846243`*^9}, {3.817137234712105*^9, 
   3.817137235134037*^9}, {3.8172112207429333`*^9, 3.8172112485917225`*^9}, {
   3.817211283686241*^9, 3.817211336145084*^9}, {3.817211382742999*^9, 
   3.8172114046522818`*^9}, {3.8172121768524528`*^9, 3.81721218374365*^9}, {
   3.8172130996699266`*^9, 3.817213105076622*^9}, {3.8172131531556835`*^9, 
   3.817213164937899*^9}, {3.817213280799596*^9, 3.817213302451626*^9}, {
   3.817213482735924*^9, 3.817213565947462*^9}, {3.8172136210565014`*^9, 
   3.8172136884922748`*^9}, {3.8172139513790236`*^9, 3.817213952535389*^9}, 
   3.817214037830041*^9, {3.818753438803324*^9, 3.818753468054516*^9}, {
   3.818755250742078*^9, 3.818755290882594*^9}, {3.8187553215052514`*^9, 
   3.8187553324627547`*^9}, {3.8187561316315427`*^9, 
   3.8187561366784096`*^9}, {3.818756255420355*^9, 3.818756268448303*^9}, 
   3.8187564249802465`*^9, {3.8187564821189117`*^9, 3.818756497338949*^9}, {
   3.818757397187726*^9, 3.8187574192581406`*^9}, {3.818758851407093*^9, 
   3.818758860726836*^9}, {3.8187589009167595`*^9, 3.8187589064636216`*^9}, {
   3.8187589545648146`*^9, 3.8187589655647864`*^9}, {3.818759021563555*^9, 
   3.8187590242822943`*^9}, {3.8187594551198907`*^9, 3.818759459073004*^9}, {
   3.8187597585885515`*^9, 3.818759762307336*^9}, {3.8187597969008102`*^9, 
   3.8187598088070307`*^9}, {3.818760249714174*^9, 3.8187602653547277`*^9}, 
   3.8187604635858154`*^9, {3.8187605416188803`*^9, 3.8187605789126525`*^9}, {
   3.818760648663517*^9, 3.818760657194739*^9}, {3.8187607753131447`*^9, 
   3.81876077867251*^9}, {3.8187608560654774`*^9, 3.818760927142682*^9}, {
   3.8187609795855713`*^9, 3.8187609994149237`*^9}, {3.818761044815493*^9, 
   3.818761089864933*^9}, {3.8187611730491667`*^9, 3.8187612163350935`*^9}, {
   3.8187613965803165`*^9, 3.8187613969396873`*^9}, {3.8187637645154877`*^9, 
   3.8187637710154767`*^9}, {3.8187641271719713`*^9, 
   3.8187641299532175`*^9}, {3.8187643175156813`*^9, 
   3.8187643639256463`*^9}, {3.8187644394559965`*^9, 3.818764638430138*^9}, {
   3.818764683469228*^9, 3.8187647010954585`*^9}, {3.819468313008582*^9, 
   3.819468327088663*^9}, {3.8194684609049664`*^9, 3.819468468260676*^9}, {
   3.819468510891777*^9, 3.819468557425131*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[132]:=",ExpressionUUID->"8f1cef53-9f75-45a5-83c5-05320646c3fb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve", "Section",
 CellChangeTimes->{{3.8070210612922134`*^9, 
  3.8070210965359755`*^9}},ExpressionUUID->"db838e27-8bdd-4c16-82a5-\
d4804f20fcad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"solve", "[", 
   RowBox[{"undulator_", ",", "magn_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"===", "===", "===", "===", "===", " ", "Material"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"vacodym745ap", "=", 
     RowBox[{"radMatLin", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.04", ",", "0.04"}], "}"}], ",", "magn"}], "]"}]}], ";", 
    "  ", 
    RowBox[{"(*", 
     RowBox[{"Susceptibility", "=", 
      RowBox[{"Permeability", "-", "1"}]}], "*)"}], " ", 
    "\[IndentingNewLine]", 
    RowBox[{"radMatApl", "[", 
     RowBox[{"undulator", ",", "vacodym745ap"}], "]"}], ";", " ", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"===", "===", "===", "===", "===", " ", "Solve"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"abs", "=", "1*^-12"}], ";", " ", 
    RowBox[{"rel", "=", "abs"}], ";", " ", 
    RowBox[{"zero", "=", "abs"}], ";", "\[IndentingNewLine]", 
    RowBox[{"radFldLenTol", "[", 
     RowBox[{"abs", ",", "rel", ",", "zero"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"radObjDivMag", "[", 
     RowBox[{"undulator", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"re", "=", 
     RowBox[{"RadSolve", "[", 
      RowBox[{"undulator", ",", "1*^-12", ",", "100000"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"===", "===", "===", "===", "===", " ", 
      RowBox[{"Separate", " ", "by", " ", "Cassettes"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"cassetes", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"3", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"4", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "]"}], "/", 
           "4"}], "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"cass1", "=", 
     RowBox[{"radObjCnt", "[", 
      RowBox[{"cassetes", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"cass2", "=", 
     RowBox[{"radObjCnt", "[", 
      RowBox[{"cassetes", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"cass3", "=", 
     RowBox[{"radObjCnt", "[", 
      RowBox[{"cassetes", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"cass4", "=", 
     RowBox[{"radObjCnt", "[", 
      RowBox[{"cassetes", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"t1", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "  ", 
    RowBox[{"deltat", "=", 
     RowBox[{"t1", "-", "t0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<> Undulator System Solved! (elapsed time: `` [s])\>\"", ",", 
           RowBox[{"N", "[", "deltat", "]"}]}], "]"}], ",", "Bold", ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}], ";"}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<> Undulator System Solved! (elapsed time: \>\"", ",", " ", "deltat",
       ",", " ", "\"\<[s])\>\""}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.8070211748681993`*^9, 3.80702119532935*^9}, {
   3.807021237766342*^9, 3.8070212916682425`*^9}, {3.8070213220248404`*^9, 
   3.8070214099429865`*^9}, {3.807023951547361*^9, 3.8070240396518536`*^9}, {
   3.8070323939820156`*^9, 3.8070324770515556`*^9}, 3.807032689614663*^9, {
   3.8070328497881937`*^9, 3.807032880728758*^9}, {3.8070330059967527`*^9, 
   3.807033006429152*^9}, {3.8070333550914855`*^9, 3.8070333593044233`*^9}, {
   3.8070342018107595`*^9, 3.807034202080222*^9}, {3.807042204412552*^9, 
   3.8070422050619016`*^9}, {3.8159900068394938`*^9, 3.815990008683408*^9}, {
   3.8159902450666695`*^9, 3.8159902452229347`*^9}, {3.81599052266597*^9, 
   3.8159905332015343`*^9}, {3.816012932095273*^9, 3.8160129350017614`*^9}, {
   3.8160785540399265`*^9, 3.816078556244502*^9}, {3.816089417036697*^9, 
   3.816089420801249*^9}, {3.8160903801381254`*^9, 3.8160903816382465`*^9}, {
   3.81609102394281*^9, 3.816091024177208*^9}, {3.819539236499416*^9, 
   3.8195392851683474`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[133]:=",ExpressionUUID->"1607e584-2a8a-4aae-aa0b-0c0d757bb314"]
}, Closed]],

Cell[CellGroupData[{

Cell["Field Calc", "Section",
 CellChangeTimes->{{3.8070274156221814`*^9, 
  3.80702741715819*^9}},ExpressionUUID->"6f49053d-6231-46a0-8ec3-\
aedf349052be"],

Cell[BoxData[
 RowBox[{
  RowBox[{"field", "[", 
   RowBox[{"undulator_", ",", "xo_", ",", "xf_", ",", "nx_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xf", "-", "xo"}], ")"}], "/", "nx"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"t0", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"===", "===", 
      RowBox[{"\[Equal]", " ", 
       RowBox[{"Axis", " ", "Field", " ", "Calc"}]}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"baxis", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"radFld", "[", 
        RowBox[{"undulator", ",", "\"\<b\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "xo", ",", 
         RowBox[{"xf", "-", "dx"}], ",", "dx"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"btotal", "=", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"baxis", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"baxis", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "^", "2"}], "+", 
       RowBox[{
        RowBox[{"baxis", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "]"}]}], ";",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"t1", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
    RowBox[{"deltat", "=", 
     RowBox[{"t1", "-", "t0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<> Fields Calc. Solved! (elapsed time: `` [s])\>\"", ",", 
           RowBox[{"N", "[", "deltat", "]"}]}], "]"}], ",", 
         RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}], ";"}], "*)"}],
     "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<> Fields Calc. Solved! (elapsed time: \>\"", ",", "deltat", " ", 
      ",", "\"\<[s])\>\""}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Axis", " ", "Plot"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"axispoints", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"xo", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"axispoints", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Bx at Axis\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"axispoints", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<By at Axis\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p3", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"axispoints", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Bz at Axis\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"GraphicsRow", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1000", ",", "250"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.807021601830374*^9, 3.8070216773569517`*^9}, {
   3.807021740669018*^9, 3.8070217427074785`*^9}, {3.8070219464604225`*^9, 
   3.8070219686498995`*^9}, {3.807027460652296*^9, 3.807027544157159*^9}, {
   3.8070276421693325`*^9, 3.8070276425165777`*^9}, {3.8070276912558517`*^9, 
   3.807027704213709*^9}, {3.8070323107786245`*^9, 3.807032375602537*^9}, 
   3.8070327114498105`*^9, {3.807032863171875*^9, 3.8070328649457016`*^9}, {
   3.8070328976293025`*^9, 3.8070328977452354`*^9}, {3.807033015423561*^9, 
   3.807033015762494*^9}, {3.8070333677594614`*^9, 3.807033370758465*^9}, {
   3.8070341000936403`*^9, 3.8070341100237904`*^9}, {3.807034177639553*^9, 
   3.8070341787814217`*^9}, {3.8194469942722526`*^9, 3.819446994522252*^9}, {
   3.8194470278451247`*^9, 3.8194470523151627`*^9}, {3.8194674188594513`*^9, 
   3.8194674192906275`*^9}, {3.8195394042588143`*^9, 3.819539434664993*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[134]:=",ExpressionUUID->"243e7e2c-3702-4083-8717-53096f3f2978"]
}, Closed]],

Cell[CellGroupData[{

Cell["Block Forces", "Section",
 CellChangeTimes->{{3.8070225477656116`*^9, 
  3.807022552048893*^9}},ExpressionUUID->"5320f46f-d000-4e41-b2a2-\
b242c1bca964"],

Cell[BoxData[
 RowBox[{
  RowBox[{"bforces", "[", 
   RowBox[{"undulator_", ",", "subdiv_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"t0", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"forces", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"radFldEnrFrc", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"RotateLeft", "[", 
            RowBox[{
             RowBox[{"radObjCntStuf", "[", "undulator", "]"}], ",", 
             RowBox[{"i", "-", "1"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"radObjCnt", "[", 
           RowBox[{
            RowBox[{"RotateLeft", "[", 
             RowBox[{
              RowBox[{"radObjCntStuf", "[", "undulator", "]"}], ",", 
              RowBox[{"i", "-", "1"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ";;", 
              RowBox[{"Length", "[", 
               RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "]"}]}], 
             "]"}], "]"}], "]"}], ",", "\"\<\>\"", ",", "subdiv"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "]"}]}], "}"}]}],
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"t1", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
     RowBox[{"deltat", "=", 
      RowBox[{"t1", "-", "t0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<> Block Forces Solved! (elapsed time: `` [s])\>\"", ",", 
          RowBox[{"N", "[", "deltat", "]"}]}], "]"}], ",", "Bold", ",", 
        RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Forces", " ", "Module"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"absforce", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"forces", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", "1.0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "forces", "]"}]}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Create", " ", "Table", " ", "of", " ", "Forces", " ", "separeted", " ", 
      "by", " ", "cassettes"}], " ", "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{"expforces", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"forces", "[", 
          RowBox[{"[", 
           RowBox[{"1", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{"forces", "[", 
          RowBox[{"[", 
           RowBox[{"2", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{"forces", "[", 
          RowBox[{"[", 
           RowBox[{"3", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}], ",", 
         RowBox[{"forces", "[", 
          RowBox[{"[", 
           RowBox[{"4", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"i", "-", "1"}], ")"}], "*", "4"}]}], "]"}], "]"}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Floor", "[", 
          RowBox[{
           RowBox[{"Length", "[", "forces", "]"}], "/", "4"}], "]"}]}], 
        "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Print", "[", 
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<\\t\\tForces: \\n{Layers | Cassettes | Force Components}: \
``\>\"", ",", 
         RowBox[{"Dimensions", "[", "expforces", "]"}]}], "]"}], "]"}], ";"}],
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Fx\>\"", ",", "\"\<Fy\>\"", ",", "\"\<Fz\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Forces on Blocks: Cassete 1\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Fx\>\"", ",", "\"\<Fy\>\"", ",", "\"\<Fz\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Forces on Blocks: Cassete 2\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p3", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Fx\>\"", ",", "\"\<Fy\>\"", ",", "\"\<Fz\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Forces on Blocks: Cassete 3\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p4", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
         RowBox[{"expforces", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"Joined", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Fx\>\"", ",", "\"\<Fy\>\"", ",", "\"\<Fz\>\""}], 
         "}"}]}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", "\"\<Forces on Blocks: Cassete 4\>\""}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"400", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"p1", ",", "p2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"p3", ",", "p4"}], "}"}]}], "}"}], ",", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "10"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1000", ",", "400"}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.807022572441915*^9, 3.8070226029085693`*^9}, {
  3.807023490565898*^9, 3.8070235252482524`*^9}, {3.807023559971609*^9, 
  3.8070236034046245`*^9}, {3.8070236595160446`*^9, 3.807023745599677*^9}, {
  3.8070237862899714`*^9, 3.8070237896167755`*^9}, {3.807032059981449*^9, 
  3.80703220348491*^9}, {3.8070329312822685`*^9, 3.8070329457135925`*^9}, {
  3.807033024232974*^9, 3.807033042425369*^9}, {3.8070333792639303`*^9, 
  3.8070333817079*^9}, {3.8070340705696764`*^9, 3.8070340888447237`*^9}, {
  3.807034185432478*^9, 3.8070341866671124`*^9}, {3.807037861120509*^9, 
  3.8070378625937147`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[135]:=",ExpressionUUID->"9de7d61c-e905-44e2-855e-372d53a8085d"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cassettes Forces ", "Section",
 CellChangeTimes->{{3.807023799977703*^9, 
  3.807023808259615*^9}},ExpressionUUID->"d32b6236-5838-4df5-a942-\
65c2e9f7df31"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cforces", "[", 
   RowBox[{
   "cass1_", ",", "cass2_", ",", "cass3_", ",", "cass4_", ",", 
    "subdivcass_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t0", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"forcecass1", "=", 
     RowBox[{"radFldEnrFrc", "[", 
      RowBox[{"cass1", ",", 
       RowBox[{"radObjCnt", "[", 
        RowBox[{"{", 
         RowBox[{"cass2", ",", "cass3", ",", "cass4"}], "}"}], "]"}], ",", 
       "\"\<\>\"", ",", "subdivcass"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"forcecass2", "=", 
     RowBox[{"radFldEnrFrc", "[", 
      RowBox[{"cass2", ",", 
       RowBox[{"radObjCnt", "[", 
        RowBox[{"{", 
         RowBox[{"cass1", ",", "cass3", ",", "cass4"}], "}"}], "]"}], ",", 
       "\"\<\>\"", ",", "subdivcass"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"forcecass3", "=", 
     RowBox[{"radFldEnrFrc", "[", 
      RowBox[{"cass3", ",", 
       RowBox[{"radObjCnt", "[", 
        RowBox[{"{", 
         RowBox[{"cass1", ",", "cass2", ",", "cass4"}], "}"}], "]"}], ",", 
       "\"\<\>\"", ",", "subdivcass"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"forcecass4", "=", 
     RowBox[{"radFldEnrFrc", "[", 
      RowBox[{"cass4", ",", 
       RowBox[{"radObjCnt", "[", 
        RowBox[{"{", 
         RowBox[{"cass1", ",", "cass2", ",", "cass3"}], "}"}], "]"}], ",", 
       "\"\<\>\"", ",", "subdivcass"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"forcescass", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", "forcecass1", "}"}], ",", 
       RowBox[{"{", "forcecass2", "}"}], ",", 
       RowBox[{"{", "forcecass3", "}"}], ",", 
       RowBox[{"{", "forcecass4", "}"}]}], "}"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"t1", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
    RowBox[{"deltat", "=", 
     RowBox[{"t1", "-", "t0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<> Cassettes Forces Solved! (elapsed time: `` [s])\>\"", ",", 
         RowBox[{"N", "[", "deltat", "]"}]}], "]"}], ",", "Bold", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<> Force on Cassette 1: \\n\\t``\\n> Force on Cassette 2: \
\\n\\t``\\n> Force on Cassette 3: \\n\\t``\\n> Force on Cassette 4: \\n\\t`` \
\\n\>\"", ",", "forcecass1", ",", "forcecass2", ",", "forcecass3", ",", 
       "forcecass4"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{
  3.8070238202677402`*^9, {3.8070238795192647`*^9, 3.8070238810210695`*^9}, {
   3.8070240769860373`*^9, 3.807024088615158*^9}, {3.8070241433270664`*^9, 
   3.80702420465596*^9}, {3.807024412251629*^9, 3.8070244180587664`*^9}, {
   3.8070262956026883`*^9, 3.8070263052473164`*^9}, {3.8070320058929253`*^9, 
   3.8070320323520756`*^9}, {3.8070325725104446`*^9, 
   3.8070325953063927`*^9}, {3.807033420574594*^9, 3.8070335345681934`*^9}, {
   3.8070339204905825`*^9, 3.8070339226449585`*^9}, {3.807033958043988*^9, 
   3.8070339586777086`*^9}, {3.807033990841607*^9, 3.8070339911572413`*^9}, {
   3.807034057818492*^9, 3.8070340618629274`*^9}, {3.807034191016429*^9, 
   3.807034192150626*^9}, {3.807041063815591*^9, 3.8070410838500834`*^9}, {
   3.8070411800394735`*^9, 3.8070411921754827`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[136]:=",ExpressionUUID->"397306de-3aa7-45ab-98b1-c8be08c152b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Multipole Error", "Section",
 CellChangeTimes->{{3.807025827001651*^9, 
  3.8070258314040422`*^9}},ExpressionUUID->"8c1c567c-0472-4c45-8bf4-\
0ca7574f2fc8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mpError", "[", 
   RowBox[{"undulator_", ",", "gap_", ",", "yo_", ",", "yf_", ",", "ney_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dy", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"yf", "-", "yo"}], ")"}], "/", "ney"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"multipole", "=", 
      RowBox[{"radObjCnt", "[", 
       RowBox[{
        RowBox[{"radObjCntStuf", "[", "undulator", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"17", ";;", "20"}], "]"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"t0", "=", 
      RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"remulti", "=", 
      RowBox[{"RadSolve", "[", 
       RowBox[{"multipole", ",", "1*^-10", ",", "1000"}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"===", "===", "===", "===", 
        RowBox[{"\[Equal]", 
         RowBox[{"===", "==="}]}]}], "=", " ", 
       RowBox[{"Error", " ", "Calc"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"rref", "=", 
      RowBox[{
       RowBox[{"2", "/", "3"}], "*", "gap"}]}], ";", " ", 
     RowBox[{"order", "=", "6"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Vertical", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"bplanev", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"radFld", "[", 
         RowBox[{"multipole", ",", "\"\<b\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "y", ",", "y"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "yo", ",", "yf", ",", "dy"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", "Horiz", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"bplaneh", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"radFld", "[", 
         RowBox[{"multipole", ",", "\"\<b\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "y", ",", 
            RowBox[{"-", "y"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "yo", ",", "yf", ",", "dy"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"bmultiv", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bplanev", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"bplanev", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"bmultih", "=", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"bplaneh", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}], "^", "2"}], "+", 
        RowBox[{
         RowBox[{"bplaneh", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"pointsv", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"yo", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
          RowBox[{"bmultiv", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "ney"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pointsh", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"yo", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "*", "dy"}]}], ",", 
          RowBox[{"bmultih", "[", 
           RowBox[{"[", "n", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "1", ",", "ney"}], "}"}]}], "]"}]}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"B_ana", " ", "=", " ", 
      RowBox[{"Bz", "+", "iBy"}]}], " ", "*)"}], ";", "\[IndentingNewLine]", 
    RowBox[{"banalytv", "=", 
     RowBox[{
      RowBox[{"bplanev", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"bplanev", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"banalyth", "=", 
     RowBox[{
      RowBox[{"bplaneh", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], "+", 
      RowBox[{"I", "*", 
       RowBox[{"bplaneh", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]}], ";", " ", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"bmatrix", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"banalytv", ",", "banalyth"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"--", 
       RowBox[{"-", "Solve"}]}], " ", "the", " ", 
      RowBox[{"Indeterminance", ":", " ", 
       RowBox[{"0", "^", "0"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Unprotect", "[", "Power", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Power", "[", 
      RowBox[{
       RowBox[{"0", "|", "0."}], ",", 
       RowBox[{"0", "|", "0."}]}], "]"}], "=", "1"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Protect", "[", "Power", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", "-"}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"pos", " ", "=", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "+", "iz"}], ")"}], "/", "rref"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"order", "-", "1"}], ")"}]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"posv", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "+", 
            RowBox[{"I", "*", "y"}]}], ")"}], "/", "rref"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "yo", ",", "yf", ",", "dy"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "order"}], "}"}]}], "]"}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{"posh", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"y", "-", 
            RowBox[{"I", "*", "y"}]}], ")"}], "/", "rref"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"i", "-", "1"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "yo", ",", "yf", ",", "dy"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "order"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"posmatrix", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"posv", ",", "posh", ",", "1"}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Solve", " ", "the", " ", 
       RowBox[{"System", ":", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"y", "+", "iz"}], ")"}], ".", " ", "matrixZ"}]}]}], " ", 
      "=", " ", 
      RowBox[{"(", 
       RowBox[{"Bz", "+", "iBy"}], ")"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"matrixZ", "=", 
     RowBox[{"LeastSquares", "[", 
      RowBox[{"posmatrix", ",", "bmatrix"}], "]"}]}], ";", "  ", 
    RowBox[{"(*", 
     RowBox[{"mx", "=", "b"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"matrixZ", "=", 
     RowBox[{"matrixZ", "/", 
      RowBox[{"Abs", "[", 
       RowBox[{"Max", "[", 
        RowBox[{"Abs", "[", "matrixZ", "]"}], "]"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"t1", "=", 
     RowBox[{"AbsoluteTime", "[", "]"}]}], ";", 
    RowBox[{"deltat", "=", 
     RowBox[{"(", 
      RowBox[{"t1", "-", "t0"}], ")"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"StringForm", "[", 
        RowBox[{
        "\"\<> Multipole Error Solved! (elapsed time: `` [s])\>\"", ",", 
         RowBox[{"N", "[", "deltat", "]"}]}], "]"}], ",", "Bold", ",", 
       RowBox[{"FontSize", "\[Rule]", "14"}]}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"===", "===", "===", "===", 
       RowBox[{"\[Equal]", 
        RowBox[{"===", "==="}]}]}], "=", " ", "Plots"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"p1", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"pointsv", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Dist_Vertical [mm]\>\"", ",", "\"\<|B| [T]\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Vertical Axis Field\>\""}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p2", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"pointsh", ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Dist_Horizontal [mm]\>\"", ",", "\"\<|B| [T]\>\""}], 
         "}"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Horizontal Axis Field\>\""}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"p3", "=", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", "matrixZ", "]"}], ",", 
       RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
       RowBox[{"FillingStyle", "\[Rule]", 
        RowBox[{"Thickness", "[", "6*^-3", "]"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
       RowBox[{"PlotMarkers", "\[Rule]", "\"\<OpenMarkers\>\""}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", " ", "\"\<Multipole Harmonic Components\>\""}],
        ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Harmonic Component\>\"", ",", "\"\<Multipole Error\>\""}], 
         "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "6.5"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2*^-2"}], ",", "1.1"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "190"}], "}"}]}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<\\t Harmonic Components: `` \\n\>\"", ",", " ", 
       RowBox[{"NumberForm", "[", 
        RowBox[{
         RowBox[{"Abs", "[", "matrixZ", "]"}], ",", "4"}], "]"}]}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"GraphicsRow", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"p1", ",", "p2", ",", "p3"}], "}"}], ",", 
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"Scaled", "[", "0.1", "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"1000", ",", "220"}], "}"}]}]}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQzTEhJCo49o1jm8HPbBA9o4+rEETLxRVWgWjGo+VN
IHrb1BYwLWMa0gmil5R19IJot91PJ4LoHH7lWSA6l81zEYhep/t/BYg+XTpp
LYj+9WLLZhC9r+jddhBd8GTdLhD9pPDFIRDtPvETmL4XcOMaiLZ+KH4bRJ+5
dvMeiOYNNHwAoi/f0XkNoh/9MgXTDH1PP4HoI12t30F0RY3Lf7A7g5gZQ4D0
JTtOVhC9b+9hMC3gPd8IRJc7rDQG0V7T/HTDgLRG/ncDEG224b0liFaym2gF
on2LFOxBtFqEtguIFqs47QFWP7/eC0T7pLkEgmjO78FhIDpjxetHINph97Sn
ILpF2V8hHEh/mLEDTEc5TA4B0UdepoSD6BfGrptAtNSNNDANAMQuwjI=
  "],
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[137]:=",ExpressionUUID->"8f8b166f-b5be-4f38-8ca4-178888b6fdb2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Integral Error", "Section",
 CellChangeTimes->{{3.8070345201754656`*^9, 
  3.8070345225377483`*^9}},ExpressionUUID->"8c0859bb-0e05-48e1-b5f7-\
4f50be279076"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interror", "[", 
   RowBox[{"undulator_", ",", "xo_", ",", "xf_", ",", "nx_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "baxis", ",", "integralx01", ",", "integralx02", ",", "integraly01", 
        ",", "integraly02", ",", "integralz01", ",", "integralz02", ",", 
        "integralx1", ",", "integralx2", ",", "integraly1", ",", "integraly2",
         ",", "integralz1", ",", "integralz2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dx", "=", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"xf", "-", "xo"}], "]"}], "/", "nx"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"baxis", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"radFld", "[", 
           RowBox[{"undulator", ",", "\"\<b\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "xo", ",", 
            RowBox[{"xf", "-", "dx"}], ",", "dx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", 
           RowBox[{"X", "--"}]}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integralx01", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}], 
            "/", "2"}], "*", "dx", " ", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integralx1", "=", 
        RowBox[{"Accumulate", "[", "integralx01", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(By) 1st Integral: \>\"", ",", 
           RowBox[{"integralx1", "[", 
            RowBox[{"[", 
             RowBox[{"Length", "[", "integralx1", "]"}], "]"}], "]"}], ",", 
           "\"\<[T.m] = \>\"", ",", 
           RowBox[{
            RowBox[{"integralx1", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "integralx1", "]"}], "]"}], "]"}], "*", 
            "1*^4", "*", "100"}], ",", "\"\<[G.cm]\>\""}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"integralx02", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"integralx1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              RowBox[{"integralx1", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}], "/", "2"}], 
           "*", "dx", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "integralx1", "]"}], "-", "1"}]}], 
           "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m\.b2"}], "]"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"integralx2", "=", 
        RowBox[{"Accumulate", "[", "integralx02", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<(By) 2nd Integral: \>\"", ",", 
           RowBox[{
            RowBox[{"integralx2", "[", 
             RowBox[{"[", 
              RowBox[{"Length", "[", "integralx2", "]"}], "]"}], "]"}], "*", 
            RowBox[{"10", "^", "4"}], "*", 
            RowBox[{"100", "^", "2"}]}], ",", "\"\<[G.m\.b2]\>\""}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", 
           RowBox[{"Y", "--"}]}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integraly01", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}], 
            "/", "2"}], "*", "dx", " ", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integraly1", "=", 
        RowBox[{"Accumulate", "[", "integraly01", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(By) 1st Integral: \>\"", ",", 
         RowBox[{"integraly1", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "integraly1", "]"}], "]"}], "]"}], ",", 
         "\"\<[T.m] = \>\"", ",", 
         RowBox[{
          RowBox[{"integraly1", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "integraly1", "]"}], "]"}], "]"}], "*", 
          "1*^4", "*", "100"}], ",", "\"\<[G.cm]\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"integraly02", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"integraly1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              RowBox[{"integraly1", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}], "/", "2"}], 
           "*", "dx", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "integraly1", "]"}], "-", "1"}]}], 
           "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m\.b2"}], "]"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"integraly2", "=", 
        RowBox[{"Accumulate", "[", "integraly02", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(By) 2nd Integral: \>\"", ",", 
         RowBox[{
          RowBox[{"integraly2", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "integraly2", "]"}], "]"}], "]"}], "*", 
          RowBox[{"10", "^", "4"}], "*", 
          RowBox[{"100", "^", "2"}]}], ",", "\"\<[G.cm\.b2]\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"-", 
           RowBox[{"Z", "--"}]}]}], "-"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integralz01", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
              RowBox[{"baxis", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}], 
            "/", "2"}], "*", "dx", " ", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integralz1", "=", 
        RowBox[{"Accumulate", "[", "integralz01", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(Bz) 1st Integral: \>\"", ",", 
         RowBox[{"integralz1", "[", 
          RowBox[{"[", 
           RowBox[{"Length", "[", "integralz1", "]"}], "]"}], "]"}], ",", 
         "\"\<[T.m] = \>\"", ",", 
         RowBox[{
          RowBox[{"integralz1", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "integralz1", "]"}], "]"}], "]"}], "*", 
          "1*^4", "*", "100"}], ",", "\"\<[G.cm]\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"integralz02", "=", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"integralz1", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              RowBox[{"integralz1", "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "1"}], "]"}], "]"}]}], ")"}], "/", "2"}], 
           "*", "dx", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "3"}]}]}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "integralz1", "]"}], "-", "1"}]}], 
           "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"integralz2", "=", 
        RowBox[{"Accumulate", "[", "integralz02", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(Bz) 2nd Integral: \>\"", ",", 
         RowBox[{
          RowBox[{"integralz2", "[", 
           RowBox[{"[", 
            RowBox[{"Length", "[", "integralz2", "]"}], "]"}], "]"}], "*", 
          RowBox[{"10", "^", "4"}], "*", 
          RowBox[{"100", "^", "2"}]}], ",", "\"\<[G.cm\.b2]\>\""}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
         "integralx1", ",", "integralx2", ",", "integraly1", ",", 
          "integraly2", ",", "integralz1", ",", "integralz2"}], "}"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
    ")"}]}]], "Input",
 CellChangeTimes->{{3.818761745810541*^9, 3.8187617840394864`*^9}, {
   3.818761918810132*^9, 3.8187620411809683`*^9}, {3.8187621587560787`*^9, 
   3.8187621693810425`*^9}, {3.8187623128574276`*^9, 
   3.8187625360106735`*^9}, {3.8187626009268413`*^9, 3.818762640163683*^9}, {
   3.8187627021334305`*^9, 3.8187627774112573`*^9}, {3.818762946333022*^9, 
   3.8187630691456923`*^9}, {3.8187631052012973`*^9, 3.81876324364288*^9}, {
   3.8187633186213384`*^9, 3.818763344310049*^9}, {3.818766075517702*^9, 
   3.8187660765020757`*^9}, {3.8187714053446217`*^9, 3.818771408532099*^9}, {
   3.8187774097802677`*^9, 3.8187774593267765`*^9}, {3.818777938981942*^9, 
   3.8187780403582277`*^9}, {3.818778168628068*^9, 3.8187781708780746`*^9}, {
   3.8188405441886044`*^9, 3.8188405625618973`*^9}, {3.818840595988336*^9, 
   3.8188405983477044`*^9}, {3.819467979498768*^9, 3.8194679797524357`*^9}, 
   3.8194680774679804`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[138]:=",ExpressionUUID->"8f6f8bdd-5ea7-4259-ad0c-60913d3459b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"interror2", "[", 
   RowBox[{"undulator_", ",", "xo_", ",", "xf_", ",", "np_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "baxis", ",", "i", ",", "dx", ",", "area", ",", "area2", ",", 
        "integral", ",", "int", ",", "int2"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"re", "=", 
        RowBox[{"RadSolve", "[", 
         RowBox[{"undulator", ",", "1*^-12", ",", "100000"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", " ", "Fisrt"}]}]}], " ", "Integral"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"t0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"integral", "=", 
          RowBox[{"radFldInt", "[", 
           RowBox[{"undulator", ",", "\"\<fin\>\"", ",", "\"\<\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"xo", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"xf", ",", "0", ",", "0"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"integral", "=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"integral", "*", 
             RowBox[{"10", "^", "4"}]}], ")"}], "/", "10"}]}], ";"}], " ", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Tesla", ".", "mm"}], " ", "to", " ", 
          RowBox[{"Gauss", ".", "cm"}]}], "*)"}], "\[IndentingNewLine]", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xf", "-", "xo"}], ")"}], "/", "np"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"baxis", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"radFld", "[", 
           RowBox[{"undulator", ",", "\"\<b\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", "xo", ",", 
            RowBox[{"xf", "-", "dx"}], ",", "dx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"area", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"integral", "=", 
        RowBox[{"Accumulate", "[", "area", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"int", "=", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"area", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"area", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"area", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "area", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"int", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"int", "*", 
           RowBox[{"10", "^", "4"}]}], ")"}], "/", "10"}]}], ";", " ", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", "Second"}]}]}], " ", "Integral"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"area2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dx"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "integral", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"int2", "=", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"area2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"area2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"area2", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "area2", "]"}]}], "}"}]}], "]"}], "*", 
         RowBox[{"10", "^", "2"}]}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"G", ".", "cm\.b2"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", " ", 
       RowBox[{"dt2", "=", 
        RowBox[{"t1", "-", "t0"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\\n1st Integral [G.cm]: \>\"", ",", " ", "int", ",", 
         "\"\<\\n2nd Integral [G.cm\.b2]: \>\"", ",", " ", "int2"}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
    ")"}]}]], "Input",
 CellChangeTimes->{{3.8160906423951607`*^9, 3.816090780998214*^9}, {
  3.816090823203706*^9, 3.816090831704439*^9}, {3.816090879233299*^9, 
  3.816090916097884*^9}, {3.8160909674224315`*^9, 3.8160909709539776`*^9}, {
  3.818777338163413*^9, 3.818777350539996*^9}, {3.8188408360903387`*^9, 
  3.8188408365135174`*^9}, {3.818841035104288*^9, 3.8188410533075314`*^9}, {
  3.818841145426104*^9, 3.818841159944351*^9}, {3.81884134778198*^9, 
  3.818841352406974*^9}, {3.818841858539297*^9, 3.818841870601804*^9}, {
  3.819467999615757*^9, 3.8194680001004777`*^9}, {3.819468088060176*^9, 
  3.819468088996561*^9}, {3.8194711259620132`*^9, 3.819471126115775*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[139]:=",ExpressionUUID->"7f73c67e-f928-4992-a3c3-35250540e008"]
}, Closed]],

Cell[CellGroupData[{

Cell["Phase Error", "Section",
 CellChangeTimes->{{3.8070355729066296`*^9, 
  3.807035576503954*^9}},ExpressionUUID->"1b941c43-f9fd-48f5-b1a7-\
fccc74def38d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"phaseerror", "[", 
   RowBox[{"baxis_", ",", "btotal_", ",", "xo_", ",", "xf_", ",", "nx_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "bfield", ",", "bfieldT", ",", "longAxis", ",", "s", ",", "ampX", ",", 
        "ampY", ",", "ampZ", ",", "peakX", ",", "peakY", ",", "peakZ", ",", 
        "peakT", ",", "longPeakX", ",", "longPeakY", ",", "longPeakZ", ",", 
        "longPeakT", ",", "periods", ",", "nperiods", ",", "periodL", ",", 
        "kparam", ",", "lambda", ",", "intField0", ",", "intField"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"===", "==="}], "=", 
         RowBox[{
          RowBox[{"==", " ", 
           RowBox[{"Physics", " ", "Parameters"}]}], " ", "===", "===", 
          "==="}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eletron", "=", "1.60217662*^-19"}], ";", " ", 
       RowBox[{"mo", "=", "9.10938356*^-31"}], ";", "\[IndentingNewLine]", 
       RowBox[{"eRestEnergy", "=", "510998.92811"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"[", "eV", "]"}], "*)"}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"==", " ", 
         RowBox[{"mo", "*", 
          RowBox[{"c", "^", 
           RowBox[{"2", "[", "J", "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"bfield", "=", "baxis"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bfieldT", "=", "btotal"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Principal", " ", "Longitudinal", " ", "Axis"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xf", "-", "xo"}], ")"}], "/", "nx"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longAxis", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"xo", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Longitudinal", " ", "Axis", " ", "from", " ", "0"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"longAxis", "-", 
           RowBox[{"longAxis", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "1000"}]}], ";", 
       "  ", 
       RowBox[{"(*", 
        RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", 
         RowBox[{"Find", " ", "Peaks"}], " ", "===", "===", "==="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "limits", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ampX", "=", "0.1"}], ";", " ", 
       RowBox[{"ampY", "=", "0.1"}], ";", " ", 
       RowBox[{"ampZ", "=", "0.1"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Find", " ", "Peaks"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"peakX", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampX"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakY", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampY"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakZ", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampZ"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakT", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{"bfieldT", ",", "0", " ", ",", "0", " ", ",", " ", "ampZ"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Remove", " ", "extremities"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"drop", "=", "4"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "how", " ", "many", " ", "peaks", " ", "to", " ", "drop", " ", "each",
          " ", "side"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"peakT", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakT", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"peakT", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakT", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "drop"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longPeakT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "peakT", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"drop", "=", "3"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "how", " ", "many", " ", "peaks", " ", "to", " ", "drop", " ", "each",
          " ", "side"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakZ", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakZ", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakZ", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakZ", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakZ", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakZ", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakZ", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakZ", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakZ", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakY", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakY", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakY", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakY", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakY", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakY", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakY", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakY", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakY", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakX", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakX", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakX", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakX", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakX", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakX", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakX", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakX", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakX", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"peakX", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
          RowBox[{"Mean", "[", 
           RowBox[{"peakY", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{"peakX", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Mean", "[", 
             RowBox[{"peakZ", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakX"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakZ"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{"peakY", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Mean", "[", 
             RowBox[{"peakZ", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakY"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakZ"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"periods", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"longPeak", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
           RowBox[{"longPeak", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "longPeak", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", 
         RowBox[{"Magnet", " ", "design"}], " ", "===", "===", "==="}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nperiods", "=", 
        RowBox[{"Length", "[", "periods", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"periodL", "=", 
        RowBox[{"Mean", "[", "periods", "]"}]}], ";", " ", 
       RowBox[{"(*", "mm", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"eEnergy", "=", 
        RowBox[{"3", "*", 
         RowBox[{"10", "^", "9"}]}]}], ";", " ", 
       RowBox[{"(*", "eV", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"gamma", "=", 
        RowBox[{"eEnergy", "/", "eRestEnergy"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"c", "=", "299792458"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"m", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"kparam", "=", 
        RowBox[{"0.0934", "*", "periodL", "*", 
         RowBox[{"Mean", "[", 
          RowBox[{"peakT", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]}], ";", "  ", 
       RowBox[{"(*", 
        RowBox[{"!!", 
         RowBox[{"!!", 
          RowBox[{"!!", 
           RowBox[{"!!", 
            RowBox[{"!!", 
             RowBox[{"!!", 
              RowBox[{"!", " ", 
               RowBox[{
               "Todas", " ", "componentes", " ", "ou", " ", "s\[OAcute]", " ", 
                RowBox[{"1", "?"}]}]}]}]}]}]}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"lambda", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Mean", "[", "periods", "]"}], "/", "1000"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              RowBox[{"gamma", "^", "2"}], ")"}]}], ")"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kparam", "^", "2"}], ")"}], "/", "2"}]}], ")"}]}]}], 
       ";", " ", 
       RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<\\nK parameter: \>\"", ",", "kparam", ",", 
         "\"\<\\nWavelenght: \>\"", ",", " ", "lambda", ",", "\"\<[m]\>\""}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", " ", "Integrals", " ", "===", "===", "==="}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"intField0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"longAxis", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"longAxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "3"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"longAxis", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"longAxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "3"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
                RowBox[{"bfield", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"longAxis", "[", 
                RowBox[{"[", 
                 RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
               RowBox[{"longAxis", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
             RowBox[{"10", "^", 
              RowBox[{"-", "3"}]}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "bfield", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", " ", 
       RowBox[{"(*", " ", 
        RowBox[{"[", 
         RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"intField", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Accumulate", "[", 
           RowBox[{"intField0", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"intField0", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"Accumulate", "[", 
           RowBox[{"intField0", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", 
         RowBox[{"Phase", " ", "Function"}], " ", "===", "===", "==="}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I01", "[", "i_", "]"}], ":=", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"eletron", "/", 
            RowBox[{"(", 
             RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
           RowBox[{"intField", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I03", "[", "i_", "]"}], ":=", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"eletron", "/", 
            RowBox[{"(", 
             RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
           RowBox[{"intField", "[", 
            RowBox[{"[", 
             RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I02", "[", "i_", "]"}], ":=", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"eletron", "/", 
            RowBox[{"(", 
             RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
           RowBox[{"intField", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "]"}], 
         "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"I2", "[", "j_", "]"}], ":=", 
        RowBox[{"(", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"I0", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"I01", "[", "i", "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"I01", "[", 
                    RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
                  "2"}], ")"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"I02", "[", "i", "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"I02", "[", 
                    RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
                  "2"}], ")"}], "+", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"I03", "[", "i", "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"I03", "[", 
                    RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
                  "2"}], ")"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"s", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                RowBox[{"s", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"I0", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "I0", "]"}]}], "}"}]}], "]"}], "]"}], 
          ";"}], "\[IndentingNewLine]", ")"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", "Phase", " ", "===", "===", "==="}],
         "*)"}], "\[IndentingNewLine]", 
       RowBox[{"phase", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Pi", "/", "lambda"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"s", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "/", 
              RowBox[{"gamma", "^", "2"}]}], "+", 
             RowBox[{"I2", "[", "j", "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"peakT", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Length", "[", "peakT", "]"}], ",", "1"}], "]"}], 
              "]"}], "-", "2"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Phase", " ", "Error"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"phaseError", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"phase", "[", 
            RowBox[{"[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"peakT", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"peakT", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ")"}], 
             "]"}], "]"}], "-", 
           RowBox[{"phase", "[", 
            RowBox[{"[", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"peakT", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
               RowBox[{"peakT", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ")"}], 
             "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "peakT", "]"}], "-", "2"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"rmsError", "=", 
        RowBox[{"RootMeanSquare", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"phaseError", "-", "Pi"}], ")"}], "*", 
          RowBox[{"180", "/", "Pi"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(1) RMS Phase Error [deg]: \>\"", ",", "rmsError"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"phaseError", "-", "Pi"}], ")"}], "*", 
            RowBox[{"180", "/", "Pi"}]}], "]"}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", " ", "Fitting", " ", "===", "===", "==="}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fitData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"longPeakT", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"phase", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitLin", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"fitData", ",", 
          RowBox[{
           RowBox[{"a", "*", "x"}], "+", "b"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"linearFit", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"longPeakT", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"fitLin", "[", 
             RowBox[{
              RowBox[{"s", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              RowBox[{"longPeakT", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"linearizedPhase", "=", 
        RowBox[{"phase", "-", 
         RowBox[{"linearFit", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<\\n> Phase Error solved! (elapsed time: \>\"", ",", " ", 
         RowBox[{"t1", "-", "t0"}], ",", " ", "\"\<[s])\>\""}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p3", "=", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"linearizedPhase", "*", 
           RowBox[{"180", "/", "Pi"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Linearized Phase\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"300", ",", "200"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\< \>\"", ",", "\"\<[deg]\>\""}], "}"}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"errorP", "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"linearizedPhase", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ";;", 
               RowBox[{
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
             "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "peakT", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], "*", 
         RowBox[{"180", "/", "Pi"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"\"\<(2-Fitting) RMS Phase Error [deg]: \>\"", ",", 
         RowBox[{"RootMeanSquare", "[", "errorP", "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Show", "[", "p3", "]"}], ",", 
           RowBox[{"Show", "[", 
            RowBox[{"ListLinePlot", "[", 
             RowBox[{"errorP", ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"300", ",", "200"}], "}"}]}], ",", 
              RowBox[{"PlotMarkers", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Automatic", ",", " ", "5"}], "}"}]}]}], "]"}], 
            "]"}]}], "}"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
    ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.8070356205940027`*^9, 3.8070358069598866`*^9}, {
   3.8070358428230853`*^9, 3.807035881131868*^9}, {3.8070359222354727`*^9, 
   3.807036149640605*^9}, {3.8070365028596797`*^9, 3.8070365332247577`*^9}, {
   3.8070365817649326`*^9, 3.8070365923359284`*^9}, {3.807036836311983*^9, 
   3.8070368365974984`*^9}, {3.8070372872006617`*^9, 
   3.8070372874013276`*^9}, {3.8072647522551794`*^9, 
   3.8072647542919865`*^9}, {3.812471608366039*^9, 3.812471619348774*^9}, {
   3.8130531181605153`*^9, 3.813053121769622*^9}, {3.813053606829727*^9, 
   3.8130536116731877`*^9}, {3.813053652654789*^9, 3.8130536527640533`*^9}, {
   3.8130538205574164`*^9, 3.8130538257601824`*^9}, {3.8130553001105413`*^9, 
   3.813055321134166*^9}, {3.813055354506814*^9, 3.8130554273923635`*^9}, {
   3.813055465686595*^9, 3.813055527613927*^9}, {3.813057012910119*^9, 
   3.8130570285185375`*^9}, {3.8130570601100817`*^9, 
   3.8130571306293087`*^9}, {3.8130571898283033`*^9, 3.813057194937357*^9}, {
   3.8130572365907593`*^9, 3.8130572791814528`*^9}, {3.8130574895446596`*^9, 
   3.813057506074747*^9}, {3.813057613973492*^9, 3.8130576594860744`*^9}, {
   3.81305770177253*^9, 3.8130577214898996`*^9}, {3.813057767249009*^9, 
   3.8130577694207587`*^9}, {3.813057882249529*^9, 3.813057944870169*^9}, {
   3.8130579818988633`*^9, 3.813058009834504*^9}, {3.8130580425601034`*^9, 
   3.81305810918047*^9}, {3.8130581533336415`*^9, 3.8130582377274475`*^9}, {
   3.8130582679440928`*^9, 3.8130582764278755`*^9}, {3.813059316511155*^9, 
   3.81305933375995*^9}, {3.813059379037923*^9, 3.8130593873498373`*^9}, {
   3.81305941833206*^9, 3.813059419863328*^9}, {3.813059453954708*^9, 
   3.81305946682868*^9}, {3.813059567111238*^9, 3.813059571032937*^9}, 
   3.813059628028835*^9, {3.813059693564071*^9, 3.81305973338941*^9}, {
   3.813059775417741*^9, 3.8130598771845646`*^9}, {3.8130599166505675`*^9, 
   3.8130599707406735`*^9}, {3.813060026120492*^9, 3.8130600273391523`*^9}, {
   3.813060125722924*^9, 3.8130602256472607`*^9}, {3.813060309786196*^9, 
   3.8130603569391623`*^9}, {3.8130603970227804`*^9, 
   3.8130604224897623`*^9}, {3.813060494078655*^9, 3.8130605671764917`*^9}, {
   3.8130606164542613`*^9, 3.813060639874506*^9}, {3.813060758953618*^9, 
   3.8130607905451756`*^9}, {3.813060911802472*^9, 3.813060930872758*^9}, {
   3.813060964151831*^9, 3.8130610545516543`*^9}, {3.8130611009635963`*^9, 
   3.813061162099836*^9}, {3.8130612419223967`*^9, 3.81306124935937*^9}, {
   3.8130613263309536`*^9, 3.813061336408244*^9}, {3.8130614193434772`*^9, 
   3.813061428374081*^9}, {3.8130614852075806`*^9, 3.8130615120025573`*^9}, {
   3.813061557124414*^9, 3.8130615576712465`*^9}, {3.813061619573188*^9, 
   3.8130616224479885`*^9}, {3.8130629000883636`*^9, 
   3.8130630515778155`*^9}, {3.813063235807781*^9, 3.8130632777354026`*^9}, {
   3.81306332793503*^9, 3.8130634603400755`*^9}, {3.813063541350054*^9, 
   3.8130636565848103`*^9}, {3.813063757358926*^9, 3.813063761452387*^9}, {
   3.813063860798237*^9, 3.8130639157006536`*^9}, {3.8130639676971083`*^9, 
   3.813063980243029*^9}, {3.813064050793042*^9, 3.8130641013676214`*^9}, {
   3.813064191198108*^9, 3.8130642096187115`*^9}, {3.813064284207267*^9, 
   3.8130642914098883`*^9}, {3.8130666756245227`*^9, 3.813066676702553*^9}, {
   3.813067247970109*^9, 3.8130672516417217`*^9}, {3.813067434012035*^9, 
   3.813067475634139*^9}, 3.8130698521442003`*^9, {3.81306989040718*^9, 
   3.8130698920008183`*^9}, {3.813070124602005*^9, 3.8130701291173162`*^9}, {
   3.813070485860591*^9, 3.813070490610261*^9}, {3.8130745076987824`*^9, 
   3.8130745904742374`*^9}, {3.8130746281591215`*^9, 3.813074628518466*^9}, {
   3.813074682101267*^9, 3.8130747326913753`*^9}, {3.8130747890000763`*^9, 
   3.8130747949684143`*^9}, {3.813074866066882*^9, 3.8130748769411182`*^9}, {
   3.8130749136885557`*^9, 3.8130750183004403`*^9}, {3.8130750508606744`*^9, 
   3.8130750510638123`*^9}, {3.8130751390732827`*^9, 
   3.8130751772581453`*^9}, {3.81307523459151*^9, 3.813075340256032*^9}, {
   3.8130754344144335`*^9, 3.813075471599352*^9}, {3.8130755506806507`*^9, 
   3.8130755842876863`*^9}, {3.8130756420961637`*^9, 3.813075644658487*^9}, {
   3.8130756900303273`*^9, 3.8130757068729024`*^9}, {3.813075779470857*^9, 
   3.81307579626657*^9}, {3.81307596049911*^9, 3.8130760301817665`*^9}, {
   3.8130762535814934`*^9, 3.8130762692141685`*^9}, {3.81339242971929*^9, 
   3.8133924456713047`*^9}, 3.8133931949971457`*^9, {3.8133942911470814`*^9, 
   3.8133943026463165`*^9}, {3.8133967748631873`*^9, 3.813396798316267*^9}, {
   3.813396844524274*^9, 3.813396860316945*^9}, {3.813396899682785*^9, 
   3.813396908529828*^9}, 3.8133984056967874`*^9, {3.813401120343397*^9, 
   3.8134011397636557`*^9}, {3.8134013212413287`*^9, 
   3.8134013280767093`*^9}, {3.8134027153208804`*^9, 
   3.8134027739451404`*^9}, {3.8134041498097754`*^9, 
   3.8134041666249714`*^9}, {3.81340464253882*^9, 3.8134046645083694`*^9}, {
   3.813406509792204*^9, 3.813406509992434*^9}, {3.813411791797409*^9, 
   3.813411791928845*^9}, {3.813412413901787*^9, 3.8134124145017257`*^9}, {
   3.813412771907388*^9, 3.8134127725914803`*^9}, 3.8194467552901926`*^9, {
   3.819447132643071*^9, 3.8194472438693657`*^9}, 3.819448643848784*^9, {
   3.819448895868351*^9, 3.8194488967745924`*^9}, {3.819448934042699*^9, 
   3.8194489349489417`*^9}, {3.8194489991219482`*^9, 
   3.8194489995438304`*^9}, {3.819449046750947*^9, 3.819449087245742*^9}, 
   3.819462798143347*^9, {3.8194633608924046`*^9, 3.819463443077935*^9}, {
   3.8194634736099358`*^9, 3.8194635404919505`*^9}, {3.81946433904424*^9, 
   3.8194643876739235`*^9}, {3.819464427715364*^9, 3.819464435980652*^9}, {
   3.819464565606933*^9, 3.819464584800474*^9}, {3.819464619487646*^9, 
   3.8194646228654976`*^9}, {3.819464705406911*^9, 3.8194647196250825`*^9}, {
   3.819464780594839*^9, 3.819464794946338*^9}, {3.8194650234900846`*^9, 
   3.8194650768563337`*^9}, 3.819465117494495*^9, {3.819465217024832*^9, 
   3.8194652444377537`*^9}, {3.8194653739692793`*^9, 3.8194654010335093`*^9}, 
   3.81946544248875*^9, {3.819465542078182*^9, 3.819465640952538*^9}, {
   3.8194656771428013`*^9, 3.8194656948416214`*^9}, {3.819466235213647*^9, 
   3.8194662378851314`*^9}, {3.8194665019676037`*^9, 
   3.8194665263496475`*^9}, {3.819466621209593*^9, 3.8194667138537364`*^9}, {
   3.819466826262502*^9, 3.819466827362917*^9}, {3.8194668900611544`*^9, 
   3.8194668903924923`*^9}, {3.8194669437460732`*^9, 
   3.8194669634297295`*^9}, {3.819467448625146*^9, 3.8194674968941793`*^9}, {
   3.8194692201520443`*^9, 3.8194692611086617`*^9}, {3.8194693143136168`*^9, 
   3.819469316116059*^9}, {3.8194694134167986`*^9, 3.819469436248088*^9}, {
   3.8194694853168*^9, 3.8194695836838784`*^9}, {3.8194701902357073`*^9, 
   3.819470212116227*^9}, {3.81947036230141*^9, 3.819470369073124*^9}, {
   3.819470569486368*^9, 3.819470612193947*^9}, 3.8194707311594944`*^9, {
   3.8194709033024893`*^9, 3.819470917968569*^9}, {3.8194711434624805`*^9, 
   3.819471143632311*^9}, {3.8194736619886904`*^9, 3.8194736728979454`*^9}, {
   3.819473724169883*^9, 3.819473731092203*^9}, {3.8194738399076633`*^9, 
   3.81947385134686*^9}, {3.819473901127146*^9, 3.8194740053567343`*^9}, {
   3.819474039874088*^9, 3.819474098280595*^9}, {3.819474246408862*^9, 
   3.8194742959987574`*^9}, {3.8194762288603334`*^9, 3.819476240166538*^9}, 
   3.8194763735418167`*^9, {3.819477045270627*^9, 3.8194770667720304`*^9}, 
   3.8194771205121036`*^9, {3.8194772197175484`*^9, 3.819477484249156*^9}, {
   3.819477704400226*^9, 3.8194777104061627`*^9}, {3.819477885606845*^9, 
   3.819477916544301*^9}, {3.819477950986883*^9, 3.8194779988187275`*^9}, {
   3.8194780512720547`*^9, 3.8194780825727816`*^9}, {3.8194781754582014`*^9, 
   3.8194782079934225`*^9}, {3.8194784358793893`*^9, 
   3.8194784613654575`*^9}, {3.8194785449435043`*^9, 3.819478556565844*^9}, {
   3.819478737454673*^9, 3.819478744671872*^9}, {3.819479102580739*^9, 
   3.8194791325763083`*^9}, {3.819533481295374*^9, 3.8195335186103106`*^9}, {
   3.819536233017293*^9, 3.8195362402985215`*^9}, {3.8195366101434374`*^9, 
   3.8195366683776865`*^9}, {3.8195367028780966`*^9, 
   3.8195367055499935`*^9}, {3.819536736453277*^9, 3.819536738187647*^9}, {
   3.819538944859583*^9, 3.819538991328926*^9}, {3.819539025881853*^9, 
   3.819539170635092*^9}, {3.819539302496423*^9, 3.81953937806282*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[140]:=",ExpressionUUID->"1d83b681-b2ce-4698-a428-35db1d372314"]
}, Closed]],

Cell[CellGroupData[{

Cell["Save", "Section",
 CellChangeTimes->{{3.807266154733734*^9, 3.8072661585051565`*^9}, {
  3.8072687695154037`*^9, 
  3.80726877138556*^9}},ExpressionUUID->"172bd0b0-c188-4b64-8761-\
91b763c61a81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"save", "[", 
   RowBox[{"i_", ",", "m_", ",", "expforces_", ",", "m0_", ",", "baxis_"}], 
   "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"i", "+", "1"}], ">", " ", "1"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"check", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"exportmatrix", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"m", ",", 
            RowBox[{"ArrayReshape", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "expforces", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Length", "[", "expforces", "]"}], ",", "12"}], 
               "}"}]}], "]"}], ",", "2"}], "]"}]}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"check", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"exportfield", "=", 
           RowBox[{"Join", "[", 
            RowBox[{"m0", ",", "baxis", ",", "2"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"check", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"exportmatrix", "=", 
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "expforces", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "expforces", "]"}], ",", "12"}], "}"}]}],
            "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"MemberQ", "[", 
          RowBox[{"check", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"exportfield", "=", "baxis"}], ";", " ", 
          RowBox[{"ArrayReshape", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "baxis", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "baxis", "]"}], ",", "3"}], "}"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.8072661637573814`*^9, 3.807266185179081*^9}, {
   3.8072663199933786`*^9, 3.807266324806266*^9}, {3.8072665647706003`*^9, 
   3.807266603762561*^9}, {3.80726665246783*^9, 3.807266686550582*^9}, {
   3.8072667256413507`*^9, 3.8072667557683964`*^9}, {3.8072668008464575`*^9, 
   3.8072668142994843`*^9}, {3.8072673660526247`*^9, 
   3.8072674966470795`*^9}, {3.8072675698868732`*^9, 3.807267572827727*^9}, {
   3.807267640535969*^9, 3.8072676491314898`*^9}, {3.807268368683636*^9, 
   3.8072686810519137`*^9}, {3.807270564857283*^9, 3.8072705732762775`*^9}, {
   3.8072706053581667`*^9, 3.807270609707926*^9}, {3.8072707039471807`*^9, 
   3.8072707648772273`*^9}, {3.8072708037594967`*^9, 3.807270819804796*^9}, {
   3.807270932107067*^9, 3.8072709362353983`*^9}, {3.807271101831631*^9, 
   3.807271105613437*^9}, {3.807271599125865*^9, 3.8072716956784735`*^9}, 
   3.8072717346246676`*^9, {3.8072718714183235`*^9, 3.8072718728075337`*^9}, {
   3.807272069328796*^9, 3.8072720721698513`*^9}, {3.8072721418805227`*^9, 
   3.807272147621173*^9}, {3.807272295927808*^9, 3.807272314341054*^9}, {
   3.8072724320001264`*^9, 3.8072724369007545`*^9}, {3.8072724755824633`*^9, 
   3.807272483335828*^9}, {3.807368108113666*^9, 3.8073681249491496`*^9}, {
   3.807368272549837*^9, 3.807368285038449*^9}, {3.807368321042632*^9, 
   3.807368455721633*^9}, {3.8073685187623367`*^9, 3.8073686385965357`*^9}, {
   3.812462817795168*^9, 3.812462837519909*^9}, {3.8124629167167006`*^9, 
   3.8124629171194706`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[141]:=",ExpressionUUID->"22a6c19f-bfa7-4345-9fec-030ef3b3c896"]
}, Closed]],

Cell[CellGroupData[{

Cell["Export", "Section",
 CellChangeTimes->{{3.8072687805598145`*^9, 
  3.807268781346681*^9}},ExpressionUUID->"9c5e6dab-e476-4496-8406-\
a5dc6e5131d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"exportf", "[", 
   RowBox[{"exportmatrix_", ",", "exportfield_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dir", "=", 
     RowBox[{"NotebookDirectory", "[", "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"--", 
      RowBox[{"--", "Export"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Adjust", " ", "Dimensions"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d2", "=", 
        RowBox[{"Dimensions", "[", "exportmatrix", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rest", "=", 
        RowBox[{"48", "-", 
         RowBox[{"d2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"exportmatrix2", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"exportmatrix", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "exportmatrix", "]"}], ",", "rest"}], 
             "}"}]}], "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Export", " ", "Field"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"dir", ",", "\"\<Forces_General_Modes.xlsx\>\""}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Fase_inicial\>\"", "\[Rule]", 
            RowBox[{"exportmatrix2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"1", ";;", "12"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<Fase_Psobre2\>\"", "\[Rule]", 
            RowBox[{"exportmatrix2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"13", ";;", "24"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<CF_Psobre4\>\"", "\[Rule]", 
            RowBox[{"exportmatrix2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"25", ";;", "36"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<GV_Psobre4\>\"", "\[Rule]", 
            RowBox[{"exportmatrix2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"37", ";;", "48"}]}], "]"}], "]"}]}]}], "}"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Adjust", " ", "Dimensions"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"d", "=", 
        RowBox[{"Dimensions", "[", "exportfield", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rest", "=", 
        RowBox[{"12", "-", 
         RowBox[{"d", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"exportfield2", "=", 
        RowBox[{"Join", "[", 
         RowBox[{"exportfield", ",", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", "exportfield", "]"}], ",", "rest"}], 
             "}"}]}], "]"}], ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Export", " ", "Field"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"StringJoin", "[", 
          RowBox[{"dir", ",", "\"\<Field_General_Modes.xlsx\>\""}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\"\<Fase_inicial\>\"", "\[Rule]", 
            RowBox[{"exportfield2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<Fase_Psobre2\>\"", "\[Rule]", 
            RowBox[{"exportfield2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"4", ";;", "6"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<CF_Psobre4\>\"", "\[Rule]", 
            RowBox[{"exportfield2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"7", ";;", "9"}]}], "]"}], "]"}]}], ",", 
           RowBox[{"\"\<GV_Psobre4\>\"", "\[Rule]", 
            RowBox[{"exportfield2", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"10", ";;", "12"}]}], "]"}], "]"}]}]}], "}"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.807270956611295*^9, 3.807271055177209*^9}, {
  3.807289657247912*^9, 3.807289664894849*^9}, {3.8072898547634687`*^9, 
  3.8072898762127447`*^9}, {3.8072921277598124`*^9, 3.8072921281446*^9}, {
  3.807348412211628*^9, 3.8073484618749933`*^9}, {3.807351506759718*^9, 
  3.807351507377304*^9}, {3.8073671848766203`*^9, 3.807367197042173*^9}, {
  3.8073672835811377`*^9, 3.807367331111975*^9}, {3.807368758803999*^9, 
  3.8073688802993755`*^9}, {3.8073689174513197`*^9, 3.807368917645485*^9}, {
  3.8130491620969267`*^9, 3.8130493148147097`*^9}, {3.8130493464531155`*^9, 
  3.813049363748821*^9}, {3.81304941617369*^9, 3.81304945143676*^9}, {
  3.8130496864287977`*^9, 3.81304980303959*^9}, {3.8130498755345383`*^9, 
  3.8130498776281433`*^9}, {3.8130500903254824`*^9, 3.8130501417999268`*^9}, {
  3.8130502372151566`*^9, 3.8130503003357553`*^9}, {3.8160764727285795`*^9, 
  3.8160764891374245`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[142]:=",ExpressionUUID->"c4978d9d-8c8f-4567-995d-ca75bb076fa9"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Execution", "Chapter",
 CellChangeTimes->{{3.807265311417624*^9, 3.8072653134655724`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"b237b327-0aba-4796-8f75-cd66e53a38b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"RadioButtonBar", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "checkgeo", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0", "\[Rule]", " ", "\"\<Delta 52.5mm: A0 Geometry\>\""}], ",", 
     RowBox[{"1", "\[Rule]", " ", "\"\<Delta 52.5mm: A1 Geometry\>\""}], ",", 
     RowBox[{"2", "\[Rule]", " ", "\"\<Delta 21mm\>\""}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckboxBar", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "check", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", " ", "\"\<Field Calc.\>\""}], ",", 
     RowBox[{"2", "\[Rule]", " ", "\"\<Block Forces\>\""}], ",", 
     RowBox[{"3", "\[Rule]", " ", "\"\<Cassettes Forces\>\""}], ",", 
     RowBox[{"4", "\[Rule]", "\"\<Integral error\>\""}], ",", 
     RowBox[{"5", "\[Rule]", "\"\<Phase error\>\""}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckboxBar", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "checkmode", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "\[Rule]", " ", "\"\<Fase(0)\>\""}], ",", 
     RowBox[{"2", "\[Rule]", " ", "\"\<Fase(\[Lambda]/2)\>\""}], ",", 
     RowBox[{"3", "\[Rule]", " ", "\"\<Contra-Fase(\[Lambda]/4)\>\""}], ",", 
     RowBox[{"4", "\[Rule]", "\"\<GV(\[Lambda]/4)\>\""}]}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckboxBar", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "checkexp", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", "\[Rule]", "\"\<Export Results\>\""}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.807369131574441*^9, 3.807369267576042*^9}, {
   3.8073693019420424`*^9, 3.807369324330469*^9}, {3.807369969326731*^9, 
   3.8073700090884504`*^9}, {3.8121044813231974`*^9, 
   3.8121044997749147`*^9}, {3.8121066636288414`*^9, 3.812106669144079*^9}, {
   3.8124604149653563`*^9, 3.8124604707765102`*^9}, {3.812460518785104*^9, 
   3.8124605244518976`*^9}, {3.8124609423823166`*^9, 3.8124609427931175`*^9}, 
   3.8124609738512287`*^9, {3.8160899796130695`*^9, 3.8160899826601973`*^9}, {
   3.8194657445862103`*^9, 3.819465753690796*^9}, {3.8194714688649073`*^9, 
   3.8194714693137627`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[143]:=",ExpressionUUID->"76fa5ee8-878b-4529-aa83-45eed9927979"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{GridBox[{
      {
       RadioButtonBox[Dynamic[$CellContext`checkgeo], {0},
        DefaultBaseStyle->"RadioButtonBar"], 
       StyleBox["\<\"Delta 52.5mm: A0 Geometry\"\>", "RadioButtonBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       RadioButtonBox[Dynamic[$CellContext`checkgeo], {1},
        DefaultBaseStyle->"RadioButtonBar"], 
       StyleBox["\<\"Delta 52.5mm: A1 Geometry\"\>", "RadioButtonBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       RadioButtonBox[Dynamic[$CellContext`checkgeo], {2},
        DefaultBaseStyle->"RadioButtonBar"], 
       StyleBox["\<\"Delta 21mm\"\>", "RadioButtonBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}]}], "Deploy"],
  RadioButtonBar[
   Dynamic[$CellContext`checkgeo], {
   0 -> "Delta 52.5mm: A0 Geometry", 1 -> "Delta 52.5mm: A1 Geometry", 2 -> 
    "Delta 21mm"}]]], "Output",
 CellChangeTimes->{{3.807369223249303*^9, 3.8073693258014684`*^9}, {
   3.807369852411155*^9, 3.8073698625835657`*^9}, {3.8073699210796213`*^9, 
   3.807369922821495*^9}, {3.807369972502211*^9, 3.807370010840745*^9}, 
   3.8073700485521803`*^9, 3.8075213338833857`*^9, 3.8078651615767584`*^9, 
   3.8121014379094973`*^9, 3.812101881698471*^9, 3.8121045074775105`*^9, 
   3.8121066701440115`*^9, 3.8124604746672792`*^9, 3.8124605295999236`*^9, 
   3.8124605729002094`*^9, 3.8124607586292*^9, 3.81246084649105*^9, 
   3.8124609120276403`*^9, {3.812460944086369*^9, 3.812460974642768*^9}, 
   3.812461242326985*^9, 3.81246168440462*^9, 3.812461744428362*^9, 
   3.8124626657549453`*^9, 3.812462930785678*^9, 3.812463910924576*^9, 
   3.8124642747119308`*^9, 3.812471456891479*^9, 3.8124716321954203`*^9, 
   3.8130479059246893`*^9, 3.8130499554039655`*^9, 3.813050171313486*^9, 
   3.8130503579496627`*^9, 3.813050559944265*^9, 3.8130513385944576`*^9, 
   3.813052979926725*^9, 3.813055567064292*^9, 3.813064338687833*^9, {
   3.813066690795322*^9, 3.8130667094815226`*^9}, 3.813066781539*^9, 
   3.813067492570462*^9, 3.813070524944027*^9, 3.8130727623001122`*^9, 
   3.8130760408997564`*^9, 3.813396960760211*^9, 3.8134005957449455`*^9, 
   3.813402884230246*^9, 3.8134047197509723`*^9, 3.813406544097329*^9, 
   3.8134117994148507`*^9, 3.813493524544571*^9, 3.8145195062258806`*^9, 
   3.8159897270269775`*^9, 3.8159900623774805`*^9, 3.8160127000398264`*^9, 
   3.8160131082652884`*^9, 3.8160735937341027`*^9, 3.8160887230182767`*^9, 
   3.816088936032055*^9, 3.81609103170907*^9, 3.816091571768215*^9, 
   3.818755647204467*^9, 3.8187557332297306`*^9, 3.8187565133692775`*^9, 
   3.818761276501685*^9, 3.8187776941801963`*^9, 3.818777743138204*^9, 
   3.818834227056259*^9, 3.8188343685909433`*^9, 3.818840862351976*^9, 
   3.8194658580245066`*^9, 3.8194675214142637`*^9, 3.8194677673711205`*^9, 
   3.8194686054139037`*^9, 3.819468810353407*^9, 3.8194689510486155`*^9, 
   3.819471475771336*^9, 3.8194751146430845`*^9, 3.8194752293851795`*^9, 
   3.8194753238223453`*^9, 3.819475997764963*^9, 3.819477586916634*^9, 
   3.819478289498963*^9, 3.8194791754117546`*^9, 3.8195326441902742`*^9, 
   3.8195395440723424`*^9},
 Background->RGBColor[1, 0.9, 0.8],
 CellLabel->
  "Out[143]=",ExpressionUUID->"7d3bb52f-1291-45d4-bbe0-109f27eb4fd5"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`check, 1], 
         BoxForm`TogglerBarFunction[$CellContext`check, 1]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Field Calc.\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`check, 2], 
         BoxForm`TogglerBarFunction[$CellContext`check, 2]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Block Forces\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`check, 3], 
         BoxForm`TogglerBarFunction[$CellContext`check, 3]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Cassettes Forces\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`check, 4], 
         BoxForm`TogglerBarFunction[$CellContext`check, 4]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Integral error\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`check, 5], 
         BoxForm`TogglerBarFunction[$CellContext`check, 5]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Phase error\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}]}], "Deploy"],
  CheckboxBar[
   Dynamic[$CellContext`check], {
   1 -> "Field Calc.", 2 -> "Block Forces", 3 -> "Cassettes Forces", 4 -> 
    "Integral error", 5 -> "Phase error"}]]], "Output",
 CellChangeTimes->{{3.807369223249303*^9, 3.8073693258014684`*^9}, {
   3.807369852411155*^9, 3.8073698625835657`*^9}, {3.8073699210796213`*^9, 
   3.807369922821495*^9}, {3.807369972502211*^9, 3.807370010840745*^9}, 
   3.8073700485521803`*^9, 3.8075213338833857`*^9, 3.8078651615767584`*^9, 
   3.8121014379094973`*^9, 3.812101881698471*^9, 3.8121045074775105`*^9, 
   3.8121066701440115`*^9, 3.8124604746672792`*^9, 3.8124605295999236`*^9, 
   3.8124605729002094`*^9, 3.8124607586292*^9, 3.81246084649105*^9, 
   3.8124609120276403`*^9, {3.812460944086369*^9, 3.812460974642768*^9}, 
   3.812461242326985*^9, 3.81246168440462*^9, 3.812461744428362*^9, 
   3.8124626657549453`*^9, 3.812462930785678*^9, 3.812463910924576*^9, 
   3.8124642747119308`*^9, 3.812471456891479*^9, 3.8124716321954203`*^9, 
   3.8130479059246893`*^9, 3.8130499554039655`*^9, 3.813050171313486*^9, 
   3.8130503579496627`*^9, 3.813050559944265*^9, 3.8130513385944576`*^9, 
   3.813052979926725*^9, 3.813055567064292*^9, 3.813064338687833*^9, {
   3.813066690795322*^9, 3.8130667094815226`*^9}, 3.813066781539*^9, 
   3.813067492570462*^9, 3.813070524944027*^9, 3.8130727623001122`*^9, 
   3.8130760408997564`*^9, 3.813396960760211*^9, 3.8134005957449455`*^9, 
   3.813402884230246*^9, 3.8134047197509723`*^9, 3.813406544097329*^9, 
   3.8134117994148507`*^9, 3.813493524544571*^9, 3.8145195062258806`*^9, 
   3.8159897270269775`*^9, 3.8159900623774805`*^9, 3.8160127000398264`*^9, 
   3.8160131082652884`*^9, 3.8160735937341027`*^9, 3.8160887230182767`*^9, 
   3.816088936032055*^9, 3.81609103170907*^9, 3.816091571768215*^9, 
   3.818755647204467*^9, 3.8187557332297306`*^9, 3.8187565133692775`*^9, 
   3.818761276501685*^9, 3.8187776941801963`*^9, 3.818777743138204*^9, 
   3.818834227056259*^9, 3.8188343685909433`*^9, 3.818840862351976*^9, 
   3.8194658580245066`*^9, 3.8194675214142637`*^9, 3.8194677673711205`*^9, 
   3.8194686054139037`*^9, 3.819468810353407*^9, 3.8194689510486155`*^9, 
   3.819471475771336*^9, 3.8194751146430845`*^9, 3.8194752293851795`*^9, 
   3.8194753238223453`*^9, 3.819475997764963*^9, 3.819477586916634*^9, 
   3.819478289498963*^9, 3.8194791754117546`*^9, 3.8195326441902742`*^9, 
   3.819539544087967*^9},
 Background->RGBColor[1, 0.9, 0.8],
 CellLabel->
  "Out[144]=",ExpressionUUID->"1bdb9df9-3e00-4a3d-a13d-feb4b5d2fffc"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   RowBox[{GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`checkmode, 1], 
         BoxForm`TogglerBarFunction[$CellContext`checkmode, 1]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Fase(0)\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`checkmode, 2], 
         BoxForm`TogglerBarFunction[$CellContext`checkmode, 2]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Fase(\[Lambda]/2)\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`checkmode, 3], 
         BoxForm`TogglerBarFunction[$CellContext`checkmode, 3]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"Contra-Fase(\[Lambda]/4)\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}], "  ", GridBox[{
      {
       CheckboxBox[Dynamic[
         MemberQ[$CellContext`checkmode, 4], 
         BoxForm`TogglerBarFunction[$CellContext`checkmode, 4]& ],
        DefaultBaseStyle->"CheckboxBar"], 
       StyleBox["\<\"GV(\[Lambda]/4)\"\>", "CheckboxBarLabel",
        StripOnInput->False]}
     },
     AutoDelete->False,
     BaselinePosition->{1, 2},
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.21]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}]}], "Deploy"],
  CheckboxBar[
   Dynamic[$CellContext`checkmode], {
   1 -> "Fase(0)", 2 -> "Fase(\[Lambda]/2)", 3 -> "Contra-Fase(\[Lambda]/4)", 
    4 -> "GV(\[Lambda]/4)"}]]], "Output",
 CellChangeTimes->{{3.807369223249303*^9, 3.8073693258014684`*^9}, {
   3.807369852411155*^9, 3.8073698625835657`*^9}, {3.8073699210796213`*^9, 
   3.807369922821495*^9}, {3.807369972502211*^9, 3.807370010840745*^9}, 
   3.8073700485521803`*^9, 3.8075213338833857`*^9, 3.8078651615767584`*^9, 
   3.8121014379094973`*^9, 3.812101881698471*^9, 3.8121045074775105`*^9, 
   3.8121066701440115`*^9, 3.8124604746672792`*^9, 3.8124605295999236`*^9, 
   3.8124605729002094`*^9, 3.8124607586292*^9, 3.81246084649105*^9, 
   3.8124609120276403`*^9, {3.812460944086369*^9, 3.812460974642768*^9}, 
   3.812461242326985*^9, 3.81246168440462*^9, 3.812461744428362*^9, 
   3.8124626657549453`*^9, 3.812462930785678*^9, 3.812463910924576*^9, 
   3.8124642747119308`*^9, 3.812471456891479*^9, 3.8124716321954203`*^9, 
   3.8130479059246893`*^9, 3.8130499554039655`*^9, 3.813050171313486*^9, 
   3.8130503579496627`*^9, 3.813050559944265*^9, 3.8130513385944576`*^9, 
   3.813052979926725*^9, 3.813055567064292*^9, 3.813064338687833*^9, {
   3.813066690795322*^9, 3.8130667094815226`*^9}, 3.813066781539*^9, 
   3.813067492570462*^9, 3.813070524944027*^9, 3.8130727623001122`*^9, 
   3.8130760408997564`*^9, 3.813396960760211*^9, 3.8134005957449455`*^9, 
   3.813402884230246*^9, 3.8134047197509723`*^9, 3.813406544097329*^9, 
   3.8134117994148507`*^9, 3.813493524544571*^9, 3.8145195062258806`*^9, 
   3.8159897270269775`*^9, 3.8159900623774805`*^9, 3.8160127000398264`*^9, 
   3.8160131082652884`*^9, 3.8160735937341027`*^9, 3.8160887230182767`*^9, 
   3.816088936032055*^9, 3.81609103170907*^9, 3.816091571768215*^9, 
   3.818755647204467*^9, 3.8187557332297306`*^9, 3.8187565133692775`*^9, 
   3.818761276501685*^9, 3.8187776941801963`*^9, 3.818777743138204*^9, 
   3.818834227056259*^9, 3.8188343685909433`*^9, 3.818840862351976*^9, 
   3.8194658580245066`*^9, 3.8194675214142637`*^9, 3.8194677673711205`*^9, 
   3.8194686054139037`*^9, 3.819468810353407*^9, 3.8194689510486155`*^9, 
   3.819471475771336*^9, 3.8194751146430845`*^9, 3.8194752293851795`*^9, 
   3.8194753238223453`*^9, 3.819475997764963*^9, 3.819477586916634*^9, 
   3.819478289498963*^9, 3.8194791754117546`*^9, 3.8195326441902742`*^9, 
   3.819539544087967*^9},
 Background->RGBColor[1, 0.9, 0.8],
 CellLabel->
  "Out[145]=",ExpressionUUID->"6808b6b0-969a-4d34-9efb-e44500e14645"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[GridBox[{
     {
      CheckboxBox[Dynamic[
        MemberQ[$CellContext`checkexp, 1], 
        BoxForm`TogglerBarFunction[$CellContext`checkexp, 1]& ],
       DefaultBaseStyle->"CheckboxBar"], 
      StyleBox["\<\"Export Results\"\>", "CheckboxBarLabel",
       StripOnInput->False]}
    },
    AutoDelete->False,
    BaselinePosition->{1, 2},
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.21]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "Deploy"],
  CheckboxBar[
   Dynamic[$CellContext`checkexp], {1 -> "Export Results"}]]], "Output",
 CellChangeTimes->{{3.807369223249303*^9, 3.8073693258014684`*^9}, {
   3.807369852411155*^9, 3.8073698625835657`*^9}, {3.8073699210796213`*^9, 
   3.807369922821495*^9}, {3.807369972502211*^9, 3.807370010840745*^9}, 
   3.8073700485521803`*^9, 3.8075213338833857`*^9, 3.8078651615767584`*^9, 
   3.8121014379094973`*^9, 3.812101881698471*^9, 3.8121045074775105`*^9, 
   3.8121066701440115`*^9, 3.8124604746672792`*^9, 3.8124605295999236`*^9, 
   3.8124605729002094`*^9, 3.8124607586292*^9, 3.81246084649105*^9, 
   3.8124609120276403`*^9, {3.812460944086369*^9, 3.812460974642768*^9}, 
   3.812461242326985*^9, 3.81246168440462*^9, 3.812461744428362*^9, 
   3.8124626657549453`*^9, 3.812462930785678*^9, 3.812463910924576*^9, 
   3.8124642747119308`*^9, 3.812471456891479*^9, 3.8124716321954203`*^9, 
   3.8130479059246893`*^9, 3.8130499554039655`*^9, 3.813050171313486*^9, 
   3.8130503579496627`*^9, 3.813050559944265*^9, 3.8130513385944576`*^9, 
   3.813052979926725*^9, 3.813055567064292*^9, 3.813064338687833*^9, {
   3.813066690795322*^9, 3.8130667094815226`*^9}, 3.813066781539*^9, 
   3.813067492570462*^9, 3.813070524944027*^9, 3.8130727623001122`*^9, 
   3.8130760408997564`*^9, 3.813396960760211*^9, 3.8134005957449455`*^9, 
   3.813402884230246*^9, 3.8134047197509723`*^9, 3.813406544097329*^9, 
   3.8134117994148507`*^9, 3.813493524544571*^9, 3.8145195062258806`*^9, 
   3.8159897270269775`*^9, 3.8159900623774805`*^9, 3.8160127000398264`*^9, 
   3.8160131082652884`*^9, 3.8160735937341027`*^9, 3.8160887230182767`*^9, 
   3.816088936032055*^9, 3.81609103170907*^9, 3.816091571768215*^9, 
   3.818755647204467*^9, 3.8187557332297306`*^9, 3.8187565133692775`*^9, 
   3.818761276501685*^9, 3.8187776941801963`*^9, 3.818777743138204*^9, 
   3.818834227056259*^9, 3.8188343685909433`*^9, 3.818840862351976*^9, 
   3.8194658580245066`*^9, 3.8194675214142637`*^9, 3.8194677673711205`*^9, 
   3.8194686054139037`*^9, 3.819468810353407*^9, 3.8194689510486155`*^9, 
   3.819471475771336*^9, 3.8194751146430845`*^9, 3.8194752293851795`*^9, 
   3.8194753238223453`*^9, 3.819475997764963*^9, 3.819477586916634*^9, 
   3.819478289498963*^9, 3.8194791754117546`*^9, 3.8195326441902742`*^9, 
   3.819539544103598*^9},
 Background->RGBColor[1, 0.9, 0.8],
 CellLabel->
  "Out[146]=",ExpressionUUID->"2d98fdef-e4a3-4c28-b409-9469e5d76629"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"isave", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"exportmatrix", "=", "0"}], ";", " ", 
   RowBox[{"exportfield", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mag", "=", 
   RowBox[{"genMag", "[", "magnetization", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.807020627072378*^9, 3.807020659166336*^9}, 
   3.8070208647200403`*^9, 3.807020917947025*^9, {3.8070209604845953`*^9, 
   3.807020977528679*^9}, {3.807021127724327*^9, 3.8070211280395603`*^9}, {
   3.807021430352235*^9, 3.8070214497988195`*^9}, {3.807021493647622*^9, 
   3.8070214941810684`*^9}, {3.807022009105114*^9, 3.8070220467565165`*^9}, {
   3.807027725157852*^9, 3.8070277432912855`*^9}, {3.8070322856045237`*^9, 
   3.807032288613516*^9}, {3.80703256137051*^9, 3.8070325616873083`*^9}, {
   3.8070333376987295`*^9, 3.8070333394670267`*^9}, {3.807033817919964*^9, 
   3.807033839374959*^9}, {3.8070340044651012`*^9, 3.8070340158180165`*^9}, {
   3.8070348416198235`*^9, 3.8070348647922406`*^9}, {3.80703502686449*^9, 
   3.807035036702756*^9}, {3.8072654089935884`*^9, 3.8072654155317316`*^9}, {
   3.807265563981619*^9, 3.8072655799972277`*^9}, {3.807265739954379*^9, 
   3.807265740192836*^9}, 3.8072661012885804`*^9, {3.8072665151054287`*^9, 
   3.8072665254807367`*^9}, {3.807266788674344*^9, 3.807266795465522*^9}, {
   3.807267598176157*^9, 3.8072676235846243`*^9}, {3.807268355990716*^9, 
   3.8072683563690133`*^9}, {3.807271123897336*^9, 3.8072711872078743`*^9}, 
   3.8072714804328413`*^9, {3.80728946445731*^9, 3.80728946507401*^9}, {
   3.807348274022273*^9, 3.8073482745789385`*^9}, {3.8073693589719114`*^9, 
   3.807369380679331*^9}, 3.807369432003007*^9, {3.8073696413880825`*^9, 
   3.8073697178131948`*^9}, {3.807864894277384*^9, 3.8078649226034575`*^9}, {
   3.8078678399336433`*^9, 3.8078678646812477`*^9}, {3.81601307184182*^9, 
   3.8160130721855946`*^9}, {3.818755484088939*^9, 3.818755486838932*^9}, {
   3.818755560140502*^9, 3.81875556521994*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[147]:=",ExpressionUUID->"92d7750c-d5d9-4604-816d-cfe0c6717ea4"],

Cell[CellGroupData[{

Cell["Fase\t \t\t        (Pol. Linear Horizontal)", "Section",
 CellChangeTimes->{{3.8072653954333572`*^9, 3.8072653996365623`*^9}, {
  3.8072738598306303`*^9, 3.8072738660259714`*^9}, {3.807273905393042*^9, 
  3.8072739080783553`*^9}, {3.8073483462969475`*^9, 3.8073483486679277`*^9}, {
  3.8073690413839493`*^9, 
  3.8073690709999905`*^9}},ExpressionUUID->"4d8e4b08-1b35-4d6a-9d2f-\
e6e40477a5a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"checkmode", ",", "1"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"draw", "[", 
     RowBox[{
     "mag", ",", "magn", ",", "ex", ",", "ey", ",", "checkgeo", ",", 
      "espessurab", ",", "periodL", ",", "dist", ",", "layers", ",", "gap", 
      ",", "1"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"solve", "[", 
     RowBox[{"undulator", ",", "magn"}], "]"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "1"}], "]"}], ",", 
      RowBox[{"field", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "2"}], "]"}], ",", 
      RowBox[{"bforces", "[", 
       RowBox[{"undulator", ",", "subdiv"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "3"}], "]"}], ",", 
      RowBox[{"cforces", "[", 
       RowBox[{
       "cass1", ",", "cass2", ",", "cass3", ",", "cass4", ",", "subdivcass"}],
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "4"}], "]"}], ",", 
      RowBox[{"interror", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "4"}], "]"}], ",", 
      RowBox[{"interror2", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "5"}], "]"}], ",", 
      RowBox[{"phaseerror", "[", 
       RowBox[{"baxis", ",", "btotal", ",", "xo", ",", "xf", ",", "nx"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "6"}], "]"}], ",", 
      RowBox[{"mpError", "[", 
       RowBox[{"undulator", ",", "gap", ",", "yo", ",", "yf", ",", "ney"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"save", "[", 
     RowBox[{
     "isave", ",", "exportmatrix", ",", "expforces", ",", "exportfield", ",", 
      "baxis"}], "]"}], ";", " ", 
    RowBox[{"isave", "=", 
     RowBox[{"isave", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.807020627072378*^9, 3.807020659166336*^9}, 
   3.8070208647200403`*^9, 3.807020917947025*^9, {3.8070209604845953`*^9, 
   3.807020977528679*^9}, {3.807021127724327*^9, 3.8070211280395603`*^9}, {
   3.807021430352235*^9, 3.8070214497988195`*^9}, {3.807021493647622*^9, 
   3.8070214941810684`*^9}, {3.807022009105114*^9, 3.8070220467565165`*^9}, {
   3.807027725157852*^9, 3.8070277432912855`*^9}, {3.8070322856045237`*^9, 
   3.807032288613516*^9}, {3.80703256137051*^9, 3.8070325616873083`*^9}, {
   3.8070333376987295`*^9, 3.8070333394670267`*^9}, {3.807033817919964*^9, 
   3.807033839374959*^9}, {3.8070340044651012`*^9, 3.8070340158180165`*^9}, {
   3.8070348416198235`*^9, 3.8070348647922406`*^9}, {3.80703502686449*^9, 
   3.807035036702756*^9}, {3.8072654089935884`*^9, 3.8072654155317316`*^9}, {
   3.807265563981619*^9, 3.8072655799972277`*^9}, {3.807265739954379*^9, 
   3.807265740192836*^9}, 3.8072661012885804`*^9, {3.8072665151054287`*^9, 
   3.8072665254807367`*^9}, {3.807266788674344*^9, 3.807266795465522*^9}, {
   3.807267598176157*^9, 3.8072676235846243`*^9}, {3.807268355990716*^9, 
   3.8072683563690133`*^9}, {3.807271123897336*^9, 3.8072711872078743`*^9}, 
   3.8072714804328413`*^9, {3.80728946445731*^9, 3.80728946507401*^9}, {
   3.807348274022273*^9, 3.8073482745789385`*^9}, {3.8073693589719114`*^9, 
   3.807369380679331*^9}, 3.807369432003007*^9, {3.8073696413880825`*^9, 
   3.8073697178131948`*^9}, {3.807864894277384*^9, 3.8078649226034575`*^9}, {
   3.8078678399336433`*^9, 3.8078678927460365`*^9}, {3.812103199988413*^9, 
   3.8121032051754675`*^9}, {3.812103286371819*^9, 3.812103300402089*^9}, {
   3.812103352183252*^9, 3.8121033562456007`*^9}, {3.812103696111146*^9, 
   3.8121036975485516`*^9}, {3.812104468120904*^9, 3.81210446966774*^9}, {
   3.8130642392417717`*^9, 3.8130642420851984`*^9}, {3.813064320767212*^9, 
   3.8130643300322247`*^9}, 3.8130667036694436`*^9, {3.8130709468892007`*^9, 
   3.8130709766920176`*^9}, {3.813072754253789*^9, 3.813072755394328*^9}, {
   3.8134934996419735`*^9, 3.8134935067438526`*^9}, {3.816013068685275*^9, 
   3.816013074842061*^9}, {3.8160900022411633`*^9, 3.8160900107106094`*^9}, 
   3.8160909966893125`*^9, {3.8160914287573075`*^9, 3.8160914454774275`*^9}, {
   3.816091524051962*^9, 3.8160915261615295`*^9}, {3.818755219111723*^9, 
   3.8187552440377407`*^9}, 3.8187553810481853`*^9, {3.8187771301125*^9, 
   3.818777147160858*^9}, {3.818777315882221*^9, 3.8187773173509674`*^9}, {
   3.8187773640711994`*^9, 3.81877737187249*^9}, {3.8187774914237866`*^9, 
   3.818777516111256*^9}, {3.8188415165491*^9, 3.8188415170647287`*^9}, {
   3.818841574580783*^9, 3.8188416073122163`*^9}, {3.819464930634966*^9, 
   3.819464984022934*^9}, 3.8194657717478476`*^9, {3.819466354911984*^9, 
   3.8194663616877527`*^9}, {3.8194681822616014`*^9, 3.8194681826837125`*^9}, 
   3.819468579703391*^9, {3.8194713539622993`*^9, 3.819471358337288*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[150]:=",ExpressionUUID->"9f5771ec-7dfb-4cf6-83ac-0de93e7c8202"],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Plot Undulator\"\>",
  Appearance->Automatic,
  ButtonFunction:>Print[
    Show[
     Graphics3D[
      $CellContext`radObjDrw[$CellContext`undulator], PlotLabel -> 
      "Delta Undulator 52.5", BaseStyle -> {14, FontFamily -> "Times"}], 
     ImageMargins -> 5, ImageSize -> {600, 350}]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.819539544478593*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"a8752e2e-83f4-491b-9087-67997d3647a9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Undulator System Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "27.5808214`8.892152189497347", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Undulator System Solved! (elapsed time: ", 27.5808214`8.892152189497347, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.81953957204379*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"9f5ba20f-6938-47dd-8178-9757548e60c0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Fields Calc. Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "9.9531242`8.449504416940249", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Fields Calc. Solved! (elapsed time: ", 9.9531242`8.449504416940249, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.819539581996914*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"57faf456-995e-426e-9ae5-f52a409c69b1"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
CzOQj64FhF+fpsbRpejfDQSr/mk8sqWKWcDnI4FgiT1pUQpVqA9bgkWeHry1
JQ/5ECe4StHw3LZo5OOZD4/xPK6kP7EC+ThAMLvHzJ2pgnzEEbxnbKw2cBeT
8gEEf5qip+m9CfUhRnD4Xpf65o2oj6fzeQwLca/xzZXIx/75/Hh2YtfbEqYy
n49YggOtV8jyipAPG4Jhp/YX03DkYzLBnmd2HGRsRX974s1j7M7YtVe7ljOb
X2E9waGSzzKMklAfMQS7aJvKB6UiHyyC8/LFdt7NZcby+RAheL3A5x0tu5jh
/PqOefEYpZt69kVW4/vOXjy2e9kO+xm7mfzP7+32JP4uufqh8DbmMJ+vFIK/
lAV6Se5gpvP5kfTksWtWLzn1oB7j1ZF5ZHwS/HOiKphF/PF3JPiLZ8s91nqm
KH+AXnrwGNNErqbDFhzfJII192UF/diJfihBcNtrxXGh5cxa/vgddOex9x8+
rgq7cbzs3InfvnfW8K3H9dlzNx7j3KPPiWs3M/nNG4x34/HY3zMU9zYyG/n9
FyflRj5We+rKmXT+HXDlMZQClk2UjEM/BYI9ro4bGdjKBP78eurCYyjPOL1A
fCXzKn8+xRK80jKqXzoH589kgkf3iM/nxHL406Wj3pnMjxcOe3VsOAv5FTIJ
nqJkNWdRBfMJfz48duIxnMaGHz/KRT+OJjh6cMWO1ijOWz7fkwj+b6KdMLsW
+djjyGN7Cn6tul6PfFg5kvXkn17/Y1uQjwcOPIbXxl0BituRj3UOPPbT5xnn
TRqRjwkEtxR5t5odQj7q7HnsRSbpVXV1yIcFwf2tp9/Mrkc+7tnxQPzPDdH3
p5CPNXZk/Xe/dXbxCeRDkODNS2c+DN+CfOyw5bGvSiw0HtiHfJjZ8hjPvNvl
v+1FPu4AWT8bWPC06pCPcOCx7caNzSN+SvkQIPirpcVxh2PYXzMbHkPn7FXn
6/uxf+EsHnuD9NN5Q8eZbH4Dapg8xpUjbdmex7H9t6x5jIn19iYux7C9f614
7LahqPHvmphV/PYZWRF93whal9zIbOBXGGLJY795syF++Dh+f6sFiRdugfGr
jiP/7eakfY83vHt7ltnO53tkLo+9derngJKTzE4+v7pzeTzbMxfc9c8inyvM
eLzPUdpN8SeY3Xz+NpnyeNF3Pe6En2H28fm6MocHQcxvO/40IT+DJjzoH8s4
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
2MmyXwH9o5nw45D4yvqNFY1XopdIf1eLlOpJmKF/XMsFF3fGm2AzY/SPm7kA
FaPlpuba6B/3SP9CrjnN8pqB/vGEjJ/huMzI85PQP14RnKOXdnvnS3o+ubuX
vL+9rz+1VgT3c19IecLA84NqspSPjB+5wH55SujhtpnoH8NkPEomfzlaq4r+
8TcXonuDNMfea6J/COWB96P/Rl+L66J/iOYRPsSlzVYaon9I5oF5UsjIgx/G
6B/yefBEQi844Ygp+sdM8vyx0nbH+3PRP9TzoDzaq6L7JxP9QzcPkr9nTGuW
YaJ/GOeB8KCBYNc8FvqHRR40ywXMrfnGQv+wyYNoTSELoWEW+odTHrgUjwkc
2MZC//DII+uvqi4DaRb6h08eMPa1nvwcwaT6WL6ElOfoWpvuscb184o8+HDg
r8vhb1ZUH5YrSf2et/bmKFjhenptHmg1zo8MSbek+pCNy4Nh1opLP9Is8Hw4
JQ+qfq+aoRRkTvXRn5UH7T8duy+3mFF9BBXkQcPBy77zXEwpH3fK8qCx+2vz
CrKfo/6xOQ/qfqtcUZU3pHwcrs4DttXRze/9dSkf8nV50Pck/1LdIeSjcH8e
dE565mSlp0r5GDySB8o77+fPuz6d8hFykvSv9+203XNkcD97jmDFBpOwBnH0
D14egPET3yQXAfSPVjI+soapIS7v6Xm60i2C71z7Hf/iHf39a8l90p4JAlNs
xsZRfQw/Jbj2pfK8PnHMn3bnQfdf15f9z6SpPh68I3wfPeXdNmE6nld/Jc83
RlR87lKh+mjsJ9+/I54Zt00Nz69HSPv1E8XCzsyi+ihj5ENg+YuKh/c0MN86
IR94+0Zrh9pwvxkulg/Qfi9LM2w25l+nkfJt1bXOEbOpPhwVSHlfMtMhYTae
dysTPOOcVvTL2egfmgSLJZiem6uD/qGXD3V/tSxjRXTRP0xIuUjDKxkXPF9a
Y5kP3UVX+zjB+ugfkA+NsTHcmwqG6B/O+dBXUcfyFjBC/5iXD4zUUcXu/Ubo
HwvzQWLfhsjItcboH/6kfz0b8oQijNE/gki5Z9Q6rfVz0T9Wke+F19z5ZoXr
3a51pD311+7rbDJE/4gn7fX3sr7Qq4v+kZoP7BO26o1HtHH/kU3q90n/WPpH
HfcfhaS+eZ0m1SKzcP+xgYyXp6PQ1d9KuP+oJO/zfhkHbJPG/UcNwdv6z9do
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
XruFg16IY/6qguCLV1eau/7E8+Nqgs1n8kI+/qLn4Yd3EZywdaDGRRr9Yz+p
/1F3w7Ols9A/jhBsUt+rFaON/tFEsPnDqBcM3A+GnCPjsXy16LUC3A/evUTK
lw3bnfkP/RxaCf5Qz1IYPwfP1zqKgZd9fPplKWN6PqV0n3z/zMbWPiddPG97
SvCuId2hZYroH68IrvzU1KP6E/3jHcGLlKMFRvG85MEXUv/4FQyT5H/3AfsJ
rl3XczoRuPwJ2PirGLq9ooTUGf/udzBKgDd1tIY57IL+MaEEAsVa9kp8xfzu
iGgJdIufMVgt6In+Ma0ElD+M5FrZeOH+Q74EGGWmIornvOh5vaMyqc/85JPh
RV543q1RAmxrRstlF0/Kh4oeqe/B9lsuLv/8w6QE4EzvmhhnV/QPC/L93pgi
UU9H9A8g72evFSufB/S87KkTqf/oo8UlHmZ4Pj6PlH8TstNUnU3Pz04vIO3Z
E3n+kS3+fk/Vn5Q/Ke3ckT8bzz8Cyfd2NP28vs4Mzz9WkfqG1u67VMykfESu
I9/f/OvC2dm2eF4YR3BLdJwjz47y4ZZKcNuG1COb7fH8kE3ePzPTMa4B87sa
haQ85GxctQ7mEyvXk/42tZfPFrKj56MClSVQx3uv1acFeL+xhrRv2oxHYGBF
z0tf1hEcJSsWZDgH/eMAwVOf6Az24n2o80dJ/zzETYrjfuD+4xQpn/ktx35A
lfKx7TxpT8OEfPc+E8qH0GVS3rsh1cvLhvIR10baw7XyexmB91Vf3yJ8au21
/GzvQvnwekDqn+rtJ7bQHc8rn5H3m1qt3jfOo3zovCbtb5h1NM/TC88v35eA
4aGu1FdzvSkfE7+Rcnf3cOtCbzzPHCDfGxiaP6XSG/NXIyXQOfho08ogb8xf
jSuF7guLhNR4Xpi/mlgK7O5jM6Y8nofnneKlEHh1fnyknDs9L6yVKgVlRjvn
/hpnPP9UJO8PnxMet9gO/UOlFBgyVzJ1Qq3RPzRLASoN1OIYJugf+qT+S4pv
WXKqeD46hzwv97UiTm+A/j0uQyuCX77p+sWVxvsEtuT5/dKdZlsxXom6kPKJ
4yd//PTv/o0nKR+Idt3414j6+YeFpJxrFRO6fA7eN1hKyrcHat6db0bP668F
kfLi2gd9cuZ4/yCc4IeMlvwrFugfkeT5pULnAnOt0D8SCG5XqF+pjn+eKiON
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
jueHwUvikzpyXyw5fn2D9lLXj7DG8yO7idhro1quDcez74ijJNTsbfH8UG7D
9Sf09rAtx7cdxKsPP9S0xfPjZBfxc7MDd2zw/Cj5hPvHWtkFNnh+9PeiPT5F
lVnz+hHfic805jtZ4/nh0k/c8eimuDXuV2f/I1bbqXPRCv2jTiTiN1s/Wfe3
FcfHfxGva5osZoX+YSxOnHO/KI7HT72liJdXNKVYoH/kDCEWW2mvYc7x81Di
Ko12T1OMf41TINYPXbrfiMfzRhAX3S9WnQ8fYaOJfaapPObvBe4rEQs5T3/B
88F+jSNWbp5orIf+MVuVeMab6SJL0D9cJyPdPERgxt/XqBM7X5/+2Bb94/l0
YpkwB1FL9A/ZWcQCsbxnFugfJnOIwwKjCvn/ro8OysvX+s8M/SNPl7hBvvjq
UvSPzoXE3TISUjw/YKIB6hMlVKTP62sYI/8il3Id9I/Ipchf/WWKJvrHw+XI
79K7ZDL6h7A5fm/z0nBeH1DbCu3lPG/MaPQPd1u0T6V0qDz6x7k1OH5l687R
6B+v1iF9pKm8En8f5AAuiEpXRv8w3Qxer3JOBePDfluRP+bhGxU8P25sAz95
XMPz8bpdcXy57C4V3K8meSA96N9Kfp6v3wWOyIrg50f0XhzfNq9lDHyU7wc/
iI4bBR+i3jg+etSvETwf3wfcrqOgyPGHP/icuLYCxx9HwDv3Z8hz/HGMrw9n
WTmOP07g+jnRmyTL8UcYeHiOrgzHH5HIL/tBTRo+Ck4hf0NGpCSPh8YhPV4y
TRw+piQg/c7wo4N4fr8A6RJZ3wfCR2wK0qcvWzaAx0vPgaPnGYvCx18Z4HcD
7gjz/P9L4PSlNkLwsTsLrNtdxesbXbyG8uX61/dj/kTTdaTbu+/uw/1qxE3w
+TDX74WIPwpx/DuRwq9YDymoCOlz3r3sxX40t4rBMn6zv/D6QqVoj3sjaj5h
fyv1h8jvJW74Cesnba5Aup3F3m7M34uvQrq6yaAu/r6gGuVJC8Q6sV6CWC1Y
tetOB9YX1X+O41373NvxPe++V2CXbz2tvH5RAzjhybD3mM/07i04fHlFC/Y3
G/0e3DrRsRn791i1oz6S+hebeX7pR5xvf4VPI+af3enm+vZmNxYi/viM/vFq
ZUFDIeKPrzhexGpIA4//9qF8ky2HXmM8IuEn0qtuJLzE+h01QpGUfqR41wv4
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
K/w/Y4EHAg==
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{11.157914022589466`, 1.5000000000000568`}, {
       2.415763801534581, 15.500000000000028`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bx at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-1.0989857257266278`*^-6, 
       2.0954345844419187`*^-8}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {200, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwtnXlcTN8fxkdCGyqVIkwqktBeYsa0KS1K2ksmRPaQfRv7TvYQsmfPni+T
sWfLTvbs2bMlS3znPE/++P5e79e599xz73M+5zmfc870s+k1NCpNRyKRXKsj
kYj/5b/+Gu1/TFfOHqp+Os5sT9CrdC1Ll7R4ulp2+rtD8qLLgiWbcz/Ok23O
kBnc3Q9ue/xCD/WMd90Kmq4SrDlhMXm2rK/4NxnlORGblsuCRYVpYEv9N+Hq
VsmLTn0PFaxYeLz7Qm1lmzJkroJVTS+dWq1+r61uhiXq8xjSd7X6ymXtv7/9
cP/IPXLZniBthS8FK2taVKyTaWtzSL4ENrl7folsmKhxn+DSK7Znl6ujtNW9
WylYqt907EaZm/g3CfWNaBS5QWYmKuwD/qLclCar0L7uqRDUJ01SrZCJ5hm4
CFYcM+q+Vi2q69YQ1/e9daaPbPUq7b+qvoJ1s7eMUo8XFT4HK2WvR8jE6zpc
FKwZbvlhhVouXjhfsDRd8Xibupn4gCtwfcbIGnI15JgIthpjPoV69Bas+lZv
1gI19OiC8icNnMZQj3bggxX151EPC/AwzyVj1NDjT5rgOvuKctXQ45lg1cKA
+GwZ9ChCeXZ7/Tlq6LEXnBiXOEcGPZaDO48tzpBBj/HgTU37TVFDj16or014
xUzqESxYY3780FLq0RbX35uUmymDHmaCFY/Vx7Opx+8+4v5jCasXUo+ngiVZ
JoqRauhxHnxZ92mKGnrsAR+xW7eMeizD/c2T36xUQ49x4J03ymbJoIcS12uu
hGaqoUcQypsapcyUQY82ghV5kgNrqUcDXF8klQ2nHr96i+u/HtSoqEepYIlb
dL9ZavG6i86Bcw9LZGrosQtsd8NsDPVYivvzNxcsZnyMRfl784NzGR89wTUc
N65nfASCnYxq9GN8OIEVa0KmUA9T8H7LaaMZH5W90N9uVc1kfDwBS56OHqbO
Eg08C96+6PYq6rFTsKrZ2KQl1GOxYMWjQ5+3qqHHGFy/TBWUpoYeKeCCU297
MD4CwO9N769hfLQGH5xyciD1MAFbD22USj1+pArOHBo/hPHxCPwzak8u4+MM
+Nqpr32pxw7BqjUlsvUy6JGF8j3ea5bLoMdocFny7BzZM6FHD3Cp8ZkMxoc/
7g+8Pmcp9WgFrhgwf4MMehjj+iV7uq9ifFQoBW+4nDmf8fEQ/PLl3izqcQpc
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
ZeX54rAjccw/nor65CVT5vP3VZYvxftteptQpzPX88q0nHu20vBEJPSY+U7U
N8l9hLmU+0MfBSuGz/zdmvnHZy07H7G98D2N+cd38TzbehXh3aFHr0otly6o
ctckMP/4Lepvs2C0Uwzzj79azir5c8g4nefZdJZp2+fu9PRWDOJDXkvLit2m
rZ5EMP/QWyba41au7wQ9dhkKnrwneW0Lnnerp2WVRdAbF3fERyNTUV/tcnub
AOYf5qJcd36v3t7MPywFl4x/qOHfy9A01nLkoyuOSamIjx9NRbnJhnv/ejD/
aC44ra93IyeMV2n24vkx62fUdWL+4aDl8oVnPI8mMv9orWVp1qJd3zheGbTT
cmmztYZrBiA+fF3F/bm7G3RxZv7hIa7vZ9MhOhR67PUW7/+3wPJ7Cs9ndxDv
Y7+p/vkA6NGkk5aVh0riRyUw//AT/Pveb2+e/5gXKNp7sEvx8mCe3w4W7xdt
OHRrd+YfoaL+JkY5nWXMPyJEe+ZET7YcwPwjSpRb33+Q6sXfB8WI5+s/en3C
GXrcjhfXy+/f7WLD/CNZy0VX+yn2DYQe/j1Fe86rrCODuX/WS9T3/fDh0Zzv
7kvTsvH1GfmF3XieL13Ur7u+61EvxId0kJbj1683e5rG/GOoeF7Lz0fNOkKP
hcO1fC2p2Qd5GPOPkeL7J6bum5iM+PgzRnzPh+cPjA5g/jFBy3mLzNbGZDL/
mKxlbxtvt0NDmX9MFeXLLNpO53mhkhla3vzxrTynD/OPOVoes9Hid0oC/KPz
fC3n5vqWjef5zYmLxPsZ2j41Csd4dXCJeJ/lBRVf7Zh/LNdyVlPZzyHBzD9W
abnk0PL3Dj2Zf+SI91l4V/8Nx6us9eJ9l35qelKP+cdG0X88G0+QeDL/2CK+
n1X3xF1pzD+2i+u3jHe/aMb8Y5eWs52Sfp5M5v7fXi0nn6htVrcf84/94v33
PM29O4r7gYe1XLmkapENz/MFHxXfL1cabSdn/nFclB9e02FmH+YfJ8TzV1a2
9+3D/OOU+P5HP7acqkR82J8T7bX1XrHLh+ffL4j+UFOW152/X116WcvLDPzf
mQ1g/nFVy2HTmpQcTUJ81LipZWfNrkZvg5l/3BHf879r5x82Zv5xT7Rv7cGe
vo7MPx6K988/MfkS/57foyfieXMOVdyxZf7xXLTXcM8GXebnoa9E+yzO7Y5z
5u+x3oj6v62xN+nF/OO9lh8e2ptlFMf845OWM31qPlwSzfzjq5aL7994+Lc3
848K0X/e/HNuFon8fPlPLZe9MdfZ58/9yz9a1g0YbP+3D+KjpmS59nsN2xAx
rQP3M2tqufDVCK8DSugxrLaWsyJP983qzfMx+louiOw42qEz8w8jcX/z6+Yf
O3O/01jLkqrMhGgX5h8NtFxZ/8LMRb2Yf1hoWRW4UD6kPvc/rLQcPVJ22iSe
+Ye1qK/DuX77krn/IdVyiXNxE9dA7n/Yallh1XBxRSPuf7QQ10uGfjnG8wRX
W2lZc19RZ4UbxqvabbS87EPrvCj6ucxZy1Gdf42I6cX8w03L+9tGLv0Xx/1U
Ty3nqQNb/PRg/tFeyyfC3Hrm9GL+IRPPN9m6cYc19IhUCC72HBClw/zDX8vp
K3fF1Urk/kdnLb9I2f3Ysj/zjy5avp83ZdWLPtDDKVzLQ4OWhjv05v5HpJYf
pq04n6rg/kd3Lb8/6vWwX/X+R6y43i3jv969kQ/qJQp9BsYom0dyv7aHlovd
1f/16c78Q6nlDpM+vcrrzfyjt5ZP+57YdGko84++4n0dH/6xr84/Boj2/X0c
4dmf+cdgLTuv7PkhpT33PzLE943Zu12pz/xjhGif0byub1K4/zFKtKdtm9Ld
PP/UbpyWL8a3fBsby/xjopZ3tXQ62qUr8w+VlsdO+nHNrDf3P6aJ+ocajP8d
zv2PWVq2vNJk++kOzD/matn0VJKJJ/187AIt93TfVavmAO5/ZGn52tIrPguG
MP9YquWwThdmGYby93MrtSxt8jvmUwriI2a1lrMPt/is6srzrGu1rLx+YO5S
GfOPXC0PvmzRo3kv7n9s0vLxzcGNxnB912WblvXeVh35052/t9uhZattE/Xm
pjL/2C2+h1/6AkOel7mbL+KjeY2iwdwfrHdQxENEnZe/TZl/HNGy18SqAEUi
84//tByvjhuWFc78Q63l/stv5Jj05v6HRssV/j0dM4fw93pnhL4r5/afl8L8
4/xyheJiSF7OspHMPy6K7/drZkV6Gvc/rmh5oc24jY3DmX9cW65Q3ZI1sFzS
j/nHLW25fWKo/rphzD/uiu/Rs8g/oSfiY+N9LX/deyWhfDDzj0fLFRqbRWsN
B4xh/vFUW57/W7GnbRjzjxdaXlFsmzujK/OP11qOm/A3/kAS9z/eajnYfJ7+
Rf7/V7z/IMaPi19CJ0uZf3zW1l+z2ZiDxcOgR+I3bfkOZbv0Rvw91OIf2vb3
+XD+qAfXr4p+actH12/UXhEr/x+Kja5k
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{11.157914022589466`, 1.5000000000000568`}, {
       2.415763801534581, 15.500000000000028`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"By at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-9.582652754525078*^-6, 
       8.78025679518224*^-6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {600, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
5zQ=
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{11.157914022589466`, 1.5000000000000568`}, {
       2.415763801534581, 15.500000000000028`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bz at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-1.2543861535243344`, 
       1.254494383247939}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1000, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1000, 250},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.8195395825906534`*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"98c54680-513f-4fdf-92dd-f56397542cf0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nK parameter: \"\>", "\[InvisibleSpace]", 
   "6.0629389884672085`", "\[InvisibleSpace]", "\<\"\\nWavelenght: \"\>", 
   "\[InvisibleSpace]", "1.4758081443490215`*^-8", 
   "\[InvisibleSpace]", "\<\"[m]\"\>"}],
  SequenceForm[
  "\nK parameter: ", 6.0629389884672085`, "\nWavelenght: ", 
   1.4758081443490215`*^-8, "[m]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.819539582606282*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"02df5f94-0312-4264-818c-0b59a454f905"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(1) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "1.7020299776142114`"}],
  SequenceForm["(1) RMS Phase Error [deg]: ", 1.7020299776142114`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.8195396093418093`*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"31951b6e-b41e-4a43-9e18-d4692a113436"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n> Phase Error solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "26.7824066`8.879394592540162", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "\n> Phase Error solved! (elapsed time: ", 26.7824066`8.879394592540162, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.819539609388686*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"81a7cc84-e45a-4e69-bb75-9cc39535fa19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2-Fitting) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "0.4476174181351234`"}],
  SequenceForm["(2-Fitting) RMS Phase Error [deg]: ", 0.4476174181351234],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.8195396094355607`*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"b75d9ce4-baac-4870-b977-e8046527ba05"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
xQLFnl27XQmXpmK53tf+3ey8QkUqRO1Kj573o+dVp4J3aGCoXh/yh5pUVOst
nZg6i/Sqrvf9y+bfXVxG+tCQiu+aTxf6fyV9aEpFg36qzeNWWQluS0XXTP8p
Zj+lJfbpSIXye5cThqx+6Ox9/sXZFT/rSR+6UxHtkm6V84jtP6Th94z93hnl
pA9yabAUX7Grusr6gWmI/ez89FQfxn8aToXumf/TgvGfhgf/VMNlCwjrp8Gt
2Ms0qYF+b5SGlzFrt7qqkD+YpOFkwNXcHQGsfkjD7pH3gwM7KT9ZpOHaz7Hm
7gLqL9mmoTXql/To0VQ/OKfhkqk4X7WvigRz0vBjfLlldMotST7wTUNLkWPc
j6vDJPbhpmGlrHOM1kuqH2LSIJyytaxMk/pLvDQsiPQvsFSn/MxPg4Khqt7m
QPIHYRrE0rypAzuIv6I09H9ok54ZzuI/Dbu4v784SjH+0/B3rnrMe9Z/rEhD
msoMPwVVyifVabjYOEHJuZL1r9LwtHhI5pJEGr8uDSaZn7TzR5M+NKTh8FOr
k47j9SS4qReXFb7dUE/615aGF1k/wu8Vkj50pGHbVOmsN/qkD51pOD9XeZaq
ko4Ed6dh+5aj09LWsf2HdGT47+uzvI3ysVw6BO9R4OnD9gPSoW/x+1fYGMoH
auk45/bbvvY36w+ko+nEGuG7Zhb/6ai99LL0N+snGaVD/evOHXM3Mv7TsSTn
WJdFPKsf0rH9jm1xTCL5n0U6jKKfr310ivzTtne8c0/93A+Q/zqnI8hW/c7D
Z7T+4aRDN3PKrppcaQn2TYff1uIthVzWb05H9+G6otoJ1G+OSceDbrvoe2/Z
+isdNzalb0l3o/jjp0PzyLkn3XoUn8J0VGny9qkaMP7TsUO6po+zJeM/Ha93
Xf/YGMb4733fNSmmrkWEK9JxNv+H/IDT9PvqdCy0c6ie/5ztT6fDIDzctkub
/KEuHQm7OI0xhayeTUfo292rzM9S/mpKx2r/1wONl7H9tN7xLT0yt7tQ/utI
x+ZBz+ePMmqX5MfOdDT/kwuFFeXP7nT0bS+3v7KDnV/KQFvGgiqle5R/5TLQ
b1q9LCeS8rNiBs7NdTwue5viVS0DE3icr+tWMP4z8HnMwUFL3zD+M+DlbpYy
JZXVCxnQrVbMjGX9BJMMLNFKSL99gNUPGagMTrNXtiR/sMiAfMvOA7sHs3qy
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
RmNRy+k7VvS9bJsYPwd1aQzfK1Xz/wBDeOp2
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"[deg]\"", TraditionalForm], None}, {
        FormBox["\" \"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Linearized Phase\"", TraditionalForm], 
     PlotRange -> {{0., 1208.}, {-28.130096102430862`, 28.11377312906962}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEf7A/zVx7SOvLaHirgwGEgzvHt3VMon8OBYc6j
77/E3kL5Ag5TqoSkmHoeQ/kiDlGN/4vT58HUSziclzI325H6HMqXcZiTzW13
88ZDKF/B4WlEa13Co/tQvpLD3/vxoUb/YfpVHFr+Bnxtmn0TyldzKDcK7Djp
cRfK13D4rPU/MnP3AyhfyyFqX9mGpfevQvk6Djv3HFf2Y74E5es5JKl/KVfb
eA/KN3A4vbfdi63rOJRv6LC9Z5WToPx5KN/IQfI9Y2mm6BUo39ihuFjMvC/o
AJRv4pAi+nl66soNUL6pA9PMdWELiy9C+WYOkw6zT371dsF+CN/cwX2vcHLP
ozlQeQuHOs7oQv9Vu6B8Swehmrp+yaRtUPVWDpW3vGQdcldA+dYOXQ5Z2ev5
T0H5Ng635z8PvvTxPJRv68Ap1XGAlXU3lG/nMFvzcqyuzTUo395B+t4mXd/a
y1C+g8ODF/sY5jpfgPAbHBw4VQT/VGvdhso7OmTe7V21XfUuVN7RIbVY/45l
51WovJPD2ucpyprtD6DyTg5vD06/UP7nyX4Acn+sxA==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[5]], CompressedData["
1:eJxTTMoPSmVmYGBQBWJGIGZigIEP9of5Kw9pHXltDxVw4DAQ5/j27imUz+HA
MOfR919ib6F8AYcpVUJSTD2PoXwRh6jG/8Xp82DqJRzOS5mb7Uh9DuXLOMzJ
5ra7eeMhlK/g8DSitS7h0X0oX8nh7/34UKP/MP0qDi1/A742zb4J5as5lBsF
dpz0uAvlazh81vofmbn7AZSv5RC1r2zD0vtXoXwdh517jiv7MV+C8vUcktS/
lKttvAflGzic3tvuxdZ1HMo3dNjes8pJUP48lG/kIPmesTRT9AqUb+xQXCxm
3hd0AMo3cUgR/Tw9deUGKN/UgWnmurCFxRehfDOHSYfZJ796u2A/hG/u4L5X
OLnn0RyovIVDHWd0of+qXVC+pYNQTV2/ZNI2qHorh8pbXrIOuSugfGuHLoes
7PX8p6B8G4fb858HX/p4Hsq3deCU6jjAyrobyrdzmK15OVbX5hqUb+8gfW+T
rm/tZSjfweHBi30Mc50vQPgNDg6cKoJ/qrVuQ+UdHTLv9q7arnoXKu/okFqs
f8ey8ypU3slh7fMUZc32B1B5J4e3B6dfKP/zZD8Afnusxg==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 37.}, {-0.6558188509061985, 0.9090552178867028}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.8195326445340266`*^9, 3.8195343677580876`*^9, 
  3.819539609498035*^9},
 CellLabel->
  "During evaluation of \
In[150]:=",ExpressionUUID->"2568484d-43b9-4f2b-aa89-14743c786afc"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Fase \t\t[lambda/2] (Pol. Linear Vertical)", "Section",
 CellChangeTimes->{{3.8072738730146723`*^9, 3.8072739173378515`*^9}, {
  3.80729137749512*^9, 3.8072913780971837`*^9}, {3.807348337170573*^9, 
  3.807348338324235*^9}, {3.807369044757311*^9, 
  3.8073690511715927`*^9}},ExpressionUUID->"fe17b71d-2d94-4914-8c31-\
f279617a37f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"checkmode", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"draw", "[", 
     RowBox[{
     "mag", ",", "magn", ",", "ex", ",", "ey", ",", "checkgeo", ",", 
      "espessurab", ",", "periodL", ",", "dist", ",", "layers", ",", "gap", 
      ",", "2"}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"solve", "[", 
     RowBox[{"undulator", ",", "magn"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "1"}], "]"}], ",", 
      RowBox[{"field", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "2"}], "]"}], ",", 
      RowBox[{"bforces", "[", 
       RowBox[{"undulator", ",", "subdiv"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "3"}], "]"}], ",", 
      RowBox[{"cforces", "[", 
       RowBox[{
       "cass1", ",", "cass2", ",", "cass3", ",", "cass4", ",", "subdivcass"}],
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "4"}], "]"}], ",", 
      RowBox[{"interror2", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "5"}], "]"}], ",", 
      RowBox[{"phaseerror", "[", 
       RowBox[{"baxis", ",", "btotal", ",", "xo", ",", "xf", ",", "nx"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "6"}], "]"}], ",", 
      RowBox[{"mpError", "[", 
       RowBox[{"undulator", ",", "gap", ",", "yo", ",", "yf", ",", "ney"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"save", "[", 
     RowBox[{
     "isave", ",", "exportmatrix", ",", "expforces", ",", "exportfield", ",", 
      "baxis"}], "]"}], ";", 
    RowBox[{"isave", "=", 
     RowBox[{"isave", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.807273993112833*^9, 3.8072739937140694`*^9}, {
   3.8072740396293*^9, 3.807274040895486*^9}, {3.807275475495862*^9, 
   3.8072754771140223`*^9}, {3.807291380249175*^9, 3.8072913853337407`*^9}, {
   3.8073482655642138`*^9, 3.807348266593383*^9}, {3.8073694114024734`*^9, 
   3.80736942269484*^9}, 3.807369483731759*^9, {3.8073697371190896`*^9, 
   3.8073697528255157`*^9}, {3.807867912402261*^9, 3.8078679132735767`*^9}, {
   3.807867960554227*^9, 3.807867961525156*^9}, {3.8121057343000546`*^9, 
   3.8121057367843747`*^9}, 3.8134143720526733`*^9, {3.8160900215669484`*^9, 
   3.8160900288800545`*^9}, 3.816091002049123*^9, {3.8160914554001184`*^9, 
   3.816091459853606*^9}, {3.8188415115022364`*^9, 3.818841511892865*^9}, {
   3.819471234805634*^9, 3.8194713225535493`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[151]:=",ExpressionUUID->"a4b74bfd-8a39-4006-884f-bf851cd462e7"],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Plot Undulator\"\>",
  Appearance->Automatic,
  ButtonFunction:>Print[
    Show[
     Graphics3D[
      $CellContext`radObjDrw[$CellContext`undulator], PlotLabel -> 
      "Delta Undulator 52.5", BaseStyle -> {14, FontFamily -> "Times"}], 
     ImageMargins -> 5, ImageSize -> {600, 350}]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.819539609826185*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"88c230ff-1417-4d84-bcc2-9f79a9871df3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Undulator System Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "31.3218798`8.947392812088411", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Undulator System Solved! (elapsed time: ", 31.3218798`8.947392812088411, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396411480646`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"9092b6ed-2435-431e-8867-ad5830ab2c42"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Fields Calc. Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "9.937502`8.448822222565669", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Fields Calc. Solved! (elapsed time: ", 9.937502`8.448822222565669, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396510855665`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"0653da85-1dd1-4066-b9d6-3c8b47e8140b"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
BRM+4n6zsjh/P+JR+y/Oh5i89ODT/wOYvCvD
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.268918439716685`, 1.5000000000001137`}, {
       7.337907958407271, 21.227364358013773`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bx at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-1.9178983941402318`*^-8, 
       2.193571755487972*^-6}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {200, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJw0nHc81f8XxyXF1ygkpVRSSSXRVOEeEiKF7CR7Z++95zUqlZakSJG0pXQ/
URKy997jXpUUmvrd+zl+/ulxH/EZ7+f7dd7ndd7nfddbuurasLOxsdVxsrGx
/sUfByKzZ5u3xspqxf4AoQK1EXuiCyaXuNdUK5ZNS5qmVNsTbTZqIXfiPyre
dlPgbn1kT6xMfO8lqlGjGM3QKVp72Z6Q/CNd8HVpraIt6yfUnngVKM9n1Vmr
qM66oI09cY0++VfFoE5xi2lK6bSmPbF3N69FzZs6Re7WW24KO+0JCQnFTmuZ
esUJ5uWiV9oTLqlpApuy6hU/VjN/5uyIlpFT3zauaFAsUGNecNiOSHVj5IWm
NCgyryZpWmVHBKhsX3yCp1HRnfl4tx7aEdU3uMqfJzQq6jIvx7hkR0R8aB2r
4mtS3MX6CbEjxKeuOT9Ma1IUYl3Q2o54rVL3PXpds+IM83VLNewIFwXze84F
zYqsx+OWtSMKDAdEI5VaFFmX01lhRwime4x/bmtRvHKZ+fPXlnDeKWXc7NWq
GMi64KAtYX51SZLJ8jZF1utKVtoSP2YGd90rblMkX7jQlpDUHn80bN2uuI41
gBdtiT/LLLQOCXUokjiCbYn0+uYvPRUdyMPKllA/9uLRTEQn8jhiSxy111qZ
p9yFPHbYEqCf4LWPqxt5CNsSaXWFox8au5HHHxsi6LKw6aXsHuQxYEOM5fEd
bQvuRR4VNoTexlE5S+k+5PHAhjCrkFp19GYf8rhgQwjnjaeXr+hHHoE2RENF
cNy3s/3Iw9KG2LvwcvP3pQPIQ92GkOdv1mGcHUAe0jaErvjiN79WDCIPIRvi
8+Dr/9SyBpHHb2tiaGhP+i+ZIeTRb008ij/+bP/bIeTx3pp4lS4ctcN0GHkU
WBOq+/3yFv8cRh5p1kTua/vGT1dGkEeANWFeKMspoDyKPMytCY8dm+5nfx5F
HmrWBK/k0az2zDHksd2auOL5XmXYaBx5LLMmPm/05/4nTEcev6wIiVBDMbNO
OvLosyJeLbqfq5jDUGS9bkq5FRHWX+fX4zuBPPKtCK6jxPkw7U/I47wVMSQl
6G4r8xl5+FsRGzNye5tWfEEep60I9W+WDxMXTiKPw1aE5LWGVQqhk8hDyoow
NbqpvvHfJPIQtCKWrFG+7Rz5FXn8sCTsF3HpAe8U8ui1JMZqbt2pvjylmMp6
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
Hs9/CvxVtye4b75n8T+2fU2Z
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.268918439716685`, 1.5000000000001137`}, {
       7.337907958407271, 21.227364358013773`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"By at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.8865037215267217, 
       0.883458549811813}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {600, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.268918439716685`, 1.5000000000001137`}, {
       7.337907958407271, 21.227364358013773`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bz at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.9033517688685415, 
       0.9030321177913269}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1000, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1000, 250},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396516480618`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"303dbdff-6949-47fc-a4bb-c19b54ebf96a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nK parameter: \"\>", "\[InvisibleSpace]", 
   "4.333732652620661`", "\[InvisibleSpace]", "\<\"\\nWavelenght: \"\>", 
   "\[InvisibleSpace]", "7.917626884882352`*^-9", 
   "\[InvisibleSpace]", "\<\"[m]\"\>"}],
  SequenceForm[
  "\nK parameter: ", 4.333732652620661, "\nWavelenght: ", 
   7.917626884882352*^-9, "[m]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396516636877`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"0305e6e2-55df-4468-a763-291917824e97"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(1) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "11.965802171925098`"}],
  SequenceForm["(1) RMS Phase Error [deg]: ", 11.965802171925098`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396789148064`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"a3a2510a-a977-4ba3-844b-c3229b8ef99e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n> Phase Error solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "27.3292424`8.888172586181684", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "\n> Phase Error solved! (elapsed time: ", 27.3292424`8.888172586181684, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.819539678977304*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"d0541060-9e0e-4441-b3c9-b82f35e3e701"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2-Fitting) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "0.680702632423046`"}],
  SequenceForm["(2-Fitting) RMS Phase Error [deg]: ", 0.680702632423046],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396790398045`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"7b3444de-bcfe-4bb3-9fed-9dc4ce39a42c"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
A5kHRvwqSa7fQPFBgwcurkzRX+ZB8ZYCF78XlvZR5dN+K3NRE7q+z6UT7H1w
cUvrQcnFnxX/sDYXtz9lCf+rP07z42Jjea/kSY+K/tmHORcDNZPiVi+7T/bC
RaCNUGxqW/MPc7lwqFtceu01yye52Ba0WvblJ9mviAtjG1GBjR7pQSYXSxuV
3ZSLyN4LuDiAohftu4n/Mi6G2CSuvdCX+F7FxbiC/X8EhoQbuGgMuxd8mk+4
Xb6eWevObvjD8mlP9DW+v3LKXeKXsidepJaaZnSRPqh7oiFQf9FoPvlnbU90
HGxOc11JegBPSCNCh07rRvw190TnFJ0WqyssXvBE19yw+6Z6xH+uJ0K37Pq+
2IbFD574bjaYn9OdsMgTiz/d6qOmS+MzPaESNSr05w/SgwJPOJ9fHxl4g+Yn
80R4bHuxrD/tR5UnPmh97fW4H4u3PGF5x3zH9EGUf7V74uwUw8e3eJSvKXhB
s33R91176H0pe0Gcu3TL6U0UH6h7oSHodNqg0gu0fi9sfvUk7Loz6QG8wPns
ph9kHPPPHsy94Nxj4grhOLIPjhd+jYjJst1EesD1wrPk+UdEY1l+4AVX7iTB
4s93/mGRF/LbeBon/R+SPXthqm5WiNkv8lcFXlgcZuLRP5vsV+aFMnHa4reB
ZP9VXnidNfVlyHLiV4MXBtz79cqsmPjY7gX1kPhzAYdJDxS84TXtwMB6B+K3
sjdWHh8kNexO9S11b0yYsP+snxZhbW+4TvD0MKhj+uCNqGeHf29dQNjcG18P
pnhaZ7F4wRsuD0Mc1XaTHnG9sWKEx8tAMcULPG/cL931q/sNmq/IG9Gn2nIv
2VC8kOmNO4kXDP8zIX0o8MaUlow63gGWT3jjUlGUbOhEwlXe+NKxx709j/aj
wRszs00tv3Uj3O6NU61nvO+/Iz1Q8MFBmVQ6fx7pq7IPeg29ciFf+ILW74Pz
cc8P/p1A9RhtH5iWzFByyqV6DXzw7lVe+UXZRVq/DxJe8xxaAnPJ/n2gkv8+
1l2H6kFcH0TsC4x3Sid/xPPB0/B7KaGJlM+KfPC47rPslxLzZz7ogeOf78ZT
vlAgH791y07f5aQHMh9krfzwkWPG7N8Hzm6T1bvXEm7wQdqIBovL6oz/PnL9
1xAWr2f898WNQYo/j58nrOwLDj+/qX4b6YG6LwymvYwaxSW+afuiKNrmvLSW
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
5gLGfyEixt21zfclXCWEhV2vFa/OE64RQl13cPJBbXa+L8TgpOsuY3uRHjQL
0fb30pGX+qQH7ULMsjgQPPUW8bFTiBvZFTk9o9n3B/FQc64qNZvH8v94GIie
fFy0j/itHI+UUxd0nBcy/sdjfItT7WxD1q8Yj6Jqz409ZPR7rXioLHx5T7c3
3U87Hm4f1WMVPEiPdOOh/26Dd//x7PwkHoctXxqutib9NIrHvAd2vTLXUD3B
PB77XreNdE8mPbaNR9aTcJXVg6new4mHX0RqkPon6ldyjseA5CsHXd5RPsiN
R9uM+V/HBVJ9MUA+n0sBGp99cuj9y+c7wC55shPZgyAetXrTFw13oXhSFI9j
L45e3a1D/iQ9HlM03kw4Zkv2lBmPfrUJ/7nrUv0qNx4XF+TNvVhD8WpBPGbz
Lc9d8qd4tigeA3/YLutyZv158egxduGpvQbEjwr5/mbw4lv/kv+tikdlvebu
IEfy1zXy9Ro6zF+yl+X/8TB99+Bgyz7m/+PhXLDV+70W4388JE9+m7QvJtwZ
j6TuCZk+jez7vQRMHTt/doYOYcUE9Ilqapu2nPVDJeChh8kvvi89XzUBObFd
j3U9KV5QT4D/t5Pj6/NovloJ4A/3ck5i5yfaCSjp7DnXxIj0QTcBr/p9drU+
yL6XSICVieazkxqEjRLk9lc2wzSX9MA8AVcyy5Zf+kh6YJuAlmlXL2y4yvqh
E5Cqnvfj6DfKH5zl99f/Uc/dRfrLTUDWIk7LNl3S54AEqGxpDjNazOo/CVhe
e72y1I/iQUECvHKnrk546k38T4CdyI9nmEn9sekJ8HBfs8viHOt3ToDPk7Ob
BodTfpsrn1/Jt/eqbqxfIQHLOF8zlasoXihKwI5yjTnt7mTvsgRoBqsEPXMk
PahIwLEnopUT37J+hgQ8UBOJFCcx/ifgcbyPJHQL629IgIa9+7Rn5YSbE/BC
Kdt4cRDrd0jAywXmu3kpxLfOBKiKZ5w82Y/1Pyfi4s15fZ6UED8VE6Hl1yOv
Noj8uXIiYgw0XN93Y/F/Ijqej+29WpHxPxGvPsYnL5lPWCsRl+qqZGda6ffa
ifAc2H1ydjjpgW4ijo3r/27tDNIfJGL4qkHWe4eRXhklomH6wNcFLrR+80S8
icsZNNGD9NU2EYbPKwfU36T95sjHL7kav2Io5XPOiei376RjzHrqT+AmQtJr
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
t/4w+B8YJYuN
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"[deg]\"", TraditionalForm], None}, {
        FormBox["\" \"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Linearized Phase\"", TraditionalForm], 
     PlotRange -> {{0., 1272.}, {-1.3264867397890467`, 2.187596777678063}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw10w0slHEcB/BjrSmFwoizCnMnvZ2ThOu+pM7LHfci6UVrWUpZjYpqyq1u
ubJeRudIM8P0IgxdU9SdrVWmmtLLVqM7L0mrU4k2KdX8f8/27NnveX6ffX/7
/5//4p0HlLtsORxO/L/7/3P6+ireM/ApMXJen5G9QOlUfNLmg8Pi6dIOfKvA
MOr9kH13wuT4zMe/t/Wz2gWeaS3OAU59rN8dOy401FWP9bOaC5fk8D5RO/Uv
gmuWk2t7nIXV3tgyJglc4/+B9ftCn1qekOtI3g9zLAWnyy8Osn4+djX/9EjJ
JL8Ekup29xn+Q6x/KUb2GwauL6R5loNn4l7Ofkp+JeryX6hy7ptZLcAvr94L
fW3kAyE+cVObnkteiEbnCrNI+IH1B2F9R5T8SRf5VUiZaLLdyyMfDFGNNlZe
Y2H1agy9yUsRhw+x/hDwCjVtaddo/jU4ZtN8ycmNfCj85YmB/Pnkw1DhvuKG
9Avlh6NJeV0mWEpeBIuDWfswmfxaVNa6lEr15MXgVZ16ncqlfEDZNLF9VMW8
GqjuPtT7o5TWPwJDnTactS3m6VodgWJr1sik50fmI6F7ZnHdHcT+F3Uk9rXX
mzxyya9DxhUf7Xl/8utQ1ipqaH1A+VFI02+6bd9G+VGYJbSLzDOQXw/tKbuN
vGby/+okm8EgK/kNeH33TIVsmPwG3LIbHeFwyEuwnFslsA6+Z16CdM+rc1It
NH80Ts80hOa8oPmj8WqJouBo7yDzMXg0+bgt7Fkv8zFIeJVv9sonH4uy0Od1
Z7eTj4Vjj+s7N2fKj0P0y66U1O+UH4c8nUXHv0FeirKnmXej9eSlcFjQPO6X
TPkyeMy1SS8ponwZyrb6hhmKh5mPx7njtg2z9ew8qeNhDPbuilhGPgErCgRW
jbGH+QR01ne7+QSQl6OkPMn9zybmIUfr15bg2hjm1XLoVvUnmkrY/CY55Dur
Dov45BUwnl+9/55wgHkFjvh8PjYSN8C8AhljjZ53JGz/TAoUzugpyrpNXgnj
t0yNTMP2E0osqxnXdRSy865WguuQkecQwuYxKdHtJT351o/WT4Vka6X9BO87
8yrIwrNDXISUr4Jp7KR9jWZK/BemIIRw
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[1, 60]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[5]], CompressedData["
1:eJw1031MzHEcB/C7NIuSqFbqGsq6i8J1Sarr3iWuh7u6hyQPmWkiGivPLbpx
09E8LM6VrDW1PKYpZ1HctRlaWORhY+WuOsm4kLIl0tb389u+f3x+v89r78++
3993/pbdqq1TOBxOysTiTiwHDj3fJdv7vqTFzeoxsRcoH09JX7dnQDJZOkFg
FxqH/B+z724YG5n69O/GXlZ7wDe7yX2RWw/r98bmM/V1NcO9rObBIyO6R9xK
/fPgme/m2ZpsZbU/1g9LQ1cEfWL9C2DIqkwtnEk+EC7WkuOVZ22sX4Ctjb99
MvPIL4S0ptXbMaif9QdjcJex79pcmmcx+Gbexf3PyS9FXfEr9YGHFlYL8cev
+0xPC/lQSI7c1OUUkhfhtnuVRSz6xPrDsKotXvGsg/wyZI42OOzgkw+HuFaX
pKi1sno5+t8VZUqi+1l/BPil2pbsqzT/ChRwG8+7eZGPRJAiLVQwm3wUqryX
XJd9o/xoNKiuyYXB5MWwulp0jzPIx+DyDY9ymYG8BPzqY2+zeJQPqBpGNw2p
mdcANZ17u3+V0/7Hor+dy4lpskzWmlhcsOcPjvl+Zj4O+hdWz21h7H/RxGFn
6y2zTyH5lci9FKA7HUR+JSqaxfXNjyg/HtmGtXedWyg/HtNETnFFRvKroDvm
tIbfSH6iTufawuzkV+Pt/RNV8gHyq3HHaWiQwyEvxWJetdBu+8i8FDm+V1yy
rDR/Ao5PNUYeeEXzJ+DNQmXJoW4b84l4Mva0JepFN/OJSH1TbPErJp+EisiX
dSc3kU/CzC7PD17ulJ+MhNcdmVk/KT8ZRXqrXnCdvAwVz/PuJxjIy+A6p3Ek
MIPy5fCZwc0pO0f5clRsWBBlvDDAfApOHXaon25g90mTAlO4f0dsCPlULCkR
2rWmLuZT0X6r0ytgEXkFyirTvf+tZR4KNH9vCr+RyLxGAf2y3jRzGZvfrIBi
S/U+sYC8EqbTy3c9EPUxr8TBgK8Fg8l9zCuRO3zb956UnZ9ZiVLHrnP5d8mr
YPqRp5Vr2XlChZDaEX1bKbvvGhV4rrlFrhFsHrMKnX6yo+8Daf/UyLBfdh7l
/2ReDXn0/ggPEeWrYR4+6lyrHZf8B7fghHI=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 78.}, {-1.1347599463032534`, 1.969884915320435}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.8195327147859063`*^9, 3.8195396790866795`*^9},
 CellLabel->
  "During evaluation of \
In[151]:=",ExpressionUUID->"9a338551-16a8-4ba3-8fec-3b24e1df314a"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Contra-Fase \t[lambda/4] (Pol. Linear com Rot. 0-90\.ba)", "Section",
 CellChangeTimes->{{3.8072738730146723`*^9, 3.8072739173378515`*^9}, {
   3.80729137749512*^9, 3.8072913780971837`*^9}, {3.80734829061942*^9, 
   3.8073482945599165`*^9}, {3.8073483271401873`*^9, 3.807348368120531*^9}, 
   3.807369047705803*^9},ExpressionUUID->"ac564794-99d1-4c52-89ca-\
5a773696ea90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"checkmode", ",", "3"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"draw", "[", 
     RowBox[{
     "mag", ",", "magn", ",", "ex", ",", "ey", ",", "checkgeo", ",", 
      "espessurab", ",", "periodL", ",", "dist", ",", "layers", ",", "gap", 
      ",", "3"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"solve", "[", 
     RowBox[{"undulator", ",", "magn"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "1"}], "]"}], ",", 
      RowBox[{"field", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "2"}], "]"}], ",", 
      RowBox[{"bforces", "[", 
       RowBox[{"undulator", ",", "subdiv"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "3"}], "]"}], ",", 
      RowBox[{"cforces", "[", 
       RowBox[{
       "cass1", ",", "cass2", ",", "cass3", ",", "cass4", ",", "subdivcass"}],
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "4"}], "]"}], ",", 
      RowBox[{"interror2", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "5"}], "]"}], ",", 
      RowBox[{"phaseerror", "[", 
       RowBox[{"baxis", ",", "btotal", ",", "xo", ",", "xf", ",", "nx"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "6"}], "]"}], ",", 
      RowBox[{"mpError", "[", 
       RowBox[{"undulator", ",", "gap", ",", "yo", ",", "yf", ",", "ney"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"save", "[", 
     RowBox[{
     "isave", ",", "exportmatrix", ",", "expforces", ",", "exportfield", ",", 
      "baxis"}], "]"}], ";", 
    RowBox[{"isave", "=", 
     RowBox[{"isave", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8073483754364543`*^9, 3.807348392267894*^9}, {
   3.8073694681182785`*^9, 3.807369489502741*^9}, {3.8073697678787622`*^9, 
   3.8073697697516336`*^9}, {3.8078679306086826`*^9, 
   3.8078679338371906`*^9}, {3.8078679723805227`*^9, 3.807867973251773*^9}, {
   3.812105804170223*^9, 3.8121058049515295`*^9}, {3.816090034336069*^9, 
   3.816090041680442*^9}, 3.8160910057994328`*^9, {3.8160914675709324`*^9, 
   3.8160914795762157`*^9}, {3.818841525687722*^9, 3.8188415259689713`*^9}, {
   3.819471390622184*^9, 3.8194714095357327`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[152]:=",ExpressionUUID->"c5dc65be-2ad8-40fa-acf7-833eab9da9f9"],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Plot Undulator\"\>",
  Appearance->Automatic,
  ButtonFunction:>Print[
    Show[
     Graphics3D[
      $CellContext`radObjDrw[$CellContext`undulator], PlotLabel -> 
      "Delta Undulator 52.5", BaseStyle -> {14, FontFamily -> "Times"}], 
     ImageMargins -> 5, ImageSize -> {600, 350}]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.819539679399204*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"aadcdaba-1c8d-4ebc-8be9-befc59f7e998"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Undulator System Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "35.715806`9.004405448807791", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Undulator System Solved! (elapsed time: ", 35.715806`9.004405448807791, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.81953971511501*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"1ca20195-6be6-444d-aa41-d9c2f0bf3d95"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Fields Calc. Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "9.9397082`8.44891862849792", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Fields Calc. Solved! (elapsed time: ", 9.9397082`8.44891862849792, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.819539725054718*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"c4d0b166-3c89-48ef-88c8-b4d9ab9a86cb"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwsnXk8VU0Yx2+rFol2UaRNu3bJ1QlF2lREkmyVSiF7qS4hhZCdcO2Sfa9c
rn3NlrUotGl5S6Gk0vvMPPXP+/l+5pw5c+Z3nvnNMzPXu8jQ7PCpsSwWq0GA
xSL/xX9n+az9W5alC/jwei7PSlF5a8JnnVOIWxZzg10yJK3rVQvMepE9/aQp
O8acPaUtA1jQPtS73p7n8vFQ3sJg4KOrjp2T8OadJv+uA38qabo5lstWJRWe
MuFzpuvJRGzl8lboehUP7YVyNYUzdl6+vClt0ebsDcAPfF4YPLnL/gTVucwD
ljacF1N1mvekFv6NnuGzmG8OBb4O7BQVqPAN5ZeaSzzZUJu0bg1wUP3HwCdO
PAtoXnQ6sLrkYteJR3iHobqPgcDDSR7P7K3YG8m/a8AKqfvXiN9izyIVGgNb
TdmhNezB/g6vW6wGfFXcT8PRm0eaN2U9cMyYKZrj3dikukNzgS/tKew8dpcd
Egz//pyG9mpK/8q+zL5CKnwFHLC3Wdf6Dpu8rnQ1sJEyZ4NAGE+BvHAaMPd1
X7+oHk+CdGAA8HHZxuiQIB6V4ypwkmVp3yR3NtXDCHi6aPP9uT6oxx5y/50H
fTsdUI91wA0SlkY/glGPOcC6q54FNFxiUz1+n+KznHcfc/zjyqN69AKfTu+Z
qxSIelQCD28ZulPqjHqkApfYzBneFMqjevgDhwvNzFgQgnpcATa4GzdWKBz1
MAT2XPhWpyyUR/VQBea7W18ODGBTPdYCf0r5bjDqgHrMAq4bXX9zjQvq8cuY
z4p6sHD6mwDUowdYrnu+4H4XHtWjAphr/aNipSvqkQIsPKdozcvbPKqHH7B5
md50vguP6nGZXF8u6LnaFPXQB2ZVOBQI3OBRPVSAbS2EFbYFs6kea4BTVi1U
9fNkUz1mAtuNlAleNkc9Roz4rEeu5xtsEjE+uoH75bLLnx7hkdf1KgeuW9Gr
mR7Mo3okEQ5yFDl2h0318AWWMVS1emmB8WEPHMIJGFtzG+PjJPD4NItmi6ts
qscucv/r5KAkDpvqsRp41ts/7y0cMD5mAEu+Dy/UMmNTPYYN+SwV7xU/IwJ4
VI+XwIdnlZ4/cJPtTRpYBlwsc2Bq6w2MjwfAJqmts5ptUA8f4IbNv7yMzvKo
HnbAyukZQhnmPKqHHrCq2HD5DhOMD2Vg4+CmgwnhqMcq4NwnuRKSvqiHCPCM
8T/sf8WjHj8M4HlHH2UFWPGoHl3AHTauB/r9MD5KgY/INrwsC8T4SATO6Xk8
91Io6uENPLpr72tPP9TDFthD9NfXF87sXqLHCWDttSProw0xPpSApa3szGMd
UI8VwKwBwXfNDhgfwsAiLAWz5nuox3d90Ic37nOGBcZHJ7DkyVe5UpdRj2Jg
ltum8B4DjI/7wIKZNyY5X0c9vICrxaaV3nHC+LAG7r5wJlrJAfXQBb78/pvv
xtuoh6I+n1M6e/WujZEYH9JQ7mas8mPqGTbVQwhYRfzjlTJ/9hnSvg8n+SyJ
fQOF+7wxXnOAhTJ8kutdMT5vAMvNdWzu5eDz1IFVde6/e2iOeosDc9nHhxLN
MN7e68H3wH1nv/IW6pkNfF5Br3WqP/sh0c8JWDj11PjBE6jXAWCW2BGvEgmM
FzHgdLaEV0k4m+rRd4LPmiSlNuwQwKP9nwX8wdD1VZQn9rcjcIi2YuD3u/i9
7weeElBSoRWO3/f8E3xOwDqfIgsufs9vdfksw7jF7rNv8Gh/ZQKz1h34a70X
++c6MNNiJu17mTebvPA+YJf3h4eMw/B7FAW+91fIV90Cv783x/msrpq3BlvC
8XvLAP6kkui62gW/r2vA+SpVtSJWPPo97QUWWhUTb+uP4+tc4DvHlkqlP+BR
PV7rQP+cei63wQe/jzTgwQsbxzldxe/hKrBH5HBgujfqoUaul78gfFAd9Z4D
vJtd423lwd5E9Hh1DL6/fOmVUsdxvEsFfh1yK+6oBY/q4QCsX21/erYujmeq
wDH1XRuErFCP2cCrc9aqGLljfPRqgx/qHvq5Vx/jIQVY5Run8mwgjkdXgIcV
xzpKXcXvXQVY8Eg+d+4t3lTSgbOA552M3xcZgXp0a/FZqcXXPXMSUI9k4KuH
cn8d5eL4YQ/8eOrSPZujUY/dwMNKMup9nmyqx0zgfLvSvwm2qMfLo3yWg1Pa
D00PHI+TgLX9C6I0TdAP7YBXzrusfi8C9dhFrr+yfEKZH8azCPC3CMUSdiTq
8UITxn+baePOX0c9EoF/f3P/XX4D9bAF/qY8TcbyX3woa8J85PjIhpZ/8ScM
5fortkmKWvOoHl0aMH84cfjc5X/xcR84o+CF69FbGB82wO8Mv7o9u4d6KALr
Dsozk11Qj+nAA7EbF/7wxvjoPAJ+qbrtzeZA1CMB2KR5WUWtJduV6GENzL2s
HN6ohPGxEzht/M75AVZsqocQsFvv7Y/O51GPZ4f5LL2h/2Z/CMHxJB44yM9q
UC8A48MS2HyVQ9sZAzbVgwFW9Z0tsM4K42MasGvEmKZ9PqhHxyFoz6e+4i9B
GB9xwL0OvhopHmxJosclUr5KY8U6DxxvdwCPeWZWMTkY42MqMOvG0RXymjjf
aFeH8S8w2nTLbd5KUmEMsLFLjLHRVRyvLIAtTpftF4/G+YMCcKnYxR0ul9iX
iB5TgJN8Y8YkWfNMSH0pB8GPju7b1O6F96sAW+1tHzltziOPj+4+wGfJP5bL
++HBHiZ62QPnvQ3OCHRmOxB9ZgC/k18U4BSAeiTth+uHAtdZXuG5kf7fBey6
VfTCdleeIOmgF/ug/3R6BdYb4/duC3zNeJdWuRv6oTBwjMCBZ4Mc3j3Sf/f3
QryY7j/Wf41H+0sReI5a3+TFofi9PleD9jQ1LeyyZpPmDVkBd8fVfVl0lpdG
3l8I+Hbv6Va+N35/8Xtg/Ou+0xzrhfNNBjihR1qMieAx5PvqUOWzWg4adQoH
8ErJ93QJ2G6qRIrdXYznqcBMWaC3jD2PfC61MSowHhXXO56w4WmQCtnA+gMS
Ug7G7HbyPbTt5rOyBkRjgm1Qf3Pg7n3Hx6xU570mek8GVh+n4uxqjnpE7eKz
Xii3rFV0Rj22A7/p3emr4496NCuDvnydBPMAHtXjAnDDYdUIvxuox0RgdqGT
9M9g1IOrxGdVnrUYf+Q06rFNic95ZGR/UyyZTfVoUoT55PRjS9dfx+/9PLC2
cL7iS2OcL44HrhbRqOK4oB5hO0Ffibm7um6gHlt28jkzg5e8/Hwf9ahn4Hue
dOaYhDfqYQK8ydzzwWdv1GMscG+W6IoId3zfLTsgvpICKxP02fT9TBT4/MY6
plLpIY9DGhDChv4dz4mD8Zy2/4k8n+/79Wd1UDe29+92/vA5n+XNG3p4QaR9
67fzu/e0HTW5XsxLIBUayfHVV8fcmKnbxKbPD9jG7+4MuL5maxPqXynLL51R
q92y8je7kug9spXvZj+7qej7O3YD0Xf1Vj63pUGoMqgR9Ty5BeZTKg1VYg/Y
3UQ/n8181hbHlGSnCF4/0atkE5+jrSix4FAi6jO0kc+xC12p8oqL/iG9kc/i
WE47+EmOLUz6X2cDn7Xk5tnejiu8eaS/PdbDePVWy8vBCvu3QAa+t9TLz8Kc
2eqkwT3r+Kzac0pPftuyzUn/7V7LZ4lbZ23+7yab9lfiatBzvcutx9EYX9NX
8VmRBauC82PZaaQ/LFfAeMEa/E/Ej80n79++nM9arMSdCu9D31d+GZ+jdNz1
Y2sOvl/kEvBzyaqwLU48FjGACYvheRLZc6sreLT95xbxzV2W8vwEe9g0fsIk
+Eyh1e7w0AkKHDpgifOZ344uZ/6r4XFJe9aJwv2ik89pOuLzh2eDP7sGhVZk
8+jzimbAeHHM7KtnDI+hA9h0GP8kZvJn2PBofXGT+Jzl/Ynf83LwftmxfO2k
FLO8rV/ZLHK9349Clvrtsd2jqTwWNYw3hdzTNt2jcs08ljP5gIp2MKu7XWKD
SlAP1ucdLPGjEy+xI3gsEp+dv3b4XchrVpo2UYGhCdd4hiW0palN7DOPRd63
egrD2nPg7JfTqWx9Un5PGMqVBYvfxPAkyfjydCbD2hpbsZL/CK+fMpdhvV7T
ZPqQg/25cz7DYv3YneETwuOS9tstYFjjxY1ztgbzGDK+aEkynEkN3x+p1rFl
SH0DixiWmXXr0LZY/B7uLGZYG6a4BvjFsWn9K5cyrALp8hvikex+8r2VLWNY
fp3+5nfCsT8NpBlWjCDnlCKHxyf6/l7BsESPaYtvS2WnkecHrWI4vw/45wX2
srnk+9i4BuoX7qssrcbvp34tY+5SvXN9VC9PlnTnZhmGZf/zurRSFbZv3HrG
+6/C93PN3Tz6uTesZ2Tkp34Z0/MV2xu+geHo1P667dvKFib6mG5k+OF2WYef
N7MnkfbLbWI4du5ijyFeqRyTNjOM2q+qp70V+D4tmxnWnRlhVe+DeH0kvqK3
MCzZi2Vvp7ji+1lsZVi/Df04z0IwPnfIMpw3qzedjcxmV5L3FdzGsNa9M5jk
Xczmk/h+to3hZN4TshMrwvhPkGNY2oOyTjsdeAnkc7PZzpin3YsQnC6gQPtD
SZ5hZKYX2ng3sen4IsJm9D1ypyyb0Y7985LNsPptz6R5mPA45PNKVmBYTGej
kUUGz44OoDsY1uD3Wc1nk/F5SxiG9em+2qenAdh/7gzD8Vwod5nJ4CWR53+D
8oTNPwc+RuH4qb2TYZXsb/67lIvzgUJgoaecQ5L+PHHSv8sUGZZTFCPeFYLj
nyewsuq2i8mBOH4PKjKcDUeSnpgW8jxIe48rwfem0qEjGMmj/V8MvDv2eLVL
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
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.315130742092038`, 1.5}, {7.5426448708857095`, 
       15.500000000000014`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bx at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-6.6702473660483065`*^-6, 
       3.418131823290588*^-8}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {200, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwsnHc81W8Ux1WSprT3EGlIkrRwTyKSrGQle++9995pSEOStiSpKOt+SVYU
MiN7zzskP5V+7vdc//Tywnc87+dznvM559x2Gtmrmc7n4OCoWcTBwfoXvyyJ
gYMrO2tvd0t1ea3JkOu3ILwktLlf8/ZIffy5R/dKlQXhqf/Y5b+YHqlHDpJL
mrIsiPxZnaDypb1SoSOq77fdtiBWB1ccORnXK2XG+vK3IJx3p2y0W9MnJc+6
oKkFEfZYOjs4uU9qr+6V4p/nLAh9nhbDW0L9UkuaHjpIiloQ4P1EraawX2p0
7nKhGyyI+/91Dp2/OCBVXTX3NWtO/BchlCBGG5DKkJu7YJ85wa206/7zK4NS
c1fbo/vZnJjY8WtP3eEhKce5x3v42px45HDM8HvbkJTa3OVGEs0JRf3+4MGo
YanDrC8/cyI3w+r3HqkRqTWsC5qYE03HN3qWTY1ITc29brGCORHtmaQ3+XZU
ivV4Sw6ZE49v1oz88BiTYl1Odb05serrur5s6XGpO7fnvv6aEUZ2wh1vVk1I
ebMu2GNGRBVbMrmHJqRYr7un0owYjjc8Nm1EkyJfONOM6NUdVK+tp0ltZy3g
TTNiec/MGmEFuhSJw9eMKCz+s1T4Ix15GJsRtefO3aVTGMjjrBnhRV2y7y7B
QB4HzYj/6N5PFWWZyGOdGfF13OU/oS9M5PHHlBBvkrind2kSeXSbEpveR69b
OjaJPMpNiSUbBe5fCv6JPF6ZEkfu3S702jaFPBJMCV7NM47XC6eQh7cpEV+v
t7rR+BfyMDIleGqWDzqsmEYe8qZEesplrsTCaeQhbEos+h1n5uXyH/JYY0pw
GnAcVxeZQR6/TYidOauadBgzyKPLhLAQ73lQkfsbeZSZEGqypQltkX+QR4YJ
Ufc02r5e/y/yuGFCBL1jmDEkZpGH19zPRa5t9d35D3kYmBADvzktf3BxUEge
ciaEONO/63cAB4V84QMmhMGrhPfwj4NC8lhtQvSqt52uD5xHIXnMGBNhtVf+
dHHPp5A8Oo2JjLf/ft64MZ/Cet0rpcbEguOUns0CCygkj3Rj4vRooMPT3AUU
ksd1YyJ4zwN1y4ucFJKHpzExQVmfl/CTk0Ly0DcmDv1tTTK+u5BC8pA1Jlp1
tZctl+OikDyEjAnZzYfMq6a5KCSPVcYE3exScmfmIgrJY9qIUFwuWx9lz00h
eXQYEfdOdgatOLKYEs96wE9GhOnO8B1v5i2hkDxeGBG70rw+FDcsoZA8rhoR
nSE1gtGvl1JIHh5GRIFlscvlhGUUkoeeEeEqf2FnXOByCslDxogQeH/xlJvb
CgrJY78Rsehs6honFx4KyYPXiGDITNylS66kkDx+GRIFz6W9EktXUkgePwyJ
9zYPy/XVeZFHiSERUJWkGjTAizzSDImV5YaSxwNWIY94QyLteoZ+0bbVyMPd
kBh9/7JZ5+NqSjeLx2VDQsmTsJe3W0Mh9XF67npPebVrtq9FHnsNidrFTtwS
zWuRx0pD4qtMbk9z4jrkMWVAbApWPfJLbz3yaDMgPO+fHB85sAF5FBsQhndv
feVZuBF5PDcgntfd2U30bkQeVwyIN3vzXupVb0IergZE6dDmZ2rUzchD14BY
l5hE58rbgjykDQj7oV3Lx4ityGOPAVGWv8LUp3Yb8lhhQJz96LH70Nh2ijnr
+Yb1CYOoY4pyUTvwebL1iaKcd9Y8/Dvx/sH6RNLO3xrHS3bi/VT0iQwR2iFe
az68/hZ94mftS56BDbuQ75AesZvvbijPl13I850ecVNToqE7ip/ygcUvSI/Y
/obTtVBZAHkp6REaflmhnFt3I5/NesSfwMlrW5i7kcfgZWJ64Jmxc50grv/b
y4QS74Zk77w9uN6Bl4lVo+cpGRl7cX3PXybklo1ZR6Xvw/XcNPf3gid8br7b
j+vXr0tkrkj8rl8phOv1RpfYpHmgxnvkAK6Pvy4hISH3KHzjQcpa1gsr6hJW
pV/bb+wTwf24UZdoPdqfGPFVBPdf3yVC6NHCqN/eh3C/ZV0iUkR3GSqLiOL+
8rtEXHBSuzAyKor76dwlQjdOxVIi6zDun/WXCBW5i43vAsSQR68OEVM6pFar
dQR5ZOoQYi9ic3lOiiMPXx2ClrJp3X+CR5GHgg4Rd9DYd+uOY8hjnQ5h8+W+
xVr+4xQxFo8ebSJI0UAoSOwE8nilTSg0FAevUDuJPHy0ieSMYEt7XwnkIT/3
fWJhiEmOJPJYq024Pa4Yfc9BQR7dWsSqJ1vGdh4A5JGhRYh82VDr0g3Iw3vu
5yU6/F9STiEPOS2CI8xdM8NCmrKUtYBrtAiLG9L5906cRh6dmoR0UyfHgfUy
yOOlJiHqJFn9c1YGeXhqEv+87tvdZcgijzOaxGh/psJnxhnksVqTsBpd9kOS
Qx55dGgQYyZFYjmbzyKPdA0i0b18etEZBeThoUGcDbrCtyLgHPKQ1SBErgiu
ya5URB68GsQBoQ6z37uVkEf7RcLl212t4QRl5JF2kTjXcEFFJUYFebhfJLq/
0/0FtVSRh8xF4m3xLth6UA15rLxIKLaW/dfOewF5/FAnBI9INgjMU0cez9WJ
TOkPV3P+qiMPN3VCmS4Xbs6tgTyk1Ym3foFJ6/k0kQePOnE7R8T3wzkt5NF2
gVD6/KdEOUwbeTy7QCQs220yUadDCWPxcL0w9zzSi4tEdZHHqQtEQLQ2df7T
y8hjxQXijN+qV4sP6SOP72qEdFfjv52WBsjjqRqRYDzksfWMIfJwViMGhWmJ
CiJGyAPUiBPp/z2J2WOMPJarEZyn7c42HzRBHi2qhLXbrQVH5EyRxxNVotxv
ZrTQ3oyyg8XDSZWQXs8V9yzNHHlQVImqON5Jif8skMdSVWJvfMO8bl0rjKfN
KsTKgyl/NjVZU/axLvhIhZgUKzSPtrRFHo4qxDI9NemZtfbIQ0qFyOYLKN9n
70BxYvFYokIE5NiIXTJypFiwrpehTISpfirOMnXCv5dTJvg2Kgk5eDlTWLd/
2KlEOJp+cJp44EKZZvHyVCJUx812v/zhSvFh8VmlREww6w8pHHRHHunnicoV
wxvib3lQIljrL3ue8K7km3Dd7EVZxlqgdkUi/s7IP4Fcb1xfd0XifMeUMqe7
L56HKxWJqWPVJ7PV/SlJrPV7fo5ol3NOXvsiANdL+hzRKnwz8QI1ENenVYG4
VcR3cGAwiMJ6vJ8uCoRNbklty94QSibr/VcoEHUxn2JdQkJx/z09S5w+9J1x
9ncYnqdwlqgq3t946moEBVj7q0We8NpyS/Pp2ShKCWs/OckTnCHyr4/vicH9
s1SeuM/30hwOxVFY26XqkRzxumrBt1qxeIo664KScoTLHatvIdZXKc2s/dB0
hvjePl/4L/Ua8nc4Qxz06lBbKH6D0svivfgMYUGM6XLXJSCPVFlCPimx7NDt
RORxUpbYWDD9/PrV28ijXoZQiPhgrV58F3nYyhDz3UXf9R5ORh5cMoSDQ8G3
bR4pyCPlNFHYtP3PtXmpyOP4aeKZr1u1RMFD5FEnTawNfbvpyJvHyMNammA2
urrVjT5FHpzSxEmjxB9JLmnI494pgo/TdeUCjZfIQ/wUIeLS5q2slIk8vsJc
fjHrprc3C3lYABEyG6tnQHmLPOYD4X9x1Xn/K9n4vuIUgnk3OHqU9wO+n4UU
saSSaqv5No8SwHqAO5IEc1dt8keNQnz+agkiVct281lTAp/330liueTE9ymr
Isot1vMdOkkEajY4am8rpjxjXdD4BNGUrHftulkx3v/mcWJ2UX5g15Fi5F9+
jDg5/kPuVEwRpZzFe+YoYRbwp0bPlaDUsPgKHSU+j+zn2rSwEHnqixPV/J4b
qsJyKZ0sflePEDtepz8Y9M+m0Fi8PooRWidVpc6NvkY+Pw8TNxb/a1Gwfo48
9hwmKJvONJ8fu0NZyVp/HVEioGPTtkUnT1E3sNY75hBR3HSi0/LHfSq5voUi
BNQYVnYWZ1JVWA/cdZC4dmuP1WG7XKoDa/3OCBM6/gM1+ebFVHK90oSImype
W1Sby6jk+vDsJ2xfPeG8Y11NzWSth/NeYseT4r7xoFoqwXr/ZkHCbvD0sgXy
9VTyfSV2ExwFbcdL/jRSyfd7wE9QeV6c3ZjUQuVgHQALdxHiatsWlfC1Ucnn
t9pJqAv+3GAU204l9XNvOyH+3KLdzLqTGkAGrC3Eys4lsfXeXdQU1vMc3Eh0
+Si0ejl34/2n1xJ/zg+ttT7fg/crWkXsX2mbe56zlwpkAOMhYKFl9NTVXrze
E26CIvd6a914L/79sfnEoOLaqizePioH6/dv/KI67R6y8Kb1UjnIA6OPKvRQ
8Gl94Nz3IawNVEThuhbAd4XaQ0V/Pk6Z/vej58uzbioHS59tvyn+tamPpqS7
qEAaLk4YT1GRcTjUQeVgvW/lEqjxmRph2LVSDVg/T1oJXNonnktrNVF3sOLL
t9Xw9J/5m26Ob/j7S9bDCt9gHe6BKny/U5tgz9iGxt8mH6kprOf32ApiWy84
Kw9nUYEVXzR3QFp77N/s034UEdb1mDvBsznPP+xFDuotbhd4ta9PXSlSRiGv
v08AyqG9tcOtlkJj7bdPu+d+376i2a0J96fhHjj0izZPLPAHhWDx/bMXPm5z
HRAv6KJksu5/az/s6U8gILWXksLaH4cPgM2CvTZLDAdQX1+F567vk8YYHaIc
Yy3nERFIe3O1PUFiFJ9vwSHYM5PpO3J2HPVecwgknv42yuKm4fMmi8Lu7K6T
WuU0ykoWH5vDUL0ve8ugEZ3CzXr+E2KQJ3y2UKuJjvrgPgI7LtweC+Fn4Ps0
HIGG+7ZCa84yKIMsfT0Uhyrhi6nqpxn4fo5HYd2l3U5beBmoT8oxmJzcX9Pw
ik4pZ73vsuNgdUYzqGELnUKw9P39OIz2SPgs1qCh/p+dgGYH/eFv78Ypz1jb
ze0kKBmkSHzWGcX1OC0BO+xOteY8GsL4wisJX0JvXLqZ2o/r0yEJ3ccVl5qY
9VACWNvrpRRcfXA2e/v8TooHGUAp4KURe1JvSQvejx9g7bEvH5p/1uL6RQNM
KjonVz//REln3Z8BYDWwMMrM9SWup9Yp8Kg+vUXx2wsqGV+pp+B6JaHVf+4T
dQtrfXdLQ16mwwFqXS2VfL5YaSgy3Vq96k8zlbz9pDR8b9afvbK0kxrDet5L
p8FIZnf99YgeKrn+xadB4MP4svCBfiopj70ywAitMru7fhj1ES8DUwYt9Uyu
MSr5PlMywO34veLO4wnqJOsBL8uCQTzn63WTNCoZv0tkYcXja3sTeulUktf+
M7CscXnb6UcMqglLv9fOgKWVZOq8I0zUw39nQP2IsXPgbSaVPB8N5AA891Vo
1zOp9SyeZXIwNfrykc4AE+PfAXkoXJCTcuAbk0qevzfkoSl+xXXxRCaVPJ9/
y4OKqKjlq0NMKsnb6CwENTQv5UxhUCVY+7fiLExGTfW6d9CpJA8RBeCdjp9e
NU6jkjwSFUD8BJ+UceIEleQxqwAqDeoDJT9HqSQPk3NQOvSfhtL8YeTx+Rwk
vzxql1XVj/FaVBEcHl84km3WgzxuK4JSdbegTXEHldz/HOdBPM+orPR6M8Zn
8/NwJkb0TJh6LfL4ch5SE7kXq28voZL76YgSlDRm2iQpP0EeSUqwz/pKs/74
a9xf85VB3OtXU29gGZ43lsowXrLs8XnOb3ie1ihDuYXjDX3KdwrJa7MKKFHT
xwOzOjEfUlaB4m9TG7sP9uLvB6mA8MCpcZ7IAdyP2SqwTWbW+nH6MOYjQyqQ
H+8jsCtyDPfnFlXQkKsZ/rWIRiH5qqhCzMLI8rrNdMwHglWB5/GC/0xm6ajX
HFVY+b3xl30mg0Lu32FVcKnzWikpxsT8aJsa8D2P7YuPYaLeVNXADKoqa/KY
qO9QNZj4KV3h9JGJ+cl7NaB1/6h9+5BJIffHiBqklGW9uHqJifrcfgFKDe89
pA8yMF9TuwDBJdE3t83FE3K9wy7A+8YIzWBPOuZ3Hy6A9DzJDS88aBRSD2MX
oP/UshuJceMYP3aow60PQqsma0cwXqmrAzfv112nywcp5P4KV4fwdPVRmaA+
5JOrDvnhFUHFvN2o/3F1MFvz5Kn98h/IY+dF+LV//Xva9wbkcfEi+AkcmLU7
Vo08Ii6CR3h2faJ5AfLIvwhhOmdExYU1kcfERbgRmJN6PCMf9yefBkjN2/Ro
qrUK9aahATsVSoWXvWzA/RqpAbl9uvqXOttQfwUa0LzrTNr8P10YT2gaMFVn
/LLJtg/1yK8JwYWLN1a9G8T9rKkJrfoJVzYXj1BJHtGawP/sfO1E4DjGm0JN
iOvQN9jpQkO90jVBY3j7he9udNzvAlrQtuhpj7o8A/WrpQUyRleuTg0xcP/H
aMH3jD3LlfXYeqZqQex+68PrnzExPjG1YE0Kbcaugq3v3dpAv/rki9lHJupD
Rxty5i9NrUpgot5jtcHId7JfjMLE+EVog8M8sXmnChio/0ltyHxdFCe0nIHx
TFAH7vdyXX8sRKeSPC7pgNqtPRuaN7HjW5wOnFnM3PY1awzjQ7EOEGc3vG5u
GaaSPH7qgMRHG2XKhwHksecSDHPGPHc16kUeupegcNadn9bfiTyuXII0kbHM
HS++I4+PlyAlSGC+s9M35DF1CVSCK6hRRuXIY58ulC83yzV5/wZ5XNaFDfZD
d7Y+T0V9XNWFQepztQqRj6iPEl0wrTfRyfleg/r4pQuP9ynbh65vRn3svwwa
dKoVj0wH6kPvMnRvLN39eXcP6uPaZTgjUNzjG9OP+vh0GTbc8IzXKB5Cffx3
Gc5tufs5MnsU9SGkB5WHrbyltSdQHwZ6oCVwceThVxrq47oevOlYVvqgiI76
KNUDxUXiBk+DGKiPGT2Q2TDTm7yGifo4oA/5dTftwIuJ+jDUh4zufWV82UzU
xw192GcWx7+6kon6KNcHp7ArpdlzPyd5/NaH2+cFJ2y82fFivQFINHGvtlnH
pIiyrnfIAOIitaW3hzLQ3ysYQMjxLJ3qEjpe38QAelWMHcO/0ShxrPXyM4BK
8byljkYT6K9vGQAVFE7MLxrF9XttAKFXRoMHqofw/p8N4M9/wj5Dt/qxHtdn
AOryS/+rPdyD8XPWAI6N79vdp9eB67vBEGa2fllYK9qMfl/UEFKPFG+SnarB
9VY0BHpyI+2IxUeMr6aGIOwRuawp/CHWy/0NgZANmhck/wb3021DWDfpbaa1
rxz18cYQ5i8/3CGr8Y3KWu73VYZwc3CKznHlO+ql3xB0ziSmLWzpxP3GYQSd
ZVkx7eq9VNblujYaQZhYyXrx9AEqWd84bAS7zTvX3aseRj2dNwK9V2p2d5+O
URtZ+9HcCO74LYxvWkujkvWeACNIj9MRPruHjvHijhGoPPBguixmUEkeb43A
mnNfhGAug0ryqDaCde+yHF9JMFF/A0ZAsdi5sfY6k0rymGcMT4wUnowVMakk
j83GsDM8+7lLOTs/EDMG5fj2gqSnTOowi4fS3PdRnIXac/GF5GFhDDG2tXVx
wwzUa6AxeH9eyBtyloHx564xiNU3Bz71oFNJHu+MQXhpbESsGw3j0VdjCLqo
tvZn+DjqedAYVjj4JQlWjFBJHvNNIGJE8OrjgkHkscUErD+etpR060Me4iYQ
RFxe/o6zG3kom0DUwVGXCXob8rA0gSlu7UPBhQ3II9gE9M0YmoqzVcgjyQTu
NQf8VafnI49sE5itfnPI7cJJ1FPN3P36JLn/CBZQSB7DJvBBrt//zsZqrL8t
MAXelevSt1Q1oD62msK8FqaS8b821MdRU9B5ZTwqt7Qb9aFiCsqP897G+PSh
PqxMQU/mT2Pcx0HUR4gpuD503xn+ZQT1kWwK8vV6n9JjxlEfOaagwJWwIXru
fCV51JpCmbpBoLQXHfUxYgrb1UcdChQYqA9OM9C18euwGmGgPraZgV6x5J8f
ekzUxzEzUFy6Y9eXp0zUh5oZZCmdtdAoZ6I+rM1Ah+taVEARE/URaga8yQLG
q68zMR+5bwZfTn3fde8kE+PVBzOQ+XLieN57BoXkUWcGuyrEjz5fxMD4NWoG
NxMGwjbtpmO+wmUOQhLWV86splFIHtvNIdqycH/RgzHMX46bw8RSRiZf2TDy
uGAOexNmQOLxAPKwNQedrP6uiPO9yCPMHKz+bGh0qe1EHinmEJV261iS/3fk
kWsO/+RzLxBnviGPb+bg5L74t8jScuQxZg4mMjs71i15gzwWWcD7EU3VTs5H
qI+dFjAUHGkZGv4R9XHCApZwG/03vrAW9aFuAX6WP+7bSTejPuwsoPJr4m1t
uw7UR7gF7DRYnW1wsgf18cACNuwVXS6c0o/6yLMA240G7wrrh1AfDRbgUaDR
erZsFPUxbgHCO3I/LreYQH1wW8IjXmuZ6QYa6oPPEkrH6hzaS+moDwlLqNo+
u/pbGAP1cdES/JpSP5StZ5/v9paQLWi6xs2H7R8iLWHX3iXLnHKYqI9US7g9
QewKrmTieZlvCVavvO/KZTMxXjVawhJb2+z1XkyMVzRLeKD39zj/GibGq8VW
MJ9bQLchkIHxapcViG7huudM0DFeSVpB37oW3/VfaBivNKzge9xiOaeLExiv
HKxg7e8Pu1dnjWK8irKClas03lwsGEIej6zgkglXwtrwfuRRYAVf6lO3b9/Z
gzyarMBawnyP3bEO5EG3givvP6RULG1GHkusQWPD+ZLZLzXIg98aIkJnrXw3
fkQeUtYANmGfXymmIg8ta3DbKHxSvP8N6sPRGmYbWx0lPMtRH9HWUNrKSHzq
+w318dga/ltkcG1L9nfUB9UaHm7/9Zwy2on6aLYG2kWD/T7mvagPhjUoGlQf
by0YQH0sswFn2+LrfT+GUR8CNrA0pyF+fzZbHxQb6LXhebtzC9uPa9vAKj8K
d8gBOurD2Qby7laPJi9noD5ibCDi3AlNhQIG6uOJDfw4dnz7dyn2eU7YwCOp
bTdWJTBRHy02YH7TtFmlmJ0vMG0g636V6GwZE/Wx3Bay5HdsVnjCxHglaAs/
pd7n7dRlYrwCWxC7bKxpPMDAeKVjC+0Kf4IuyjIwXrnYQv+9BZ8tnekYr2Jt
4b8yPR4pBxrGq6e2cJkCnxU8xzFeFdlC1GOjay/ej2C8arUFlW2Kmi9fDCKP
SVsQ0btzWMi4D3mssAOb5V7tw7Qu5LHHDrpl3DLDK9qQh7QdJPUc3/I+oQF5
XLKDYqXLZc7pVcjD1Q6+yNXqJJzPRx5X7MAl85d/Zac56uOZHSzXOjjw6HMB
6qPYDhhadrqXrKtRH212kHL1eX39ZAPqY8oOWiuav7wS/IH64LEHl1cp1/9t
60Z97LUHwtihOfRKH+rjtD3o5IRss2wYRH3o2sPql/+8OtpHUB9u9nCG6Scr
fHcc9RFvD4ddi9aV+NFQH2n2UL85aLuFPx318dEe+LJOpdYpMVAfP+wh1fB4
v/c4A/Xxyx5C/wY4zRgw8Xm4HYDH/PY8zudMKuvxNdc6QOzBXZkZc/kB2a/l
cwC7osTAvwSTjEc8Bx3AIblGOPMqE5/3pAMUKwilKR1nUlk4y+QdIPX8JSen
dwx8/osOIHrUiF9zAYOMVwFGDjArd/z5ux10Klk+tHeArwK27TXLaGT8Oubj
AHEpOcVN18bw/SIdYPeDU3f8s4eprMvREhyg/X7yrZPXB/B9Ux0g/WNRTtyJ
XjK+PXvlAAHhFfltBZ1U1vYJzXeAiENK76ma36msfplhhQM8WHbZM3HbN1yP
RgdoveJp9yq3jMrCu7HHATyqjM4ttMyikv28CQdourRPZ6ncY1J/tX8cYM2B
eHXe5o8U1uNlLHaE3D8e/YLCtWR/K2qdIzjwXSIcrNj56S5H6F89bV6X0EFh
bVdpEUcYLp12TVTqwX6opCMY6Z53icjqJ/U6c9YRwn4WJ7f0DVHI9oiGIwi3
xy/71DhK9s/fGDvCpEd1ZZLrBO5/B0dQezH2K6uVRurZ2tcRnhgYbgz7TMd5
kShH+PF1p4ddFIPU965ER/Co5+ww2cQ+zx85gp95kw+/H5NClnczHSHJMlFG
6j0T9VIwd7+D72edK1H/Nyrn7pfLP6j7jkkhw3eTI0hMByooeGA8UOx1hD1F
U2fNedn1CrojSK/fr7nRj0Fhve7CWUc46iD0Li2PjvFuiRP0qCU5nyynkfGi
YL0TaElOTj6Qm6CQ5SF+JwjQDmrVTh0l+6uuh5wgf6HrvHnpQxgPpZzg9LVS
wzCXfpKH8Dkn2P06UPL98h7sN2o5QUaQqkfSyg6SR7+JE1R6loY49zSRPIod
565/47qxy5MakkeynxP0hq/+T7m8GONntNNcviSZ9XvRA5KH5i0nuKPTuvFK
xFvUx2Mn2LI1calRZTnqI8sJnAJ9LXY++Yb6KHSCDW5pC+Tav6M+PjsBbVUM
959/naiPZid4xxym3vTqRX30OcGsB0/Wr68DqA+GE3x3z2y7Pz6M+vjnBD6S
mzz3fGLrY5kzbEoRWpfCR0N9bHCGtycDzemi7Hgg4AxigoeXzfAyUB+izrBP
WXn3PYKB+qA4g1GJY9HhU5gPGCo6g7z3rcnAm+z8X9sZ/pj8qu4sZqI+zJyh
dwsd3pQxUR9OzlAcGJG68zHmC7X+znBXIMNulQ67PhHjDJKl+av1exlkfIy6
7Qwzl6fzFU8x8Px94gzl0aa3VOzoZLyUfuMM0ho3d62yYvsHwhnaf1q491th
/WSmyhn6uaVFXJ+NYL7U4gwZd5q/zdweJOPpm35nuGXHu8BQpQ/zJ6Yz8Hmd
rTP70UXysOZwAamW80kvHrDrO8td4FQh32F32waSx65NLpB2ULch7VIV5leC
LvCf42uboRd5ZPxtO+wCj9fXnN6x1A31AS6QrdT5Xs22EPVx3gWSm8MGd+VX
Yz9exwWcave9XLW1EfVh7gIKSWr1Qco/UB8uLrB22lzbS7Sb9MMLA13AK17d
41RqH+oj1gUCV4n95hwYRH3ccYEsJwHjX+Mj2D9/6gLH/IREHZ5jf8H1rQvM
ima4/ghh5wtFLvBwafF9uxCs3wl/cYGyt7puFWoMzB9aXSC3l8vOns5AfQy4
gG3hYfkZIybmE5MuIDd4j2tbGvqH5HmukKNnQx0pZ9cLVrhCaOrZd/oE+gnN
za7gWzUeJBrPzjf2uIJXWndPnzj6C54jrnD8qK8XTxa7nnDKFdb9EFg0wq5/
lim5gsilmrVHN7PrC5dcIetT5gZpLhoZrwIsXEF8aOmBwuAxzE9cXSGGM3I8
4/EwyeNYkCsMd5XLrwwcwHzliivE5bWV2wj2kjxod12hfOczs+1pnZi/PHOF
ZQqLvyYd/E7yePbOFRg614X3T9VhfaLYFVZcjjv8wrKM5GH41RUu8a+2mSx9
jflNmyv4zf7r3Bf9hPSXG4dcoTBMPG393hLMP3+6gtxjwxNJGrWoj/luoHHD
r/DFtWbUB48bTCWo3A0o6EB9bHGDBa+1n/Ub9qA+9rqBzwX/F9Ml/agPcTdI
zZe5t+gX2z+cdoNzix8Nq/SPoj6U3YC7Jjn+RPAE6kPXDYRqQ7xdumioD0s3
eP+oWlusho76cHODDZxKbivjsJ5gHewGNYVp77m3svsP8W7QnCuQ2eKP9YVd
99xApeDNGd4P7HpimhuYzD71sa7EekNb9tzzn/KK9njLRD/y0Q3+/sj+FOSG
9YcbNW7Qbpn64dUKtj/54QZ8yef3GHlhvVNx2A3y+QbE+rPp6Fd+uUHcdNk9
42IaWT9cyOkOug+2X/h+fALzs5XuUJy/Y37atVEyXhVsdQed866Pcu4Mod/f
5w78lx9pcxr1kzxcj7pD5qH7EgYz3Zi/ybhDssBegZHBdpKHsKo7FLpcuEzJ
a8J8Ts8d0gOTry/zqyF59Fu5Q/5VCW9z92LM79zdIWymsOVlxH2SR3KIO8z3
vFxptO8d6uOqOyzj0smX3VyB+kh2h7j4XSu9vnxDfbxwByV3VzFlrlbUx3t3
6Ay0PvpkdRfqo8QdSpqnrt+L7UV91LpDFEUrbLZrAPXR7g5/y3c9kf43jPoY
mbv+ru8ay+rZ+ph2Bzv3y2G8e2moj4UecK17dYnqMTrqY5UHuNWLm8mvQ/9O
2+YBqQV/b/d8ZPcD9nuA9qSHd+BpPM+fHfOAycWU+r5Edv1Q1gN6V3yNMv3I
RH2oeYBdW5H45Tn/QOpD3wOmFXoXjT9kkvFqo40HbJkX1fhLk4l+wMMDVksf
kFfuwvpmbagH7FjoeeSYJLuecc0DOqnq8fst0e9E3feAr3tNrn83pmF+le4B
ajU/f1rrjpPxSvqDB4wuLtm07xbbP5Sy7ndATDxiEPOrurn36WlbESbZh36i
wwNiFO9ta6joInm8GfUA53c/fXI82zC/+s8DFMM5XHbINmB+xeUJelHC394v
qUK/sdoTSrUmy8cW52F+tcMTFG6JvNRfG4D6OOAJKyNXhZ/noaI+jntCgOjI
Td7lX1AfZzyBHqxaZCjbiPq44AlP4uIaTNx/oD4MPKHNsIg5I9uN+rD1BOmi
tBqOd+z+g5cnHN84DqnTg6iPcE+4w9N0Y+u/EdTHdU/IkKQ8f5UzjvpI8YRb
fx9s+RlFQ3289IQNnqdlnSPpqI9cT1BfbnW1UINd/y/zBBkZ8yDDSaz3Cdd7
QkkHL33ahF0P6PKEWd7XPEdfMFEfY54gZpPSI1jBrg/MeIJfSuogQcX+RPIi
LyiZ13TrTRzbf6zxgkuJzSHeYkwyXmnu9IJjRs4haRnseqewF5T7ttz0mcF4
xXPSC3xvCCzOXkvH/ErOCxZUfOEy+jdBxqsydS+YjTRZ9cBlDPMrQy8I8X5r
03YD+7UBdl5weq+IeJ/dAPopby+wDa/lO7+mF/OrCC8YOmC90uxmJ+ZXCV6Q
7lRFCVmE9V/aAy+4m7r1dmV1HeZXGV6QRdsaRd1QhvlVnhdwXqh9vUbgNfY7
yr1AdXowfOjLU9RHgxdIyV3uWuhVgvro9oKWYepWTv9a1MeEF+T/rN/ektuM
+vjtBR2tEX+39XWgPri9wYShoC7k2oP6WOsNnVUcepeb+lEffN4wSBefEuQe
Rn0c9IYqBwVK9c9R1IeEN+ReSEosi59AfZz1hrjdOroHBmioj4vesGPSkft7
Pbs/aeQNJ362CqVdZaA+7Od+fr0l7dF2dr3Qxxv2L01SDw/EeoJ1pDe4vo2e
bvvArh/e9IaMb72fLlVifWHXQ29onCc+EvOG7T8yvUGPT6zijQvWG9ryvQEe
q5vTlrL9R4U37OpYPJTqxsD8qtEbHn39Y7sxi47+vccb7qlXhQfn0zC/onmD
FPDR5wtNYH711xs21D/kGg0axfxqiQ+8LYrlNIocwvxqnQ9k7Cw976GM/YeC
XT4QvDhehWOgG/MrER84VONy6UBRO+ZXkj7QU7N86bzrTZhfKfiAw8IlP+9e
rMH8StMHpCJ/RNrtLsb8ysQHlD6urujhuIf5lYMPqIt/NtWoeof68PWBeC1a
zjGbCtRHlA/I5Pr4tEx9Q30k+oCY9D9zXeFW1McjH1gtKBGsKtiF+njtA4Nn
XVMepvSiPgrn3i/2m978yQHUR6UPcAWfkunkGUF9NPnAF61J6aFutj56566/
879Rv4M01AfdB2avPOh5KUlHfcz6gIZh3L1rm7C+eGypLzz6nSC6u4yB+tjg
C2vudrz8LIvnOY3fF6z0h53O3Gb3Fw75wpLhtUIDH7H++EzKF3yq/Xg45/wD
qY9zvvDpyY29Oals/6HlC2dOnnzdcpHtP0x9IfDRvusn2xmYXzn5wokQE7vt
x9n9CL+5620x2DjfBOcVaqN9gb9YPyP5Mg3zq1u+0Nt6MG3o/DjmV499IeJF
ul5L+AjmV1m+YFT0z9bWbRDzK6ovjJ6M4Hu+rw/zq6q595MNvng6uwvzq2Zf
eLIyd1WpahvmV32+IGF45+CXLQ2YXzF8YVX8ooTaD58xv/rnC1Xv0+u5LXIx
v1rmB23q9u2+/KGoj41+UPNs5y7R11TUx24/aO10jGZe/oL6OOwHjK9Xp57b
NqI+KH5QLFjKIXX/B+pD0Q86hRJSXLW7UR/afuBjF6LwvqwP9WHmB/HXbT2P
LBlCfTj7wfBjftEcnlHUR4AfnPLYENH1aZys3y2M9YMP9x2uLrzKrtff9gO1
xwbpDnHYfyh44gfh8msfpeswUB9v/CBMz79X8Rf2I1wJP8iwXwJ0Mybqo9oP
UnNOLVRIZ6I+vvuB2ZTMGr0KJupjwA+OfzLfvoWK/Yp+ph9U1b0PFY5l+w8O
f0inT79ZIsr2H8v9YU3R009SL9j1zU3+sM6RsmHRFMYrTUF/cHYoaDuwko75
lZg/8P9at1GUgfUSnlP+cMTfXtfddAzzq/P+wPfAQPxf8DDmVzr+YBF09/pr
XXZ+Ze4PF9vPrhKc14v5lYs/iJx03/AsqBPzq0B/eBR7dq1pRwvmV3H+IC8S
+tfkcR3mV3f9weCbxLnPZaWYXz31B6HyBff4gzMxv3rrDw5KgR3lq56jPor8
QV20/e/vyhKs333xB/GQbefsn9aiPlr9oddowJS7h91/GJxbn9J0Gz2uTtTH
T3/wbLBe6hDRg/uVIwBeNyXNKxzqJ69vsSgAXvn58EpvZM/nLA8AcWa/3amF
Y2Q9QHZNAHzxPrTxXPIEWd94sykAzvAQB7tGaWT9bOfOANhjAa+9Wtj+QTAA
RD8e2kJJwPri3wMBEGhvd0CCD+uD1mIBsGVLWbNIMNYPWk4EgHRfccGjXKwX
yp0KgJqRBSLylVhPeCcXAAe+XFK7l8X2G0oBcEvv2O1OJ6wvXFUPgGvvD0UL
LWb7j0sBoKx8pazdiUFlLbedYQDo7DsRKfcS64tt5gEQrG17MTmbRmUtl4Jd
AARNvJ3Ht20C8y+XAOB8dLdKwHmUjAe7vQNApoNDnMsD+w83AgNgtfuI7KBE
P5VsV0YEwDqfWavkb91kvcUhLgAqq9e22N1up7Iu134jAH4LjQiXWDVRWfPy
infn3q/j7OyBAzUkj9wHARBtc6TCu6EI87dnARDG//KIoucdkkdiRgDUp3wy
lrTLxnrZuwA4UeKzXaCggqz/OecFQMLTxx/Fttfj/H9RAIxnd9UYa6B/UC4P
gJ+d0jHTJ7pQr18C5uJBXeLDN73kft/fEADZF5b//btwEOtrrXN8mVrBzjtG
yHrhou4A2L1tcHMufQzrbYMBcOdreVHfERqph57xAJD8deXsgtN01PfPAEgP
qjvZuI1B6oP4HQALX/sFGFUysB43PxDsuC7SeOSxvpjEHQhcKYT5gztMrM/x
BIK60VFl4xI87z3WBkJm13Wnx6XseLA5ELaGH3/l9QDrj+p8gcB94enLdxeY
WL/bEwiNXhrPdrYyyHqkyMFA4LuwfxfHEQbW844EgstTrslaPTr5+YVlEoFw
afsycV1NzHe8pAPh139SYpco42Q8HJQPhJjxc0W+7iMYT5Tn7rdDXS7JZJDk
8eliIATt3/zn0/o+/DyTbiCENAhKvUztInk8MAoERq/8zy970T/wWAZCSUXF
Ro/JepKHr30gjK+ZvNZr8Rnjj2sgPN+3NGdj6QeSh7ZPIBzakBY+cjgK64VB
gRAoJaUWv5cg9XEkMhAqVEdTWjK+4Pl9JRCMTB03MxMaSX3w3gwEC8Js47qy
H3ieJwXC0UZRGLfpJvUxnhoIaxafzrL+3of1xeeBEOUZb1u8eYjUR+WrQNA4
9EFw+/ZRPO+zAyF0weEri+vHSX08yQ+Ep5Z9GSsT2f2Hj4FgoHkzw+I6ndRH
UEUgZP/+FJqgx8B65Ne59RKbZ3Z4hkHqQ68xEDpN8rj6LNj5QVsgnODPydB6
iX7gRE8gTEYKrI+vYOcLQ3Prx6WzzbkQ/cF6WiAMBHItfhzNxPrlVCCIHuTd
m3AQ+xXMP4EAv6Z/Vj9lYL1/QRBkpeyVjKFjvPq6OAhUecOlUpbQMX6uDILd
rz9l/+qdIOPVi3VB8On+P2sZjTGsd24NAtoP6o1NzsMkj/BdQaD35EuOh8IA
1j/3BsF4Wlvf37EekoexSBCkH9pYN2jXifmIeBBwTPF/kM1pIXmAZBBk8Gnn
cfjWkTwyTgfB25wlHK1upSSPLQpBMKt0i9+r+BXJI0olCHwMz+snaqSR+pjW
CAK7o4vvjm3+hPn95SD4EmzwtOlrLamPeuMgOJU87Xl4aQv2G6yCoHx5ypp9
mzpJfWQ6BIEOPagy4y67/+AeBCqnZ2LW/+knz6MY3yBQvDrdq7ZvGP1AcBBs
nOxxSlszRurDIioI9jyIEix+MYH+ID4IQsQSAuIYNFIfsolBMBAR3bemnY79
intz93/25Hv1LQapj52PgmDFp4H6an62f0gLAlGJyvr6EKwX/M0MAs6XMgfN
89h+Imfuel62mgfn/AN5fhQEwczQaoNnr5nY3yiZex/4VbvIkUnGq3eVQSDT
3V1mxMX2G7VB0BhXbrHGHusLV5vm1ntJ/R77Z+x56vYgyBO2f5mVSSPjlV3v
3Ppenu4WWzmB/ZDhIPjQt+CtuvEoGa8U6EGw7fOfJw/MhjD/+jV3PY2ux6r7
+kkeu2eDwOqZwIJjBDsf4wyG/JR1XmmO7SSP+UuDIWv+qfRg6Sbsn/AGQ6qY
fngBJ/Yf2tcHg8Gr+SKhIUWYr20Lhqodta0J9ESSRy5/MFwzPs4jtDIHz4/9
wSDBNUWsWVGJ58ehYChM7euOl6sn9bHwWDA4ULQ1rPxaSX04SwVDT/WKz/eU
ukh9dMkEg9+Jnt77pegflM8Fw3To9Y/M9YNYL1ANBu626KJZkRFSH/u1gsHw
wPNTgRzjpD5u6wXD7ZgRUTkJGqmPRaZzz2/0QfCCPJ3Uh6t1MDTvTXJaswv7
gT2OweAtXf/2djW7vuARDE63re2VFfA8J/yCoYvLqOvXXSapD+HQYODj2cDf
WsIk9ZEUHQyVg5eDpUuZpD6WXJu7f9P+ouMpWG/0uBUM+8pfjcWosusRycEg
nfr+5fxm9Cvqj4PhzA5Oj1YRBhmvil8Eg15t0ukkbToZr0SyguEEM0htjSqN
jFfJ74OhtJSzs1hknIxXy6jBsG0VB8cm8xH0Z5+CYb7exl8laoMkj8HPwTDc
YNPeztmHfq0uGFrqJfnXXukieXxqDoY2i5UJjfPasH/UEQxH3Xge8FXVkzwe
9AXDimstGTPr0T/wjM49X2NG/SH+DyQPX0YwfDDJ1dpx+gqeH9PBEOM6yxHi
ReD58S8Yzl5UEsr794XUR9nCELjIkzByrLCR1MeRZSHA39iUOzj+A/PbVSEw
K6uYYBSA87e8G+d+Xy6ldcNYH+a720NA6k/t5JkDQ6Q+xgVC4O3UqNLmg6Ok
PnSFQsAiJOG+QPc4qY9K0RDQtX5tvfYeu954PAR+/CyS0rlFJ/XxhBICFYqS
ez2M0M+vORMCWcpCnGv+Mkh9BCmGwIlbKyW/WWF/kaYWApm82xcZZTBJfehp
h8ARntje/Ar2/IF+CEyLvmsrKcB+xAmzELgSbrJ5XRS7XmkTAkteDbZvPID9
ifXOIXD0Xc4yzUfYjwz1nHs/zhNcS8cwXjH9QyBM3lN42UI6Ga8Mw0Jg0K2J
ltmE/uFrzNz3egVKXHJjWL+5HgJaHLuuCxkNkzxe3A6Z8zdD6ceODZA8NqaE
QPWqR8++fu8heYQ/CYFrpbJHdl/qxM+LpoeA4k1NRb4rLSQP4zchcNNTtfq2
eh3Wez6EwJNypf5+gVKSBxBzv1/rWpjkl4H959KQufN8gZbLnRd4flSHgHmX
5bNum094fnwLgT1VW/admq4l9THdEgJFNoOn9Q63oP/tDAG3rGbTyQNY76rv
D4GoO+K2wxk9pD6kx0LAKX6Ubr1igNRHJnPu/QJNzHVPDpP62DYTAlM3pI8s
4R8j9RHDEQq9twTShT9MoP/gCgUNS/Nz4tM09B/LQ+HYRMf959109B+rQ0Ht
XZuhZhL2I2U3hcImvTv3dATxPH+zIxSSL5WcdAljov8QDIXdgfFyAvk4j3Dl
QCgI/rE6vKoS6wV/D4cCf54n96tMtv84EQovB3lt9tmz/QeEgmFS9oobC9j+
Qy4UkiwXFspYM9B/nA8F8S27z159SEf/oR4Kmto7IorSaOg/dELBZL98sOT8
CfQfhqGglCWf5n1hFP2HeSg4Segri18cQv9hGwqD3UJu2ev70X+4hALss1vw
NZ09z+gVCinm68V6z7aj/wgMBfO82xqnNzWh/wgPhZPmT34nvf+K/iMuFHSN
+jdfO1yE/uNGKFRs9rgza5mA/uNOKOwobjy6OisHz48HoUCPL97JoV+J58fT
UGjqn/hvyL4e/X9GKPy4Urza5kkr2d9OfBsKs/OuS1OMutB/5IVClUZN5M2W
XvQfRXN8MjWzu/YOov8oC4UzN+7tCTg1gv7jSyiseO6WJ8Ezjv6jPhT8ruUq
pUrjfML+1lCQ2+0ZkHSejv6jKxRa5Q0UFQUZ6D8G59b30Nr6yhoG+o/xULjf
NCQWqYjnec9kKDw430qTv8euL/wOhdOLuTLPf8J6IjEvDDZEPlL7Pvc9eX5w
h8F8Hm5TZjLbf6wIg+LIWC89Zbb/WBsGKufmPftRj/OMHpvDoOSko02mELsf
ujMMOP9G8xqoY79EfU8Y1Gz9yVWqQEP/ITz3+8F387fxjaP/OBIGbRE2Auka
I+g/TobBCuNHj/pgkOSxTDoMgt12MOn0XvQf8mHQ1wMLPL270H8ohYHJytB9
LS3IQ/Pi3N/35H2ueFiP/uNSGOjmWX9aWlaJ/sMoDN5IzNc/FfQe/YdFGGR/
6kk5v/canh/2YbAsQ4Xu/ZnA88M1DO4b5SinqHzF+qB3GBitjbng399I6kM7
KAxOTErMfFjXjv4jIgxEDyuk1F/vRv9xJQwmvfflFf3rQ/+REAYf/D9xfJIa
Qv+RFAbeq1NXLqOMov9IDQO1c/+eHqWNo/94FgZSt399XPOQhv7jVRhU1lib
n7lHR//xLgy8lLXvXjRj1xvzw2DbL43iiX84L/CkOAwarvB15duw55krwkCk
lLna/BUT/cfXMMi18w7um/MP5PnREAZr79rqrypgov9oC4MlTYrUoAi2/+gO
g4BFw22397H9x1AY7Ikc4m1NYc9LTIRB7R2qR8ggnZyPWj8VBnXiallO/2jo
P/6EgbTu6xb9SqyXMOeHw3TiiU3Uo2PoPxaHgz0I6x1VHUb/wRMOK4OMk5kC
A+g/1oXDHd3e8OSyHvQfW8Khy4ywNpLrRP+xKxwU7x7k/GfWgv5jbzjcvRiV
ICZUh/7jYPhcftpj9qv+E/oP8XBQn+Wv+XbiJfoPiXD465FISLSn4/lxOhwC
2kb06wo+4flxNhz8xt8qPt1RR+pji0o43Ehslwq51ILzTBrh8DLEeH3eKZxn
nNYNh7w95QU7invQfxiHz/GZaHu/A/vt9ZbhML5OjqKrOIz+wyEcDO4Ju+sd
HkP/4RYOIpJDtnGlE+g/fMOBdnHWtOkv1u9jgsNhJrAl/+gAHf1HZDhEqVjd
+H6fgf4jPhzKiFDjrr1MnI+6GQ5ecVyM5RFM9B/3wiFe0LX5Rz4T/cfDcLC5
cS5pYi5fIM+PtHB4qqa6M/MV239khkPj2Q+H5GzZ/iM7HEYz94lSOdj+oyAc
rsuvuG1nzkD/8TEcmsrlstKT2fNVleHwZlP9m4pHNPQfNeFw5qGVz/HJcfQf
TeGQC84xiadH0X/8CAfP8c7yotND6D96w+Hnfq7Taxbi/JLdcDikK1ouN7zd
jf6DFg7Papdwr+drR//xa249PMslZumN6D/+hkPlwQUFOeZf0X9wRsC2u/1f
bnUT6D+WRICU7+F2se5r6D94I2Bx+WbRRerv8fxYHwE20oLn6K8q8fzYGgEn
/W9slr1Vj/1G/gj48n75KbsvrVi/2hcBhZJTgR2uXeg/DkXATLX72qjRXlIf
iUcjIGTZBr/Kk4PoP6QiIErnwqEZ1RH0HzIRcC1/9NjE1nHsTypEQNNHhum0
PA39h2oErLTzetephv68QDMCSp17d/vvx/mE/XoRYPpT6eyvbwz0HyZz76cT
97hQCc/zRdYRkCZIG01Ixnqiq2MEgGCWZv4nrCf2uEeA/I6G43af2PPNfhGw
ofHvwuf32P4jJAL89qzN3X+e7T+iI+BWhc7Mm1oG+o+rEcCZY+4asIeB/uPW
3PrIni/ZpkxH/5EcATxtHA1OMjT0H48igHbNjHBcPY7+40UE6Fh/Ezh6ZgT9
x+sI4I3NOTfv4CD6j/cRQOxt2Da/oxf9R2EE1O1I5moz70L/8SkCDhwcedD2
Gnl4fY4AwZ+8Dc7e9eg/aiPgV2N3Gr9bJc5zNkfAwlXJPww6c9B/tEdABXez
QVnmDTw/+ubWw1xVy3pLEVnvfzASAemvFb57P/iK9StGBOg2PByirmjC+tV0
BFz/onw4WKod/cdsBKwwNeE/9bQb/cfCSCjmz+M0XtWP/mNpJPy8FnjyuMoQ
+o9VkbBlan8gTWkU/ceGSNgmXqIlMTuO/mN7JBwTWr1w+XP2vI9AJMyWqlnt
T6Wj/9gfCfMb7m4TsmKg/xCNhIK/usMl8/E8rzwWCT41zQopdlhPPEaJBOW6
+rVmmVhPfCIbCattrfdxs+cZ1yhGwuC4X5d2PtYTg9Qi4a3Lmn1DYWz/oRUJ
HIajKqv3sP2HfiRkt00c0brHno8wjQTTfuXiqR6MVydsIuGCUeZ07X809B9O
kcA941DAUTBBxqv1npFQJSay3nrPGPoP/0jQaKo7eBSG0X+ERoLutdnsx6sH
sF8cEwlakdcemL3tQf9xLRJWqZzOvH24E/3H7UhwkCnhq5dqQf9xPxLEbE33
ViyoQ//xJBLquedn/gn+hP4jfe7+eSJC7VMv0H9kRcKOd6fED/Nl4PnxIRJq
c/XWV68oxfODOrfecTeMV52tw/pVaSSozwg0vwxuwf5aVSR0m1ywDbrYSfYL
t3yLhDvpMTMXG3qw39YSCS6zPo/nHx5A/9ERCadqz3/QuDyM/qM/EpaoXIt6
IY3zjPWjkaCaaFre920C+3HMSCid3b3WZQGdyprfyvwvEqbK9/kXjdCxP8cR
BbT3HmnaD3F+KIYrCjJVPzibCOF5PrMsCiyWKZ5+FIn1RIvVUVDPOQDXC7Ce
2LQxChJXRwxVVGA/UnZHFJxx2L86I4OJ/bzdUcCv3HjPwBr7kzsPREHostF7
/X8Z6D8OR8EJ7+8ON4zZ/Y/jUVBaN9D/8TbOJ1hDFPjJF72rTsZ5i5YzUVDj
UtZzoH8c56vOR8Et8X91Lw7j56ffXYgCcb03p86KDqH/0IkCk7wfJg6MPvQf
BlHwNkzInBnajf7DPAru741rOD/zg+RhZxsFVgLTrtSKRpw3cY4Csw2V4l3r
vpI8FLyiIPWmjc2rqwT6j4Ao4DL9yj2qE4/+IzwKrPeEyn//+R7Pj9goyA64
fLuW4zPZj5t/IwoysoRrbxL1ON94JwpmC70XmU61kv259pS539/Mfc8jsgv9
x9MoWPUs6q7LP8x3c19GAVgVfXt6fhD9x9soMM7Se2VmhPX2xNwooI+esLsm
NI79+qIoqNTt0T2jTCP7ec5lURB7L+3WFi32/HB1FChGetc9P8hA/1EfBSvy
u9s2N+HnDwq+R0HBooqQURU8z/d3RUH+rd6brfdxHun2QBQ8yPEs2VWK8wqL
xqPgz5OizpkSnE9ynYyClDS6uGYS23/MRMEMpfUkXYHtP+ZFg7BS9+GgL+z+
x6JouPZBkEueH+eXhFdEwxvNnMb6s3SyX5i0JhqaNZRWrpeiYf9zczQYrOBJ
fss5jv5j59zf+3Q9eHNkBP2HYDSM1rdFrtw6iP5DOBpkHrtNLapifx5KLBru
Ppd1EVfvInmInIyGD+kOxbWRyCP5VDSkvTz8a+WFevQf8tFw9sFBHgEB9INe
StEw8G30jopUDvoP9WiI7nhWx3U8EetXl6LhiegbHWfbIlIfnwyjoeKW/zd7
xlecP7CIBqPosRtLjzaR+nhgFw1Rk9wPL5q1o/9wjQZQ6H2XmduN/sM7Gswe
V9ouFOhH/xEYDR3p6+LTDXFeTzsiGurDUqbq9EZxXiEuGmRf3P0osWyC1MeR
hGh43/Cpe/4r9ueN70bD/oki7hVPsf/PmxoNKvvzgzjs2J83eBYNmY6hMrcW
4jzyeEY06Pj/OBfkwP585LtoGP7YtdDkNc4zVeZFg8PakYG9lVhPPFYcDXaf
aQ4peVhPfFIeDfLZmmFKoWz/8TUa/gVE2UYL4LxTUEM0uHnYEd9uM8h4RWuN
Bp+31iLmHRiv9LqjoUYmxvrgJA39x2A0iGy4cz/5FdZLTkxEg/5MTejajWPo
P35GQ3rHHu+jB7Ffu/5PNAhWq0TpzBvA+Yn5MZCqPVV6+EEPyYPJHQPbegTz
mrZ3Yr+YJwaW2cYWfljXgv5jbQzUr6xusm+tRf+xJQakJA1+Cx7+hP6DLwYq
PaRkQt+kYT95bwwY3T53P8r0FamP8IMxkG4zE35fvxTnk47EQET8c3ELxzqs
X0nEgMq0SzTxAv8/j1rpGPBOk2mSsOxE/3E2Bj6HNFv7DLLnl5RjYFFEjspJ
2QFSH1s0YiCrRb9F0m4Y55l0Y+CZKT9fj+oY+g+jGOAszDuyu2sC/YdlDGQv
yJ3iXIz+vN4+Brbqf7Kk0Og47+QWA2n5m3dVP2GQ+sj0iYE/C5S2tQmzPw8Z
PHd9Jxn7g9FYT4yJjIFuR/5EyUKsJ85ciYFffk/W3a7AeqLFzRjI4FqRkvKS
/fnJpJi58y5Swc4S5yFlH86tV2Z257zf7Hmp5zGwiePoo5f6DDJe7cyMgQ+y
6/i/3KCj/8ie4zV94E3JLfz8w9/8GLjHMPnB3TyO/uNjDIipyfA93TVKxquW
ihgQ2s48m7tjCOdHamLA6ZHnQE5HH8njXWMMrLvcNuzk1I3+48fc/fNfXjGs
+4H+oycGPK7Y0fUeNKL/GI6B2TdrSso/fSF52NFioNo1IDYYCJw3mZrjJ1kj
u+JhNMlD4e/cfrnwq1j81gc8PxbEQm4/ZXZK9TOeH0tiwcbAqn/JUD3Wr1bG
gq375w6fbW2kPuavj4Wb1lWyO+914Xzj1ljYcPzYP5tVOG/TvisWngnZOVzV
H0T/sS8WbswQST+csN6eKxIL/sJ8JVInx9F/HI2FYx0vo29dpGH/QzIWlJIP
fNa9TMd5SJlYcLqmvKPlMM4TOivEQsC2hGDZ7wz0HyqxMHXZe96OC1hPVNaM
hX+iPJaCD7CeWHA5Fo5HxxZeLcV64n6TWPjLlSEfV8LE+UmrWGhPmBVZdhfn
pRc5xkKrc5x/gTwT5yndY6F3/0Yezc/s/odvLAjZLz+4bge7/xESC5OHExKu
yuDnOYmoWDg3Y2NbfBTnl4SvxgJ/b6jEoqkxMl4lJcZClpQGj7TACM5fJseC
7t9CNbGlg+g/HsVC3j3zHQIfetF/pMWC3uKKR2nQhf7jdSw0V/qbzxq24vxZ
TixkMF5fG9xXT/IQKYwFuS3iEsn17Hm0klhYFZWpeOxeNvqPz7GwNkM/VrXg
Np4ftbHwcd/V2zMFRXh+NMWCwkdZPfudNdg/b48FMZUFEqv0m0h9fOqNhRfa
xVc6YttxPmckFvZEX3jxX3U3+g96LJx/U+/ld7Qf/cd0LDQtUHViOg2h/5iN
hc7jLi2hdqPoPzjj4Mjoq4almyZIfWgvjYOYTsdjHW9pOM/DGwc/KyvfN77A
zx8e2RAHmc4y+bmO+Hmoh9viIIf/m7kqN57nvAJxsMrw/MhZJ6wnBuyPA9+g
GlW5LJxfGj8UB47LvB+JVLI/H3ksDhzSJZ0+5+I8U6VUHLTz5d1ODGb7D9k4
yP/lb9XPx/Yf5+LAnNp5+tBNdv9DLQ64Esur33/HeBWkFQcBw/2OtuP4/0HQ
9OKgbyx3/t8HOK+pZxoHbc/fuAcsHkP/YR0Hv9//Hp3eiv3aE05xsLLOP752
vB/9h0cclExuqfgY24P9D/84kDtqtallaSfOb4fGgZ3iDXOB8WaSBzM6DtY4
ZajfzapF/3EtDq5VCfNpdZWg/7gVB2LWDi//b+m843L6vwCeoqIUDURIRslq
WKEcQkhpCkUpMzs0UBQy67nzK76iMppS5ItKQxSloSmVtlJpWWn53d/n9Gev
p9fzfJ7nfc/n3vc5596jcSAC/eNOAJxx1pc7sykWzx/3A+BiPz3sTFwGnj+i
A8BPRe6K8c0CEh8XHwfASZ9u6+1FZdi/9zwAPIuXbjPwwvuhnFMC4J769fqm
3jr0jzcBYJ8eXPPCthH9473w+RXFF1zONKN/FATAo9XxHo47MD5UywIg3j5l
0cO2dvSPqgB4L2Hf9kIO/by7IQBOi6S42h+DzytoDYBZw37M3ROJ9cGirgDo
qMkpPqWD5/OVfwLAWqxBuf4a9jfG/g2A3Yl/yxQG+5knSYrg+OqrHtw7zCde
kxVBwT/09dToQf9QEEGcYdaByD2D/qEiAm//fx9u6O5C/5gsgjDlZz6/7brQ
P2aIoOm5u9UICu+ffjJbBDuD+lXbmQ70Dz0RfLwUEGuW1Yb+oS983koNZrIS
3v/Qv1wEFoG3FwTLf0X/WCOCyLRT3zxzGtA/NojgrWy9v6tDLfqHlQjE6yZ9
PRNVif6xRQRDG8SjFU6WoH84imBMaal3s1su+sduEWgP1MSsrktB/zgoAk0T
n/xh//mhfxwTwUlJ3v3FggQ8f3iKQPbX4k+3grPx/HFWBK67U+vnjxq8H9dP
BEk7ei8tX12B+St/EST0R9SMi61B/2BFcOlx8d6H0xrQP24Kfz8qd0k8Mvg8
oWAR1JfS+/19sd//8wMRzH6z6I7qOnyewoaHIug59XXEWTvs90l4IoK5vzwm
zHMafD5BgghS7PP9ri/qQv9IFcFi7Vl7eiu60D8yhf93UH5aYY33Mx3LEYHL
URmtPyF4v0NNoQi09lrO8M3AfOLGTyJQlwi2DU7HfOLLauH17rr0pTcG/aNR
BNMvfJUWWzPoH99EYJZvFxSUic9rk/ohgoOr1CwtJgz2U/YIf7eHJP5niP1W
R8UouDGl/eIH7cH8ggQFYyxUEsZ9+Ub2q2pJCm4a+Pb5KaJPjR1BQebpMZqS
3Y0kf2I2koKatpiLjffqMf8wigLVtABRwqwakk9JUqTgvOxkX9NF5ZiPGENB
ge6y9uy/hSS/ojWegjSxVYn9Xu+wPjqRgnXOT6+fa39KeAaqUcCtkPLNOHEL
rzenUiAnXNOC8isSb5IaFGxWyk+YapqP159aFIgnGJU/uYL1ruNzKMg/X+is
/uIz7ifaFPR9afebW1dL4rFWj4LdJaG9XSZfMD++iALp+5+HrPH7SvJn5kso
cPUzHLrpbCvmyw0oKKvxnzZCq53k05KBgrj8bu3KxA7MnxtR8Ng/MD07rpP0
6802psAyL/BdtBuer53XUzA0VOGQmSzG801TCk6nz/y748Tg/Y7mFFRvfSx/
KR7jW9qagraRbWtDszGfCLYUXHkvtfJwIuYb3LdSED4pMWfPOcwvxmyjwF46
wKd0CvYzNThSMMJUe998DvONqjspsFO84Jta2knyp1Z7hPd70lPi2oz9jFdc
KIiUuT1JPrCd1BvSDlIQKD/iYkY/9m91H6HA56K6TsoorD/MO07BP0WfhnlW
Dz6Pwl1Yf79Gc5x3HeERdJKCscd2eed1V+F+6EVBufPLEyPzPhIeMj7C8dBh
NDqc/YD743kKmpr6qibee014eF6kwEXeLN7/ZDjWi69Q8Lty3ZerObEk/9To
T4FBjH6ecmsG5v9pCiQlvG+IPysg+SgbjgKrY/HLLDrKSL/etesUXMp4MjPk
SjU5X6ffpGDlfXP+oDTmE3qCKFiwc9amIc6NJD50QijQX5kvOfJyM16v3xPW
22WW2bcX4yM4jILQ8sXp3d8H+5ciKaCsOqXVR2F+US6GAmP900lSPzuxnhBH
QaeE/NuNEZhvPB1PweGUM4168wbrC88o+JxybMD9MuYfmxMoUN8WLXk1YbDe
kEzB3f3+vV3peD2wOY2CFr2lxmIPBusPrymQfXVkUooDXh9kZArxM9M5clo7
5i/6syj4ktI7/YwFXi/Mz6XAxCyX0z7fiX7wgYJJCkfCoi50kP0xtIiCBrsp
Hn+j27BeUUrBqJeuF6x/tJB85qhyCko2dt7f8a0J6xefKTjB2Uotj2ggPLxr
hN+n7K4cpV+L9Yx6CvL6dEx+2FcSHq2NFJiFFyqrzCxBv2gReNwYyN+fn0N4
bG2j4NCWEba6/snoG53C77vWwiHZ1Z3wePuDgtxms6RddxLx/NFNgcdDFc3X
W9+T+FjUS4EadXeE2JFirKcPULCC07sRG1ZB4uP+EBqO21xW8qutwfr6UBoc
TGMOTNjcQOJDUZoGZsJy7su9Jqy3y9Aw4UOEzrxnLSQ+fORokL8Kwf1ebegv
o2l4b6knKeGG9Yd2JRpyDSPuvDuN1wczxtFgKjtWwsES83vbJtDw2VS6fVQ3
Xi9wk2j4ctl+9p4j6AfZU2gYc+zWUrVkvH4Qn07D7HQX6f112H+gr0lDm/3p
3/trsD55ZBYNr+ey9pLPsX4RNpeGiAhLvdpdWK/8rEPDR4c9pTFN2J+gvICG
2PDw11EGXdhfvJiGwua187ycsF/h3FIaNq6uSVuwqQN9yZAGjyZHp/D5bWS/
6lxBg2rLnV387hb0p9XCehJXMUfMmwgPx7U08Nq66+9KYP/SdRMa/vZIpWXQ
NYRHrpmwnpAJcySVkMcwSxrGO1tLTmkvIjyW2dBQt2GHZtOFbKz3bKZByURK
23xrAuERaUdD97ljIZbHfLF/YDsNjnHTrqe2JpP4GOdEw7XAJf7fXubg+XQX
DX237ndp9hST+PDbS8OqJ1UdVUMq8fy6nwYuqfkr14nXCz8O0bB3icGZ1Ssa
8HzrSoPVpo8u1dubSHw4naDBO6JFfPjiFuw/8KBhbpX1I9UkrE/mnxJej6zx
bPzcjv0IZ2h4nJ2cJJHTQeLD0JeGogbPy6ZundifcIGGXy5tqaWt2F8cfYmG
reULd0zXQ7+ou0rDWYWB0w0meL/CeJHwfqCfeUJ/8HlujPB6mqNJQj9ej1zi
aZj888mCOTexPzE1kAa/mq2/ho3C+xt+/0vD+sP39Dc7Yr/i3Ds0LNWhTq0d
1072q12hNCxsHxfaqvkN+x3u0xBzffZ4r59YXygMF35/xW/H3vk2Yf9DNC3s
9+V5jz82EB4rHtGws60h67J4HeYjHwvxYHty0Xq5asLj0VMaSqi7y0eP+YT5
yec0yMkrh3nKYX/zxCQaXI5bTog2eI/5yhQaFF2uTh35NJXwuPqKBjcXu8CC
ow8wf/mGhkBl7fYs8XskPv68peHAyp/yojXJWA97T8MPk58ZbwvfkvjYkycc
fw+YQ/4jP2B9rIAGmUSlJnWvYhIfxcXCegucfLLjykh8yJYJ69lvFfLfv5Uk
PowqaHj02OtnGF2N9bMqId7ujD74YgzeDxxXS8M7d/HleeZ1WE9roMGgndL4
uwifz6D2lYYa2yr2aFY95kdbhe/zLv6IgWwDiY+AdiEekvVPRAxrwHpbl3B8
U8CmptaT+Oj7KcS7gt8FA+N67P/7Q4PREKfJLiF1JD5c+mjo3DvhykBxLfYD
/qXhq10vdau5huxXH8UZCJA3frOlvhrzq5IMPAtZe6FCVEX2qzXDGSgyXx9a
o1uJ+VZZBuIXKtrUP/tE9qt4eQZkrG8rNarj+bxFgQE10+1xv92KST1SfQwD
YRNn/af5vAD7QVQYkNw49BD9KY/woFQZiF2xY7H8iizsD5nMwK2VGVTJy9eE
x4A6A7a2MQtKypOxX2QGAyrzi2UulscTHgdmMqD5tkb3sU0Y5m9nM7A4MsTX
dONVwuPTPAbc8ibteNMRgD6ux8Dh17pTHQ7fI/GxdqGwHqX+XUO8H6Gf6zPQ
atnWlMnHk/h4toyBr5WKAdIfn2O9cDkDCdSqzweYJBIf040YSO7y0Dr+MgXr
h2sY0K07mB03OY3EB7uOge0HsvvCe9KwnriBgejks7eCHF+R+BhizoCv1rfN
v0xeod9bMaC4v1mPep1G4uPwJgasSz/IyFalou9vYaDbte73hCMpJD4q7RmQ
DrO86lyehP7vyICsmKGC1vwEEh8mzgzMbpfWqgx+hvXI3QKvTwp/9+s/JfvV
i30MjBp/VPL18CdYnzzAwNWYKW62ynFkv9I4wsC0k6rP38fHYL3yGANNVV5W
NeFY7+PdGKjVTL57vzcc5zl4MrBBpfqOW8gDsl9JeDHwA75YbBPdw3zCWQYW
vZ+x2T0xFP3jHAM6Tf96TJsYgv7hx8Dz5NwzHVvuoH9cZkB11Sbvle9uoX/4
M3By4oczPl430T8oBq4ZxZ8KOhiI/sEykNHoc66J/gf94x8G1tQmZxXWYX36
+w0GFD61h7ZsY9E/ghhoOU9vdeql0T+CGVifL3ZN+zmF/nFX+P/5TfPSpogw
X/GAgbVaGqoFQ/0JD8lIBjZ5BOvsULqK+YuHDED65sgGk8uEx/FYBvpqZS1c
wy5iPfUJA3b/HJlzYqof4VH7HwNe8sundCedx/pqAgO7E1tlNY6eIzzMXzLw
bVzB3AQDX6y3pjKwIM/w8gk1H8IjOZ0Bi2sJN9zGnsX6awYD90Z/6Fdd6U14
zM5i4MwqXWsT99OYT89hYKHcrc912ScJj5v5QvzI3SqfZeCJ+fVCBi59/WeW
9Du8vpIuFY6/WX8mbjvohvn2TwwU5Brc3qp5gvBwr2TgqIPbX7PuY9j/U81A
au/fFTfKXQmPhjoGAl+WhFblH8V+oEaB15wvgTklRwgPq2Yh/idGswc/Hsb+
oG8M2Ie+fThf7RDhkdbBgGvRMbU43wOYr/8ufP8lTVPUB1wIj3m/GZArDp39
ntqH+fseBrRlDg2z0t9LeAT1M2DaNWmo1K/dmM8XY8HmpIFb2JtdhIfMUBZS
uryUlcJ2Yn+RFAselbovmgOdCQ/PESzMvlI6bd5NJ+w3GsnChsBIH/nIHegf
o1hYnK625ESmI/qHEgs7ykK/z6tzQP8Yy4KKnHey3cbt6B/jWbh9wyiY+2CP
/jGRBbENQVa6++zQP9RYWKijpnFAaSv6xzQWYlpoU9WCzegfGsJ6B15JrQ+x
Rf/QYuHD3DH3Is5uQv+Yw8JwSTu7sMM26B86LDz+ZSE58aA1+sd89v/Pn7KZ
42GF/rFIeD+5XT+6RZboH0tY2DhZSTQ63gL9w4CF9foyZm515ugfK1io0D1/
jZpojv6xioVWxY5d1elm6B/GLBjG5JccdzBF/1jPwlrDCJsDIzegf5iyoBZe
03Xq/Xr0DwsWVH/vLJ327zr0D2sWMmT2uB3yXEt4hNqyYJm9IblnlzH6x1YW
lsmo/5npuAb9YzsL9sOSHCt2r0b/2MFC3YdFTndOrkL/2CmsP8e5PifQCP1j
Dwv3xzpm3Hi1Ev3DhYV53m031/9agf5xiIXTl/bWteitQP84ysJoVxunzJOA
/nGcBW/bgm+HuOXoH+4sDDXw7N27yhDrH6dYeJPSwU2TMCA8FnmzoO1W/Vu9
YCn2Y/kI67P2Ob0lZgnhcf88C4XT4prm3NDH/qyLLGzKuu6QL1pMeCheZYX9
2uXKBGYR9msFsACt/MdrwQsJDx+aBf/Gd2WPni/A/BfHglkIm9tSOZ/waL/O
wpCtbeYDI+ZjPuxf4fvdeSaltFKP8Nh2mwU/LZ20ib66mB8LEY63PPeqn291
CI/seyyEu+rPSFLRwX6vcBaSjcX3ZR/RJjz0o1gImqMZuD14Ht5/EsPCqXLL
pa4H5hIeYXEsyFZ7KL5bPQfvR4ln4c40DW27WbMJD+XnLCwwn3504SScl7Uh
UVjPyP0pJRO0CI9zycLvHwJpodNmYr4tjQVxh7LDsXqahEfnaxZWVey47mep
gfm3t0L8RM46q+SJ87wcs4V483RWjg6bjvm4XOF443f6lVRPIzxyP7DQoXM5
9s2kadifXMxC77Afc2bumUp4LPvIwt/Uyl0bnqpjv3K5wFPLRuw/GXXCI/Iz
C5KXjybf3zcF/aOGhSsvzS/tz1FD/2hgwUDy9sjkBWroH00szIcZrUfXT0b/
aGFhz/hLhq8XTEL/aGMhRFbeTGfuRPSPThZM7R1t42aqon/8ZKFnUXNh6JIJ
hIdTNwv6mnb3HYzHo3/0Ct+v3DNQ20kF/WNAOH6GFhmvuzYO/UOcA9mvno/i
EsaifwzjQFf8gmF36xj0D2kOah+etsycNQb9Q4aD6E1Lq7YfVkb/kOPAtUfF
52KiEvqHAgfuXYt1/8gqoX8oc/Bs9X7vY7sU0T/GcVD/7NYG60wF9I8JHNgn
WSwYqamA/jGJA9UO55RMdjT6hzoH5j8i/aaIj0b/mM6B3nZFqWNuo9A/NDlI
eZ54JrpRHv1jFgfOaZc0Hn0enN83jwP5yRcjSr+ORP/Q5SDiyyrZnh5Z9I8F
HFySj311QFkW/WMxBwlWHg/ydGTQP5Zy8A+9ut5/2wj0j+UcsJ42K1f6D0f/
WCn8Hp4Pwya9kUb/WM2B70ELLmGoNPZvr+Vg/43aBB9jKcLjjwkH51S+j1nP
SmI/90YOqspyO2Y2DyM89lhyME7rrtnaxcOwv9uGg0hz1ZuPbg8lPIo3czD2
OMWbiA/F+03tOchvi85mnSQIDyMHDg7PfnDoSa441s+cOBBXubHo8XJxwiNu
Fwe3Y77PiHo2BOtpezlgQtdagSHOg1Q7wIGfTZnd36diWF87zEEPc6yMMhAj
PAJcOahz1pdp8vtrSPzjBAe26VFbNO4NkPmYfR4cTJ2sZ/w+tR/nX54Wfu+H
YdUdX3C+pcsZDt6ev2U6MK6PzK8M8eWg7PvmAeN1vYbEPy5w8OhUWXbCqR5D
4h+XOUhW8lGWf/WHzPtcc01YbxxVu27UH9Ie5CXiILXzl9GRbd1kXmc8w8Hr
QpmzveG/cR4nz0HI2xKL+OG/DYl/3OCgyEMnquPAL0PiH7c44FJ/u/xJ+GlI
/OMOB6slL73smPOTzCfNDBV4Orl32V7/YUj84z4HWwcGWlxlcL7oggjh+Lhq
0WF59juZH3ogmgPr8dQXn94uQ+Ifj4TjeXjpW7dTXWT+56fHwvH+qs/hXW8n
me85+j8OssVlb5p6dJJ5qmtfcLDOeWqP61Ccl3o2iYNVaioWEmwHmYf6LIUD
id9tR30UOwyJf7wS4tPH3VBzfzvhMT2Dgz23dxZdZtpwXuk7Dh7qfn6UmfCN
8GDfc2CibzKj+xfOf83KE9Zn3DYxak0r4TGkkINtsz9G/XOxhfBYXCJ83ooi
r1WfmgmPw2UcND2PVxw/rpnweFDBwZ/aTduXuXwlPCqrOMjtzqsT+9SE81Pr
OGiIfVR8YnoT4WHyhQPPxLF7pYIaCQ/frxwUzip75//zC+HxopWD9KLReVL7
vhAeHe0cfC/X0ZOtaSA8NL4L8R0jH6q7pIHw2P5LiN86h9hTcfWEB/+Hg+Xi
Y5aEmtQbkvplHwdr/k1TiH5SR3hIiPFwQqX5qp5+HeGxRIIHRs9ZbWROLeFx
VJKHANvG9n3rawmP8OE81PTtNKv/VkN4VMvy8Gz4uv2ndtYQHmNH8ZC0bZyR
nXwN4WGmyEOTuvTyh3w14XFhDA9ZdzOcgjZWEx5JKsLrr0ccvHSzivD4rsqD
9NpTBdywKsJDS42HigMvNSTmfSY8dkzloXmZcm3UhUrCI3AGD7HvvIzo2ArC
I28mD60bnC8wMhWEh+QcHiKvfTkneagc591q87Cq9MUW1fxPhMdxPR7Gn3BX
OvSnjPCIWsjD+86Fm06uKCM8avV5uCzKzM36+ZHwUDHgQS/NzUTc5iPhYQ48
tKeumh9UV0p4XDTi4U2uV1+zeinhkbyGh3Obhw+rdCzB+bvreBAzP3553/IS
wmO2KQ8pTHoO611MeDib87A+cOn0vCnFhMdNKx5uPtFT0HtVRHh82MRDWGVf
41GjIsJDeisPM4wsI1SjCgkP2MbDGjVR6FT1QsLD3ZGHk9ZbjGVbCgiPGGce
lgYbfx7lXkB4NOzmwbbXsLRWo4DwUHXhocRCVqXj9gfCw+ogDyOeL1z0WuMD
4XHlCA/KCnYVYvX5hEfaMR6GbBtdcS8gn/DoduPhPh8yRk0pn/CYd5IHydzg
f+XW5uF8Yi8erph7hWZn5RIeQWcF3m/6NfvNcgmPonM89FiJt/2ek0N4yFwU
+GprKoJiDuGx8goP4dx/Iz8GvSc8PP152Gt5cVyheTbhEUvxUHtXXWOJYTbh
0cjy0DW8yHLm2SzCY9J1HqJbJVLP574jPGxu8iAbtUAkGfOO8LgWxMNA5qeX
b6LeEh7pwTzY7xoy5Y7WW8Kj5y4P253u9offySQ8dMJ4UEh5ULdJKpPw2BvJ
g1lrkewi5UzCI/ghD686fcw+2mfg/OZYHr689d/WZ/+G8JCL50HJ+t6m2epv
CI/Vz3jQLm+Zsl7xNeFxOkH4/aLcE5adfE14PHnJQ4M5W1v9O53waE7loXDq
7jlbh6cTHlNeC5/fdlhFxSad8NicyYPEqrNR1fdfER6iLB6sIg9LXTR6RXhk
5Pz//7do0PZphEd/Pg9fH44cOP04jfCYXySsTwrW1e9MIzz2l/JwvFbL4+mv
VMIj9BMPEd11tRVZqYRHWSUP+vv+8E/kUwmPUTU8FHUbNaxvScb51vU8zP5h
NCs+Kpnw8G7kYdqNGm/HyGTC42kzDw+e/mRi7ZIJj9Zvwn7yfYOWxr4kwmNq
Jw+nRQtPfXZIIjy2/uAhofvm+W9tiYQH/ZsHQ5c5FVHDkgiPtz08uPgkHv2T
k2D4P2BbqNM=
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.315130742092038`, 1.5}, {7.5426448708857095`, 
       15.500000000000014`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"By at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-1.2439829285420365`, 
       1.2369270277004007`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {600, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwsnXk8Fesfx481pSRttCElWkRUUpwhW5IQEpJ9SYlQKpVIpIVzlC0J2RJl
LUXOZIkiKYSSLUnaVJIr1W++z/d3/7mv9+uZec7M857PfMxwz5V1OmDuys9i
sZomsVjwb/zHk5ZRVj1U1/pXq/forFsGAx70gUmS4cuO/dOq+qlgF9XgQfuN
vtu+XYLFTvfRnNJW6EFf2/1cYJknix320ax0UYIH/eP2EaHllSy2G/xz0oPe
pl/f5b6Qj20IE7p60KxjZou/H+VjK9pFVf7c6kE/vaG3r+MVH3tK23UfzTUe
dKavh+NqTX72J2a6MEkP2iIr30o4jZ/9tIH55687vejGpf2+kwXYtwyYCd+5
04M5CvGhfgJsZjYFu3p3ulxM+55ZjwDblzm86wXu9Lb87N9ftwuyzZnpPsa5
0/vlzwz6VwqyVeGfE+600uaPBj/XC7FnwYQu7nRF1aPPZ/OF2KPM6VYaudOC
xgNKW1YKs+Hwpqi400OGKsuNbwqzYTqzue50yGqZw3mrJrETE5h//rjRwpPv
D4UVTWIfgwnfutFOLbPHvm0SYcPpKjxxo91HbX9PfSLC1oITznejvwg+mv3T
ZjJbGhYw1o02f3rNou7rZDbRcdyNNhM5+jkjYgqb+HB2o8dp86O3loqyiY8t
bvRJL+W9ArWi6GO1G83KVbtXu28q+pjjRovMk8mQnjsNfUy40o8PnotUfjQN
ffS50lHsbmXZo2Loo86VltPPfyKlOh193Halh+897N/8bTr6uOxKH18uZuZq
I44+jrnSkk9msD9XiKMPJ1daSa/L3Ex+BvowdKVvtbw1uBE9A30oudISCU9d
xf7OQB+zXOlGFs860VsCffx2ocW65/5x75NAH70u9J7OvcExu2aij1oXOj+j
eNeGlpno45YLvbJm8rRA81no45ILnduuzPFumYU+jrrQGi9uhmrazEYfDi50
l6ununD/bPRh4EJbfpj07aPvHPSxyoX+EHD3l4TgXPQx04WWNyz+npI4F32M
O9MZGp3j5Wsl0UePM33lw8TG6FZJNpxu1CNnOlK/n6d7VAp95DrTCmXz7wov
mYc+YpzpEN4wS7B5Hvo44kz3CWr+8gqfjz72ONOfRB/c9dFegD70nOlNP51y
9PgWoo+VzrSao+wxmdqF6EOC2X+iYlw9ZhH6GHOiqf1yTo9dpdFHtxO9sUtb
K1xahh0NB1jjRPfJt0dfj5JBHzed6FUTwlE2ArLog+NET6wpPN54VBZ9BDrR
Y7TaZLlRWfRh70Qf3Z/pfDxgMfrQdaLDYzeuEfxvMfpY4URPk5P/2x0shz5m
ONHyS4wrNaYtQR+/HOnCRfocKnkJ+njjSCedMFgrrbYUfVQ70p4OopHCz5ai
jxxHuqfLapfCAXn0Ee1IxxxSfFY6axn6OOxID/kcUf7CW8buAx+7HWkhj3On
+HwVMB+bHWl5swXtqxQU0YeiI/0y/JVqwTtF9CHuSGs0jrs03FiOPkYd6IV/
1MYr/Vegj04H+uhrbvBr/ZXoo9KBPiRSK+Igswp93HCgZX7efnyVTwl9RDnQ
Nl7tl98NKaGPAAda2rlO9HznavRh50AvdjN+7O+ljD50HOiht70Gqz4row8F
B1qwXU8+xU8FfYg50A2fBf/8+6vCdofjG9pDX/NdPnIqag0ez5099F575Tu7
l6ri54fuoe06nbhPaVX8PNM99DOjrDNiTmo4/4I99HKXpjqHyWvR7wd7+iPf
kM2ku2vRZ4k9rU2nlRt6rWPfA38h9nT1bpu73vLr0ZeJPX3qG1XzaHA9+plv
T+e06yinFaqjj8HddMixzj1Wpzfg+hfvplc/NevcZK+B631qN82XGVpZRG3E
9d22mx71yPu0cOUmXM95u+kuW9vZb2U0cf0G7Oh2z5RjPtJauF5FdrR2teFt
dQU2rs9JO9ojWl7l1UKKPRtO2NiOHo58v0olj8LrUcqOzldX4XfR0cbr750t
Xd6wtb/0jTZeb4W2tKJYYOGRkzp4fZ2wpb3XuCuNLNuM19NWW3qHepTO0bbN
eP3MtaWzDZyVnS7qoo9+Gzrg7oY+4W166CPfhn5521iubqY++jhuQ9/P3zA4
5a0++jCyoW9etUjfUGaAPubY0CmlQferkwzZauDj7S76glZj7OKILejj9i46
z3yxddNxI/QRtIverLvhh9mJrejDcBe9Y+Rf95pIY/Qxexct9NrESDhtG/ro
s6aVjuW1uz8yQR+3rOmjrS4/fv/ajj6OWdOCL25plF4xRR8G1vSSsayrFTpm
bFFYwFnW9OF1nbYHv5mhj56d9LNDDe4a2eboI28nzTuhkhfqvgN9HNlJD3yy
Pf1wtQX60N9JSyQLyXrzWaKPmTvpGY/5/5vyxhJ9dFvREWaHt8pWWaGPXCu6
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
qZlja/41sqGOFs/hUkHecz/xhT9hk9/nSXGproEHDR4dNcRH9AIutWh8w+Qa
sYfER600l9pn9zZ51tlS4uPvYi51J/NwedTeW8THWnku1b72So1IcALxsU+R
mX/e7PlOy4Lw+XsllwpwN9Y3WZRG8vFqNZdyyD95zv3rLXweV+VSUyoLm5cL
l5B8GK7jUq5RatMqm+/h8/kGLrVy1vIYE1YFycfdTVzqRcgBx7nNNMnHFzaX
ypverGnqUUnysXQzl5IruLkwoKyK5MNOn0vx90pkL+RVk3zEbOFS5bkSB+0c
MR9PjJnzM7XfWsWtIfngM+VSOQlTHWy21eDz/Q4uNUNpo2NWfDXJxwErLrVJ
8PcBvrNV+Ly/i0vZcL1kazQqST7e2DHrvU3k1It6Gp//HbhU33O23KLcCpKP
rc5cSkH1zXdWRxmP/D7SjUsdWTzY1Lf2HsnHPU8uJTH1r96exjvkfjW8j0t9
DDadnZJRTO5Xy3y4lMikj2+u38P7lb0fc/w/R07eFCog96vLh7jUkjd8kncm
3Sb3q4YjjN9b6wsc7XKJD4HjXKpTvOAg/98b+D4hmEstPMmucOrLwuePUC51
2YMVF83KxOePM1zqzKvPH1tN0/H54yyXKuX21aU2pOHzxwVmvhXzs829U/H5
I5q5/ooW7F2ukoLPHzFcKj9v0I+9OBmfP2K5VIpdZ9DB2Un4/JHApbRuxxyd
tC4Rnz+ucqmS7wvbf5+Ix+ePFGb9dqucG/wYi88f17nU3dZKiRlHLuPzRyaX
klmnY6UkdwmfP3K41C5JDVGb91x8/sjjUgkx/9qkqzj4/JHPpb78xy4zKY7G
548iLtURq+nR6htFfPTd4VJZhrYDF5Mv4PPHfS5lorgqJPXjOXz+eMCletO2
/Xa2isTnD5pLGSw+K2jeGYHPH1Vcyi+lRM3wWDg+fzziUm5rwp/qqZzB548n
jH+7VNOwidP4/PGUS9XkcPg8X4fi80cTlxLfeK/NoSEEnz+amfWvXvFAtfEU
Pn+0MddvAvOzbXcwPn+84lKmOuYXpv87ic8fb7jU7j2ar+hdJ/D5o4dL5UYu
vh78NAifP95yKeriJvkL1sfw+eM9l8p+M5Rk9x/+fLVjiLm+qy7PCLwViM8f
n7nUsJvG90uHDuPzxzCXOjtolKFregifP35wKUM5N7sMjQB8/vjFpY79r2U7
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
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{12.315130742092038`, 1.5}, {7.5426448708857095`, 
       15.500000000000014`}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bz at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.40604768387892254`, 
       0.40600750580931627`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1000, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1000, 250},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.81953972563284*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"96abe582-c7f5-4439-b959-eebba62bc1e8"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nK parameter: \"\>", "\[InvisibleSpace]", 
   "6.060779831172044`", "\[InvisibleSpace]", "\<\"\\nWavelenght: \"\>", 
   "\[InvisibleSpace]", "1.4743963313081164`*^-8", 
   "\[InvisibleSpace]", "\<\"[m]\"\>"}],
  SequenceForm[
  "\nK parameter: ", 6.060779831172044, "\nWavelenght: ", 
   1.4743963313081164`*^-8, "[m]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.8195397256484647`*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"14d60384-b2ff-46d6-b421-b6140b4b8b8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(1) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "2.095476009084858`"}],
  SequenceForm["(1) RMS Phase Error [deg]: ", 2.095476009084858],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.8195397513994527`*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"36605ca6-97fc-43a5-8428-1d8c1b58f03b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n> Phase Error solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "25.81349`8.86339171889518", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "\n> Phase Error solved! (elapsed time: ", 25.81349`8.86339171889518, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.819539751461929*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"07ef53b4-24a1-468e-bcb6-77b9f3d3ce8f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2-Fitting) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "0.4378556297138314`"}],
  SequenceForm["(2-Fitting) RMS Phase Error [deg]: ", 0.4378556297138314],
  Editable->False]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.8195397515400515`*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"2cf2a751-18b2-4dbd-8125-b318a7bdf19d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
zkCZ1f+5iJWpeb5+HYv/XKjE6xWO0GD45+LjT07guq0M/1z0S85cOEGX7m/I
xdpPPg1tp2n8plwYmqYO3ZxC87fmonuTwd0HOqQP7T34HC85W6+nJ7U7c/HC
prRr9w32/UMeFmscqCm7SP2DYh5mrYmoc+lL+qCcB+23c2+ofCV9VcvDAuWB
lj7TSB908rB10/bZ3ucoH+vnYYf/M3n5aWz9Lw/ylyZLnN4QH8x75tt+Y29r
GdP/PMQv6Wt/k8fiPw93MrePz1rE8M9DbpKg66km/d4lD71zViY0f2X452H5
ab/coHdUr/rnYdyv40NeaxA/uXmoCJnT/Ggl1Yuxeah2vJLwjtWLvDxM7Ng5
TOkn1Yv8PLicHaP2tj/Vi8I8OBsMrD0moHqxuGe89w838GypXpTkIbHj9469
8pSPS/Jw88B52b81FJ/leSioOW/XeJb1/3lo2+epMqie4Z+HF9P6DtB8z/DP
w7L4ZV/nycwg/POAXlfyJgyh6w094ymv+HjIgPjQlAfHiLnz9V2JD615+CiY
bOl3gZ6nPQ9+674M0ewkfejMQ9e4jRVjuez7h3xsHvX1U2Mi6YNiPv7NO9FU
o9Qs9YdyPh6XNSz08KD+QS0fT5wNdR4eIX3QycdbzeUrXzaTPujnozpc86tq
MuFhkg+Odu2WEffZ+k8+gnYZq+g6M/zzsYg/SX5aC8M/Hws9XA0tYygfOOXj
w5lJRh/kyHbJR3SffTvWCOh+Ts94j3qNaRtH/PLPh/4hm+S5LTQ/Nx/xAqPY
o7dofzo2H1tHjpq18QDtT/Py0Q7btoE+9D0UPx/7IlV29Z/5hfYj87FmYvex
c4HKhH8+lEsn/Ji1hu1P5+NXiPxuzgviQ0k+tP7adEYZkP/L83E+4tdkRabf
VfloG7Y9fFwEO5+cD6Xj6+QX2TL9z8eu5voxA7TYebZ8eN1bv7P9C11vyMfd
5amFr64y/PPReq1kWuMBqj9ae/A7EXbi9xGqT9rz0af6isT6O9UvnfmQU2yd
NGou+/6hABdtxs+TCaH+QbEAiUd8dGT4ClJbuQBHNGX8bvBkpf5RK8DPU99/
+npR/6BTgBEt8j8/mpE+6Bfg6o5buiMDKf5MCqAuJ4ldPJL0wbwAnA+9a7jK
rP8vQPTpizfOjyU87QpQJJ64I3Aei/8CDAl0u/PYn2yXAsT+59yWmc3wLwB2
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
6E0I9Q+cIrw9udnM1P3Dhf8BlVyK3A==
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"[deg]\"", TraditionalForm], None}, {
        FormBox["\" \"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Linearized Phase\"", TraditionalForm], 
     PlotRange -> {{0., 1240.}, {-28.519161169740833`, 28.36235742083074}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQDQEf7P/v3GIa5/zSHirgcKQ076Pr7RdQPoeDwuns
DO7PT6B8AQcx8ZZri5XeQPkiDnsULiUI2j+C8iUc+uQe2FZyP4XyZRx41pT9
/fwexldwMPpdIO5k+RDKV3I4YXsw/c2tO1C+ikO4e3/9km6YejUHLk7LmW6f
r0H5Gg53JngGO8yFqddyuLCoYbnWlntQvo5D+4aPvU5MV6F8PYfcOZNWPUk9
B+UbOOyS3/iQTRGm3tDh1rHfhx5sOQTlGzl4F/qnpZbB1Bs72OrxOodMvAjl
mzgwfPrw8WndPijf1GGCmLmzXeJMKN/MQTtMVbPLHKbe3CFz21w3PfeN+yF8
C4elV3hlA5bPgcpbOqy125sfmrcRyrdy4PusZMFusx2q3tqhqPj2swMfN0P5
Ng7miesl7989BeXbOuhoTD+Y9P8ilG/nsP2xjU6r024o395BupOrTOD9dSjf
wUFXfU6omd5lCL/BweEk48fbDo6XoPKODqmv8hu6Vt6Cyjs6xG/n+PqX4QFU
3smhPMFolt1eqPoGJ4enn7oYP396DJV3dmhSkbt+Uur6fgAjR7FE
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[5]], CompressedData["
1:eJxTTMoPSmVmYGBQA2JGIGZigIEP9v93bjGNc35pDxVwOFKa99H19gson8NB
4XR2BvfnJ1C+gIOYeMu1xUpvoHwRhz0KlxIE7R9B+RIOfXIPbCu5n0L5Mg48
a8r+fn4P4ys4GP0uEHeyfAjlKzmcsD2Y/ubWHShfxSHcvb9+STdMvZoDF6fl
TLfP16B8DYc7EzyDHebC1Gs5XFjUsFxryz0oX8ehfcPHXiemq1C+nkPunEmr
nqSeg/INHHbJb3zIpghTb+hw69jvQw+2HILyjRy8C/3TUstg6o0dbPV4nUMm
XoTyTRwYPn34+LRuH5Rv6jBBzNzZLnEmlG/moB2mqtllDlNv7pC5ba6bnvvG
/RC+hcPSK7yyAcvnQOUtHdba7c0PzdsI5Vs58H1WsmC32Q5Vb+1QVHz72YGP
m6F8GwfzxPWS9++egvJtHXQ0ph9M+n8Ryrdz2P7YRqfVaTeUb+8g3clVJvD+
OpTv4KCrPifUTO8yhN/g4HCS8eNtB8dLUHlHh9RX+Q1dK29B5R0d4rdzfP3L
8AAq7+RQnmA0y24vVH2Dk8PTT12Mnz89hso7OzSpyF0/KXV9PwAvZ7FG
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 38.}, {-0.6234068899280741, 0.8792285146489316}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.819536266244748*^9, 3.819536753908888*^9, 
  3.8195397515869265`*^9},
 CellLabel->
  "During evaluation of \
In[152]:=",ExpressionUUID->"035c446e-72b7-4fad-81bb-096dce539540"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["GV \t\t[lambda/4] (Pol. El\[IAcute]ptica)", "Section",
 CellChangeTimes->{{3.8072738730146723`*^9, 3.8072739173378515`*^9}, {
  3.80729137749512*^9, 3.8072913780971837`*^9}, {3.80734829061942*^9, 
  3.8073482945599165`*^9}, {3.8073483271401873`*^9, 3.807348368120531*^9}, {
  3.8073665097876616`*^9, 3.8073665393548503`*^9}, {3.8073667069803224`*^9, 
  3.8073667085238132`*^9}, {3.807369057444827*^9, 
  3.8073690579153504`*^9}},ExpressionUUID->"9c834eed-4656-4c83-9d52-\
3b8a7da41d48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"checkmode", ",", "4"}], "]"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"draw", "[", 
     RowBox[{
     "mag", ",", "magn", ",", "ex", ",", "ey", ",", "checkgeo", ",", 
      "espessurab", ",", "periodL", ",", "dist", ",", "layers", ",", "gap", 
      ",", "4"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"solve", "[", 
     RowBox[{"undulator", ",", "magn"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "1"}], "]"}], ",", 
      RowBox[{"field", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "2"}], "]"}], ",", 
      RowBox[{"bforces", "[", 
       RowBox[{"undulator", ",", "subdiv"}], "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "3"}], "]"}], ",", 
      RowBox[{"cforces", "[", 
       RowBox[{
       "cass1", ",", "cass2", ",", "cass3", ",", "cass4", ",", "subdivcass"}],
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "4"}], "]"}], ",", 
      RowBox[{"interror2", "[", 
       RowBox[{"undulator", ",", "xo", ",", "xf", ",", "nx"}], "]"}]}], "]"}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "5"}], "]"}], ",", 
      RowBox[{"phaseerror", "[", 
       RowBox[{"baxis", ",", "btotal", ",", "xo", ",", "xf", ",", "nx"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{"check", ",", "6"}], "]"}], ",", 
      RowBox[{"mpError", "[", 
       RowBox[{"undulator", ",", "gap", ",", "yo", ",", "yf", ",", "ney"}], 
       "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"save", "[", 
     RowBox[{
     "isave", ",", "exportmatrix", ",", "expforces", ",", "exportfield", ",", 
      "baxis"}], "]"}], ";", 
    RowBox[{"isave", "=", 
     RowBox[{"isave", "+", "1"}]}], ";"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8073483754364543`*^9, 3.807348392267894*^9}, {
   3.807366486840685*^9, 3.807366503337678*^9}, {3.8073695074565644`*^9, 
   3.807369514407405*^9}, {3.807369775966049*^9, 3.807369778976206*^9}, {
   3.807867982983096*^9, 3.8078679864583826`*^9}, {3.812106607498929*^9, 
   3.812106616826409*^9}, {3.8160900497592306`*^9, 3.8160900550721636`*^9}, 
   3.8160910089090605`*^9, {3.8160914953139653`*^9, 3.8160915030646105`*^9}, {
   3.818841530281466*^9, 3.818841530593959*^9}, {3.819471436717331*^9, 
   3.8194714393059554`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[153]:=",ExpressionUUID->"6ce1838b-505e-4039-a119-2b9843454e50"],

Cell[CellGroupData[{

Cell[BoxData[
 ButtonBox["\<\"Plot Undulator\"\>",
  Appearance->Automatic,
  ButtonFunction:>Print[
    Show[
     Graphics3D[
      $CellContext`radObjDrw[$CellContext`undulator], PlotLabel -> 
      "Delta Undulator 52.5", BaseStyle -> {14, FontFamily -> "Times"}], 
     ImageMargins -> 5, ImageSize -> {600, 350}]],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.819539751899453*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"fc3374de-d450-4aeb-9ac2-51b14c1b0940"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Undulator System Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "39.6104358`9.049354614100066", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Undulator System Solved! (elapsed time: ", 39.6104358`9.049354614100066, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.8195397915098886`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"38d949d0-3742-489f-b54b-8b7d44a583b7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> Fields Calc. Solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "10.0312389`8.452899567015564", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "> Fields Calc. Solved! (elapsed time: ", 10.0312389`8.452899567015564, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.819539801541128*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"a9e9e2d7-a75d-4d9c-9c72-14a4613099cc"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
RVafqCU8ivqEzzdHTQkzrxX9D54LmJ0=
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0.5, 1.5000000000000568`}, {1.5, 21.67461794390654}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bx at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.7186597585190598, 
       0.7184870892840182}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {200, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
/H8yHxYr
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0.5, 1.5000000000000568`}, {1.5, 21.67461794390654}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"By at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.6186286502820914, 
       0.6187917982349805}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {600, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJwsnHk8VG0Ux1WKSihCqKQkSQvylmIOUbJljZDsFNn3fV+H9kVpEUkqKUsK
zc2afd/XmWnXniRFr7ln/PN+5tPMnXuf7/M7z/mdc+ZdZ+dh5Difg4OjjYuD
g/Vf/DtOrJUr2bN+waQqPVgw/8AbF+KMtFPNZc9J1aqfm6xONbkQJU8Er50d
m1TN9lRZ0vvYhSgqD3FZb/xLNW7csHRNugux667mZcuXv1SdWH8RLsSXeJ48
XZhS1WJd0NGFcNvjkbOkbEpVxupU5U8dF2LrK+WQu7t+qy7pzfJUkXch3no9
vrTn6W/Vj3OXixNxIRSmc7f37J1WbW6a+5t1JnrWSMunVU2r5h+Yu+BrZ2LN
wvb1wXp/VOeutsmq0ZkgZlrqHg78UfWau72sR86EyJUFnFquf1WN5i43fsmZ
KDTmkDT/91dVgfUX7kw8i1r/e/rijKog64IOzoTQ3ccaB+VnVSfnHrdS25m4
e9lhydH2WVXW7S3Z4Uw4pZ7/aeT7T5V1OUNhZ2KmdDzr1jIOypX0ub8ZJyLc
9tvwJnsOSgjrgkwnokbu+t+GZxwU1uNuanAich9mnbksOI9CPnCBEyGa2WGZ
6TmPspa1gBedCMVrJ7QmW+ZRSBxhTsTHj3Jmd7bNp5A87J2ID8YJF2rPzqeQ
PA46ERvpbY+dpuZTSB7bnAiGytdT6TYLKCQPISfijJ7sHe/GBRSSx19HQpDp
WL5wNyeF5MFwJG4FPpd2uctJIXm8dCTUo4oz88UXUkgeDx2JV/N/J3w5u5BC
8rjgSNTuvl+ixrOIQvIIcSRiTdJayxIXUUgedo5E6F7ecwHcXBSSh5YjUVDG
vzo1hYtC8tjqSAy2NmoJr+CmkDwEHYngtCPW2zO4KSSPPw7EpoCZqxMyiykk
D7oDobsquiKybDGF5FHnQChvX1H53WAJheSR70C4p5wyO/5hCYXkcd6BKDhP
GeNMXIo8gh2ImqZ72m9keJCHjQMhLzDQvK2NB3kccCAq90uMc4YsQx5yDsSX
f1c9kjfzIg8BByJvb276mxFe5DFtT0xf3F8Jl/mQx5g90TY5zm0ry09hPe6p
WnvCu3DUTjuVH3nctyfqhFKPfP/GjzzO2RP/FVlEehxZjjyC7AmRu7t+9lct
Rx7H7AnrSepC7R0rkIemPfGr83JDX+YK5LHFnjDietRxc6UA8lhhTzStvJxS
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
8CjqE86X+uwpT/pbxP8DTCyB8g==
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->{{0.5, 1.5000000000000568`}, {1.5, 21.67461794390654}},
      ImageSize->{400, 190},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Bz at Axis\"", TraditionalForm],
      PlotRange->{{-200., 1406.69625}, {-0.6411103039011329, 
       0.6412535170139795}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {1000, -100}, 
     ImageScaled[{0.5, 0.5}], {400, 190}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1000, 250},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.819539802150498*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"c8f7cf6e-9856-4cf9-883e-edef62bf8278"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nK parameter: \"\>", "\[InvisibleSpace]", 
   "5.543444817828178`", "\[InvisibleSpace]", "\<\"\\nWavelenght: \"\>", 
   "\[InvisibleSpace]", "1.2462290291350099`*^-8", 
   "\[InvisibleSpace]", "\<\"[m]\"\>"}],
  SequenceForm[
  "\nK parameter: ", 5.543444817828178, "\nWavelenght: ", 
   1.2462290291350099`*^-8, "[m]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.819539802166122*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"0ff9593a-54c2-4a46-b0f2-8ebb5857f616"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(1) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "2.6981149779345643`"}],
  SequenceForm["(1) RMS Phase Error [deg]: ", 2.6981149779345643`],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.8195398276641626`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"4a9886d8-3909-46bd-a487-4b88d038f880"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\n> Phase Error solved! (elapsed time: \"\>", 
   "\[InvisibleSpace]", "25.5761404`8.859380000821924", 
   "\[InvisibleSpace]", "\<\"[s])\"\>"}],
  SequenceForm[
  "\n> Phase Error solved! (elapsed time: ", 25.5761404`8.859380000821924, 
   "[s])"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.8195398277110124`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"03825b51-ec4e-45b8-bf3a-e878d82bb274"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2-Fitting) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "0.44569324439302166`"}],
  SequenceForm["(2-Fitting) RMS Phase Error [deg]: ", 0.44569324439302166`],
  Editable->False]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.8195398277735124`*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"e82d5038-0b82-4a1d-bfa2-eab59320fba7"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
/KFBCp/j6+5ZJVO/e6MUqSv5o5a5yFX+H2m1K1c=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"[deg]\"", TraditionalForm], None}, {
        FormBox["\" \"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Linearized Phase\"", TraditionalForm], 
     PlotRange -> {{0., 1208.}, {-27.91569134812253, 27.93248936478732}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQBWIQDQEf7Hfc33RFa/8Le6iAQ2DOx/D5HDA+h4OY5elJ
dxTeQPkCDleeZS+Zs+kJlC/icLtT3JntOowv4ZCh0BVo1gzTL+Mgsp6N813E
QyhfwSE6qv5wihyMr+Sw7pfgi/k+T6F8FYeOqQ+aFsbfhvLVHHhuK1qcngfj
azgIfzt57PAOmH4th8d5WsbLl12B8nUcsqbM9pUyhPH1HLZP2JM3leMulG/g
8N1Xfa7EylNQvqHDqaevYn21TkP5Rg71E3Sz7e5ehfKNHfh9Zh67UrELyjdx
aL7Z2p7SugPKN3UQevHr+YeX56B8MwfB/y3Pd7m274fwzR1Ulhq62bTXQvkW
Ds7+Qjn+PQeg6i0drLnDEnI37IXKWzl8lA5qsHBeAOVbO3xIiNlfePEMlG/j
sOrZHQHfCWehfFsHw29NKUv5D0L5dg4XRKJ8n6y4CuXbO2gLCL82roDxHRwY
U6OS883OQ/gNDg6iLFOrdlbcgco7OmQcuL4o9SSU3+Do0GD4SFbJ8hpU3snB
6uVxMesND6HyTg55hXFp+sGP9gMAK0mtNQ==
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[5]], CompressedData["
1:eJxTTMoPSmVmYGBQBWJGIGZigIEP9jvub7qitf+FPVTAITDnY/h8Dhifw0HM
8vSkOwpvoHwBhyvPspfM2fQEyhdxuN0p7sx2HcaXcMhQ6Ao0a4bpl3EQWc/G
+S7iIZSv4BAdVX84RQ7GV3JY90vwxXyfp1C+ikPH1AdNC+NvQ/lqDjy3FS1O
z4PxNRyEv508dngHTL+Ww+M8LePly65A+ToOWVNm+0oZwvh6Dtsn7MmbynEX
yjdw+O6rPldi5Sko39Dh1NNXsb5ap6F8I4f6CbrZdnevQvnGDvw+M49dqdgF
5Zs4NN9sbU9p3QHlmzoIvfj1/MPLc1C+mYPg/5bnu1zb90P45g4qSw3dbNpr
oXwLB2d/oRz/ngNQ9ZYO1txhCbkb9kLlrRw+Sgc1WDgvgPKtHT4kxOwvvHgG
yrdxWPXsjoDvhLNQvq2D4bemlKX8B6F8O4cLIlG+T1ZchfLtHbQFhF8bV8D4
Dg6MqVHJ+WbnIfwGBwdRlqlVOyvuQOUdHTIOXF+UehLKb3B0aDB8JKtkeQ0q
7+Rg9fK4mPWGh1B5J4e8wrg0/eBH+wE3Ra03
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 37.}, {-0.5726544379609046, 0.8790114275996384}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.819532862389495*^9, 3.819539827820389*^9},
 CellLabel->
  "During evaluation of \
In[153]:=",ExpressionUUID->"642698bd-192e-4598-a8f2-c43551c9ee23"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Export", "Section",
 CellChangeTimes->{{3.8070400059270697`*^9, 
  3.80704000664486*^9}},ExpressionUUID->"fdd0c3be-2fd6-454f-ae03-\
fd7494386369"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "checkexp", "]"}], "\[Equal]", "1"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"exportf", "[", 
    RowBox[{"exportmatrix", ",", "exportfield"}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.807040011390921*^9, 3.8070400426742373`*^9}, 
   3.807040112047844*^9, {3.8070402001160774`*^9, 3.807040341968361*^9}, {
   3.80704037580037*^9, 3.80704044120453*^9}, {3.8070405138488197`*^9, 
   3.8070405932520714`*^9}, {3.8070406411246624`*^9, 
   3.8070407009138827`*^9}, {3.807040735111663*^9, 3.807040859368154*^9}, {
   3.807040917315491*^9, 3.8070409411304073`*^9}, {3.8070409783612323`*^9, 
   3.8070410153635125`*^9}, {3.8070412035199585`*^9, 3.807041282552071*^9}, {
   3.8070413377708187`*^9, 3.8070414077376785`*^9}, {3.807041501457631*^9, 
   3.8070415019590964`*^9}, {3.807041643735731*^9, 3.807041658365182*^9}, {
   3.8070417986141415`*^9, 3.8070417998335075`*^9}, {3.8072712045367837`*^9, 
   3.807271217168996*^9}, {3.807369537361058*^9, 3.8073695724497824`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[154]:=",ExpressionUUID->"ccd2f988-a752-4f79-b409-557000e1ef56"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.807368719905012*^9, 3.8073687207078466`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"fc9c2787-e302-4a3f-b9e0-9739711ad79c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Post - Calc", "Section",
 CellChangeTimes->{{3.81246434466601*^9, 
  3.8124643599212985`*^9}},ExpressionUUID->"c8faf523-9dc6-477a-862b-\
a224cd29faaa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"===", "==="}], "=", 
    RowBox[{
     RowBox[{"==", " ", 
      RowBox[{"Physics", " ", "Parameters"}]}], " ", "===", "===", "==="}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"eletron", "=", "1.60217662*^-19"}], ";", " ", 
    RowBox[{"mo", "=", "9.10938356*^-31"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eRestEnergy", "=", "510998.92811"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"[", "eV", "]"}], "*)"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"==", " ", 
     RowBox[{"mo", "*", 
      RowBox[{"c", "^", 
       RowBox[{"2", "[", "J", "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bfield", "=", "baxis"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bfieldT", "=", "btotal"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Principal", " ", "Longitudinal", " ", "Axis"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dx", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xf", "-", "xo"}], ")"}], "/", "nx"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"longAxis", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"xo", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Longitudinal", " ", "Axis", " ", "from", " ", "0"}], " ", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"longAxis", "-", 
        RowBox[{"longAxis", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "1000"}]}], ";"}], 
   "  ", 
   RowBox[{"(*", 
    RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", " ", 
     RowBox[{"Find", " ", "Peaks"}], " ", "===", "===", "==="}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "limits", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ampX", "=", "0.1"}], ";", " ", 
    RowBox[{"ampY", "=", "0.1"}], ";", " ", 
    RowBox[{"ampZ", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Find", " ", "Peaks"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"peakX", "=", 
     RowBox[{"FindPeaks", "[", 
      RowBox[{
       RowBox[{"bfield", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
       ",", " ", "ampX"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"peakY", "=", 
     RowBox[{"FindPeaks", "[", 
      RowBox[{
       RowBox[{"bfield", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
       ",", " ", "ampY"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"peakZ", "=", 
     RowBox[{"FindPeaks", "[", 
      RowBox[{
       RowBox[{"bfield", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
       ",", " ", "ampZ"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"peakT", "=", 
     RowBox[{"FindPeaks", "[", 
      RowBox[{"bfieldT", ",", "0", " ", ",", "0", " ", ",", " ", "ampZ"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Remove", " ", "extremities"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"peakT", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"peakT", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";", 
    RowBox[{"peakT", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"peakT", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", 
         RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"longPeakT", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"s", "[", 
        RowBox[{"[", 
         RowBox[{"peakT", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "peakT", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "peakZ", "]"}], ">", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakZ", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakZ", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"peakZ", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakZ", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longPeakZ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"longAxis", "[", 
           RowBox[{"[", 
            RowBox[{"peakZ", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "peakZ", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakZ", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "5"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "peakY", "]"}], ">", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakY", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakY", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"peakY", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakY", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longPeakY", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"longAxis", "[", 
           RowBox[{"[", 
            RowBox[{"peakY", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "peakY", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakY", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "5"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Length", "[", "peakX", "]"}], ">", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakX", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakX", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"peakX", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakX", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longPeakX", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"longAxis", "[", 
           RowBox[{"[", 
            RowBox[{"peakX", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "peakX", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"peakX", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"10", "^", 
           RowBox[{"-", "5"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{"peakX", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
       RowBox[{"Mean", "[", 
        RowBox[{"peakY", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", 
          RowBox[{"peakX", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
         RowBox[{"Mean", "[", 
          RowBox[{"peakZ", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"longPeak", "=", "longPeakX"}], ";", 
         RowBox[{"Print", "[", "\"\<PeakX\>\"", "]"}]}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"longPeak", "=", "longPeakZ"}], ";", 
         RowBox[{"Print", "[", "\"\<PeakZ\>\"", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"longPeak", "=", "longPeakY"}], ";", 
       RowBox[{"Print", "[", "\"\<PeakY\>\"", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"periods", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"longPeak", "[", 
         RowBox[{"[", 
          RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
        RowBox[{"longPeak", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "longPeak", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{3.81947888708759*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[156]:=",ExpressionUUID->"cb46c071-24a1-432d-87b7-513dfa605f30"],

Cell[BoxData["\<\"PeakX\"\>"], "Print",
 CellChangeTimes->{3.819478889311718*^9, 3.819479247139778*^9, 
  3.8195329403005953`*^9, 3.8195398279297886`*^9},
 CellLabel->
  "During evaluation of \
In[156]:=",ExpressionUUID->"37335791-a2c1-49dc-b329-2c5b860610bc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"===", "===", "===", " ", 
    RowBox[{"Magnet", " ", "design"}], " ", "===", "===", "==="}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nperiods", "=", 
     RowBox[{"Length", "[", "periods", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"periodL", "=", 
     RowBox[{"Mean", "[", "periods", "]"}]}], ";"}], " ", 
   RowBox[{"(*", "mm", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eEnergy", "=", 
     RowBox[{"3", "*", 
      RowBox[{"10", "^", "9"}]}]}], ";"}], " ", 
   RowBox[{"(*", "eV", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gamma", "=", 
     RowBox[{"eEnergy", "/", "eRestEnergy"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "=", "299792458"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"m", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kparam", "=", 
     RowBox[{"0.0934", "*", "periodL", "*", 
      RowBox[{"Mean", "[", 
       RowBox[{"peakT", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{"!!", 
     RowBox[{"!!", 
      RowBox[{"!!", 
       RowBox[{"!!", 
        RowBox[{"!!", 
         RowBox[{"!!", 
          RowBox[{"!", " ", 
           RowBox[{
           "Todas", " ", "componentes", " ", "ou", " ", "s\[OAcute]", " ", 
            RowBox[{"1", "?"}]}]}]}]}]}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lambda", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mean", "[", "periods", "]"}], "/", "1000"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", 
          RowBox[{"(", 
           RowBox[{"gamma", "^", "2"}], ")"}]}], ")"}]}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", " ", "+", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"kparam", "^", "2"}], ")"}], "/", "2"}]}], ")"}]}]}], ";"}],
    " ", 
   RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{
     "\"\<\\nK parameter: \>\"", ",", "kparam", ",", 
      "\"\<\\nWavelenght: \>\"", ",", " ", "lambda", ",", "\"\<[m]\>\""}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", " ", "Integrals", " ", "===", "===", "==="}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"intField0", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}], 
           "/", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"longAxis", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"longAxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}], 
           "/", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"longAxis", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"longAxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
             RowBox[{"bfield", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}], 
           "/", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"longAxis", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"longAxis", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"10", "^", 
           RowBox[{"-", "3"}]}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "bfield", "]"}], "-", "1"}]}], "}"}]}], 
      "]"}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"[", 
     RowBox[{"T", ".", "m"}], "]"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"intField", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Accumulate", "[", 
        RowBox[{"intField0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Accumulate", "[", 
        RowBox[{"intField0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
       RowBox[{"Accumulate", "[", 
        RowBox[{"intField0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{3.81947888708759*^9, 3.819478924339545*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[175]:=",ExpressionUUID->"ddf56416-65e1-42df-b6ce-3e35117658d0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"\\nK parameter: \"\>", "\[InvisibleSpace]", 
   "5.5432364516423105`", "\[InvisibleSpace]", "\<\"\\nWavelenght: \"\>", 
   "\[InvisibleSpace]", "1.2461410694682185`*^-8", 
   "\[InvisibleSpace]", "\<\"[m]\"\>"}],
  SequenceForm[
  "\nK parameter: ", 5.5432364516423105`, "\nWavelenght: ", 
   1.2461410694682185`*^-8, "[m]"],
  Editable->False]], "Print",
 CellChangeTimes->{3.819478926239679*^9, 3.819479247193177*^9, 
  3.819532940347494*^9, 3.8195398279610367`*^9},
 CellLabel->
  "During evaluation of \
In[175]:=",ExpressionUUID->"54de02ac-b3d4-4959-9960-ed39dce25ddb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"===", "===", "===", " ", 
    RowBox[{"Phase", " ", "Function"}], " ", "===", "===", "==="}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"I01", "[", "i_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"eletron", "/", 
         RowBox[{"(", 
          RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
        RowBox[{"intField", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"I02", "[", "i_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"eletron", "/", 
         RowBox[{"(", 
          RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
        RowBox[{"intField", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "i"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"I03", "[", "i_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{
        RowBox[{"eletron", "/", 
         RowBox[{"(", 
          RowBox[{"gamma", "*", "mo", "*", "c"}], ")"}]}], "*", 
        RowBox[{"intField", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "i"}], "]"}], "]"}]}], "]"}], 
      "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"I2", "[", "j_", "]"}], ":=", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"I0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"I01", "[", "i", "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"I01", "[", 
                   RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
               "2"}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"I02", "[", "i", "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"I02", "[", 
                   RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
               "2"}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"I03", "[", "i", "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"I03", "[", 
                   RowBox[{"i", "+", "1"}], "]"}], "^", "2"}]}], ")"}], "/", 
               "2"}], ")"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "j"}], "}"}]}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"I0", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "I0", "]"}]}], "}"}]}], "]"}], "]"}], 
       ";"}], "\[IndentingNewLine]", ")"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", " ", "Phase", " ", "===", "===", "==="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"phase", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "/", 
           RowBox[{"gamma", "^", "2"}]}], "+", 
          RowBox[{"I2", "[", "j", "]"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", 
         RowBox[{"peakT", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"peakT", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"Length", "[", "peakT", "]"}], ",", "1"}], "]"}], "]"}], 
          "-", "2"}]}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.81947888708759*^9, {3.819478924339545*^9, 3.8194789576989565`*^9}, {
   3.8194789905798893`*^9, 3.8194790315038586`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[185]:=",ExpressionUUID->"975ab542-0450-4384-ab92-09f4f204bb5f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Phase", " ", "Error"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"phaseError", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"phase", "[", 
         RowBox[{"[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ")"}], "]"}],
          "]"}], "-", 
        RowBox[{"phase", "[", 
         RowBox[{"[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ")"}], "]"}],
          "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "peakT", "]"}], "-", "2"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rmsError", "=", 
     RowBox[{"RootMeanSquare", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"phaseError", "-", "Pi"}], ")"}], "*", 
       RowBox[{"180", "/", "Pi"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<(1) RMS Phase Error [deg]: \>\"", ",", "rmsError"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Print", "[", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"phaseError", "-", "Pi"}], ")"}], "*", 
        RowBox[{"180", "/", "Pi"}]}], "]"}], "]"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", "===", "===", " ", "Fitting", " ", "===", "===", "==="}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fitData", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{"longPeakT", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"phase", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fitLin", "=", 
     RowBox[{"NonlinearModelFit", "[", 
      RowBox[{"fitData", ",", 
       RowBox[{
        RowBox[{"a", "*", "x"}], "+", "b"}], ",", 
       RowBox[{"{", 
        RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"linearFit", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "+", 
          RowBox[{"longPeakT", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"fitLin", "[", 
          RowBox[{
           RowBox[{"s", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", 
           RowBox[{"longPeakT", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"linearizedPhase", "=", 
     RowBox[{"phase", "-", 
      RowBox[{"linearFit", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p3", "=", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"linearizedPhase", "*", 
        RowBox[{"180", "/", "Pi"}]}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Linearized Phase\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"300", ",", "200"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\< \>\"", ",", "\"\<[deg]\>\""}], "}"}]}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"errorP", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"linearizedPhase", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"peakT", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
             RowBox[{"peakT", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ";;", 
            RowBox[{
             RowBox[{"peakT", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
             RowBox[{"peakT", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
          "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "peakT", "]"}], "-", "1"}]}], "}"}]}], 
       "]"}], "*", 
      RowBox[{"180", "/", "Pi"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"\"\<(2-Fitting) RMS Phase Error [deg]: \>\"", ",", 
      RowBox[{"RootMeanSquare", "[", "errorP", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Show", "[", "p3", "]"}], ",", 
       RowBox[{"Show", "[", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{"errorP", ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"300", ",", "200"}], "}"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", " ", "5"}], "}"}]}]}], "]"}], "]"}]}], 
      "}"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.81947888708759*^9, {3.819478924339545*^9, 3.819478932346334*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[190]:=",ExpressionUUID->"662e7684-5a1b-4c07-9424-c57bf5f13fee"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(1) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "2.7094893141278473`"}],
  SequenceForm["(1) RMS Phase Error [deg]: ", 2.7094893141278473`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195329682055826`*^9, 3.819539856055914*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"5c9c601c-b8c2-4b0f-99b8-21be04c70aa3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"(2-Fitting) RMS Phase Error [deg]: \"\>", "\[InvisibleSpace]", 
   "0.42408790547870634`"}],
  SequenceForm["(2-Fitting) RMS Phase Error [deg]: ", 0.42408790547870634`],
  Editable->False]], "Print",
 CellChangeTimes->{3.8195329682055826`*^9, 3.8195398561496625`*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"c23230b0-5100-4173-a96b-e6bfd3e258ac"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1XHlczO/3rYhsCZVSqKSSEJKsnUhSIQqVaLSoSKZ9r2mf9llCfFIhlFAS
QjLWskT1tWTPnj1LZO03v9fcxz9ex3u/595znuUOXc/Ny30U5OTkunvLyf3/
37I/nZZPzo/Pn59gIKF/wF8XUeyHqEmElVDY93BN/q6phFWQv/K49osGc8Kq
mPG2UL7/kBmENRAmr64euH4mYW2sTLTP+X6KYR3Yb0gNuzyAYT1ssh7/0pVj
QVgffjVCs19XphE2gOHgnqv7PKcQNsLYSWP87LaZEDZGlPOfiAerxhA2gcd+
vb1Bp4YSnojLCWZv/HY9sZRhU5ToT10ddUQdMjwZD660fChcNZbwFHj1f7L0
186JhKdil2fswqMbphI2g/zUS6otd80JT8PqPw8LHobOIGwOj1+jo7YYziI8
HYcLTsr7PmbYAnXWA/2ShQzPQOz1q6PC5s8kPBNfp6vtVpK3IDwLibYmELeb
EZ6N53uPHzklfW8ZngOnmqL5TweNIzwXd8fX99hEjCJsiffng3vPK+xFGEi1
e2jed24fWXx4QNF3hy+BOaMpXlb4kJ72S8djHB23guaO5Vqje0zp+DxM9s3N
bCkzo+PzIB/4RaidMZ2Oz4f4QbxzXTLlA28+vL4sMzZMZXxbIzz0jWdpMmGe
NUxt/vO4k8DyZwFO/XoZV5hC9+MtgM40pYlO++h5cjbYcS3KpkB+Mh23wdoR
q66IQuh95RYi7sLJ4pOP6Ht4C3FxQ+jTzGl96bgtTN8qPgtzVJDFg2cLyf8e
jnM4PJLiswi3su7zBxUZ0fFF6P/mSOqSBlM6boeHyx/IBRwgPnh2uDlzks7f
1ul03B5//0oybuoSnzx7+P7rXBmYwPh2wOnWho7YR4R5DtC+/n552XR2fDHq
Dn7lyudTPvEWwyMx5MNBBXb/JSjWf5jzs5DykbcE3al/fg1WmkTHl2JH7PWn
m+spn3lL8d/0AO3hG4bTcUf8uVMVaF30QlYPcETaQb09w6ypXniOiGitNTkz
gepJ4oj4dp2B+jGs3pZh7zj+bVVXqkcsw/bgifh6juqVtwyhV99v/rKS6lmy
DAuPp17Z84/xuxxFoZq29WXEP5ZDMXX/sP5LWT4sh0N13d3qLnb9cix8Wj60
8wDTGyfwy95uVUsjPYITttVoXgpxIL3iOcHm/u5Dy9YZ0PVOWPtCEoI5mnS9
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
fPLLQfH07fMebib94ebAMuLzpOLnpE+RORjwIuSY6irWf5mD8c5Hbiu3U78K
PweZzaYqrh+p312Qgz9Oqz7/Ok397gU5qPwVnvNpEut3z0Fk4E0XQ0XqVynL
gZWVQ+03FdavkgOb/Cbd+6yfsTYHGq3aNa8dWP9aDop22Xy0r2Hj/xyk6Xxp
szdm/OfglcCtJ7OE8Z+DcdEDmh4MJdyeg2i51AZuOl3fkYNLnyuzvZXZfmcO
XJ9X2ByRkD9056Dt0AhTYRz7/UMuzEyaPvdaayDDSrnwcjK2NmD+oJKL/r9/
9l1nTv6gkQuhxtrm7ZvJH3Ry8dz3m8WqBXoybJSL8DMXnx7YS/E1zYW6mb/e
JTm2/5OLSWPtll1IYb9Xy4Xa+VSd7Nls/peLuUsXmbwYyPjPhdYeg8Qhzxn/
ubjt5bS993HGfy5UE8Pf/mH545eLwD83bqWvo/zi5sKxQVn9vhvlX2QuPiWO
9i0VUH7yctHUnjBh/FLKX34uXg3TG/begPJbkIuGUrkZgwzlZbggF/aJo9wa
TijJ4lOSi3blaEP7YPKHslwUPxnsFzWG+hmrcrEt2uPfyBC2/5eLwgtNYbyp
5A+SXPBMeYqiiaQHjbkYOX/OGPWFzP9z8buix5rjx/jPxZcd189EpjP+c3Ew
+ajpqT10fkcuuuOccxsvs36HXEx0GLDleS/Sn+5cvPs8vvREOPv9Qx5+zHxe
eSGZ9EspDx37pu87NoL0TSUPV8MymiuHkf5p5CG21jHIyIjGzzp5GHiuvunt
dPIHozzY9Yv+WhxK+mqahw0bWwMkiaS/FnnYdGzYzpnT2fp/HiY+OWnuFsHW
f/KwY6vFnelPKR8c8xC6ZV6OmzvjPw83jt8TzrrH+M/DIC8tj4XLCfvlwTv2
qpzDdbqem4c37/pfmLOS7h+ZB+WRURvXKrHf5+Vh3Idc0RNFej9+HvY6HXhh
d4/6VQR5qNFXs+x/kfrdC/KQ+j+7rAseN2l/Pg+X20wP/n5F/e5leUg4Xnjg
8mDWr5KHh5E9vS9EUj9jbR74s9t1Tr9l+z95yF9m9+D2BuKnMQ9TUiI27xzB
+lnzIOjhPd7xhPl/HgpfZx5eVcb4z8PGzR7VrpsId+Qh4IPoXMZk1u+Uh5yY
DeJOecqH7jwMtp998e439vsHAeaOHjwpmv1er7cAy+XPLP3G5g9KAoQei+k7
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
GPzJa9yZceQP7WIM9Qy5smbqL8v/A93GOdA=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"[deg]\"", TraditionalForm], None}, {
        FormBox["\" \"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Linearized Phase\"", TraditionalForm], 
     PlotRange -> {{0., 1272.}, {-27.898740749385908`, 27.868759258090613`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQDQEf7Hl/PPx9x+S1PVTAIXhTgGtU4zMon8Phq9C+
+GkvnkL5Ag7p/3Ue2Mq9gvJFHF6u3P7M6OwjKF/CIde2SDCD/zGUL+NwUnpJ
IcNNmHkKDh9Tnm+4M/0+lK/k4C3Scj42DsZXcXitv3T7lV8w/WoOpdskYou/
3YDyNRz8uo7+NS68CeVrObAVxE1L3P8AytdxeKa/ltf33SUoX89Bbt3k88Fb
YHwDh3VVGQ3Ljt2G8g0dfkrynWKbdQLKN3II7/udlznpJJRv7ODCLZuj6HMV
yjdxYGKND2KU2wnlmzo8CXuoeV9iB5Rv5hBUK3E1UfM8lG/u4M7vF5XKUrEf
wrdw0FgsdSVoWjxU3tKhLbBfPEX3EJRv5WASkXN1dctOqHprBz7/t7sfhXZA
+TYOG4v7f4pdPAnl2zq85K7SPyVxCsq3c2Cap71NzHUXlG/v4BTbHf20/DKU
7+CwLPRswDxuKL/BwcFjw525G57DzHN02G9p+unZtJtQeUeHB8uyTvxbDeUz
ODm0fFlh++7BJai8k0OfhXHthbP3ofLODoUtiXNEch5A5Z0dllTxr9mz9sp+
AAEGuWE=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        GeometricTransformationBox[
         InsetBox[
          BoxData[
           FormBox[
            StyleBox[
             GraphicsBox[{
               EdgeForm[], 
               DiskBox[{0, 0}]}], 
             GraphicsBoxOptions -> {DefaultBaseStyle -> Directive[
                 PointSize[
                  Rational[7, 360]], 
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6]]}, StripOnInput -> False], 
            TraditionalForm]], {0., 0.}, Automatic, 
          Offset[5]], CompressedData["
1:eJxTTMoPSmVmYGBQB2JGIGZigIEP9rw/Hv6+Y/LaHirgELwpwDWq8RmUz+Hw
VWhf/LQXT6F8AYf0/zoPbOVeQfkiDi9Xbn9mdPYRlC/hkGtbJJjB/xjKl3E4
Kb2kkOEmzDwFh48pzzfcmX4fyldy8BZpOR8bB+OrOLzWX7r9yi+YfjWH0m0S
scXfbkD5Gg5+XUf/GhfehPK1HNgK4qYl7n8A5es4PNNfy+v77hKUr+cgt27y
+eAtML6Bw7qqjIZlx25D+YYOPyX5TrHNOgHlGzmE9/3Oy5x0Eso3dnDhls1R
9LkK5Zs4MLHGBzHK7YTyTR2ehD3UvC+xA8o3cwiqlbiaqHkeyjd3cOf3i0pl
qdgP4Vs4aCyWuhI0LR4qb+nQFtgvnqJ7CMq3cjCJyLm6umUnVL21A5//292P
QjugfBuHjcX9P8UunoTybR1eclfpn5I4BeXbOTDN094m5roLyrd3cIrtjn5a
fhnKd3BYFno2YB43lN/g4OCx4c7cDc9h5jk67Lc0/fRs2k2ovKPDg2VZJ/6t
hvIZnBxavqywfffgElTeyaHPwrj2wtn7UHlnh8KWxDkiOQ+g8s4OS6r41+xZ
e2U/AA1KuWM=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[7, 360], 0.019444444444444445`]], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> {300, 200}, 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0., 39.}, {-0.5131934217753394, 0.8502030295928776}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
  "RowDefault"]], "Print",
 CellChangeTimes->{3.8195329682055826`*^9, 3.8195398562121625`*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"abd24a20-6a53-4712-8e27-11bada94db7d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1366, 695},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.1 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 595, 14, 95, "Input",ExpressionUUID->"4cf52398-bf3e-4582-9c14-dcfb60d6a1f7"],
Cell[CellGroupData[{
Cell[1200, 40, 3394, 51, 23, "Print",ExpressionUUID->"b0eb5d2a-93c3-4583-b17c-24eb514dd1da"],
Cell[4597, 93, 3226, 46, 23, "Print",ExpressionUUID->"15bad8fa-9d0c-4af7-9561-462b54155dd1"],
Cell[7826, 141, 3242, 47, 23, "Print",ExpressionUUID->"6e2dea64-2c20-4577-91f6-d9fcac0476f6"],
Cell[11071, 190, 3235, 46, 23, "Print",ExpressionUUID->"efdbd0b7-0159-42a9-a300-59eb1ccabee5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14355, 242, 155, 3, 73, "Section",ExpressionUUID->"893d239c-3939-4112-ad7c-8e714d47b28e"],
Cell[14513, 247, 6987, 176, 843, "Input",ExpressionUUID->"25319173-b35c-4f1e-b00d-db32905ebfc7"]
}, Closed]],
Cell[CellGroupData[{
Cell[21537, 428, 184, 3, 79, "Chapter",ExpressionUUID->"97afb4c8-5c47-403a-add0-cb68b9afcc8e"],
Cell[21724, 433, 906, 19, 117, "Input",ExpressionUUID->"0a50c16e-20cd-44d9-aa9b-69f7ac2bc95d"],
Cell[CellGroupData[{
Cell[22655, 456, 301, 5, 73, "Section",ExpressionUUID->"f441bd0d-c8ec-4835-ab4e-be0577b0f06b"],
Cell[22959, 463, 5253, 122, 447, "Input",ExpressionUUID->"bd795e85-5884-44b2-a9ee-8e63b621bba6"]
}, Closed]],
Cell[CellGroupData[{
Cell[28249, 590, 149, 3, 57, "Section",ExpressionUUID->"34f0457c-0a26-4be3-ade9-e0e22c2ba741"],
Cell[28401, 595, 49459, 1135, 3104, "Input",ExpressionUUID->"8f1cef53-9f75-45a5-83c5-05320646c3fb"]
}, Closed]],
Cell[CellGroupData[{
Cell[77897, 1735, 154, 3, 57, "Section",ExpressionUUID->"db838e27-8bdd-4c16-82a5-d4804f20fcad"],
Cell[78054, 1740, 6174, 148, 667, "Input",ExpressionUUID->"1607e584-2a8a-4aae-aa0b-0c0d757bb314"]
}, Closed]],
Cell[CellGroupData[{
Cell[84265, 1893, 156, 3, 57, "Section",ExpressionUUID->"6f49053d-6231-46a0-8ec3-aedf349052be"],
Cell[84424, 1898, 6612, 165, 513, "Input",ExpressionUUID->"243e7e2c-3702-4083-8717-53096f3f2978"]
}, Closed]],
Cell[CellGroupData[{
Cell[91073, 2068, 159, 3, 57, "Section",ExpressionUUID->"5320f46f-d000-4e41-b2a2-b242c1bca964"],
Cell[91235, 2073, 9691, 243, 689, "Input",ExpressionUUID->"9de7d61c-e905-44e2-855e-372d53a8085d"]
}, Closed]],
Cell[CellGroupData[{
Cell[100963, 2321, 162, 3, 57, "Section",ExpressionUUID->"d32b6236-5838-4df5-a942-65c2e9f7df31"],
Cell[101128, 2326, 3806, 83, 403, "Input",ExpressionUUID->"397306de-3aa7-45ab-98b1-c8be08c152b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[104971, 2414, 162, 3, 57, "Section",ExpressionUUID->"8c1c567c-0472-4c45-8bf4-0ca7574f2fc8"],
Cell[105136, 2419, 12848, 335, 1328, "Input",ExpressionUUID->"8f8b166f-b5be-4f38-8ca4-178888b6fdb2"]
}, Closed]],
Cell[CellGroupData[{
Cell[118021, 2759, 163, 3, 57, "Section",ExpressionUUID->"8c0859bb-0e05-48e1-b5f7-4f50be279076"],
Cell[118187, 2764, 12175, 301, 843, "Input",ExpressionUUID->"8f6f8bdd-5ea7-4259-ad0c-60913d3459b6"],
Cell[130365, 3067, 9110, 231, 689, "Input",ExpressionUUID->"7f73c67e-f928-4992-a3c3-35250540e008"]
}, Closed]],
Cell[CellGroupData[{
Cell[139512, 3303, 158, 3, 57, "Section",ExpressionUUID->"1b941c43-f9fd-48f5-b1a7-fccc74def38d"],
Cell[139673, 3308, 40066, 911, 2933, "Input",ExpressionUUID->"1d83b681-b2ce-4698-a428-35db1d372314"]
}, Closed]],
Cell[CellGroupData[{
Cell[179776, 4224, 201, 4, 57, "Section",ExpressionUUID->"172bd0b0-c188-4b64-8761-91b763c61a81"],
Cell[179980, 4230, 4272, 90, 446, "Input",ExpressionUUID->"22a6c19f-bfa7-4345-9fec-030ef3b3c896"]
}, Closed]],
Cell[CellGroupData[{
Cell[184289, 4325, 153, 3, 57, "Section",ExpressionUUID->"9c5e6dab-e476-4496-8406-a5dc6e5131d6"],
Cell[184445, 4330, 5949, 135, 551, "Input",ExpressionUUID->"c4978d9d-8c8f-4567-995d-ca75bb076fa9"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190443, 4471, 184, 3, 92, "Chapter",ExpressionUUID->"b237b327-0aba-4796-8f75-cd66e53a38b0"],
Cell[CellGroupData[{
Cell[190652, 4478, 2253, 48, 117, "Input",ExpressionUUID->"76fa5ee8-878b-4529-aa83-45eed9927979"],
Cell[192908, 4528, 4585, 92, 54, "Output",ExpressionUUID->"7d3bb52f-1291-45d4-bbe0-109f27eb4fd5"],
Cell[197496, 4622, 6249, 136, 54, "Output",ExpressionUUID->"1bdb9df9-3e00-4a3d-a13d-feb4b5d2fffc"],
Cell[203748, 4760, 5553, 117, 54, "Output",ExpressionUUID->"6808b6b0-969a-4d34-9efb-e44500e14645"],
Cell[209304, 4879, 3196, 57, 54, "Output",ExpressionUUID->"2d98fdef-e4a3-4c28-b409-9469e5d76629"]
}, Open  ]],
Cell[212515, 4939, 2185, 36, 117, "Input",ExpressionUUID->"92d7750c-d5d9-4604-816d-cfe0c6717ea4"],
Cell[CellGroupData[{
Cell[214725, 4979, 399, 6, 73, "Section",ExpressionUUID->"4d8e4b08-1b35-4d6a-9d2f-e6e40477a5a3"],
Cell[CellGroupData[{
Cell[215149, 4989, 5824, 113, 381, "Input",ExpressionUUID->"9f5771ec-7dfb-4cf6-83ac-0de93e7c8202"],
Cell[CellGroupData[{
Cell[220998, 5106, 578, 15, 37, "Print",ExpressionUUID->"a8752e2e-83f4-491b-9087-67997d3647a9"],
Cell[221579, 5123, 532, 13, 23, "Print",ExpressionUUID->"9f5ba20f-6938-47dd-8178-9757548e60c0"],
Cell[222114, 5138, 523, 13, 23, "Print",ExpressionUUID->"57faf456-995e-426e-9ae5-f52a409c69b1"],
Cell[222640, 5153, 95422, 1621, 283, "Print",ExpressionUUID->"98c54680-513f-4fdf-92dd-f56397542cf0"],
Cell[318065, 6776, 603, 14, 62, "Print",ExpressionUUID->"02df5f94-0312-4264-818c-0b59a454f905"],
Cell[318671, 6792, 431, 10, 23, "Print",ExpressionUUID->"31951b6e-b41e-4a43-9e18-d4692a113436"],
Cell[319105, 6804, 528, 13, 43, "Print",ExpressionUUID->"81a7cc84-e45a-4e69-bb75-9cc39535fa19"],
Cell[319636, 6819, 446, 10, 23, "Print",ExpressionUUID->"b75d9ce4-baac-4870-b977-e8046527ba05"],
Cell[320085, 6831, 23428, 426, 230, "Print",ExpressionUUID->"2568484d-43b9-4f2b-aa89-14743c786afc"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[343574, 7264, 338, 5, 57, "Section",ExpressionUUID->"fe17b71d-2d94-4914-8c31-f279617a37f3"],
Cell[CellGroupData[{
Cell[343937, 7273, 3408, 77, 359, "Input",ExpressionUUID->"a4b74bfd-8a39-4006-884f-bf851cd462e7"],
Cell[CellGroupData[{
Cell[347370, 7354, 551, 14, 37, "Print",ExpressionUUID->"88c230ff-1417-4d84-bcc2-9f79a9871df3"],
Cell[347924, 7370, 508, 12, 23, "Print",ExpressionUUID->"9092b6ed-2435-431e-8867-ad5830ab2c42"],
Cell[348435, 7384, 496, 12, 23, "Print",ExpressionUUID->"0653da85-1dd1-4066-b9d6-3c8b47e8140b"],
Cell[348934, 7398, 101789, 1721, 283, "Print",ExpressionUUID->"303dbdff-6949-47fc-a4bb-c19b54ebf96a"],
Cell[450726, 9121, 572, 13, 62, "Print",ExpressionUUID->"0305e6e2-55df-4468-a763-291917824e97"],
Cell[451301, 9136, 404, 9, 23, "Print",ExpressionUUID->"a3a2510a-a977-4ba3-844b-c3229b8ef99e"],
Cell[451708, 9147, 501, 12, 43, "Print",ExpressionUUID->"d0541060-9e0e-4441-b3c9-b82f35e3e701"],
Cell[452212, 9161, 417, 9, 23, "Print",ExpressionUUID->"7b3444de-bcfe-4bb3-9fed-9dc4ce39a42c"],
Cell[452632, 9172, 25302, 457, 230, "Print",ExpressionUUID->"9a338551-16a8-4ba3-8fec-3b24e1df314a"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[477995, 9636, 378, 5, 57, "Section",ExpressionUUID->"ac564794-99d1-4c52-89ca-5a773696ea90"],
Cell[CellGroupData[{
Cell[478398, 9645, 3142, 74, 337, "Input",ExpressionUUID->"c5dc65be-2ad8-40fa-acf7-833eab9da9f9"],
Cell[CellGroupData[{
Cell[481565, 9723, 574, 15, 37, "Print",ExpressionUUID->"aadcdaba-1c8d-4ebc-8be9-befc59f7e998"],
Cell[482142, 9740, 526, 13, 23, "Print",ExpressionUUID->"1ca20195-6be6-444d-aa41-d9c2f0bf3d95"],
Cell[482671, 9755, 517, 13, 23, "Print",ExpressionUUID->"c4d0b166-3c89-48ef-88c8-b4d9ab9a86cb"],
Cell[483191, 9770, 98171, 1663, 283, "Print",ExpressionUUID->"96abe582-c7f5-4439-b959-eebba62bc1e8"],
Cell[581365, 11435, 598, 14, 62, "Print",ExpressionUUID->"14d60384-b2ff-46d6-b421-b6140b4b8b8a"],
Cell[581966, 11451, 424, 10, 23, "Print",ExpressionUUID->"36605ca6-97fc-43a5-8428-1d8c1b58f03b"],
Cell[582393, 11463, 518, 13, 43, "Print",ExpressionUUID->"07ef53b4-24a1-468e-bcb6-77b9f3d3ce8f"],
Cell[582914, 11478, 442, 10, 23, "Print",ExpressionUUID->"2cf2a751-18b2-4dbd-8125-b318a7bdf19d"],
Cell[583359, 11490, 23865, 433, 230, "Print",ExpressionUUID->"035c446e-72b7-4fad-81bb-096dce539540"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[607285, 11930, 492, 7, 57, "Section",ExpressionUUID->"9c834eed-4656-4c83-9d52-3b8a7da41d48"],
Cell[CellGroupData[{
Cell[607802, 11941, 3134, 74, 337, "Input",ExpressionUUID->"6ce1838b-505e-4039-a119-2b9843454e50"],
Cell[CellGroupData[{
Cell[610961, 12019, 549, 14, 37, "Print",ExpressionUUID->"fc3374de-d450-4aeb-9ac2-51b14c1b0940"],
Cell[611513, 12035, 506, 12, 23, "Print",ExpressionUUID->"38d949d0-3742-489f-b54b-8b7d44a583b7"],
Cell[612022, 12049, 496, 12, 23, "Print",ExpressionUUID->"a9e9e2d7-a75d-4d9c-9c72-14a4613099cc"],
Cell[612521, 12063, 105711, 1782, 283, "Print",ExpressionUUID->"c8f7cf6e-9856-4cf9-883e-edef62bf8278"],
Cell[718235, 13847, 571, 13, 62, "Print",ExpressionUUID->"0ff9593a-54c2-4a46-b0f2-8ebb5857f616"],
Cell[718809, 13862, 402, 9, 23, "Print",ExpressionUUID->"4a9886d8-3909-46bd-a487-4b88d038f880"],
Cell[719214, 13873, 501, 12, 43, "Print",ExpressionUUID->"03825b51-ec4e-45b8-bf3a-e878d82bb274"],
Cell[719718, 13887, 420, 9, 23, "Print",ExpressionUUID->"e82d5038-0b82-4a1d-bfa2-eab59320fba7"],
Cell[720141, 13898, 23320, 424, 230, "Print",ExpressionUUID->"642698bd-192e-4598-a8f2-c43551c9ee23"]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[743522, 14329, 152, 3, 57, "Section",ExpressionUUID->"fdd0c3be-2fd6-454f-ae03-fd7494386369"],
Cell[743677, 14334, 1213, 22, 95, "Input",ExpressionUUID->"ccd2f988-a752-4f79-b409-557000e1ef56"],
Cell[744893, 14358, 177, 3, 32, "Input",ExpressionUUID->"fc9c2787-e302-4a3f-b9e0-9739711ad79c"]
}, Closed]],
Cell[CellGroupData[{
Cell[745107, 14366, 157, 3, 57, "Section",ExpressionUUID->"c8faf523-9dc6-477a-862b-a224cd29faaa"],
Cell[CellGroupData[{
Cell[745289, 14373, 10919, 314, 1327, "Input",ExpressionUUID->"cb46c071-24a1-432d-87b7-513dfa605f30"],
Cell[756211, 14689, 260, 5, 23, "Print",ExpressionUUID->"37335791-a2c1-49dc-b329-2c5b860610bc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[756508, 14699, 5908, 171, 381, "Input",ExpressionUUID->"ddf56416-65e1-42df-b6ce-3e35117658d0"],
Cell[762419, 14872, 623, 14, 62, "Print",ExpressionUUID->"54de02ac-b3d4-4959-9960-ed39dce25ddb"]
}, Open  ]],
Cell[763057, 14889, 5046, 142, 469, "Input",ExpressionUUID->"975ab542-0450-4384-ab92-09f4f204bb5f"],
Cell[CellGroupData[{
Cell[768128, 15035, 6573, 185, 447, "Input",ExpressionUUID->"662e7684-5a1b-4c07-9424-c57bf5f13fee"],
Cell[CellGroupData[{
Cell[774726, 15224, 402, 9, 23, "Print",ExpressionUUID->"5c9c601c-b8c2-4b0f-99b8-21be04c70aa3"],
Cell[775131, 15235, 422, 9, 23, "Print",ExpressionUUID->"c23230b0-5100-4173-a96b-e6bfd3e258ac"],
Cell[775556, 15246, 24309, 441, 230, "Print",ExpressionUUID->"abd24a20-6a53-4712-8e27-11bada94db7d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

