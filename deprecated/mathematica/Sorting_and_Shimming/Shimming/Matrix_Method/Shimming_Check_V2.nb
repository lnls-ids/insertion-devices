(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2623369,      48348]
NotebookOptionsPosition[   2608469,      48098]
NotebookOutlinePosition[   2608810,      48113]
CellTagsIndexPosition[   2608767,      48110]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Ultima atualiza\[CCedilla]\[ATilde]o: 19/04/21 - 17h", "Text",
 CellChangeTimes->{{3.8245610108335533`*^9, 3.8245610365678215`*^9}, {
  3.8248026059986963`*^9, 3.8248026119394264`*^9}, {3.824883319650178*^9, 
  3.8248833233064055`*^9}, {3.8251483187551565`*^9, 3.8251483192556505`*^9}, {
  3.8273075836508875`*^9, 3.8273075858035297`*^9}, {3.8278288104371605`*^9, 
  3.8278288108349323`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"47550fd9-e148-430d-bac8-bf68dc26d950"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Conferir", ":"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", "Parametro"}], " ", "K", " ", "calculado", " ", "com", 
    " ", "campo", " ", "total", " ", "no", " ", "Erro", " ", "de", " ", 
    "Fase"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Problemas", ":"}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"-", " ", "ListShim"}], " ", "criado", " ", "com", " ", "limite", 
    " ", "superior", " ", "ao", " ", "da", " ", "cria\[CCedilla]\[ATilde]o", 
    " ", "da", " ", "matriz", " ", "de", " ", "resposta", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Adicionar", ":"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.823166486951538*^9, 3.8231666990638304`*^9}, {
   3.823167164627806*^9, 3.8231671650817366`*^9}, {3.823178688548235*^9, 
   3.8231786893197064`*^9}, {3.8231818484502044`*^9, 3.823181872871388*^9}, {
   3.8231879577379665`*^9, 3.823187960683326*^9}, {3.8231905821388845`*^9, 
   3.823190635031934*^9}, {3.8231906706548457`*^9, 3.823190709961046*^9}, {
   3.8232505369550877`*^9, 3.823250556123083*^9}, {3.8235915037968445`*^9, 
   3.823591529002202*^9}, {3.823597053815319*^9, 3.8235970688817444`*^9}, {
   3.823600603459483*^9, 3.8236006166937575`*^9}, {3.8236771445488358`*^9, 
   3.8236771536000586`*^9}, {3.8236772018214083`*^9, 
   3.8236772116458035`*^9}, {3.8236938398954053`*^9, 3.823693844315502*^9}, {
   3.8236945142388697`*^9, 3.823694520715124*^9}, {3.8236946670653763`*^9, 
   3.82369466747803*^9}, {3.8236961658732233`*^9, 3.8236961786000633`*^9}, {
   3.8236992158455057`*^9, 3.8236992198838453`*^9}, {3.823701245517312*^9, 
   3.8237012506889353`*^9}, {3.823701294767122*^9, 3.8237013133791013`*^9}, {
   3.8237074678320417`*^9, 3.823707468292592*^9}, {3.8237079258660126`*^9, 
   3.823707926282319*^9}, {3.8238707107444534`*^9, 3.8238707845511785`*^9}, {
   3.8238730663141956`*^9, 3.823873096464222*^9}, {3.824219080294917*^9, 
   3.82421912548112*^9}, {3.8242790831417227`*^9, 3.8242790835742927`*^9}, {
   3.8242975641422815`*^9, 3.824297584017357*^9}, {3.8243714830514746`*^9, 
   3.8243714847543573`*^9}, {3.824378828446958*^9, 3.8243788563221025`*^9}, 
   3.8243936179523487`*^9, {3.824397076755496*^9, 3.824397079768444*^9}, {
   3.8244837324781475`*^9, 3.824483736188841*^9}, {3.824484167499387*^9, 
   3.8244841870771437`*^9}, {3.824546851469715*^9, 3.8245468520963836`*^9}, {
   3.8245488955831847`*^9, 3.8245489159705524`*^9}, {3.8245610014429674`*^9, 
   3.8245610075835743`*^9}, {3.824799925829488*^9, 3.824799943507265*^9}, {
   3.8249135701810255`*^9, 3.824913589927373*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"8f8fa6f3-b1f2-47b9-abdc-d401b423527f"],

Cell[CellGroupData[{

Cell["Load Radia", "Section",
 CellChangeTimes->{{3.766397988602113*^9, 3.766398000439457*^9}, {
  3.784905891255539*^9, 3.7849058937557244`*^9}, {3.8244837953260765`*^9, 
  3.824483799507316*^9}, {3.824484206680256*^9, 
  3.8244842076301928`*^9}},ExpressionUUID->"f0f8bf98-657c-4b1f-92c8-\
1c5d521f1b9c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "Radia`"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RadPlot3DOptions", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"radUtiDelAll", "[", "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{"Erase", " ", "all", " ", "previous", " ", "elements"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6818148953014574`*^9, 3.6818148962234063`*^9}, {
  3.8230135271584983`*^9, 3.8230135274597864`*^9}, {3.823013680470293*^9, 
  3.8230136807868514`*^9}, {3.823186043440482*^9, 3.8231860437259874`*^9}, {
  3.824544725241103*^9, 3.8245447263781257`*^9}, {3.8245490022725987`*^9, 
  3.824549002725765*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[62]:=",ExpressionUUID->"904abf40-f477-4c0b-b095-f826ea8dd055"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Radia Version: \"\>", "\[InvisibleSpace]", "4.31`", 
   "\[InvisibleSpace]", "\<\" is loaded\"\>"}],
  SequenceForm["Radia Version: ", 4.31, " is loaded"],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7849720143550973`*^9, 3.784972153825938*^9, 3.7849727578753653`*^9, 
   3.784974794460477*^9, 3.7849751016751738`*^9, 3.8230100459579625`*^9, 
   3.823010522927283*^9, 3.823011733387135*^9, 3.82301332505227*^9, 
   3.823017768089164*^9, 3.823076709709319*^9, 3.8230798744067*^9, 
   3.8230799155814037`*^9, {3.823081905225359*^9, 3.8230819302538395`*^9}, 
   3.823082274501047*^9, 3.823082329858588*^9, {3.8230869554616766`*^9, 
   3.8230869683953133`*^9}, 3.8231001209469833`*^9, 3.8231032113615956`*^9, 
   3.8231036866409025`*^9, 3.823163002415757*^9, 3.8231787362514443`*^9, 
   3.82318592649638*^9, 3.8231899911358886`*^9, 3.823245078305653*^9, 
   3.8232504049957695`*^9, 3.8232512614321675`*^9, 3.8233304625348377`*^9, 
   3.823339500187972*^9, 3.8235915666990623`*^9, 3.823612824133816*^9, 
   3.823677920022477*^9, 3.8236817217310505`*^9, 3.823699917482423*^9, {
   3.8237033595430727`*^9, 3.823703380225029*^9}, 3.8238664614664392`*^9, 
   3.8238724984899883`*^9, 3.823872790282493*^9, 3.8242185600166693`*^9, 
   3.824279135157658*^9, 3.8242886370467157`*^9, {3.824289279014082*^9, 
   3.824289284480223*^9}, {3.8242896755745106`*^9, 3.824289678266048*^9}, 
   3.824309164782019*^9, 3.824309750451126*^9, {3.8243103067627115`*^9, 
   3.8243103100415306`*^9}, 3.824310453290001*^9, 3.824310573955643*^9, 
   3.824371574020602*^9, {3.824378159341833*^9, 3.824378171460893*^9}, {
   3.824385769733347*^9, 3.8243857712991915`*^9}, 3.8244538341046867`*^9, 
   3.8244837656412144`*^9, 3.824541634296287*^9, 3.8245447343538895`*^9, 
   3.8245493950137653`*^9, 3.824802621613325*^9, 3.8248195546638985`*^9, 
   3.8248202477016444`*^9, 3.824821181557722*^9, 3.824821935962757*^9, 
   3.8248878304843235`*^9, 3.824889865382368*^9, 3.82489180058799*^9, 
   3.824903180776255*^9, 3.8249062872439747`*^9, 3.8249126497042055`*^9, 
   3.8249136608180733`*^9, 3.825149090778469*^9, {3.8251494871138783`*^9, 
   3.8251494930202065`*^9}, 3.8272440226808233`*^9, 3.8273075923972178`*^9, 
   3.827589986119219*^9, 3.827829141686305*^9, 3.8279186272688117`*^9, 
   3.8279348249312706`*^9, 3.828092144586796*^9, 3.82844019854582*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"95bf2c4f-4432-43a2-842f-1c09eb4b3827"],

Cell[BoxData["\<\"Radia is copyright ESRF, France.\"\>"], "Print",
 CellChangeTimes->{
  3.7849720143550973`*^9, 3.784972153825938*^9, 3.7849727578753653`*^9, 
   3.784974794460477*^9, 3.7849751016751738`*^9, 3.8230100459579625`*^9, 
   3.823010522927283*^9, 3.823011733387135*^9, 3.82301332505227*^9, 
   3.823017768089164*^9, 3.823076709709319*^9, 3.8230798744067*^9, 
   3.8230799155814037`*^9, {3.823081905225359*^9, 3.8230819302538395`*^9}, 
   3.823082274501047*^9, 3.823082329858588*^9, {3.8230869554616766`*^9, 
   3.8230869683953133`*^9}, 3.8231001209469833`*^9, 3.8231032113615956`*^9, 
   3.8231036866409025`*^9, 3.823163002415757*^9, 3.8231787362514443`*^9, 
   3.82318592649638*^9, 3.8231899911358886`*^9, 3.823245078305653*^9, 
   3.8232504049957695`*^9, 3.8232512614321675`*^9, 3.8233304625348377`*^9, 
   3.823339500187972*^9, 3.8235915666990623`*^9, 3.823612824133816*^9, 
   3.823677920022477*^9, 3.8236817217310505`*^9, 3.823699917482423*^9, {
   3.8237033595430727`*^9, 3.823703380225029*^9}, 3.8238664614664392`*^9, 
   3.8238724984899883`*^9, 3.823872790282493*^9, 3.8242185600166693`*^9, 
   3.824279135157658*^9, 3.8242886370467157`*^9, {3.824289279014082*^9, 
   3.824289284480223*^9}, {3.8242896755745106`*^9, 3.824289678266048*^9}, 
   3.824309164782019*^9, 3.824309750451126*^9, {3.8243103067627115`*^9, 
   3.8243103100415306`*^9}, 3.824310453290001*^9, 3.824310573955643*^9, 
   3.824371574020602*^9, {3.824378159341833*^9, 3.824378171460893*^9}, {
   3.824385769733347*^9, 3.8243857712991915`*^9}, 3.8244538341046867`*^9, 
   3.8244837656412144`*^9, 3.824541634296287*^9, 3.8245447343538895`*^9, 
   3.8245493950137653`*^9, 3.824802621613325*^9, 3.8248195546638985`*^9, 
   3.8248202477016444`*^9, 3.824821181557722*^9, 3.824821935962757*^9, 
   3.8248878304843235`*^9, 3.824889865382368*^9, 3.82489180058799*^9, 
   3.824903180776255*^9, 3.8249062872439747`*^9, 3.8249126497042055`*^9, 
   3.8249136608180733`*^9, 3.825149090778469*^9, {3.8251494871138783`*^9, 
   3.8251494930202065`*^9}, 3.8272440226808233`*^9, 3.8273075923972178`*^9, 
   3.827589986119219*^9, 3.827829141686305*^9, 3.8279186272688117`*^9, 
   3.8279348249312706`*^9, 3.828092144586796*^9, 3.828440198552329*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"83dce6aa-533b-4ae0-824e-2c627c19c09a"],

Cell[BoxData["\<\"Portions copyright Synchrotron SOLEIL, France.\"\>"], \
"Print",
 CellChangeTimes->{
  3.7849720143550973`*^9, 3.784972153825938*^9, 3.7849727578753653`*^9, 
   3.784974794460477*^9, 3.7849751016751738`*^9, 3.8230100459579625`*^9, 
   3.823010522927283*^9, 3.823011733387135*^9, 3.82301332505227*^9, 
   3.823017768089164*^9, 3.823076709709319*^9, 3.8230798744067*^9, 
   3.8230799155814037`*^9, {3.823081905225359*^9, 3.8230819302538395`*^9}, 
   3.823082274501047*^9, 3.823082329858588*^9, {3.8230869554616766`*^9, 
   3.8230869683953133`*^9}, 3.8231001209469833`*^9, 3.8231032113615956`*^9, 
   3.8231036866409025`*^9, 3.823163002415757*^9, 3.8231787362514443`*^9, 
   3.82318592649638*^9, 3.8231899911358886`*^9, 3.823245078305653*^9, 
   3.8232504049957695`*^9, 3.8232512614321675`*^9, 3.8233304625348377`*^9, 
   3.823339500187972*^9, 3.8235915666990623`*^9, 3.823612824133816*^9, 
   3.823677920022477*^9, 3.8236817217310505`*^9, 3.823699917482423*^9, {
   3.8237033595430727`*^9, 3.823703380225029*^9}, 3.8238664614664392`*^9, 
   3.8238724984899883`*^9, 3.823872790282493*^9, 3.8242185600166693`*^9, 
   3.824279135157658*^9, 3.8242886370467157`*^9, {3.824289279014082*^9, 
   3.824289284480223*^9}, {3.8242896755745106`*^9, 3.824289678266048*^9}, 
   3.824309164782019*^9, 3.824309750451126*^9, {3.8243103067627115`*^9, 
   3.8243103100415306`*^9}, 3.824310453290001*^9, 3.824310573955643*^9, 
   3.824371574020602*^9, {3.824378159341833*^9, 3.824378171460893*^9}, {
   3.824385769733347*^9, 3.8243857712991915`*^9}, 3.8244538341046867`*^9, 
   3.8244837656412144`*^9, 3.824541634296287*^9, 3.8245447343538895`*^9, 
   3.8245493950137653`*^9, 3.824802621613325*^9, 3.8248195546638985`*^9, 
   3.8248202477016444`*^9, 3.824821181557722*^9, 3.824821935962757*^9, 
   3.8248878304843235`*^9, 3.824889865382368*^9, 3.82489180058799*^9, 
   3.824903180776255*^9, 3.8249062872439747`*^9, 3.8249126497042055`*^9, 
   3.8249136608180733`*^9, 3.825149090778469*^9, {3.8251494871138783`*^9, 
   3.8251494930202065`*^9}, 3.8272440226808233`*^9, 3.8273075923972178`*^9, 
   3.827589986119219*^9, 3.827829141686305*^9, 3.8279186272688117`*^9, 
   3.8279348249312706`*^9, 3.828092144586796*^9, 3.828440198552329*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"5eece199-eaed-42b9-96e9-6464267ac985"],

Cell[BoxData["\<\"Portions copyright Wolfram Research, Inc.\"\>"], "Print",
 CellChangeTimes->{
  3.7849720143550973`*^9, 3.784972153825938*^9, 3.7849727578753653`*^9, 
   3.784974794460477*^9, 3.7849751016751738`*^9, 3.8230100459579625`*^9, 
   3.823010522927283*^9, 3.823011733387135*^9, 3.82301332505227*^9, 
   3.823017768089164*^9, 3.823076709709319*^9, 3.8230798744067*^9, 
   3.8230799155814037`*^9, {3.823081905225359*^9, 3.8230819302538395`*^9}, 
   3.823082274501047*^9, 3.823082329858588*^9, {3.8230869554616766`*^9, 
   3.8230869683953133`*^9}, 3.8231001209469833`*^9, 3.8231032113615956`*^9, 
   3.8231036866409025`*^9, 3.823163002415757*^9, 3.8231787362514443`*^9, 
   3.82318592649638*^9, 3.8231899911358886`*^9, 3.823245078305653*^9, 
   3.8232504049957695`*^9, 3.8232512614321675`*^9, 3.8233304625348377`*^9, 
   3.823339500187972*^9, 3.8235915666990623`*^9, 3.823612824133816*^9, 
   3.823677920022477*^9, 3.8236817217310505`*^9, 3.823699917482423*^9, {
   3.8237033595430727`*^9, 3.823703380225029*^9}, 3.8238664614664392`*^9, 
   3.8238724984899883`*^9, 3.823872790282493*^9, 3.8242185600166693`*^9, 
   3.824279135157658*^9, 3.8242886370467157`*^9, {3.824289279014082*^9, 
   3.824289284480223*^9}, {3.8242896755745106`*^9, 3.824289678266048*^9}, 
   3.824309164782019*^9, 3.824309750451126*^9, {3.8243103067627115`*^9, 
   3.8243103100415306`*^9}, 3.824310453290001*^9, 3.824310573955643*^9, 
   3.824371574020602*^9, {3.824378159341833*^9, 3.824378171460893*^9}, {
   3.824385769733347*^9, 3.8243857712991915`*^9}, 3.8244538341046867`*^9, 
   3.8244837656412144`*^9, 3.824541634296287*^9, 3.8245447343538895`*^9, 
   3.8245493950137653`*^9, 3.824802621613325*^9, 3.8248195546638985`*^9, 
   3.8248202477016444`*^9, 3.824821181557722*^9, 3.824821935962757*^9, 
   3.8248878304843235`*^9, 3.824889865382368*^9, 3.82489180058799*^9, 
   3.824903180776255*^9, 3.8249062872439747`*^9, 3.8249126497042055`*^9, 
   3.8249136608180733`*^9, 3.825149090778469*^9, {3.8251494871138783`*^9, 
   3.8251494930202065`*^9}, 3.8272440226808233`*^9, 3.8273075923972178`*^9, 
   3.827589986119219*^9, 3.827829141686305*^9, 3.8279186272688117`*^9, 
   3.8279348249312706`*^9, 3.828092144586796*^9, 3.8284401985679617`*^9},
 CellLabel->
  "During evaluation of \
In[62]:=",ExpressionUUID->"3e8d7dec-1673-4a2e-8316-f25ec7d8fe72"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions", "Section",
 CellChangeTimes->{{3.8254204660420375`*^9, 
  3.825420467050026*^9}},ExpressionUUID->"d495606d-db3e-4327-800e-\
37b87def99b6"],

Cell[CellGroupData[{

Cell["BlockGeometry", "Subsection",
 CellChangeTimes->{{3.823006823806962*^9, 
  3.823006826765521*^9}},ExpressionUUID->"7968760e-7e14-4292-a93a-\
37de75888bb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idBlockGeometry", "[", "checkgeo_", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"geo1", ",", "geo2", ",", "geo3"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Geo", " ", "A1"}], ",", " ", 
        RowBox[{"Delta", " ", "52.5"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"checkgeo", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"geo1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "21.5"}], ",", 
               RowBox[{"-", "50"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"21.5", ",", 
               RowBox[{"-", "50"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "49"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "41.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "37.654"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "37.654"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "41.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "49"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "37.654"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "37.654"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo3", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "29.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "19.3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5.25", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5.25"}], ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "19.3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "29.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "33.946"}]}], "}"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"checkgeo", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"geo1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "37.654"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "37.654"}]}], "}"}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"geo2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"16.794", ",", 
               RowBox[{"-", "33.946"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "29.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"22.5", ",", 
               RowBox[{"-", "19.3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"5.25", ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5.25"}], ",", "0.0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "19.3"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "22.5"}], ",", 
               RowBox[{"-", "29.8"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "16.794"}], ",", 
               RowBox[{"-", "33.946"}]}], "}"}]}], "}"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"geo1", ",", "geo2", ",", "geo3"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8229973334496083`*^9, 3.8229975357986193`*^9}, {
   3.82299756675494*^9, 3.8229975706368685`*^9}, {3.823006742030616*^9, 
   3.8230068053256755`*^9}, 3.8230101467535343`*^9, {3.8231011693095837`*^9, 
   3.8231011939352427`*^9}, {3.8236951137333775`*^9, 3.823695115555832*^9}, {
   3.8237008274433804`*^9, 3.8237008500952864`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[109]:=",ExpressionUUID->"4de94087-7d08-4952-a3bf-d422348e590b"]
}, Closed]],

Cell[CellGroupData[{

Cell["cassetteDraw", "Subsection",
 CellChangeTimes->{{3.822996513974464*^9, 3.8229965257892003`*^9}, {
  3.8229965764562564`*^9, 
  3.8229965827147937`*^9}},ExpressionUUID->"86d862a3-7228-447a-994a-\
c0ea2fb460ce"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cassetteDraw", "::", "usage"}], " ", "=", " ", 
    "\"\<magnetizations = Lista das magnetiza\[CCedilla]\[OTilde]es dos \
blocos de um cassete (lista de tamanho n); blockGeo = {geo1,geo2,geo3}; \n\
termination = {{lista de magnetizacoes na entrada}, {lista de espessuras na \
entrada}, {lista de espa\[CCedilla]amentos na entrada},{lista de \
magnetizacoes na sa\[IAcute]da}, {lista de espessuras na sa\[IAcute]da}, \
{lista de espa\[CCedilla]amentos na sa\[IAcute]da}}\>\""}], ";"}], " ", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"idCassetteDraw", "[", 
   RowBox[{
   "magnetizations_", ",", "blockGeo_", ",", "posErrors_", ",", 
    "termination_", ",", "periodL_", ",", "blockThick_", ",", "gap_", ",", 
    "blockGap_", ",", "subdiv_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cassette", ",", "block", ",", "obj", ",", "obj1", ",", "obj2", ",", 
        "obj3", ",", "blocknumber", ",", "vacodym745ap", ",", "termLength", 
        ",", "i", ",", "j", ",", "parts", ",", "randomErrorY", ",", 
        "randomErrorZ", ",", "longPos"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cassette", "=", 
        RowBox[{"radObjCnt", "[", 
         RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"parts", "=", 
        RowBox[{"Length", "[", "blockGeo", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"obj", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "parts"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"blocknumber", "=", 
        RowBox[{
         RowBox[{"Length", "[", "magnetizations", "]"}], "+", 
         RowBox[{"Length", "[", 
          RowBox[{"termination", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", 
         RowBox[{"Length", "[", 
          RowBox[{"termination", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Position", " ", "Errors"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"posErrors", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randomErrorY", "=", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{"NormalDistribution", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"posErrors", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"posErrors", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "/", "2"}], ")"}], "/", 
                  "3"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "blocknumber"}], "}"}]}], "]"}], 
            "*", 
            RowBox[{"RandomChoice", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "blocknumber"}], 
             "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randomErrorY", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "blocknumber"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"posErrors", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randomErrorZ", "=", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{"NormalDistribution", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"posErrors", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"posErrors", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "/", "2"}], ")"}], "/", 
                  "3"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "blocknumber"}], "}"}]}], "]"}], 
            "*", 
            RowBox[{"RandomChoice", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "blocknumber"}], 
             "]"}]}]}], ";"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randomErrorZ", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", "blocknumber"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Termination", " ", "Front"}]}], " ", "===", "=="}], "*)"}],
        "\[IndentingNewLine]", 
       RowBox[{"block", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Length", "[", 
           RowBox[{"termination", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"termination", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"block", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"radObjCnt", "[", 
            RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Next", " ", "Block", " ", "Position"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[LessEqual]", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"longPos", "=", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"longPos", "=", 
              RowBox[{"longPos", "+", 
               RowBox[{"0.5", "*", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", 
                   RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "+", 
               RowBox[{"termination", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", 
                  RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "+", 
               RowBox[{"0.5", "*", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "i"}], "]"}], "]"}]}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Create", " ", "the", " ", "Block", " ", "Object"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", " ", "parts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Extrude", " ", "part"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"obj", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{"radObjThckPgn", "[", 
               RowBox[{"longPos", ",", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", "i"}], "]"}], "]"}], ",", 
                RowBox[{"blockGeo", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Part", " ", "Subdivision"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjDivMag", "[", 
              RowBox[{
               RowBox[{"obj", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"subdiv", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Add", " ", "Part", " ", "to", " ", "block"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"obj", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Position", " ", "Error"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"randomErrorY", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randomErrorZ", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vacodym745ap", "=", 
           RowBox[{"radMatLin", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.06", ",", "0.17"}], "}"}], ",", 
             RowBox[{"termination", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"radMatApl", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "vacodym745ap"}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Add", " ", "to", " ", "Cassette"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"radObjAddToCnt", "[", 
           RowBox[{"cassette", ",", 
            RowBox[{"{", 
             RowBox[{"block", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", "Periods"}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"block", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"block", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"radObjCnt", "[", 
            RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Block", " ", "Position"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[LessEqual]", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"longPos", "=", 
              RowBox[{"longPos", "+", 
               RowBox[{"0.5", "*", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"2", ",", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "+", 
               RowBox[{"termination", "[", 
                RowBox[{"[", 
                 RowBox[{"3", ",", 
                  RowBox[{"-", "1"}]}], "]"}], "]"}], "+", 
               RowBox[{"0.5", "*", "blockThick"}]}]}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"longPos", "=", 
              RowBox[{"longPos", "+", "blockThick", "+", "blockGap"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", " ", "parts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"obj", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{"radObjThckPgn", "[", 
               RowBox[{"longPos", ",", "blockThick", ",", 
                RowBox[{"blockGeo", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"magnetizations", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Part", " ", "Subdivision"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjDivMag", "[", 
              RowBox[{
               RowBox[{"obj", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"subdiv", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Add", " ", "Part", " ", "to", " ", "block"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"obj", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Position", " ", "Error"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"randomErrorY", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randomErrorZ", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vacodym745ap", "=", 
           RowBox[{"radMatLin", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.06", ",", "0.17"}], "}"}], ",", 
             RowBox[{"magnetizations", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"radMatApl", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "vacodym745ap"}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Add", " ", "to", " ", "Cassette"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"radObjAddToCnt", "[", 
           RowBox[{"cassette", ",", 
            RowBox[{"{", 
             RowBox[{"block", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Termination", " ", "Back"}]}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"block", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Length", "[", 
           RowBox[{"termination", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"termination", "[", 
            RowBox[{"[", "4", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"block", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"radObjCnt", "[", 
            RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Next", " ", "Block", " ", "Position"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"i", "\[LessEqual]", " ", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"longPos", "=", 
              RowBox[{"longPos", "+", 
               RowBox[{"blockThick", "/", "2"}], "+", 
               RowBox[{"termination", "[", 
                RowBox[{"[", 
                 RowBox[{"6", ",", "1"}], "]"}], "]"}], "+", 
               RowBox[{
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"5", ",", "1"}], "]"}], "]"}], "/", "2"}]}]}], 
             ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"longPos", "=", 
              RowBox[{"longPos", "+", 
               RowBox[{"0.5", "*", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"5", ",", 
                   RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "+", 
               RowBox[{"termination", "[", 
                RowBox[{"[", 
                 RowBox[{"6", ",", "i"}], "]"}], "]"}], "+", 
               RowBox[{"0.5", "*", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"5", ",", "i"}], "]"}], "]"}]}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", " ", "parts"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"obj", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{"radObjThckPgn", "[", 
               RowBox[{"longPos", ",", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"5", ",", "i"}], "]"}], "]"}], ",", 
                RowBox[{"blockGeo", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"termination", "[", 
                 RowBox[{"[", 
                  RowBox[{"4", ",", "i"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Part", " ", "Subdivision"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjDivMag", "[", 
              RowBox[{
               RowBox[{"obj", "[", 
                RowBox[{"[", "j", "]"}], "]"}], ",", 
               RowBox[{"subdiv", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Add", " ", "Part", " ", "to", " ", "block"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radObjAddToCnt", "[", 
              RowBox[{
               RowBox[{"block", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"obj", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Position", " ", "Error"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"randomErrorY", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"randomErrorZ", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "Apply", " ", "Material", " ", "and", " ", "Magnetization"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"vacodym745ap", "=", 
           RowBox[{"radMatLin", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0.06", ",", "0.17"}], "}"}], ",", 
             RowBox[{"termination", "[", 
              RowBox[{"[", 
               RowBox[{"4", ",", "i"}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"radMatApl", "[", 
           RowBox[{
            RowBox[{"block", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "vacodym745ap"}], "]"}], 
          ";", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Add", " ", "to", " ", "Cassette"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"radObjAddToCnt", "[", 
           RowBox[{"cassette", ",", 
            RowBox[{"{", 
             RowBox[{"block", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "cassette", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]}], "Input",
 CellChangeTimes->{{3.822996642547748*^9, 3.8229966622053623`*^9}, {
   3.8229966999847193`*^9, 3.822996712607525*^9}, {3.822996866066005*^9, 
   3.822997007805232*^9}, {3.8229970886211834`*^9, 3.822997172861657*^9}, {
   3.8229972038423195`*^9, 3.8229972327467804`*^9}, {3.8229976128586516`*^9, 
   3.822997615581627*^9}, {3.8229977423096104`*^9, 3.8229979195374327`*^9}, {
   3.82299795068458*^9, 3.8229980492566676`*^9}, {3.8229981049572363`*^9, 
   3.822998135210442*^9}, {3.8229981887467437`*^9, 3.822998340346962*^9}, {
   3.8229983741706066`*^9, 3.8229984727502003`*^9}, {3.822998569425449*^9, 
   3.822999065586999*^9}, {3.8230016862031465`*^9, 3.8230016958932343`*^9}, {
   3.82300173329842*^9, 3.8230018618565197`*^9}, {3.8230018989871907`*^9, 
   3.8230019168120365`*^9}, 3.8230059047317824`*^9, {3.82300606412084*^9, 
   3.823006076465455*^9}, {3.8230061450248785`*^9, 3.8230061459811864`*^9}, {
   3.8230062004256153`*^9, 3.8230063181493616`*^9}, {3.8230064289977636`*^9, 
   3.8230065303095465`*^9}, {3.823006585873805*^9, 3.8230065883503504`*^9}, {
   3.82300661859441*^9, 3.8230066216896544`*^9}, {3.8230066631546993`*^9, 
   3.8230066998322268`*^9}, {3.823006918399409*^9, 3.82300691865304*^9}, {
   3.823007014024148*^9, 3.8230071885747604`*^9}, {3.8230072272774057`*^9, 
   3.8230072980440807`*^9}, {3.8230073454832535`*^9, 3.823007368184529*^9}, {
   3.823007417617037*^9, 3.823007431528256*^9}, {3.823007467409453*^9, 
   3.8230076108030863`*^9}, {3.8230076792257376`*^9, 
   3.8230077255548024`*^9}, {3.823007757155441*^9, 3.8230077683875284`*^9}, {
   3.823007865172476*^9, 3.823007941943116*^9}, {3.8230079756647186`*^9, 
   3.823008094077182*^9}, {3.8230081278690586`*^9, 3.823008130894298*^9}, {
   3.823008175277927*^9, 3.8230082141702065`*^9}, {3.8230082686879177`*^9, 
   3.823008274082326*^9}, 3.823008553616539*^9, {3.823010154173771*^9, 
   3.823010169655837*^9}, {3.823011269371171*^9, 3.823011514307005*^9}, {
   3.823011934197451*^9, 3.8230119375864625`*^9}, {3.823012442262043*^9, 
   3.823012447849208*^9}, {3.823013265967101*^9, 3.8230132706915827`*^9}, {
   3.8230133019855733`*^9, 3.823013308055996*^9}, {3.8230134137949634`*^9, 
   3.823013426172659*^9}, {3.8230145038129044`*^9, 3.8230146380798235`*^9}, {
   3.8230182516940327`*^9, 3.8230182519631915`*^9}, {3.8230729554520288`*^9, 
   3.82307298091088*^9}, {3.8230732793800507`*^9, 3.823073279897188*^9}, {
   3.8230936092727547`*^9, 3.8230936429576406`*^9}, {3.8230995686962013`*^9, 
   3.823099664377655*^9}, {3.8230998129285107`*^9, 3.8230999752067995`*^9}, {
   3.823100050687455*^9, 3.823100067923408*^9}, {3.82310043831323*^9, 
   3.8231006035879164`*^9}, {3.8231006441297226`*^9, 3.823100647584627*^9}, {
   3.82310071987878*^9, 3.823100728822584*^9}, {3.8231007907816315`*^9, 
   3.8231008049567423`*^9}, {3.8231008531344414`*^9, 
   3.8231008622813935`*^9}, {3.823100942333535*^9, 3.8231010641222153`*^9}, {
   3.823178841321891*^9, 3.823178853385052*^9}, {3.823179250142287*^9, 
   3.823179252435254*^9}, {3.8231793590117054`*^9, 3.823179406400276*^9}, {
   3.8231794642909203`*^9, 3.823179473841975*^9}, {3.82317958440681*^9, 
   3.8231796163688817`*^9}, 3.823179776189436*^9, {3.8231798157340665`*^9, 
   3.823179894878375*^9}, {3.8231801373786516`*^9, 3.823180178419283*^9}, {
   3.8231802160050154`*^9, 3.8231803251535625`*^9}, {3.823180367414541*^9, 
   3.823180407041745*^9}, 3.823180529654594*^9, {3.8231817771011024`*^9, 
   3.8231817798247414`*^9}, {3.8231823643199034`*^9, 
   3.8231823781096287`*^9}, {3.8232433076476307`*^9, 3.823243323146572*^9}, {
   3.823243353863224*^9, 3.823243383048979*^9}, {3.8232448398366985`*^9, 
   3.8232448492991066`*^9}, {3.8232449030106573`*^9, 
   3.8232449109512873`*^9}, {3.8232481335096703`*^9, 
   3.8232482068347907`*^9}, {3.8232483225305257`*^9, 
   3.8232483408156424`*^9}, {3.823248835367284*^9, 3.823248856708933*^9}, {
   3.8232488985954456`*^9, 3.8232489528591337`*^9}, {3.823248997395363*^9, 
   3.8232490529272823`*^9}, {3.823249125077532*^9, 3.823249132648445*^9}, {
   3.8232491736818924`*^9, 3.8232491866843896`*^9}, {3.8232493043465815`*^9, 
   3.8232493447309628`*^9}, 3.823249381232456*^9, {3.823359019239974*^9, 
   3.8233590197038856`*^9}, {3.823695203308715*^9, 3.8236952114882574`*^9}, {
   3.823695823901023*^9, 3.8236958251726217`*^9}, {3.8236993801965666`*^9, 
   3.823699463144787*^9}, {3.823699544456874*^9, 3.8236997071120033`*^9}, 
   3.8236997769442487`*^9, {3.823699869108048*^9, 3.8236998694458413`*^9}, {
   3.8237008062987347`*^9, 3.823700810389919*^9}, {3.8244580805471773`*^9, 
   3.8244581659114265`*^9}, 3.824458322095458*^9, {3.8244782019675813`*^9, 
   3.824478205881116*^9}, {3.8251666140019464`*^9, 3.825166625335941*^9}, 
   3.825166672387266*^9, 3.8251667131755247`*^9, {3.8254222940303717`*^9, 
   3.825422368357395*^9}, {3.825423803707179*^9, 3.8254238506464224`*^9}, {
   3.825423942023143*^9, 3.8254239923335004`*^9}, {3.82559422245827*^9, 
   3.825594243050849*^9}, {3.826029654265627*^9, 3.826029655206546*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[110]:=",ExpressionUUID->"8b35d002-f204-4654-be7b-0fb3b8cc4461"]
}, Closed]],

Cell[CellGroupData[{

Cell["IDDraw", "Subsection",
 CellChangeTimes->{{3.8230144742625413`*^9, 
  3.823014483115279*^9}},ExpressionUUID->"939428c6-80d4-4260-b6fb-\
5e07ccc2dd00"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idDraw", "[", 
   RowBox[{
   "typeID_", ",", "gap_", ",", "nPeriods_", ",", "periodL_", ",", 
    "blockGeo_", ",", "blockThick_", ",", "blockGap_", ",", "magnetizations_",
     ",", "terminations_", ",", "mode_", ",", "subdiv_", " ", ",", 
    RowBox[{"posErrors_", " ", ":", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ",", 
    RowBox[{"gap2_", " ", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "device", ",", "cassette", ",", "mag", ",", "cassetteD", ",", 
        "modeslist", ",", "phase", ",", "i", ",", "displacement", ",", 
        "cassPos"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"device", "=", 
        RowBox[{"radObjCnt", "[", 
         RowBox[{"{", "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cassette", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", "4"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"=", " ", 
          RowBox[{
           RowBox[{"Generate", " ", "Cassettes"}], " ", "===", "=="}]}]}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"cassette", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{"idCassetteDraw", "[", 
            RowBox[{
             RowBox[{"magnetizations", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "blockGeo", ",", 
             "posErrors", ",", 
             RowBox[{"terminations", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "periodL", ",", 
             "blockThick", ",", "gap", ",", "blockGap", ",", "subdiv"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Apply", " ", "Gap"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{"cassette", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{
                RowBox[{"-", "gap"}], "/", "2"}]}], "}"}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"typeID", "\[Equal]", "\"\<DeltaUndulator\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Apply", " ", "Phase"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"modeslist", "=", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
                    RowBox[{"1", "/", "4"}], ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0"}], 
                   "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0", ",", 
                    RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}]}], "}"}]}], "}"}], "*", 
                "periodL"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"modeslist", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", "4"}], ",", "0", ",", 
                   RowBox[{"1", "/", "4"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", "2"}], ",", "0", ",", 
                   RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"1", "/", "4"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0"}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", "0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}]}], "}"}]}], "}"}], "*", 
               "periodL"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"phase", "=", 
              RowBox[{"modeslist", "[", 
               RowBox[{"[", "mode", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"phase", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                 "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Apply", " ", "Rotation"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfRot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", 
                  RowBox[{"Pi", "/", "2"}]}]}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"typeID", "\[Equal]", "\"\<PlanarUndulator\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Apply", " ", "Phase"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"modeslist", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"1", "/", "2"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"1", "/", "4"}]}], "}"}]}], "}"}], "*", 
               "periodL"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"phase", "=", 
              RowBox[{"modeslist", "[", 
               RowBox[{"[", "mode", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"phase", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                 "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Apply", " ", "Rotation"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfRot", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"i", "-", "1"}], ")"}], "*", "Pi"}]}], "]"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"typeID", "\[Equal]", "\"\<EPU\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"Apply", " ", "Phase"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"modeslist", "=", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0", ",", 
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "2"}], ",", "0"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "1"}], "/", "4"}], ",", "0", ",", 
                   RowBox[{"1", "/", "4"}], ",", "0"}], "}"}]}], "}"}], "*", 
               "periodL"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"phase", "=", 
              RowBox[{"modeslist", "[", 
               RowBox[{"[", "mode", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"phase", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", "0", ",", "0"}], 
                 "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Apply", " ", "Position"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"zdesloc", "=", 
              RowBox[{"gap", "+", 
               RowBox[{"50", "/", "2"}]}]}], ";", " ", 
             RowBox[{"ydesloc", "=", 
              RowBox[{"gap2", "+", "22"}]}], ";", " ", 
             RowBox[{"a", "=", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"blockGeo", ",", "1"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"cassPos", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "ydesloc"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "ydesloc", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "ydesloc", ",", 
                  RowBox[{"2", "*", "zdesloc"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"-", "ydesloc"}], ",", 
                  RowBox[{"2", "*", "zdesloc"}]}], "}"}]}], "}"}]}], ";", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{"cassette", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"cassPos", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"radObjAddToCnt", "[", 
           RowBox[{"device", ",", 
            RowBox[{"{", 
             RowBox[{"cassette", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"typeID", "\[Equal]", "\"\<DeltaUndulator\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"Rotate", " ", "ID"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{"device", ",", 
            RowBox[{"radTrfRot", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{
               RowBox[{"-", "Pi"}], "/", "4"}]}], "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Adjust", " ", "Axis"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"device", "=", 
        RowBox[{"radTrfOrnt", "[", 
         RowBox[{"device", ",", 
          RowBox[{"radTrfRot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"device", "=", 
        RowBox[{"radTrfOrnt", "[", 
         RowBox[{"device", ",", 
          RowBox[{"radTrfRot", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Ficou", " ", "faltando", " ", "rotacionar", " ", "180", "\[Degree]", 
         " ", "em", " ", "Z"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"radTrfOrnt", "[", 
          RowBox[{"device", ",", 
           RowBox[{"radTrfRot", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"3", "*", 
              RowBox[{"Pi", "/", "2"}]}]}], "]"}]}], "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "device", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.823014490528303*^9, 3.823014495190384*^9}, 
   3.823014707120387*^9, {3.8230147394315567`*^9, 3.823014785859255*^9}, {
   3.823014818123419*^9, 3.8230148551524277`*^9}, {3.8230149320362606`*^9, 
   3.8230151595401454`*^9}, {3.82301523515401*^9, 3.82301523930616*^9}, {
   3.8230153011625757`*^9, 3.8230153145790586`*^9}, {3.823015346426852*^9, 
   3.823015440912756*^9}, {3.8230154952048936`*^9, 3.823015589046316*^9}, {
   3.8230156389647827`*^9, 3.8230157093066587`*^9}, {3.8230157950208683`*^9, 
   3.823015818196389*^9}, {3.8230158550310273`*^9, 3.823015856899197*^9}, {
   3.82301589655589*^9, 3.8230160287926226`*^9}, {3.8230160954748096`*^9, 
   3.8230161430772486`*^9}, {3.8230161801045313`*^9, 
   3.8230162482305756`*^9}, {3.823017155552719*^9, 3.8230172618963366`*^9}, {
   3.8230173103204737`*^9, 3.823017324386885*^9}, {3.8230173578961453`*^9, 
   3.8230173770036907`*^9}, {3.823017429167453*^9, 3.823017441546076*^9}, {
   3.823017483875223*^9, 3.82301752294746*^9}, {3.82301757528824*^9, 
   3.8230175797173977`*^9}, {3.8230177133598576`*^9, 
   3.8230177271661406`*^9}, {3.8230180977030983`*^9, 3.823018132647981*^9}, {
   3.8230181708706784`*^9, 3.823018175451013*^9}, {3.8230182431548653`*^9, 
   3.8230182896014776`*^9}, {3.8230183297746067`*^9, 
   3.8230183849770937`*^9}, {3.8230730107420397`*^9, 
   3.8230730172046647`*^9}, {3.8230732903664494`*^9, 
   3.8230732907830653`*^9}, {3.823073399916271*^9, 3.8230734317880983`*^9}, 
   3.82307641002911*^9, {3.8230790666214886`*^9, 3.823079157390439*^9}, {
   3.8230792483506145`*^9, 3.823079288653741*^9}, {3.823080036259123*^9, 
   3.8230800377466817`*^9}, {3.8230804430590997`*^9, 3.823080468732545*^9}, {
   3.8230805936560154`*^9, 3.8230806036822357`*^9}, 3.8230807563088036`*^9, {
   3.823081091620064*^9, 3.823081192747587*^9}, {3.823081249030183*^9, 
   3.823081251031911*^9}, {3.823081283186428*^9, 3.823081361560978*^9}, {
   3.823081422224709*^9, 3.8230814760419393`*^9}, {3.8230815214337473`*^9, 
   3.823081596012384*^9}, {3.8230816519042425`*^9, 3.8230816617535725`*^9}, {
   3.8230816960983267`*^9, 3.8230816963301363`*^9}, {3.823081748309551*^9, 
   3.8230817960507383`*^9}, {3.8230822982380047`*^9, 3.823082298886798*^9}, {
   3.823082501468274*^9, 3.8230825091576753`*^9}, {3.823082579775588*^9, 
   3.8230825817976885`*^9}, {3.8230845182345076`*^9, 3.823084523880671*^9}, {
   3.8230845885099297`*^9, 3.8230846169247503`*^9}, {3.823084775516531*^9, 
   3.8230848379621525`*^9}, {3.8230850106974773`*^9, 
   3.8230850110313435`*^9}, {3.8230854741424036`*^9, 3.82308549624289*^9}, {
   3.82308553454288*^9, 3.823085733791171*^9}, 3.8230857754642315`*^9, {
   3.823085942270505*^9, 3.8230859753670526`*^9}, {3.8230860569396567`*^9, 
   3.823086151936844*^9}, {3.8230861964494*^9, 3.823086220073099*^9}, {
   3.823086893731286*^9, 3.823086917140793*^9}, {3.823086986042081*^9, 
   3.8230869863271856`*^9}, {3.8230870601118565`*^9, 3.8230870980640497`*^9}, 
   3.8230872651509314`*^9, {3.8230872973277087`*^9, 3.823087298478788*^9}, {
   3.823087343849225*^9, 3.823087346920844*^9}, {3.8230873845062685`*^9, 
   3.8230874088892193`*^9}, {3.8230874455451107`*^9, 3.823087473723867*^9}, {
   3.823087644038024*^9, 3.823087652666995*^9}, {3.8231034321711636`*^9, 
   3.8231034421704855`*^9}, {3.823103481402172*^9, 3.823103481886513*^9}, {
   3.8231035368312464`*^9, 3.823103538503008*^9}, {3.8231036109116964`*^9, 
   3.823103619661087*^9}, {3.823103713682832*^9, 3.8231037713038635`*^9}, {
   3.823168861505064*^9, 3.8231689034284477`*^9}, {3.8231691962251987`*^9, 
   3.8231692084623184`*^9}, {3.8231823843128624`*^9, 
   3.8231824027705107`*^9}, {3.823244810978146*^9, 3.8232448126824713`*^9}, 
   3.8232503842222996`*^9, {3.82369579806024*^9, 3.8236958319185133`*^9}, {
   3.823699725112361*^9, 3.823699750229452*^9}, {3.8237002284251795`*^9, 
   3.823700259842938*^9}, {3.8237004123451843`*^9, 3.823700435842682*^9}, {
   3.823700502604678*^9, 3.8237005407020674`*^9}, {3.8237011231462526`*^9, 
   3.8237011364352756`*^9}, {3.8238695375441523`*^9, 3.823869623684075*^9}, {
   3.823869738790733*^9, 3.823869824804019*^9}, {3.823870282071589*^9, 
   3.8238702964543147`*^9}, {3.8242172745836697`*^9, 
   3.8242174546706605`*^9}, {3.8242979128342113`*^9, 3.824297926820832*^9}, {
   3.8242981713154306`*^9, 3.824298173668084*^9}, {3.8242982142912807`*^9, 
   3.8242984128209863`*^9}, {3.8243099003526206`*^9, 
   3.8243099031280775`*^9}, {3.824310262362854*^9, 3.82431026578313*^9}, 
   3.824310731425861*^9, {3.824310855324407*^9, 3.824310857346639*^9}, {
   3.8244781087101817`*^9, 3.8244781131225805`*^9}, {3.824478155107996*^9, 
   3.8244781555564613`*^9}, {3.8244784078094225`*^9, 3.824478408511223*^9}, {
   3.824478459389422*^9, 3.82447846433222*^9}, {3.8257587165526*^9, 
   3.825758729782813*^9}, {3.8280929549900246`*^9, 3.828092955958269*^9}, {
   3.8280930395576286`*^9, 3.8280930414159307`*^9}, {3.8290410993785124`*^9, 
   3.8290411104161015`*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"f2af3dae-2ee7-4f04-a789-dee6206c21ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["Generate Block Mag", "Subsection",
 CellChangeTimes->{{3.82307344716663*^9, 3.823073449705731*^9}, {
  3.8244833140919976`*^9, 
  3.8244833161836033`*^9}},ExpressionUUID->"7bb6b9a7-0eb4-48a9-9663-\
a968f03552af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idGenerateMag", "[", 
   RowBox[{
   "typeID_", ",", "nPeriods_", ",", "periodL_", ",", "blockThick_", ",", 
    "blockGap_", ",", "symmetry_", ",", "magnAmp_", ",", 
    RowBox[{"magError_", " ", ":", "0"}], ",", 
    RowBox[{"magAmpError_", " ", ":", "0.02"}], ",", 
    RowBox[{"magTheta_", " ", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mag", ",", "magnetization", ",", "j", ",", "i", ",", "termination", 
        ",", "phi", ",", "theta", ",", "dmag"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"===", 
        RowBox[{"==", " ", 
         RowBox[{"ID", " ", "Type"}]}], " ", "===", "=="}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"typeID", "\[Equal]", "\"\<DeltaUndulator\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mag", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
            "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"typeID", "\[Equal]", "\"\<PlanarUndulator\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mag", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
            "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"typeID", "\[Equal]", "\"\<EPU\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mag", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", 
                 RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
            "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Create", " ", "Cassette", " ", "Magnetizations"}]}], " ", "===",
          "=="}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"magnetization", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{
          RowBox[{"{", "}"}], ",", 
          RowBox[{"Length", "[", "mag", "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "mag", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"magnetization", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "=", 
           RowBox[{"Nest", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"mag", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", "#", ",", "1"}], "]"}], 
              "&"}], ",", 
             RowBox[{"mag", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ",", 
             RowBox[{"(", 
              RowBox[{"nPeriods", "-", "1"}], ")"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"symmetry", "\[Equal]", "\"\<symmetric\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"magnetization", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{"Delete", "[", 
               RowBox[{
                RowBox[{"magnetization", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"-", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"magnetization", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "=", 
              RowBox[{"Join", "[", 
               RowBox[{
                RowBox[{"magnetization", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"magnetization", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "1"}], "]"}], "]"}], "}"}]}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Generate", " ", "Errors"}]}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"phi", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"magnetization", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"phi", "=", 
        RowBox[{"ArrayReshape", "[", 
         RowBox[{"phi", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "magnetization", "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"magnetization", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"theta", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"RandomVariate", "[", 
           RowBox[{"NormalDistribution", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"magTheta", "*", 
                RowBox[{"Pi", "/", "180"}]}], ")"}], "/", "3"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"Flatten", "[", 
              RowBox[{"magnetization", ",", "1"}], "]"}], "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"theta", "=", 
        RowBox[{"ArrayReshape", "[", 
         RowBox[{"theta", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", "magnetization", "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"magnetization", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"magError", "\[GreaterEqual]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dmag", "=", 
           RowBox[{"1", "+", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"RandomVariate", "[", 
               RowBox[{"NormalDistribution", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"magAmpError", "/", "3"}]}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"magnetization", ",", "1"}], "]"}], "]"}]}], 
               "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"dmag", "=", 
           RowBox[{"ArrayReshape", "[", 
            RowBox[{"dmag", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", "magnetization", "]"}], ",", 
               RowBox[{"Length", "[", 
                RowBox[{"magnetization", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
          ";"}], " ", "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"dmag", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"1", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Length", "[", "magnetization", "]"}], ",", 
               RowBox[{"Length", "[", 
                RowBox[{"magnetization", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"phi", "=", 
           RowBox[{"phi", "*", "0"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"theta", "=", 
           RowBox[{"theta", "*", "0"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Apply", " ", "Errors"}]}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", "magnetization", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"magnetization", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"magnetization", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"dmag", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", " ", 
             RowBox[{"Length", "[", 
              RowBox[{"magnetization", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{"j", ",", "2"}], "]"}], "\[LessEqual]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"magnetization", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                  RowBox[{"magnetization", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ";"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"magnetization", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
                  RowBox[{"RotationMatrix", "[", 
                   RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                  RowBox[{"magnetization", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}]}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "magnetization", "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8230734534311275`*^9, 3.823073498743161*^9}, {
   3.823075016818911*^9, 3.823075044652527*^9}, {3.8230751290188866`*^9, 
   3.8230752098574543`*^9}, {3.8230752693348317`*^9, 3.82307540483144*^9}, {
   3.8230757221025333`*^9, 3.823075756273844*^9}, {3.8230757939158564`*^9, 
   3.8230758700511312`*^9}, {3.82307590252705*^9, 3.823075933758606*^9}, {
   3.823076257369628*^9, 3.823076364633091*^9}, {3.823076453604336*^9, 
   3.8230765781781797`*^9}, {3.823076644979904*^9, 3.823076695274355*^9}, {
   3.8230770058948307`*^9, 3.8230770084077177`*^9}, {3.823077349822297*^9, 
   3.8230773514441357`*^9}, {3.8230820484647884`*^9, 
   3.8230820946947174`*^9}, {3.823082181483632*^9, 3.823082236344793*^9}, {
   3.8230824247981653`*^9, 3.823082486133391*^9}, {3.8230839381123133`*^9, 
   3.823083996799473*^9}, {3.823084274437377*^9, 3.8230842854884768`*^9}, {
   3.8230843243364267`*^9, 3.823084333174412*^9}, {3.8231634883441477`*^9, 
   3.8231634901329365`*^9}, {3.823164409635227*^9, 3.823164427347066*^9}, {
   3.823164887253832*^9, 3.823164994738323*^9}, {3.823165084312823*^9, 
   3.8231651458201084`*^9}, {3.823165264273618*^9, 3.8231653688733187`*^9}, {
   3.8231662766432533`*^9, 3.8231662976834583`*^9}, {3.823166331113245*^9, 
   3.8231663484899426`*^9}, {3.823166433319851*^9, 3.8231664587339535`*^9}, {
   3.823166808686659*^9, 3.8231668551448126`*^9}, {3.8231673321944437`*^9, 
   3.823167336637915*^9}, 3.823167507385802*^9, {3.8231676818278546`*^9, 
   3.8231679035181074`*^9}, {3.8231679338007607`*^9, 
   3.8231679505746174`*^9}, {3.823168014143445*^9, 3.823168021969261*^9}, {
   3.823168053681142*^9, 3.823168152061553*^9}, {3.823168198572253*^9, 
   3.8231682193498983`*^9}, {3.8231682608542705`*^9, 3.823168310397355*^9}, {
   3.823168397219083*^9, 3.8231684132232447`*^9}, {3.823168497846359*^9, 
   3.823168504014089*^9}, {3.823168535380496*^9, 3.8231685712377386`*^9}, {
   3.8231686370672607`*^9, 3.823168678721874*^9}, {3.8231694448479834`*^9, 
   3.823169455466977*^9}, {3.8231694887802706`*^9, 3.823169491706731*^9}, {
   3.8231702639630156`*^9, 3.823170274526148*^9}, {3.823170377886963*^9, 
   3.8231703870855613`*^9}, 3.823182407012419*^9, {3.823186139758232*^9, 
   3.8231861559214954`*^9}, {3.8231862021673145`*^9, 3.823186202486143*^9}, {
   3.8231867584713717`*^9, 3.8231867636927443`*^9}, {3.8236950985149264`*^9, 
   3.823695100003189*^9}, {3.8237002832307777`*^9, 3.8237002885744967`*^9}, {
   3.823700435858307*^9, 3.823700435889533*^9}, {3.823700744763332*^9, 
   3.823700773077844*^9}, {3.823703471995745*^9, 3.8237034728533893`*^9}, {
   3.824298734968963*^9, 3.824298874507926*^9}, {3.8242989265188913`*^9, 
   3.824298979826383*^9}, {3.82429901300655*^9, 3.824299013576806*^9}, {
   3.8243094972665167`*^9, 3.8243095009805183`*^9}, {3.824309581832575*^9, 
   3.824309583351427*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[113]:=",ExpressionUUID->"7cf568b2-81c2-4395-a0a0-cce32b4669ed"]
}, Closed]],

Cell[CellGroupData[{

Cell["GenerateTermination Mag", "Subsection",
 CellChangeTimes->{{3.823077365329194*^9, 3.823077385215308*^9}, {
  3.824483321113908*^9, 
  3.8244833238509316`*^9}},ExpressionUUID->"36142c27-0180-4fb9-853e-\
a4ac966b8e5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idGenerateTerm", "[", 
   RowBox[{
   "termType_", ",", "blockThick_", ",", "blockGap_", ",", "periodL_", ",", 
    "magnAmp_", ",", 
    RowBox[{"magFront_", " ", ":", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], ",", 
    RowBox[{"magBack_", " ", ":", 
     RowBox[{"{", 
      RowBox[{"{", "}"}], "}"}]}], ",", 
    RowBox[{"magError_", " ", ":", "0"}], ",", 
    RowBox[{"magAmpError_", " ", ":", "0.01"}], ",", 
    RowBox[{"magTheta_", " ", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"(", "\n", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "termination", ",", "termMagFront", ",", "termMagBack", ",", 
        "termBlockThick", ",", "termBlockGap", ",", "dmag", ",", "phi", ",", 
        "theta", ",", "size"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", "ThreeBlocksAntiSym"}]}]}], " ", 
         RowBox[{
          RowBox[{"Termination", " ", "--"}], "--"}]}], "-"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"termType", "\[Equal]", "\"\<ThreeBlocksAntiSym\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"magFront", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
             "3"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagFront", "=", "magFront"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagFront", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
               "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"magBack", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
             "3"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagBack", "=", "magBack"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagBack", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
               "}"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"termBlockThick", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "/", "4"}], ",", 
              RowBox[{"1", "/", "2"}], ",", 
              RowBox[{"3", "/", "4"}]}], "}"}], "*", "blockThick"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"termBlockGap", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"0.875", "*", 
               RowBox[{"periodL", "/", "4"}]}], "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"0.25", "+", "0.5"}], ")"}], "/", "2"}], "*", 
                "blockThick"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"0.875", "*", 
               RowBox[{"periodL", "/", "4"}]}], "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"0.5", "+", "0.75"}], ")"}], "/", "2"}], "*", 
                "blockThick"}], ")"}]}], ",", 
             RowBox[{
              RowBox[{"0.875", "*", 
               RowBox[{"periodL", "/", "4"}]}], "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"0.75", "+", "1"}], ")"}], "/", "2"}], "*", 
                "blockThick"}], ")"}]}]}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"termination", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"termMagFront", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "termBlockThick", ",", 
               "termBlockGap", ",", 
               RowBox[{"termMagBack", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Reverse", "[", "termBlockThick", "]"}], ",", 
               RowBox[{"Reverse", "[", "termBlockGap", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "termMagFront", "]"}]}], "}"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "FourBlocksAntiSym"}]}]}], " ", 
          RowBox[{
           RowBox[{"Termination", " ", "--"}], "--"}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"termType", "\[Equal]", "\"\<FourBlocksAntiSym\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"magFront", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
             "4"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagFront", "=", "magFront"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagFront", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}]}], "}"}]}], 
               "}"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Apply", " ", "Errors"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"magError", "\[GreaterEqual]", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"size", "=", 
                 RowBox[{"Dimensions", "[", "termMagFront", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"dmag", "=", 
                 RowBox[{"1", "+", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"magAmpError", "/", "3"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"termMagFront", ",", "1"}], "]"}], "]"}]}], 
                    "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"termMagFront", "=", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"termMagFront", ",", "1"}], "]"}], "*", "dmag"}]}],
                 ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"phi", "=", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
                   RowBox[{"Length", "[", "termMagFront", "]"}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"theta", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"magTheta", "*", 
                    RowBox[{"Pi", "/", "180"}]}], ")"}], "/", "3"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "termMagFront", "]"}]}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", "termMagFront", "]"}]}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "2"}], "]"}], "\[LessEqual]", "0"}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"termMagFront", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"termMagFront", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"termMagFront", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"termMagFront", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"termMagFront", "=", 
                 RowBox[{"ArrayReshape", "[", 
                  RowBox[{"termMagFront", ",", "size"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", 
              RowBox[{"magBack", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "\[GreaterEqual]", " ", 
             "4"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagBack", "=", "magBack"}], ";"}], 
            "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"termMagBack", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", 
                    RowBox[{"-", "magnAmp"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"magnAmp", ",", "0", ",", "0"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", "0", ",", "magnAmp"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"-", "magnAmp"}], ",", "0", ",", "0"}], "}"}]}], 
                 "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Apply", " ", "Errors"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"magError", "\[GreaterEqual]", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"size", "=", 
                 RowBox[{"Dimensions", "[", "termMagBack", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"dmag", "=", 
                 RowBox[{"1", "+", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"magAmpError", "/", "3"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"termMagBack", ",", "1"}], "]"}], "]"}]}], 
                    "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"termMagBack", "=", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"termMagBack", ",", "1"}], "]"}], "*", "dmag"}]}], 
                ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"phi", "=", 
                 RowBox[{"RandomReal", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"2", "*", "Pi"}]}], "}"}], ",", 
                   RowBox[{"Length", "[", "termMagBack", "]"}]}], "]"}]}], 
                ";", "\[IndentingNewLine]", 
                RowBox[{"theta", "=", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"NormalDistribution", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"magTheta", "*", 
                    RowBox[{"Pi", "/", "180"}]}], ")"}], "/", "3"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "termMagBack", "]"}]}], "}"}]}], 
                  "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"i", "=", "1"}], ",", 
                  RowBox[{"i", "\[LessEqual]", " ", 
                   RowBox[{"Length", "[", "termMagBack", "]"}]}], ",", 
                  RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{"i", ",", "2"}], "]"}], ">", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"termMagBack", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ".", 
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"termMagBack", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}], 
                    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"termMagBack", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"phi", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"RotationMatrix", "[", 
                    RowBox[{
                    RowBox[{"theta", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ".", 
                    RowBox[{"termMagBack", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], ";"}]}], 
                   "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"termMagBack", "=", 
                 RowBox[{"ArrayReshape", "[", 
                  RowBox[{"termMagBack", ",", "size"}], "]"}]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"termBlockThick", "=", 
           RowBox[{"{", 
            RowBox[{"3.25", ",", "3.25", ",", "9.75", ",", "9.75"}], "}"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"termBlockGap", "=", 
           RowBox[{"{", 
            RowBox[{"8.7", ",", "2.0", ",", "3.3", ",", "1.0"}], "}"}]}], ";",
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"termination", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"termMagFront", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "termBlockThick", ",", 
               "termBlockGap", ",", 
               RowBox[{"termMagBack", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"Reverse", "[", "termBlockThick", "]"}], ",", 
               RowBox[{"Reverse", "[", "termBlockGap", "]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "termMagFront", "]"}]}], "}"}]}], 
            "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "termination", "]"}]}]}], "\[IndentingNewLine]",
      "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.823077388324053*^9, 3.8230775391130724`*^9}, {
   3.8230777224241376`*^9, 3.82307772312562*^9}, {3.8230777539262333`*^9, 
   3.8230777676816993`*^9}, {3.8230778168795457`*^9, 3.823077821286316*^9}, {
   3.823077882487821*^9, 3.8230780000171394`*^9}, {3.8230780734814634`*^9, 
   3.823078115911222*^9}, {3.823078161927266*^9, 3.823078215057619*^9}, {
   3.823078459139248*^9, 3.8230784675215654`*^9}, 3.823078961415109*^9, 
   3.8230790019678316`*^9, {3.8230825164479275`*^9, 3.8230825600754433`*^9}, {
   3.823182410528599*^9, 3.82318242401606*^9}, 3.823182492143036*^9, {
   3.8231891579553156`*^9, 3.823189183599577*^9}, {3.8231895867537727`*^9, 
   3.8231896174089127`*^9}, {3.8231896778652077`*^9, 3.823189688726184*^9}, {
   3.823189737114155*^9, 3.823189791330197*^9}, {3.8232430751026955`*^9, 
   3.823243171912265*^9}, {3.823243769112008*^9, 3.8232437720961933`*^9}, {
   3.823243820686617*^9, 3.823243966423137*^9}, {3.8232440100296216`*^9, 
   3.8232441953904905`*^9}, {3.8232442827027864`*^9, 
   3.8232442874681225`*^9}, {3.8232444097488794`*^9, 3.82324443945625*^9}, {
   3.823244570602457*^9, 3.823244574569581*^9}, {3.823244657773608*^9, 
   3.8232446668667994`*^9}, {3.8232447237219286`*^9, 3.823244768820605*^9}, {
   3.8232459233613625`*^9, 3.8232459491328554`*^9}, {3.8232512039111924`*^9, 
   3.823251249200403*^9}, {3.823254204920805*^9, 3.823254217787286*^9}, {
   3.823254398026204*^9, 3.8232544561325765`*^9}, {3.8236950906935635`*^9, 
   3.82369509228386*^9}, {3.824456494012184*^9, 3.8244565016029377`*^9}, {
   3.8244565440917025`*^9, 3.8244566121689973`*^9}, {3.8244566453900905`*^9, 
   3.8244567855934877`*^9}, {3.8244568546066084`*^9, 
   3.8244568881108236`*^9}, {3.824457284128724*^9, 3.8244573137597127`*^9}, {
   3.824474927357209*^9, 3.824475172172876*^9}, {3.824475216200239*^9, 
   3.8244753413548307`*^9}, {3.824475385717245*^9, 3.824475425665414*^9}, {
   3.8244755599814577`*^9, 3.8244755758302746`*^9}, {3.8244756849089127`*^9, 
   3.824475788955386*^9}, {3.8244763523070498`*^9, 3.8244764033822184`*^9}, {
   3.824802838384699*^9, 3.824802866770113*^9}, {3.8248028991659417`*^9, 
   3.8248029019898343`*^9}, {3.8248030619498158`*^9, 
   3.8248030704558992`*^9}, {3.825771966742889*^9, 3.8257720165028906`*^9}, {
   3.8257720646630945`*^9, 3.825772096563193*^9}, {3.825772176223249*^9, 
   3.825772198173386*^9}, {3.825772250818224*^9, 3.8257723326135*^9}, {
   3.825772380753512*^9, 3.825772423963274*^9}, {3.825772471573537*^9, 
   3.8257725979232645`*^9}, {3.8257727050282226`*^9, 3.825772755893883*^9}, {
   3.825772839368497*^9, 3.8257728398364677`*^9}, {3.8257732859140153`*^9, 
   3.825773290654166*^9}, {3.8257735203440695`*^9, 3.8257735352441573`*^9}, {
   3.8267950426263885`*^9, 3.826795043376338*^9}, {3.826797114214205*^9, 
   3.8267971636771173`*^9}, {3.826797218811521*^9, 3.8267972218660135`*^9}, {
   3.8267972801211185`*^9, 3.8267974852157164`*^9}, {3.82679796423184*^9, 
   3.82679796810795*^9}, {3.826798030416317*^9, 3.826798032427948*^9}, {
   3.8267980876243987`*^9, 3.8267981382221518`*^9}, {3.826798183151971*^9, 
   3.826798234500963*^9}, {3.826798406143292*^9, 3.826798407174467*^9}, {
   3.826963946306717*^9, 3.826963946536043*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[114]:=",ExpressionUUID->"aa76783c-9a09-4d9d-b783-a6b23c341d8a"]
}, Closed]],

Cell[CellGroupData[{

Cell["Solve", "Subsection",
 CellChangeTimes->{{3.823101241444908*^9, 
  3.823101241946697*^9}},ExpressionUUID->"7cc8aa33-713b-409a-a59c-\
5a291ffe9b0c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idSolve", "[", 
   RowBox[{"device_", ",", 
    RowBox[{"randomization_", " ", ":", 
     RowBox[{"{", 
      RowBox[{"1*^-10", ",", "1*^-10", ",", "1*^-10"}], "}"}]}]}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "abs", ",", "rel", ",", "zero", ",", "re", ",", "t0", ",", "t1"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t0", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"radFldLenTol", "[", 
       RowBox[{
        RowBox[{"randomization", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"randomization", "[", 
         RowBox[{"[", "2", "]"}], "]"}], ",", 
        RowBox[{"randomization", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"re", "=", 
       RowBox[{"RadSolve", "[", 
        RowBox[{"device", ",", "1*^-10", ",", "100000"}], "]"}]}], ";"}]}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"t1", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<> Insertion Device solved: (Elapsed Time: \>\"", ",", 
        RowBox[{"t1", "-", "t0"}], ",", "\"\<[s])\>\""}], "]"}]}], "*)"}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.8231012542546206`*^9, 3.823101475857891*^9}, {
   3.8231015672653685`*^9, 3.8231015836798697`*^9}, {3.823101804028384*^9, 
   3.8231018202029514`*^9}, {3.823101852520878*^9, 3.823101890771188*^9}, {
   3.8236947126690063`*^9, 3.823694713433855*^9}, {3.8236950828901577`*^9, 
   3.8236950831981707`*^9}, {3.8236992735182495`*^9, 
   3.8236992747378654`*^9}, {3.82369995944013*^9, 3.823699960073349*^9}, {
   3.823700548099455*^9, 3.8237005735050817`*^9}, {3.823700729427281*^9, 
   3.8237007325052023`*^9}, {3.8242895354587684`*^9, 3.8242895408484125`*^9}, 
   3.8243780423600035`*^9, {3.8255846021399536`*^9, 3.8255846378394585`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[115]:=",ExpressionUUID->"2670db60-f0f6-48be-b5d1-3d2a40d0c796"]
}, Closed]],

Cell[CellGroupData[{

Cell["Field Calc", "Subsection",
 CellChangeTimes->{{3.8070274156221814`*^9, 
  3.80702741715819*^9}},ExpressionUUID->"3a1c57ba-3d25-468a-b4b3-\
ee2dc43ecba4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idField", "[", 
   RowBox[{"undulator_", ",", "li_", ",", "lf_", ",", "lNpts_", ",", 
    RowBox[{"{", 
     RowBox[{"posV_", ",", "posH_"}], "}"}], ",", "display_", ",", 
    "oneplot_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "lstep", ",", "t0", ",", "t1", ",", "baxis", ",", "btotal", ",", 
        "axispoints", ",", "plot"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lstep", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"lf", "-", "li"}], ")"}], "/", "lNpts"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"t0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Axis"}]}]}], " ", "Field", " ", 
          RowBox[{
           RowBox[{"Calc", " ", "--"}], "--"}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"baxis", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"radFld", "[", 
           RowBox[{"undulator", ",", "\"\<b\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"posH", ",", "posV", ",", "z"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"z", ",", "li", ",", 
            RowBox[{"lf", "-", "lstep"}], ",", "lstep"}], "}"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<> Field Components: (elapsed time: \>\"", ",", 
           RowBox[{"t1", "-", "t0"}], " ", ",", "\"\<[s])\>\""}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", 
            RowBox[{
             RowBox[{"Plots", " ", "--"}], "--"}]}]}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"display", "\[GreaterEqual]", " ", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plot", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Axis", " ", "Plot"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"axispoints", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"li", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1"}], ")"}], "*", "lstep"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", "lNpts"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"baxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "lNpts"}], "}"}]}], "]"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Magnetic Field [T]\>\"", ",", "12"}], "]"}]}], 
               "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Bx\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"baxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "lNpts"}], "}"}]}], "]"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Magnetic Field [T]\>\"", ",", "12"}], "]"}]}], 
               "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Orange", "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<By\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"baxis", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "lNpts"}], "}"}]}], "]"}], ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Magnetic Field [T]\>\"", ",", "12"}], "]"}]}], 
               "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Green", "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Bz\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"oneplot", "\[GreaterEqual]", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"maxims", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"baxis", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"plotOrder", "=", 
              RowBox[{"SortBy", "[", 
               RowBox[{"maxims", ",", "Last"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Show", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"plot", "[", 
                  RowBox[{"[", 
                   RowBox[{"plotOrder", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "i"}], ",", "1"}], "]"}], "]"}], "]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], 
              "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"GraphicsRow", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"plot", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", 
                  RowBox[{"plot", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], ",", 
                  RowBox[{"plot", "[", 
                   RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "baxis", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.807021601830374*^9, 3.8070216773569517`*^9}, {
   3.807021740669018*^9, 3.8070217427074785`*^9}, {3.8070219464604225`*^9, 
   3.8070219686498995`*^9}, {3.807027460652296*^9, 3.807027544157159*^9}, {
   3.8070276421693325`*^9, 3.8070276425165777`*^9}, {3.8070276912558517`*^9, 
   3.807027704213709*^9}, {3.8070323107786245`*^9, 3.807032375602537*^9}, 
   3.8070327114498105`*^9, {3.807032863171875*^9, 3.8070328649457016`*^9}, {
   3.8070328976293025`*^9, 3.8070328977452354`*^9}, {3.807033015423561*^9, 
   3.807033015762494*^9}, {3.8070333677594614`*^9, 3.807033370758465*^9}, {
   3.8070341000936403`*^9, 3.8070341100237904`*^9}, {3.807034177639553*^9, 
   3.8070341787814217`*^9}, {3.8194469942722526`*^9, 3.819446994522252*^9}, {
   3.8194470278451247`*^9, 3.8194470523151627`*^9}, {3.8194674188594513`*^9, 
   3.8194674192906275`*^9}, {3.8195394042588143`*^9, 3.819539434664993*^9}, {
   3.8231870748067555`*^9, 3.8231870801366234`*^9}, {3.823187314238055*^9, 
   3.8231873210731883`*^9}, {3.8231873536805687`*^9, 
   3.8231873840152335`*^9}, {3.823187417400039*^9, 3.823187517278927*^9}, {
   3.823187552114496*^9, 3.823187563147745*^9}, {3.82318760058611*^9, 
   3.8231876260825243`*^9}, {3.8231877078144464`*^9, 3.823187725129961*^9}, {
   3.8231879045592556`*^9, 3.823187931896818*^9}, {3.8232513833748417`*^9, 
   3.8232514195547705`*^9}, {3.823251497810341*^9, 3.8232514994936705`*^9}, {
   3.8232515364914045`*^9, 3.823251597789898*^9}, 3.823591182639825*^9, {
   3.8236878454585176`*^9, 3.823687854520048*^9}, 3.823694762646657*^9, 
   3.8236962514318132`*^9, {3.823696360981367*^9, 3.823696480996597*^9}, {
   3.8236965553748913`*^9, 3.8236965670363555`*^9}, 3.8236966216015263`*^9, {
   3.8237043866839724`*^9, 3.823704437544327*^9}, {3.8237045083803515`*^9, 
   3.8237045826236615`*^9}, {3.8237046303449583`*^9, 3.8237046307197495`*^9}, 
   3.8237046806966157`*^9, {3.8237047552280135`*^9, 3.8237048088535647`*^9}, {
   3.8237049077224045`*^9, 3.823704942624758*^9}, {3.8237049756552896`*^9, 
   3.823705086703352*^9}, {3.823705206613536*^9, 3.823705263296739*^9}, {
   3.823705347657188*^9, 3.823705353686869*^9}, {3.8237053977027655`*^9, 
   3.8237053995608683`*^9}, {3.823705438733055*^9, 3.823705520061475*^9}, {
   3.8237056668621016`*^9, 3.823705739843643*^9}, {3.8237062931455593`*^9, 
   3.8237063045510206`*^9}, 3.8243780575048585`*^9, {3.824560310124625*^9, 
   3.8245603368090415`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[116]:=",ExpressionUUID->"d09847d2-6cb2-454c-a394-bc709c181b67"]
}, Closed]],

Cell[CellGroupData[{

Cell["Field Integral", "Subsection",
 CellChangeTimes->{{3.814026445667639*^9, 3.814026469231636*^9}, {
  3.8233349297908735`*^9, 3.823334930948099*^9}, {3.823340078829421*^9, 
  3.823340079713853*^9}},ExpressionUUID->"3e7f9d32-2704-4dfb-b8fb-\
68079dc25ea9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idFieldInt", "[", 
   RowBox[{
   "undulator_", ",", "li_", ",", "lf_", ",", "lstep_", ",", "baxis_", ",", 
    "display_", ",", "oneplot_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "i", ",", "dz", ",", "area", ",", "area2", ",", "integral", ",", 
        "integral2", ",", "firstInt", ",", "secondInt", ",", "axispoints", 
        ",", "plot", ",", "t0", ",", "t1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", "First"}]}]}], " ", 
         RowBox[{
          RowBox[{"Integral", " ", "--"}], "--"}]}], "-"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dz", "=", "lstep"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"area", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
                RowBox[{"baxis", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"integral", "=", 
        RowBox[{"Accumulate", "[", "area", "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"T", ".", "mm"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"firstInt", "=", 
        RowBox[{"integral", "*", 
         RowBox[{
          RowBox[{"10", "^", "4"}], "/", "10"}]}]}], " ", ";", 
       RowBox[{"(*", 
        RowBox[{"G", ".", "cm"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"-", " ", "Second"}]}]}], " ", 
          RowBox[{
           RowBox[{"Integral", " ", "--"}], "--"}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"area2", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], "+", 
                RowBox[{"integral", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "3"}], "]"}], "]"}]}], ")"}],
               "/", "2"}], "*", "dz"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "integral", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"integral2", "=", 
        RowBox[{"Accumulate", "[", "area2", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"T", ".", "mm\.b2"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"secondInt", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"integral2", "*", 
           RowBox[{
            RowBox[{"10", "^", "4"}], "/", "100"}]}], ")"}], "/", "1000"}]}], 
       ";", " ", 
       RowBox[{"(*", 
        RowBox[{"kG", ".", "cm\.b2"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<> Field Integrals: elapsed time = \>\"", ",", 
           RowBox[{"(", 
            RowBox[{"t1", "-", "t0"}], ")"}], ",", "\"\< [s]\>\""}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<First integrals : \>\"", ",", " ", 
           RowBox[{"firstInt", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\< [G.cm]\>\""}], 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Second integrals : \>\"", ",", " ", 
           RowBox[{"secondInt", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\< [kG.cm\.b2]\>\""}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"-", " ", 
            RowBox[{
             RowBox[{"Plots", " ", "--"}], "--"}]}]}]}], "-"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"display", "\[GreaterEqual]", " ", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"plot", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"axispoints", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"li", "+", 
                RowBox[{"lstep", "/", "2"}]}], ")"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "-", "1"}], ")"}], "*", "lstep"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"n", ",", "1", ",", 
               RowBox[{
                RowBox[{"Length", "[", "baxis", "]"}], "-", "1"}]}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"firstInt", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "firstInt", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Field Integral [G.cm]\>\"", ",", "12"}], 
                 "]"}]}], "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Bx\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"firstInt", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "firstInt", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Field integral [G.cm]\>\"", ",", "12"}], 
                 "]"}]}], "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Orange", "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<By\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"plot", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "=", 
           RowBox[{"ListLinePlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"axispoints", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"firstInt", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", 
                 RowBox[{"Length", "[", "firstInt", "]"}]}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"Frame", "\[Rule]", "True"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
                RowBox[{"Style", "[", 
                 RowBox[{"\"\<Field integral [G.cm]\>\"", ",", "12"}], 
                 "]"}]}], "}"}]}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Green", "}"}]}], ",", 
             RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"{", "\"\<Bz\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"oneplot", "\[GreaterEqual]", "1"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"maxims", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"firstInt", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}]}], "}"}], 
                ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"plotOrder", "=", 
              RowBox[{"SortBy", "[", 
               RowBox[{"maxims", ",", "Last"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Show", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"plot", "[", 
                  RowBox[{"[", 
                   RowBox[{"plotOrder", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "i"}], ",", "1"}], "]"}], "]"}], "]"}], 
                  "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], "]"}], 
              "]"}], ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Print", "[", 
              RowBox[{"GraphicsRow", "[", 
               RowBox[{"plot", ",", 
                RowBox[{"Spacings", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "10"}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "]"}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"firstInt", ",", "secondInt"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.8140831822358985`*^9, 3.8140831876421633`*^9}, {
   3.814086465640315*^9, 3.8140865066842995`*^9}, {3.8140865964970884`*^9, 
   3.8140865981532955`*^9}, {3.814086641081032*^9, 3.814086745326576*^9}, {
   3.814091940740308*^9, 3.81409216828543*^9}, {3.8140922070042057`*^9, 
   3.814092211910432*^9}, {3.8140922845491157`*^9, 3.81409229812846*^9}, {
   3.8140923644442186`*^9, 3.814092402186119*^9}, {3.814092442050935*^9, 
   3.8140925391396513`*^9}, {3.8140925886417274`*^9, 3.814092786016214*^9}, {
   3.814092830172215*^9, 3.814092831750367*^9}, {3.8140989604331417`*^9, 
   3.8140990283194375`*^9}, {3.8141904990742135`*^9, 
   3.8141905074645224`*^9}, {3.8141905462993636`*^9, 3.814190576361436*^9}, {
   3.818847692695892*^9, 3.818847728759572*^9}, {3.818847799042203*^9, 
   3.818847821133772*^9}, {3.81955032845391*^9, 3.8195503504551272`*^9}, 
   3.8195504519073086`*^9, {3.819550526202839*^9, 3.819550526890369*^9}, 
   3.820662992112262*^9, {3.8232580185147114`*^9, 3.8232580213808613`*^9}, {
   3.8233345165429583`*^9, 3.8233345209211493`*^9}, {3.823334659889905*^9, 
   3.823334733835789*^9}, {3.82333476894271*^9, 3.823334801012831*^9}, {
   3.823334869528743*^9, 3.8233349144518986`*^9}, {3.82333494728961*^9, 
   3.8233349479068537`*^9}, {3.8233349789943514`*^9, 3.823335018022991*^9}, {
   3.8233350527305984`*^9, 3.823335090140766*^9}, {3.823335165354349*^9, 
   3.823335166820796*^9}, {3.8233352039459114`*^9, 3.823335258897461*^9}, {
   3.823335300779319*^9, 3.8233353011492014`*^9}, 3.8233361506222687`*^9, {
   3.8233363710789537`*^9, 3.8233363736177607`*^9}, {3.823338572724375*^9, 
   3.8233387668264074`*^9}, {3.823340224739589*^9, 3.823340231024663*^9}, {
   3.8233431300198727`*^9, 3.823343132608755*^9}, {3.8233437850270348`*^9, 
   3.8233437857604227`*^9}, {3.82334389459583*^9, 3.823343937511688*^9}, {
   3.8233440492960243`*^9, 3.8233440594352922`*^9}, 3.823678669078288*^9, {
   3.82368779374298*^9, 3.823687804359678*^9}, 3.823694798563027*^9, {
   3.8236949090853324`*^9, 3.8236949097027383`*^9}, 3.823696675945222*^9, {
   3.8236967476201906`*^9, 3.8236967643927984`*^9}, 3.8237022017126327`*^9, {
   3.8237023062168875`*^9, 3.823702307791808*^9}, {3.8237027123281775`*^9, 
   3.823702847650258*^9}, {3.8237028995525503`*^9, 3.823702980286729*^9}, {
   3.823703014403739*^9, 3.82370313180005*^9}, {3.8237031629721427`*^9, 
   3.8237032327293696`*^9}, {3.8237048869268303`*^9, 
   3.8237048872965193`*^9}, {3.823705908630597*^9, 3.823705922049883*^9}, {
   3.823705953270815*^9, 3.8237061057848186`*^9}, {3.8237061415715723`*^9, 
   3.8237061899482*^9}, {3.8237062408564777`*^9, 3.8237062757072315`*^9}, {
   3.8237065148813705`*^9, 3.8237065187673683`*^9}, {3.8237066527201214`*^9, 
   3.823706661287065*^9}, {3.823707024443328*^9, 3.823707026124913*^9}, {
   3.8237072395921*^9, 3.8237073522592216`*^9}, 3.8242895932247677`*^9, 
   3.824378065819078*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[117]:=",ExpressionUUID->"562ce821-5f81-4eee-807a-c3e9358f7efa"]
}, Closed]],

Cell[CellGroupData[{

Cell["Trajectory - RungeKutta4", "Subsection",
 CellChangeTimes->{{3.822492471052125*^9, 3.822492484522397*^9}, {
  3.823354560814218*^9, 
  3.8233545659300737`*^9}},ExpressionUUID->"f260791b-f3c8-44a1-8ce1-\
26e57eaa8278"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"idTrajectory", "::", "usage"}], " ", "=", " ", 
    "\"\<IDRungeKuttaTrajectory[device, energy, r0, smax, rkstep]: Calculates \
the particle trajectory using the Runge-Kutta algorithm. The particle energy \
must be in GeV, r0 is the initial position and normalized momentum vector \
{x0, y0, z0, dx0ds, dy0ds, dz0ds}, smax and rkstep are the final longitudinal \
position and the Runge-Kutta step. All positions are in millimeters.\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"idTrajectory", "[", 
    RowBox[{
    "device_", ",", " ", "energy_", ",", "r0_", ",", "smax_", ",", "rkstep_", 
     ",", "display_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "trajectory", ",", " ", "ElectronRestEnergy", ",", " ", "LightSpeed", 
       ",", " ", "beta", ",", " ", "brho", ",", " ", "a", ",", " ", "b", ",", 
       " ", "b1", ",", " ", "b2", ",", " ", "b3", ",", " ", "r", ",", "rp", 
       ",", " ", "r1", ",", " ", "r2", ",", " ", "r3", ",", " ", "drds1", ",",
        " ", "drds2", ",", " ", "drds3", ",", " ", "drds4", ",", " ", "i", 
       ",", " ", "sm", ",", " ", "step", ",", " ", "t0", ",", " ", "t1", ",", 
       "p1", ",", "p2"}], "}"}], ",", "\n", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t0", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ElectronRestEnergy", "=", "510998.92811"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"[", "eV", "]"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"LightSpeed", "=", "299792458"}], ";", 
      RowBox[{"(*", 
       RowBox[{"[", 
        RowBox[{"m", "/", "s"}], "]"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"beta", "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1.0", "-", 
         RowBox[{"(", 
          RowBox[{"1.0", "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"energy", "*", 
               RowBox[{"1000000000", "/", "ElectronRestEnergy"}]}], ")"}], 
             "^", "2"}], ")"}]}], ")"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"brho", "=", 
       RowBox[{"(", 
        RowBox[{"beta", "*", "energy", "*", 
         RowBox[{"1000000000", "/", "LightSpeed"}]}], ")"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a", "=", 
       RowBox[{"1.0", "/", "brho"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"r1", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r2", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r3", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r", "=", " ", "r0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"from", " ", "mm", " ", "to", " ", "m"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "/", "1000"}]}], ";", " ", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "/", "1000"}]}], ";", " ", 
      RowBox[{
       RowBox[{"r", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "=", " ", 
       RowBox[{
        RowBox[{"r", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "/", "1000"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"sm", " ", "=", " ", 
       RowBox[{"smax", "/", "1000"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"step", " ", "=", " ", 
       RowBox[{"rkstep", "/", "1000"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"trajectory", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"trajectory", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", "1000"}], ",", " ", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "*", "1000"}], ",", " ", 
          RowBox[{
           RowBox[{"r", "[", 
            RowBox[{"[", "3", "]"}], "]"}], "*", "1000"}], ",", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
          RowBox[{"r", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"While", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"r", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "<", "sm"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rp", " ", "=", "r"}], ";", "\[IndentingNewLine]", 
         RowBox[{"b", "=", 
          RowBox[{"radFld", "[", 
           RowBox[{"device", ",", " ", "\"\<BxByBz\>\"", ",", " ", 
            RowBox[{"1000", "*", 
             RowBox[{"rp", "[", 
              RowBox[{"[", 
               RowBox[{";;", "3"}], "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
         "\t", 
         RowBox[{"drds1", "=", 
          RowBox[{"auxIDNewtonLorentzEquation", "[", 
           RowBox[{"a", ",", "r", ",", "b"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r1", "=", 
          RowBox[{"rp", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"step", "/", "2.0"}], ")"}], "*", "drds1"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"b1", "=", 
          RowBox[{"radFld", "[", 
           RowBox[{"device", ",", " ", "\"\<BxByBz\>\"", ",", " ", 
            RowBox[{"1000", "*", 
             RowBox[{"r1", "[", 
              RowBox[{"[", 
               RowBox[{";;", "3"}], "]"}], "]"}]}]}], "]"}]}], ";", "\n", 
         "\t", 
         RowBox[{"drds2", "=", 
          RowBox[{"auxIDNewtonLorentzEquation", "[", 
           RowBox[{"a", ",", "r1", ",", "b1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r2", "=", 
          RowBox[{"rp", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"step", "/", "2.0"}], ")"}], "*", "drds2"}]}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"b2", "=", 
          RowBox[{"radFld", "[", 
           RowBox[{"device", ",", " ", "\"\<BxByBz\>\"", ",", " ", 
            RowBox[{"1000", "*", 
             RowBox[{"r2", "[", 
              RowBox[{"[", 
               RowBox[{";;", "3"}], "]"}], "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"drds3", "=", 
          RowBox[{"auxIDNewtonLorentzEquation", "[", 
           RowBox[{"a", ",", "r2", ",", "b2"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r3", "=", 
          RowBox[{"rp", "+", 
           RowBox[{"step", "*", "drds3"}]}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"b3", "=", 
          RowBox[{"radFld", "[", 
           RowBox[{"device", ",", " ", "\"\<BxByBz\>\"", ",", " ", 
            RowBox[{"1000", "*", 
             RowBox[{"r3", "[", 
              RowBox[{"[", 
               RowBox[{";;", "3"}], "]"}], "]"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"drds4", "=", 
          RowBox[{"auxIDNewtonLorentzEquation", "[", 
           RowBox[{"a", ",", "r3", ",", "b3"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r", "=", 
          RowBox[{"rp", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"step", "/", "6.0"}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{"drds1", "+", 
              RowBox[{"2.0", "*", "drds2"}], "+", 
              RowBox[{"2.0", "*", "drds3"}], "+", "drds4"}], ")"}]}]}]}], ";",
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"trajectory", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "*", "1000"}], ",", " ", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", "1000"}], ",", " ", 
             RowBox[{
              RowBox[{"r", "[", 
               RowBox[{"[", "3", "]"}], "]"}], "*", "1000"}], ",", " ", 
             RowBox[{"r", "[", 
              RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
             RowBox[{"r", "[", 
              RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
             RowBox[{"r", "[", 
              RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"t1", "=", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<> IDRungeKuttaTrajectory: elapsed time = \>\"", ",", 
          RowBox[{"(", 
           RowBox[{"t1", "-", "t0"}], ")"}], ",", "\"\< s\>\""}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"display", "\[GreaterEqual]", " ", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", "Plots", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"trajectory", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
                RowBox[{"trajectory", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "trajectory", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<X [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<X Direction Trajectory\>\"", ",", "Bold", ",", "12"}], 
              "]"}]}], ",", 
            RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"p2", "=", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"trajectory", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
                RowBox[{"trajectory", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "[", "trajectory", "]"}]}], "}"}]}], "]"}], 
            ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<Y [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"Style", "[", 
              RowBox[{
              "\"\<Y Direction Trajectory\>\"", ",", "Bold", ",", "12"}], 
              "]"}]}], ",", 
            RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"Row", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"p1", ",", "p2"}], "}"}], ",", "\"\<\\t\\t\>\""}], "]"}],
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "trajectory", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.76744770185725*^9, 3.767447715061404*^9}, {
   3.7674478894725156`*^9, 3.7674478930665445`*^9}, {3.782655720566373*^9, 
   3.782655720941368*^9}, 3.821198370332193*^9, {3.8211989209357195`*^9, 
   3.821198946853913*^9}, {3.8211990277470274`*^9, 3.8211991616885953`*^9}, {
   3.8218660850976667`*^9, 3.8218660880108*^9}, {3.821970797130686*^9, 
   3.8219708160740128`*^9}, {3.8219712921125784`*^9, 3.8219713017398825`*^9}, 
   3.821971381322256*^9, {3.821972769605554*^9, 3.821972770044639*^9}, {
   3.8219730908819094`*^9, 3.8219731497491355`*^9}, {3.821973223683874*^9, 
   3.8219732453369694`*^9}, {3.8220407771958113`*^9, 
   3.8220407850000906`*^9}, {3.8223838530702477`*^9, 3.822383854027481*^9}, 
   3.8224918463941603`*^9, {3.82335466103051*^9, 3.823354663051179*^9}, {
   3.8233547381085415`*^9, 3.82335473837449*^9}, {3.823354933768151*^9, 
   3.823354976219185*^9}, {3.823355034146756*^9, 3.823355036629574*^9}, {
   3.8233577978428044`*^9, 3.8233579030437803`*^9}, {3.823357950633753*^9, 
   3.823357977032151*^9}, {3.823358048140832*^9, 3.823358058318604*^9}, {
   3.8233582164042816`*^9, 3.8233582224374027`*^9}, {3.8233583481937137`*^9, 
   3.8233583686849365`*^9}, {3.8233584079316053`*^9, 
   3.8233584091356525`*^9}, {3.823687657134842*^9, 3.823687657388418*^9}, {
   3.823694951227759*^9, 3.823694989889847*^9}, {3.8237006005087557`*^9, 
   3.8237006215187845`*^9}, {3.823701655968274*^9, 3.823701671759482*^9}, 
   3.8243780907471137`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[118]:=",ExpressionUUID->"460fe1ee-a20c-44ec-921e-33931c850ad0"]
}, Closed]],

Cell[CellGroupData[{

Cell["AuxRungeKutta", "Subsection",
 CellChangeTimes->{{3.8224924968846164`*^9, 
  3.8224925096046734`*^9}},ExpressionUUID->"2cf67b0c-1ee7-4e02-a6ae-\
64ddc54d0799"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"auxIDNewtonLorentzEquation", "[", 
     RowBox[{"a_", ",", "r_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "drds", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"drds", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "=", 
        RowBox[{"r", "[", 
         RowBox[{"[", "4", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "=", 
        RowBox[{"r", "[", 
         RowBox[{"[", "5", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "3", "]"}], "]"}], "=", 
        RowBox[{"r", "[", 
         RowBox[{"[", "6", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "4", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"-", "a"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "5", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"-", "a"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"drds", "[", 
         RowBox[{"[", "6", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"-", "a"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "-", 
           RowBox[{
            RowBox[{"r", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "*", 
            RowBox[{"b", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "drds", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.76744770185725*^9, 3.767447715061404*^9}, {
   3.7674478894725156`*^9, 3.7674478930665445`*^9}, {3.782655720566373*^9, 
   3.782655720941368*^9}, 3.821198370332193*^9, {3.8211989209357195`*^9, 
   3.821198946853913*^9}, {3.8211990277470274`*^9, 3.8211991616885953`*^9}, {
   3.8218660850976667`*^9, 3.8218660880108*^9}, {3.821970797130686*^9, 
   3.8219708160740128`*^9}, {3.8219712921125784`*^9, 3.8219713017398825`*^9}, 
   3.821971381322256*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[120]:=",ExpressionUUID->"d10344bd-52a2-48c0-8b72-994f277e50de"]
}, Closed]],

Cell[CellGroupData[{

Cell["PhaseError - RungeKutta", "Subsection",
 CellChangeTimes->{{3.822554809301333*^9, 3.8225548221540318`*^9}, {
  3.822579285924861*^9, 3.822579286074135*^9}, {3.823354572888997*^9, 
  3.823354575941679*^9}},ExpressionUUID->"faa59fe0-a9c4-4183-a71f-\
989f28f713e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idPhaseError", "[", 
   RowBox[{
   "baxis_", ",", "xo_", ",", "xf_", ",", "nx_", ",", "Trajetoria_", ",", 
    "eEnergy_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "eletron", ",", "mo", ",", "eRestEnergy", ",", "bfield", ",", 
        "bfieldT", ",", "longAxis", ",", "ampX", ",", "ampY", ",", "ampZ", 
        ",", "ampT", ",", "peakX", ",", "peakY", ",", "peakZ", ",", "peakT", 
        ",", "longPeak", ",", "longPeakX", ",", "longPeakY", ",", "longPeakZ",
         ",", "longPeakT", ",", "periods", ",", "nperiods", ",", "periodL", 
        ",", "kparam", ",", "gamma", ",", "lambda", ",", "intField0", ",", 
        "intField", ",", "drop", ",", "phaseError", ",", "phase", ",", "j", 
        ",", "jmin", ",", "rmsError", ",", "fitData", ",", "fitLin", ",", 
        "linearFit", ",", "linearizedPhase", ",", "p3", ",", "a", ",", "b", 
        ",", "I00", ",", "I0", ",", "p0", ",", "btotal", ",", "dx", ",", "c", 
        ",", "s", ",", "errorP", ",", "t0", ",", "t1"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"t0", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Check", " ", "Inputs"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"baxis", "\[NotEqual]", " ", 
           RowBox[{"Length", "[", "Trajetoria", "]"}]}], "]"}], ",", 
         RowBox[{
         "Return", "[", 
          "\"\<[ERROR] : Field vector and Trajectory Vector have not the same \
lenght.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"eEnergy", ">", "100"}], ",", 
         RowBox[{
         "Return", "[", 
          "\"\<[ERROR] : Electron beam energy to high. Check if the input \
energy is in Gev.\>\"", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Total", " ", "Field"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"btotal", "=", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "^", "2"}], "+", 
          RowBox[{
           RowBox[{"baxis", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "^", "2"}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", "Parameters"}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"eletron", "=", "1.60217662*^-19"}], ";", " ", 
       RowBox[{"mo", "=", "9.10938356*^-31"}], ";", "\[IndentingNewLine]", 
       RowBox[{"eRestEnergy", "=", "510998.92811"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"[", "eV", "]"}], "*)"}], " ", 
       RowBox[{"(*", " ", 
        RowBox[{"==", " ", 
         RowBox[{"mo", "*", 
          RowBox[{"c", "^", 
           RowBox[{"2", "[", "J", "]"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"c", "=", "299792458"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"m", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"bfield", "=", "baxis"}], ";", "\[IndentingNewLine]", 
       RowBox[{"bfieldT", "=", "btotal"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Principal", " ", "Longitudinal", " ", "Axis"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"dx", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"xf", "-", "xo"}], ")"}], "/", "nx"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"longAxis", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"xo", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "-", "1"}], ")"}], "*", "dx"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Longitudinal", " ", "Axis", " ", "from", " ", "0"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"longAxis", "-", 
           RowBox[{"longAxis", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "/", "1000"}]}], ";", 
       "  ", 
       RowBox[{"(*", 
        RowBox[{"[", "m", "]"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{"Find", " ", "Peaks"}]}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"ampT", "=", 
        RowBox[{"0.1", "*", 
         RowBox[{"Max", "[", "bfieldT", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ampX", "=", 
        RowBox[{"ampY", "=", 
         RowBox[{"ampZ", "=", "ampT"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Find", " ", "Peaks"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"peakX", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampX"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakY", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampY"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakZ", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{
          RowBox[{"bfield", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", "0", " ", ",", "0", 
          ",", " ", "ampZ"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"peakT", "=", 
        RowBox[{"FindPeaks", "[", 
         RowBox[{"bfieldT", ",", "0", " ", ",", "0", " ", ",", " ", "ampT"}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{
          "Remove", " ", "extremities", " ", "from", " ", "Total", " ", 
           "Field"}]}], " ", "===", "=="}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"drop", "=", "4"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "how", " ", "many", " ", "peaks", " ", "to", " ", "drop", " ", "each",
          " ", "side"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"peakT", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakT", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"peakT", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{"peakT", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "drop"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{"Drop", " ", "extremity", " ", "peaks"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"longPeakT", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"s", "[", 
           RowBox[{"[", 
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "peakT", "]"}]}], "}"}]}], "]"}]}], ";", 
       " ", 
       RowBox[{"(*", 
        RowBox[{
        "Crate", " ", "longitudinal", " ", "axis", " ", "based", " ", "on", 
         " ", "total", " ", "field"}], "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{
          "Remove", " ", "extremities", " ", "from", " ", "Field", " ", 
           "Components"}]}], " ", "===", "=="}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"drop", "=", "3"}], ";", " ", 
       RowBox[{"(*", 
        RowBox[{
        "how", " ", "many", " ", "peaks", " ", "to", " ", "drop", " ", "each",
          " ", "side"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Z", " ", "axis"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakZ", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakZ", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakZ", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakZ", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakZ", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakZ", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakZ", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakZ", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakZ", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Y", " ", "axis"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakY", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakY", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakY", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakY", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakY", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakY", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakY", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakY", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakY", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"X", " ", "axis"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "peakX", "]"}], ">", 
          RowBox[{"2", "*", "drop"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakX", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakX", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "drop"}], "}"}]}], "]"}]}], ";", 
          RowBox[{"peakX", "=", 
           RowBox[{"Drop", "[", 
            RowBox[{"peakX", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "drop"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"longPeakX", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"longAxis", "[", 
              RowBox[{"[", 
               RowBox[{"peakX", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "peakX", "]"}]}], "}"}]}], "]"}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"peakX", "=", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{
             RowBox[{"10", "^", 
              RowBox[{"-", "5"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", 
         RowBox[{"==", " ", 
          RowBox[{
          "Find", " ", "the", " ", "Principal", " ", "Field", " ", "Axis"}]}],
          " ", "===", "=="}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Mean", "[", 
           RowBox[{"peakX", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
          RowBox[{"Mean", "[", 
           RowBox[{"peakY", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{"peakX", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Mean", "[", 
             RowBox[{"peakZ", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakX"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakZ"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{"peakY", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ">", 
            RowBox[{"Mean", "[", 
             RowBox[{"peakZ", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakY"}], ";"}], 
           "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"longPeak", "=", "longPeakZ"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"periods", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"longPeak", "[", 
            RowBox[{"[", 
             RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
           RowBox[{"longPeak", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "longPeak", "]"}], "-", "1"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", 
         RowBox[{"Magnet", " ", "design"}], " ", "===", "===", "==="}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"nperiods", "=", 
        RowBox[{"Length", "[", "periods", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"periodL", "=", 
        RowBox[{"Mean", "[", "periods", "]"}]}], ";", " ", 
       RowBox[{"(*", "mm", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"gamma", "=", 
        RowBox[{"eEnergy", "*", 
         RowBox[{
          RowBox[{"10", "^", "9"}], "/", "eRestEnergy"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"kparam", "=", 
        RowBox[{"0.0934", "*", "periodL", "*", 
         RowBox[{"Mean", "[", 
          RowBox[{"peakT", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}]}], ";", "  ", 
       RowBox[{"(*", 
        RowBox[{"!!", 
         RowBox[{"!!", 
          RowBox[{"!!", 
           RowBox[{"!!", 
            RowBox[{"!!", 
             RowBox[{"!!", 
              RowBox[{"!", " ", 
               RowBox[{
               "Todas", " ", "componentes", " ", "ou", " ", "s\[OAcute]", " ", 
                RowBox[{"1", "?"}]}]}]}]}]}]}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"lambda", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Mean", "[", "periods", "]"}], "/", "1000"}], ")"}], "/", 
           RowBox[{"(", 
            RowBox[{"2", "*", 
             RowBox[{"(", 
              RowBox[{"gamma", "^", "2"}], ")"}]}], ")"}]}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "+", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"kparam", "^", "2"}], ")"}], "/", "2"}]}], ")"}]}]}], 
       ";", " ", 
       RowBox[{"(*", "m", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"===", "===", "===", " ", 
         RowBox[{"Phase", " ", "Function"}], " ", "===", "===", "==="}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"jmin", "=", 
        RowBox[{"peakT", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"phase", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"I0", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Trajetoria", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Trajetoria", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "4"}], "]"}], "]"}], "^", 
                  "2"}]}], ")"}], "/", "2"}], ")"}], "+", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Trajetoria", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "5"}], "]"}], "]"}], "^", "2"}], "+", 
                 RowBox[{
                  RowBox[{"Trajetoria", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "+", "1"}], ",", "5"}], "]"}], "]"}], "^", 
                  "2"}]}], ")"}], "/", "2"}], ")"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "jmin"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p0", "=", 
        RowBox[{
         RowBox[{"Pi", "/", "lambda"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"s", "[", 
             RowBox[{"[", "jmin", "]"}], "]"}], "/", 
            RowBox[{"gamma", "^", "2"}]}], "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"I0", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "I0", "]"}]}], "}"}]}], "]"}]}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"phase", ",", "p0"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", 
          RowBox[{"jmin", "+", "1"}]}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"peakT", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"Length", "[", "peakT", "]"}], ",", "1"}], "]"}], 
             "]"}], "-", "2"}], ")"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"I00", "=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Trajetoria", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "4"}], "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Trajetoria", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", "+", "1"}], ",", "4"}], "]"}], "]"}], "^", 
                   "2"}]}], ")"}], "/", "2"}], ")"}], "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Trajetoria", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "5"}], "]"}], "]"}], "^", "2"}], "+", 
                  RowBox[{
                   RowBox[{"Trajetoria", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"j", "+", "1"}], ",", "5"}], "]"}], "]"}], "^", 
                   "2"}]}], ")"}], "/", "2"}], ")"}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"s", "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "1"}], "]"}], "]"}], "-", 
              RowBox[{"s", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"I0", ",", "I00"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"p0", "=", 
           RowBox[{
            RowBox[{"Pi", "/", "lambda"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"s", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "/", 
               RowBox[{"gamma", "^", "2"}]}], "+", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"I0", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "I0", "]"}]}], "}"}]}], "]"}]}], 
             ")"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"phase", ",", "p0"}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "===", "===", "===", " ", "Fitting", " ", "===", "===", "==="}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"fitData", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"longPeakT", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"phase", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"fitLin", "=", 
        RowBox[{"NonlinearModelFit", "[", 
         RowBox[{"fitData", ",", 
          RowBox[{
           RowBox[{"a", "*", "x"}], "+", "b"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"linearFit", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"s", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "+", 
             RowBox[{"longPeakT", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"fitLin", "[", 
             RowBox[{
              RowBox[{"s", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "+", 
              RowBox[{"longPeakT", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "phase", "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"linearizedPhase", "=", 
        RowBox[{"phase", "-", 
         RowBox[{"linearFit", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"p3", "=", 
        RowBox[{"ListLinePlot", "[", 
         RowBox[{
          RowBox[{"linearizedPhase", "*", 
           RowBox[{"180", "/", "Pi"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", "\"\<Linearized Phase\>\""}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"300", ",", "200"}], "}"}]}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\< \>\"", ",", "\"\<[deg]\>\""}], "}"}]}]}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"errorP", "=", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Mean", "[", 
            RowBox[{"linearizedPhase", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "-", 
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "+", "1"}], ";;", 
               RowBox[{
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", "1"}], "]"}], "]"}], "-", 
                RowBox[{"peakT", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", "1"}]}], "]"}], 
             "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{
              RowBox[{"Length", "[", "peakT", "]"}], "-", "1"}]}], "}"}]}], 
          "]"}], "*", 
         RowBox[{"180", "/", "Pi"}]}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"t1", "=", 
        RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<> Phase solved: elapsed time = \>\"", ",", 
           RowBox[{"t1", "-", "t0"}], ",", "\"\<[s]\>\""}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "errorP", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{
  3.822492878602187*^9, {3.8224930058589163`*^9, 3.822493006645373*^9}, 
   3.8224931499238806`*^9, {3.8224932709041376`*^9, 3.822493273550139*^9}, {
   3.822493393889518*^9, 3.8224934241633096`*^9}, {3.822493658862978*^9, 
   3.822493715139911*^9}, {3.8224937959188914`*^9, 3.8224938292100077`*^9}, {
   3.822494067978244*^9, 3.8224940903923903`*^9}, {3.8224942311685205`*^9, 
   3.8224942448412*^9}, {3.8224943487069073`*^9, 3.822494416549449*^9}, {
   3.8224944663065987`*^9, 3.8224944666923013`*^9}, 3.822494618506987*^9, {
   3.8224948072681203`*^9, 3.8224948133060055`*^9}, {3.822554294814774*^9, 
   3.822554295949778*^9}, {3.822562743046319*^9, 3.8225627567715144`*^9}, {
   3.8225640500135937`*^9, 3.822564069603611*^9}, {3.8225641104411306`*^9, 
   3.8225641147016373`*^9}, {3.822579290119934*^9, 3.8225792902671766`*^9}, {
   3.8225795705124936`*^9, 3.8225797061936975`*^9}, {3.822579862484825*^9, 
   3.8225799177198734`*^9}, {3.82257998360664*^9, 3.8225800320515375`*^9}, {
   3.822580223157029*^9, 3.822580251401943*^9}, {3.822580367301899*^9, 
   3.822580372200272*^9}, {3.82258092787403*^9, 3.822580964173089*^9}, {
   3.8225809999787884`*^9, 3.822581033047849*^9}, {3.822581199123309*^9, 
   3.8225812002266455`*^9}, {3.8225812356899796`*^9, 
   3.8225812430822277`*^9}, {3.8225815973017206`*^9, 3.822581650579686*^9}, {
   3.8225816922731586`*^9, 3.8225817463103495`*^9}, {3.822581988682259*^9, 
   3.82258199305827*^9}, {3.8225821513124104`*^9, 3.822582272507353*^9}, {
   3.822582498389442*^9, 3.8225825011803017`*^9}, {3.8225829894426737`*^9, 
   3.8225830090647397`*^9}, {3.822583073372199*^9, 3.822583073795903*^9}, {
   3.8225831444470987`*^9, 3.822583145913085*^9}, {3.822583228897163*^9, 
   3.8225832405599875`*^9}, {3.822583323428615*^9, 3.822583323698162*^9}, 
   3.8233545805077934`*^9, {3.823354685901331*^9, 3.823354693856892*^9}, {
   3.823358857459176*^9, 3.823358869167984*^9}, {3.823596979461104*^9, 
   3.8235969875166793`*^9}, {3.823598524453189*^9, 3.823598639899991*^9}, {
   3.8235986982823*^9, 3.8235988327271934`*^9}, {3.823598929304826*^9, 
   3.8235989522734785`*^9}, {3.823599641906768*^9, 3.823599659431821*^9}, {
   3.823599733062941*^9, 3.823599745971265*^9}, {3.8236008180558214`*^9, 
   3.823600882347562*^9}, {3.8236136081340604`*^9, 3.82361361296128*^9}, {
   3.823681707257349*^9, 3.823681708994249*^9}, {3.823686918814213*^9, 
   3.823686938422887*^9}, {3.823687016844222*^9, 3.823687224626627*^9}, {
   3.823687303126145*^9, 3.8236873549926453`*^9}, {3.8236873892866344`*^9, 
   3.823687472849032*^9}, {3.8236875352302847`*^9, 3.8236875838014793`*^9}, {
   3.823687620059818*^9, 3.8236876287413497`*^9}, {3.8236876660438004`*^9, 
   3.82368766627575*^9}, {3.8236958816471524`*^9, 3.823695908488454*^9}, {
   3.8237017448030853`*^9, 3.823701750591502*^9}, {3.8237076438214817`*^9, 
   3.8237076631608815`*^9}, {3.8237077399448967`*^9, 3.8237077550061064`*^9}, 
   3.824378105726492*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[121]:=",ExpressionUUID->"8614a3de-9787-4b7f-ab5e-e7953186da18"]
}, Closed]],

Cell[CellGroupData[{

Cell["BlocksPosition", "Subsection",
 CellChangeTimes->{{3.8266384496746454`*^9, 
  3.8266384547726736`*^9}},ExpressionUUID->"6b9ae53d-05df-4acd-9548-\
4d2927a75f68"],

Cell[BoxData[
 RowBox[{
  RowBox[{"idBlocksPosition", "[", 
   RowBox[{
   "magnetizations_", ",", "terminations_", ",", "blockThick_", ",", 
    "blockGap_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "longPos", ",", "nTotalBl", ",", "nCasseteBl", ",", "blockidx"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"nTotalBl", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"magnetizations", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", 
           RowBox[{"Length", "[", 
            RowBox[{"terminations", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "+", 
           RowBox[{"Length", "[", 
            RowBox[{"terminations", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}], ")"}], "*", 
         "4"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"nCasseteBl", "=", 
        RowBox[{"nTotalBl", "/", "4"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"longPos", "=", 
        RowBox[{"ConstantArray", "[", 
         RowBox[{"0", ",", "nCasseteBl"}], "]"}]}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"blockidx", "=", "1"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"terminations", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"longPos", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"longPos", "[", 
             RowBox[{"[", 
              RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
            RowBox[{"0.5", "*", 
             RowBox[{"terminations", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "+", 
            RowBox[{"terminations", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "3", ",", 
               RowBox[{"i", "-", "1"}]}], "]"}], "]"}], "+", 
            RowBox[{"0.5", "*", 
             RowBox[{"terminations", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2", ",", "i"}], "]"}], "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"blockidx", "+=", "1"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", "\n", "\t", 
       RowBox[{"blockidx", "+=", "1"}], ";", 
       RowBox[{
        RowBox[{"longPos", "[", 
         RowBox[{"[", "blockidx", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"longPos", "[", 
          RowBox[{"[", 
           RowBox[{"blockidx", "-", "1"}], "]"}], "]"}], "+", 
         RowBox[{"0.5", "*", 
          RowBox[{"terminations", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2", ",", 
             RowBox[{"-", "1"}]}], "]"}], "]"}]}], "+", 
         RowBox[{"terminations", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "3", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "+", 
         RowBox[{"0.5", "*", "blockThick"}]}]}], ";", "\[IndentingNewLine]", 
       "\n", "\t", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"magnetizations", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"blockidx", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"longPos", "[", 
            RowBox[{"[", "blockidx", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"longPos", "[", 
             RowBox[{"[", 
              RowBox[{"blockidx", "-", "1"}], "]"}], "]"}], "+", "blockThick",
             "+", "blockGap"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\n", "\t", 
       RowBox[{"blockidx", "+=", "1"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"longPos", "[", 
         RowBox[{"[", "blockidx", "]"}], "]"}], "=", 
        RowBox[{
         RowBox[{"longPos", "[", 
          RowBox[{"[", 
           RowBox[{"blockidx", "-", "1"}], "]"}], "]"}], "+", 
         RowBox[{"blockThick", "/", "2"}], "+", 
         RowBox[{"terminations", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "6", ",", "1"}], "]"}], "]"}], "+", 
         RowBox[{
          RowBox[{"terminations", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "5", ",", "1"}], "]"}], "]"}], "/", "2"}]}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "2"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", 
          RowBox[{"Length", "[", 
           RowBox[{"terminations", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"blockidx", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"longPos", "[", 
            RowBox[{"[", "blockidx", "]"}], "]"}], "=", 
           RowBox[{
            RowBox[{"longPos", "[", 
             RowBox[{"[", 
              RowBox[{"blockidx", "-", "1"}], "]"}], "]"}], "+", 
            RowBox[{"0.5", "*", 
             RowBox[{"terminations", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "5", ",", 
                RowBox[{"i", "-", "1"}]}], "]"}], "]"}]}], "+", 
            RowBox[{"terminations", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "6", ",", "i"}], "]"}], "]"}], "+", 
            RowBox[{"0.5", "*", 
             RowBox[{"terminations", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "5", ",", "i"}], "]"}], "]"}]}]}]}], ";"}]}],
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "longPos", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}], ";"}], "\[IndentingNewLine]", ")"}]}]], "Input",
 CellChangeTimes->{{3.826638208705908*^9, 3.826638366801129*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[122]:=",ExpressionUUID->"7698bc73-2626-4fea-857e-9b0ea079399b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Calculo", "Section",
 CellChangeTimes->{{3.8242161122278366`*^9, 
  3.824216127589432*^9}},ExpressionUUID->"349400e8-5d87-4d72-9d46-\
2c9cf6d73b23"],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.8233405764015217`*^9, 
  3.8233405780702906`*^9}},ExpressionUUID->"a6df555e-cc77-4bd1-93ff-\
bdfa9c1a8598"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"===", 
    RowBox[{"==", " ", 
     RowBox[{"Magnetic", " ", "Design"}]}], " ", "===", "=="}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"periodL", "=", "52.5"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Period", " ", 
     RowBox[{"Length", " ", "[", "mm", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gap", "=", "13.6"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Minimum", " ", "ID", " ", 
     RowBox[{"gap", " ", "[", "mm", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nPeriods", "=", "21"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "number", " ", "of", " ", "periods", " ", "without", " ", 
     "terminations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blockGap", "=", "0.125"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"space", " ", "between", " ", 
     RowBox[{"blocks", " ", "[", "mm", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eEnergy", " ", "=", " ", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Particle", " ", 
     RowBox[{"energy", " ", "[", "GeV", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", 
     RowBox[{"=", " ", 
      RowBox[{
       RowBox[{"Magnetic", " ", "Blocks"}], " ", "===", "=="}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blockGeo", "=", 
     RowBox[{"idBlockGeometry", "[", "1", "]"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Blocks", " ", 
      RowBox[{"Geometry", ":", " ", "1"}]}], "=", "A1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blockThick", "=", "13"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Block", " ", 
     RowBox[{"Thickness", " ", "[", "mm", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magInput", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Type", " ", "of", " ", "input", " ", "for", " ", 
        RowBox[{"Magnetizations", ":", " ", 
         RowBox[{
          RowBox[{"[", "1", "]"}], "Import", " ", "from", " ", "File"}]}]}], 
       " ", ";"}], " ", "[", "2", "]"}], "Aleatory", " ", "Generation"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fileNameB", "=", "\"\<Magnetizations.xlsx\>\""}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Magnetizations", " ", "File", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "extension"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"headLineB", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "Head", " ", "Lines", " ", "on", " ", "the", 
     " ", "File"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fileNameT", "=", "\"\<Magnetizations_Term.xlsx\>\""}], ";"}], 
   " ", 
   RowBox[{"(*", 
    RowBox[{"Magnetizations", " ", "File", " ", "name", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "extension"}], ")"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"headLineT", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Number", " ", "of", " ", "Head", " ", "Lines", " ", "on", " ", "the", 
     " ", "File"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magnAmp", "=", "1.37"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Remanent", " ", "Block", " ", 
     RowBox[{"Magnetization", " ", "[", "T", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magError", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Include", 
     RowBox[{"(", "1", ")"}], " ", "or", " ", "not", 
     RowBox[{"(", "0", ")"}], " ", "magnetization", " ", "errors"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magAmpError", "=", 
     RowBox[{"0.01", "*", "magnAmp"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Magnetization", " ", "Amplitude", " ", 
     RowBox[{"Error", " ", "[", "T", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"magTheta", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Magnetization", " ", "Angle", " ", 
     RowBox[{"Error", " ", "[", "deg", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"posErrors", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Position", " ", "Error", " ", "Limit", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], "+", 
     RowBox[{"-", 
      RowBox[{"[", "mm", "]"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", 
     RowBox[{"==", " ", 
      RowBox[{"Other", " ", "Parameters"}]}], " ", "===", "=="}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mode", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Phase", ":", " ", "1"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"Linear", " ", 
        RowBox[{"Hor", "."}]}], " ", "|", " ", "2"}], "=", "?"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"symmetry", "=", "\"\<antisymmetric\>\""}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"ID", " ", 
     RowBox[{"symmetry", ":", " ", 
      RowBox[{
      "\"\<symmetric\>\"", " ", "or", " ", "\"\<antisymmetric\>\""}]}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"termType", "=", "\"\<FourBlocksAntiSym\>\""}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Termination", " ", 
     RowBox[{"Type", ":", " ", 
      RowBox[{
      "\"\<ThreeBlocksAntiSym\>\"", " ", "|", " ", 
       "\"\<ThreeBlocksAntiSymReal\>\"", " ", "|", " ", 
       "\"\<ThreeBlockSym\>\"", " ", "|", " ", 
       RowBox[{"?", 
        RowBox[{"\"\<Simple-Half\>\"", "?"}]}]}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"typeID", "=", "\"\<DeltaUndulator\>\""}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "\"\<DeltaUndulator\>\"", " ", "|", " ", "\"\<PlanarUndulator\>\"", " ", 
     "|", " ", "\"\<EPU\>\""}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gap2", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Horizontal", " ", "gap", " ", "in", " ", "case", " ", "of", " ", "EPU", 
     " ", 
     RowBox[{"undulator", " ", "[", "mm", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", 
     RowBox[{"==", " ", 
      RowBox[{"Calculation", " ", "Parameters"}]}], " ", "===", "=="}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"subdiv", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"2", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "2"}], "}"}]}], "}"}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "subdivisons", " ", "on", " ", "each", " ", "part", " ", "of", " ", 
      "the", " ", "block", " ", "geometry"}], ",", " ", 
     RowBox[{
      RowBox[{"for", " ", "each", " ", "direction", " ", 
       RowBox[{"(", 
        RowBox[{"nx", ",", "ny", ",", "nz"}], ")"}]}], ":", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"nx", ",", "ny", ",", "nz"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", "ny", ",", "nz"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"nx", ",", "ny", ",", "nz"}], "}"}]}], "}"}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Longitudinal", " ", 
     RowBox[{"Range", " ", "[", "mm", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lstep", " ", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Longitudinal", " ", 
     RowBox[{"Step", " ", "[", "mm", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"oversize", "=", "200"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "Excess", " ", "on", " ", "each", " ", "side", " ", "to", " ", "start", 
     " ", "and", " ", "finish", " ", "the", " ", 
     RowBox[{"computations", " ", "[", "mm", "]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"li", " ", "=", " ", 
     RowBox[{"-", "oversize"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lf", " ", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"nPeriods", "+", "2"}], ")"}], "*", "periodL"}], "+", 
      "oversize"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lNpts", " ", "=", 
     RowBox[{
      RowBox[{"Round", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"lf", " ", "-", "li"}], ")"}], "/", "lstep"}], " ", "]"}], 
      "+", " ", "1"}]}], ";"}], " ", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"===", 
     RowBox[{"==", " ", 
      RowBox[{"Sorting", " ", "Parameters"}]}], " ", "===", "=="}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nphase", "=", "3"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "number", " ", "of", " ", "phases", " ", "to", " ", "consider", " ", "on",
      " ", 
     RowBox[{"Otimization", ":", " ", 
      RowBox[{"{", 
       RowBox[{
       "LinearHoriz", ",", " ", "LinearCirc", ",", " ", "LinearVert"}], 
       "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genNumber", "=", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"number", " ", "of", " ", "Generations"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"genSize", "=", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "size", " ", "of", " ", "each", " ", "generation", " ", "from", " ", "2", 
     "nd"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"firstGenSize", "=", "50"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "size", " ", "of", " ", "the", " ", "1", "st", " ", "generation"}], 
    "*)"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.823006846322488*^9, 3.8230069060026283`*^9}, {
   3.823006941388849*^9, 3.8230069449799857`*^9}, {3.8230082923411474`*^9, 
   3.823008314869647*^9}, {3.8230083450346365`*^9, 3.8230085448784738`*^9}, {
   3.8230086058259954`*^9, 3.8230086213355737`*^9}, {3.8230087795682364`*^9, 
   3.823008785430538*^9}, {3.823008965891283*^9, 3.8230089992300415`*^9}, {
   3.8230094345273604`*^9, 3.82300949823573*^9}, {3.8230095512221775`*^9, 
   3.8230095520246325`*^9}, {3.8230095880543385`*^9, 3.823009601378403*^9}, {
   3.8230097311227455`*^9, 3.8230097578939714`*^9}, {3.823009807584254*^9, 
   3.8230098079696226`*^9}, {3.8230098428570642`*^9, 
   3.8230098468359966`*^9}, {3.823010010032849*^9, 3.8230100110343122`*^9}, {
   3.823010068984992*^9, 3.8230100879384785`*^9}, 3.8230102456885505`*^9, {
   3.8230104537277174`*^9, 3.823010454861856*^9}, {3.8230115432182617`*^9, 
   3.823011544168775*^9}, {3.8230116950258036`*^9, 3.8230117275651274`*^9}, {
   3.8230121502150497`*^9, 3.8230121680581884`*^9}, {3.8230126556711683`*^9, 
   3.823012658354679*^9}, {3.8230127168048267`*^9, 3.823012720145299*^9}, {
   3.8230128898960905`*^9, 3.8230129139649982`*^9}, {3.823013340726514*^9, 
   3.8230133465499244`*^9}, {3.823014861839714*^9, 3.823014887224802*^9}, 
   3.823014924421611*^9, 3.823015041881649*^9, {3.8230161642488713`*^9, 
   3.8230161743607426`*^9}, {3.823069516343995*^9, 3.82306969735824*^9}, {
   3.8230750570907884`*^9, 3.823075066587857*^9}, {3.8230751138885283`*^9, 
   3.823075121688725*^9}, {3.82307638514458*^9, 3.8230763913553643`*^9}, {
   3.8230767561550055`*^9, 3.8230767799497075`*^9}, {3.823076972005566*^9, 
   3.8230769726897955`*^9}, {3.823077093492547*^9, 3.823077123329562*^9}, {
   3.8230782723367176`*^9, 3.823078326605771*^9}, {3.8230812564981112`*^9, 
   3.8230812763505397`*^9}, {3.823081878241911*^9, 3.823081893386614*^9}, {
   3.823081924242709*^9, 3.823081955419917*^9}, {3.823082348054599*^9, 
   3.823082350590667*^9}, {3.82308381754845*^9, 3.8230838203767347`*^9}, {
   3.8230844145254054`*^9, 3.823084415041471*^9}, {3.8230848960481567`*^9, 
   3.8230849457792377`*^9}, {3.8230849781146765`*^9, 3.823085002122597*^9}, {
   3.823086962379418*^9, 3.823086962965016*^9}, {3.8230871113184395`*^9, 
   3.8230871139724236`*^9}, {3.823087144121188*^9, 3.8230871442528434`*^9}, {
   3.823087536933833*^9, 3.8230875403277884`*^9}, {3.8231010904696217`*^9, 
   3.8231011029430857`*^9}, {3.8231012026900797`*^9, 
   3.8231012215897465`*^9}, {3.8231031700030828`*^9, 
   3.8231031708937235`*^9}, {3.8231036474560947`*^9, 3.823103656580575*^9}, {
   3.823103805598419*^9, 3.823103815425969*^9}, {3.823103849234745*^9, 
   3.823103849609619*^9}, {3.823155572024024*^9, 3.823155576936425*^9}, {
   3.823169264835227*^9, 3.8231692710026717`*^9}, {3.8231693036017895`*^9, 
   3.823169340798465*^9}, {3.823169512809606*^9, 3.8231696333324413`*^9}, {
   3.823169677220273*^9, 3.823169765590374*^9}, {3.8231698277417507`*^9, 
   3.8231698878781633`*^9}, {3.8231699587880535`*^9, 
   3.8231700621037383`*^9}, {3.8231792859140596`*^9, 3.823179322539444*^9}, {
   3.8231819841366043`*^9, 3.8231821287743945`*^9}, {3.8231822857761173`*^9, 
   3.8231823344137163`*^9}, {3.8231824770813413`*^9, 
   3.8231824822671156`*^9}, {3.8231825228968573`*^9, 3.823182599333346*^9}, {
   3.8231826857036486`*^9, 3.8231827034896803`*^9}, {3.82318281990605*^9, 
   3.823182829500688*^9}, {3.8231829231504393`*^9, 3.8231830064309025`*^9}, {
   3.82318305488713*^9, 3.8231830765853043`*^9}, {3.823183112287979*^9, 
   3.823183147433326*^9}, {3.8231832040936003`*^9, 3.823183204664452*^9}, {
   3.8231852755965004`*^9, 3.823185278712427*^9}, {3.8231853893563633`*^9, 
   3.823185399354042*^9}, {3.8231857889341755`*^9, 3.823185790138307*^9}, {
   3.8231858580869827`*^9, 3.823185886365016*^9}, {3.8231859551904635`*^9, 
   3.823185967509987*^9}, {3.823186868199523*^9, 3.823186870173813*^9}, {
   3.823189511216112*^9, 3.823189516886362*^9}, 3.8232510714137216`*^9, {
   3.8232544917746634`*^9, 3.8232545094261303`*^9}, 3.8236774137198853`*^9, {
   3.8236774662021503`*^9, 3.8236774750625668`*^9}, {3.823677531087967*^9, 
   3.8236775527372704`*^9}, {3.82369999214837*^9, 3.823700004607412*^9}, {
   3.823700043710389*^9, 3.823700133937516*^9}, 3.8237002156291656`*^9, {
   3.823700392424648*^9, 3.82370039260953*^9}, 3.823700435905157*^9, {
   3.823703508507747*^9, 3.8237035106662517`*^9}, {3.8238664376058016`*^9, 
   3.8238664428184543`*^9}, {3.8238694120178137`*^9, 3.823869439996934*^9}, {
   3.823869634716196*^9, 3.823869681495384*^9}, {3.823872538179695*^9, 
   3.823872582563346*^9}, {3.8238726238316603`*^9, 3.8238726850192604`*^9}, {
   3.8242163670488667`*^9, 3.824216380910941*^9}, {3.824216440433897*^9, 
   3.824216463273857*^9}, {3.824216562877821*^9, 3.8242165897804356`*^9}, {
   3.824216621755506*^9, 3.824216626650219*^9}, {3.8242167192384005`*^9, 
   3.824216752347666*^9}, {3.8242175298929205`*^9, 3.824217589618078*^9}, {
   3.8242191570413933`*^9, 3.8242191903356256`*^9}, {3.8242901811746426`*^9, 
   3.824290183744201*^9}, {3.824298697135277*^9, 3.824298703184602*^9}, 
   3.824309094007413*^9, {3.8243779103701487`*^9, 3.824377917289545*^9}, {
   3.824385296570845*^9, 3.8243853424770327`*^9}, {3.82438573272908*^9, 
   3.8243857330449786`*^9}, {3.824457473878018*^9, 3.824457481148875*^9}, {
   3.8244592080639653`*^9, 3.824459210823598*^9}, {3.824478991219679*^9, 
   3.824479063525276*^9}, {3.8245443612090173`*^9, 3.824544363490386*^9}, {
   3.824548984555977*^9, 3.824548992277047*^9}, {3.8248026495402594`*^9, 
   3.8248026499569693`*^9}, {3.8248027067619467`*^9, 3.82480272124552*^9}, {
   3.8248032571046653`*^9, 3.8248032580819783`*^9}, {3.824817547810011*^9, 
   3.8248175514366903`*^9}, {3.8248208942728615`*^9, 3.824820898083444*^9}, {
   3.824821111628151*^9, 3.824821111728433*^9}, {3.825148345480859*^9, 
   3.8251483673189797`*^9}, {3.82514947417163*^9, 3.825149474555973*^9}, {
   3.8272370186427603`*^9, 3.82723703708366*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[66]:=",ExpressionUUID->"d35b1919-e84b-40d4-bb30-8607724457d2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Import Data", "Subsection",
 CellChangeTimes->{{3.824887362293291*^9, 3.8248873685138693`*^9}, {
  3.8249047582438345`*^9, 
  3.824904758571937*^9}},ExpressionUUID->"1c4dab10-d656-443c-96ed-\
ef526ce5eece"],

Cell[CellGroupData[{

Cell["Magnetizations", "Subsubsection",
 CellChangeTimes->{{3.8278289472146044`*^9, 
  3.8278289489546065`*^9}},ExpressionUUID->"01188d9e-e89a-4e7a-aa99-\
ad36e02e6086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dir", "=", 
    RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpGet", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"dir", ",", "\"\<magnetizations2.mx\>\""}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"magnetizations", "=", "magnetizations2"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DumpGet", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"dir", ",", "\"\<terminations2.mx\>\""}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"terminations", "=", "terminations2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8248873865880704`*^9, 3.8248874167994857`*^9}, {
  3.8248874541775827`*^9, 3.824887479796633*^9}, {3.8248885728823657`*^9, 
  3.8248885743488293`*^9}, {3.8248886280979414`*^9, 3.8248886304292326`*^9}, {
  3.824889530487033*^9, 3.8248895635770216`*^9}, {3.8248896597097826`*^9, 
  3.824889667058448*^9}, {3.824890312297336*^9, 3.82489031897589*^9}, {
  3.8272370797356386`*^9, 3.8272370949774523`*^9}, {3.827243232085741*^9, 
  3.8272432377025256`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[98]:=",ExpressionUUID->"b0b6952c-138a-4fc0-bed1-ddafa75d5c7f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Response Matrix", "Subsubsection",
 CellChangeTimes->{{3.8248877254502373`*^9, 
  3.8248877277477875`*^9}},ExpressionUUID->"4b33fc45-3751-4b71-b5b7-\
6ce20c53eeb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"M", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{"StringJoin", "[", 
        RowBox[{"dir", ",", "\"\<Response_Matrix_Tbl.txt\>\""}], "]"}], ",", 
       "\"\<Table\>\""}], "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DumpGet", "[", 
     RowBox[{"StringJoin", "[", 
      RowBox[{"dir", ",", "\"\<responseMatrix.mx\>\""}], "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Invert", " ", "Matrix"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Minv", "=", 
     RowBox[{"PseudoInverse", "[", "responseMatrix", "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8248877587903132`*^9, 3.8248877861214004`*^9}, {
  3.824887889830103*^9, 3.8248879002592845`*^9}, {3.8249047067588625`*^9, 
  3.8249047107742214`*^9}, {3.8251484893519526`*^9, 3.8251485244385505`*^9}, {
  3.8275900313826427`*^9, 3.827590034455519*^9}, {3.827829815910161*^9, 
  3.8278298200807652`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[103]:=",ExpressionUUID->"332a0f9a-a9fe-4360-88d8-d49c6a7809c2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Matrix analysis", "Subsubsection",
 CellChangeTimes->{{3.8275900852140837`*^9, 
  3.827590088703047*^9}},ExpressionUUID->"6686a1f4-ca73-44fd-b187-\
b78de872a767"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "w", ",", "v"}], "}"}], "=", 
   RowBox[{"SingularValueDecomposition", "[", "responseMatrix", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8275900987475567`*^9, 3.8275901653082485`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[72]:=",ExpressionUUID->"e954b047-7e69-48c6-85a4-67423456ebd2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Matrix U: \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "u", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< x \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "u", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   "\"\<\\nMatrix W: \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "w", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< x \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "w", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
   "\"\<\\nMatrix V: \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "v", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\< x \>\"", ",", 
   RowBox[{
    RowBox[{"Dimensions", "[", "v", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8275901748846607`*^9, 3.8275901870739727`*^9}, {
  3.827590264048064*^9, 3.827590285572916*^9}, {3.8279381137699904`*^9, 
  3.827938233607413*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[167]:=",ExpressionUUID->"b15c2a30-5531-4198-b9af-255e774e9d50"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Matrix U: \"\>", "\[InvisibleSpace]", "4827", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "4827", 
   "\[InvisibleSpace]", "\<\"\\nMatrix W: \"\>", "\[InvisibleSpace]", "4827", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "372", 
   "\[InvisibleSpace]", "\<\"\\nMatrix V: \"\>", "\[InvisibleSpace]", "372", 
   "\[InvisibleSpace]", "\<\" x \"\>", "\[InvisibleSpace]", "372"}],
  SequenceForm[
  "Matrix U: ", 4827, " x ", 4827, "\nMatrix W: ", 4827, " x ", 372, 
   "\nMatrix V: ", 372, " x ", 372],
  Editable->False]], "Print",
 CellChangeTimes->{{3.8279382192139654`*^9, 3.8279382343169003`*^9}, 
   3.8280931315661016`*^9, 3.828107715923738*^9},
 CellLabel->
  "During evaluation of \
In[167]:=",ExpressionUUID->"a6585820-0637-467b-920c-19e083804ce9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"singValues", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"w", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "i"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Min", "[", 
        RowBox[{"Dimensions", "[", "w", "]"}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLogPlot", "[", 
  RowBox[{"singValues", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "300"}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Singular Values\>\"", ",", "14", ",", "Bold"}], "]"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8275903219276047`*^9, 3.8275905708788433`*^9}, {
  3.8275930223781185`*^9, 3.827593057894721*^9}, {3.827830883312677*^9, 
  3.8278309151883698`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[168]:=",ExpressionUUID->"93612d4c-16cb-440d-8db2-ace856ac2bb5"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1z3lYzfn7x/EjWYoUsjeUlEoRKU1ZXlSSQ3va67TvddaKyGFqZC3GjKWJ
aFotlRr7cjBobCNLfqloTGOJyBINar5+19x3/3Q9zvvzup7XbRCe4hmlJhAI
5H0Egv///99f57wfJt19MfDnf+fRDzjk9OqnhAdfyANxMNyqRl1xnqyDhOVP
H059XXjuP+vimyPevw8f3kEejcPLvb+3sn1D1oPR0VK78sp/yPrYn9C8v8P1
C3kiRCPs7YK0+6j+8yTsHma8f42fGtkY48JfG1rHq5NN8NOjwBnjK/qRzVA6
47jXc8sBZHMovb+f9SliIHkqyieq62jmaJAtIb50M2ZCtSZ5Or7s9ja23zSI
PAOHG+t/f1w2mGyF1Mz9TiWuWuSZcDikMfp56BCyNcKUVTrOTWwbNJ75s3pR
qzZ5FszFe/21DXTItnB3syr8VMD+Fl2NNsNkF9h26HE+nuBiN5RsD7clE39+
vYw9G2kH2mdZ/M6eg6zasJ7SFvZcuAqCPgQLh5Hn4WxxsUNiIBs4dG/rhsjf
yEpA/d94Sd0tfp+PKeG3M763Hk7v87Fj+IqQEfPIggW4JG7T+byH3xegwlhk
6l/K7w5ocxp7ZktfXXp3QK/6POu3A8gCRyQs6G+dLuJ3RwyWCROzo/jdCU2u
Lf2mneJ3JxgEe7+sOcPvCxHR+36Ko/YIel+IkoQeZeYwssAZZk/9Rt0I43dn
nBscqW0Wzu+LMFn7fsy9w/y+CBG70w3+quZ3F/xhknDe/zO/uyCo75kRiT38
vhiRZ47YTXEcSe+L4RtvNsOJLRCiYuhZ+xc5/C6EyKbfaOuN/L4E+kM/Zjdf
5/clCB5jlNVwg9+XYovThiErB4+i96WwKhc2hA0hC1wRO7+tY+lifnfFje0L
zvYu4Xc3BNYrkz9k87sbYiXF2RY5/O4O44FDpdPPkeGO3dnqti7n+Xt36Ba0
L3LvIqvcoe7bNXdhN+89cPdqpM3ryaNp74F9z1aO1TAnKz2gHOc36YovWeWB
nE13t34JIgs8MbioDJ5ZvPdEyonL6oqNvPfEim93uBoe4r0n9hTPTvrlKO+9
cDI4OzCrnvdeKFh+YPezFt574WX1ypFe73jvBbtfTZXlfcbQ3huLL9oIP+qQ
4Y3YOy4ef00kK73RvWpTyV4TssobK3sWKKtm894Hy0o2Py6bx3sfKB7d+3RM
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
wnOxZKThwEj7h1dzpqv+ByGsDJ8=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, -19.06110904327387},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->FrontEndValueCache[{{
      Charting`ScaledTicks[{Log, Exp}], 
      Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Automatic, Automatic}}, {{{{-18.420680743952367`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{"10", 
           RowBox[{"-", "5"}]}, "Superscript", SyntaxForm -> SuperscriptBox], 
         TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox["10", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-16.11809565095832, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}, {{-18.420680743952367`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-11.512925464970229`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-4.605170185988091, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2.302585092994046, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {-16.11809565095832, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-13.815510557964274`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-9.210340371976182, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-6.907755278982137, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {0., 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}, {4.605170185988092, 
        FormBox[
         TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
         AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
  GridLines->FrontEndValueCache[{Automatic, 
     Charting`ScaledTickValues[{Log, Exp}]}, {
    Automatic, {{-18.420680743952367`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-11.512925464970229`, 
       Directive[
        AbsoluteThickness[0.1]]}, {-4.605170185988091, 
       Directive[
        AbsoluteThickness[0.1]]}, {2.302585092994046, 
       Directive[
        AbsoluteThickness[0.1]]}}}],
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->{1000, 300},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    StyleBox["\"Singular Values\"", 14, Bold, StripOnInput -> False], 
    TraditionalForm],
  PlotRange->{{0, 372.}, {-19.06110904327387, 1.9755944454248364`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, 
    Charting`ScaledTicks[{Log, Exp}]}]], "Output",
 CellChangeTimes->{{3.827590325466776*^9, 3.8275903493265166`*^9}, 
   3.8275904212339306`*^9, {3.8275905073722253`*^9, 3.8275905720954685`*^9}, 
   3.827593059634164*^9, 3.827829861585439*^9, {3.827830894554221*^9, 
   3.827830916382702*^9}, 3.8279186602170963`*^9, 3.8279348706249666`*^9, 
   3.828093135556522*^9, 3.8281077178386397`*^9},
 CellLabel->
  "Out[169]=",ExpressionUUID->"b0618199-d9f9-496e-aa3e-8df72d7d1185"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpGet", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"dir", ",", "\"\<listShim.mx\>\""}], "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8278325361565895`*^9, 3.827832553014944*^9}, {
  3.827832661101421*^9, 3.8278326672299037`*^9}, {3.8278330233232117`*^9, 
  3.827833023833919*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[170]:=",ExpressionUUID->"95df70a2-de47-4492-92a5-e72fe8c7d462"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"truncation", "=", 
     RowBox[{"10", "^", "0"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"rank", "=", 
     RowBox[{"Count", "[", 
      RowBox[{"singValues", ",", 
       RowBox[{"x_", "/;", 
        RowBox[{"x", "\[GreaterEqual]", " ", "truncation"}]}]}], "]"}]}], 
    ";"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rank", "=", "100"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Matrix", " ", "Dimension", " ", "Adjust"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wt", "=", 
     RowBox[{"w", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", 
         RowBox[{
          RowBox[{"Dimensions", "[", "w", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], ",", "All"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"winv", "=", "wt"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "=", 
       RowBox[{"Length", "[", "winv", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"winv", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", 
       RowBox[{"1", "/", 
        RowBox[{"winv", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "i"}], "]"}], "]"}]}]}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ut", "=", 
     RowBox[{"u", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"1", ";;", 
         RowBox[{
          RowBox[{"Dimensions", "[", "w", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Truncating", " ", "singular", " ", "values"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"rank", "+", "1"}]}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "wt", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"wt", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", "0"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", 
       RowBox[{"rank", "+", "1"}]}], ",", 
      RowBox[{"i", "\[LessEqual]", 
       RowBox[{"Length", "[", "winv", "]"}]}], ",", 
      RowBox[{"i", "++"}], ",", 
      RowBox[{
       RowBox[{"winv", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "i"}], "]"}], "]"}], "=", "0"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xr", "=", 
     RowBox[{"ut", ".", "wt", ".", 
      RowBox[{"Transpose", "[", "v", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Compare", " ", "Matrix", " ", "Responses"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R1", "=", 
     RowBox[{"responseMatrix", ".", "listShim"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"R2", "=", 
     RowBox[{"Xr", ".", "listShim"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"R2", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Truncated SVD\>\"", "}"}]}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.01"}], ",", "0.01"}], "}"}]}], "}"}]}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", 
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<Effects of Truncation on Response Matrix: \>\"", ",", 
             RowBox[{"ToString", "[", "rank", "]"}], ",", 
             "\"\< Singular Values\>\""}], "]"}], ",", "Bold"}], "]"}]}]}], 
       "]"}], ",", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{"R1", ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "Orange"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"{", "\"\<Complete Matrix\>\"", "}"}]}]}], "]"}]}], "}"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8275922343129234`*^9, 3.827592265557576*^9}, {
   3.8275923077972927`*^9, 3.82759234046104*^9}, {3.8275923887245784`*^9, 
   3.827592495863014*^9}, {3.8275925845266457`*^9, 3.827592631903944*^9}, {
   3.827592682813264*^9, 3.8275927068793535`*^9}, {3.827592771535396*^9, 
   3.827592782907146*^9}, {3.827592998309683*^9, 3.827593016679679*^9}, 
   3.827593067389693*^9, 3.8275931013663588`*^9, {3.827828996315911*^9, 
   3.8278290053151464`*^9}, {3.8278309416051974`*^9, 
   3.8278309577039537`*^9}, {3.8278310014238415`*^9, 
   3.8278310127703247`*^9}, {3.8278310542185287`*^9, 3.827831067659809*^9}, {
   3.827831127258113*^9, 3.827831190322892*^9}, {3.8278313627563763`*^9, 
   3.827831397354506*^9}, 3.8278317319088435`*^9, {3.8278328048823767`*^9, 
   3.8278328050063086`*^9}, {3.827833035433263*^9, 3.8278330530821247`*^9}, {
   3.827833083902423*^9, 3.8278334149803762`*^9}, {3.8278334855415936`*^9, 
   3.8278334857284884`*^9}, {3.827838534021947*^9, 3.827838550596428*^9}, {
   3.827838691755066*^9, 3.827838692437672*^9}, {3.827931614547064*^9, 
   3.82793161831411*^9}, 3.8279373111342745`*^9, {3.8279373549215918`*^9, 
   3.8279373554551764`*^9}, {3.827937658858835*^9, 3.8279376590001945`*^9}, {
   3.827937868428641*^9, 3.8279378693216443`*^9}, {3.827938078825065*^9, 
   3.8279380971418953`*^9}, {3.827938272783918*^9, 3.8279383084352603`*^9}, {
   3.827938438983762*^9, 3.827938439513835*^9}, {3.8279385173303914`*^9, 
   3.827938528697585*^9}, {3.827938876578775*^9, 3.8279389426960287`*^9}, {
   3.827938987169377*^9, 3.8279389877835827`*^9}, {3.828107688718362*^9, 
   3.8281076904963427`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[171]:=",ExpressionUUID->"bbb6240a-a82c-497f-8d84-f1247fdb2772"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
nHDlwfaDtEkqpAbOszNO0BNTsSRjue+h8zRSkSGw//i0lLZIhcsJ68ght2nL
VIzUOj448RFtlYrUvUE//ntN26Ri7rTegUn1tF0qZLonnug10fapOKRT7nW5
lRfvfypWO79579GBFqSiRtlmY6+u9OpUzCn+uvNqH9pFsV97Zrn66tPuqZg0
5FVd/9G0Zyp+f5CvL5tAe6fiZ21XuE+j/VKxPua/s23m0kGpeD1v1EK5PS1M
xd2HURf6rqQjU5EmPNZlqxsdm4puv0teqfnQialQ9kuc4hVCi1IR/jIhvTyG
lqZi8npPuU4qLU/FMbmKwarN9NZU6BzTnrFjF52Viogre1tX5dK7U3F1xLsE
1RN0Tiq29SjubHSezk2Fq+mxZ0tL6bxUaDp1nxp2i85PRUWBke+eh3RBKgxO
jYq4+pIuTMWl89Ud6+voolSk91rm1uUbXaI4r0EpyaZ/6VLF/l7b0UOgupH3
X3Hes4Y7R2vSFamYiLVxB3rSlanoq25gc2MAXZWKthEm2h+G0Y9TceHD6yut
jenqVFgE2p7oOpl+lYrH5gU5PSzpmlRs3zNUSd2WrlPM77f8Q/1iukFx/s67
PC1YSX9R5BsZWO7iRjel4nOio3XzRro5FUPDynZsCKKVxLgYuSHmSiStIsbc
h6cH/06kVcXYP1PctbOMVhNjoq31iDbbaA0xXmy5VPZgN60lRvGS60+Scmlt
MY47lXfVy6d1xDh8Ym/r7WdoXTEsz83QVC6m9cQw8/Edb1tG64tx4YLfIdEt
epgYwknnAkqqaEMxAle/nt/wjDYSI0JnT2T3t7SJGAH97mlOqqcnitF/ycUH
q77SECOhtrE8uZm2EKN6/5Cmov+8ef/FiD8rO/G7PW0lxi/NIfstO9M2Yjzt
+U68pwdtJ8bPqzHK2v1oezF6Dt7Ybpc+7SBG74QLrWYa0gIxLr3s6NPBhF4t
xrYyTH0/mXYRQ7zK8GzNDNpdDM+BV+79Z0N7iuElKJ460Z72FsNj++TAVAHt
J4bOqv6Zyq50kBi1UQXrkzfQQjHCB/vqjAmgI8XoFz3Voj6cjhXjVfOwX4UJ
dKIYsT6uP7ZIaZEYK6PsH8Rso6ViBPklhgVn03IxfN/dmhxwmN4qhvT1gfzA
AjpLDCOz+82hF+jdYuSLPFdEldE5YsxoU7Iq/g6dK8bskvY5SY/pPDGsN4++
nfSazhfDLu/zlrh6ukCMb+s8H4V+pwvFaNYdtX29kg/vvxjr6pVs7dvRJYr6
uJ45pp3pUsXn9/Qt6NKLLhdjdHTm3TcD6AoxxvUMDzs2jK4Uo2mRmW3AWLrq
f/N6XzvBjH4sxkPP621/TKerxXBcdNT76Fz6lRjdz23u6GpP14ix+/bmi71X
0HVi/DYeEH7LlW4QY8zl8CFRXvQXMRKv9Qk2DaSbFPtZoNz7YwTdLEYfm4FO
2Ym0kgRf/kwOWi6jVSRovCWY1zOTVpUgQ/759L1sWk2CccOavaSHaQ0JXm2e
1WZ+Aa0lQWbHQbc1L9DainWj7W0qrtI6EuiN/JSSeJvWlSBFuL7X9Ee0ngRP
1WLG/XpJ6yver2hJ/P46epgE5RpDmuZ9pQ0l2BZ4Ma/xN20kwUzxjWmJbTbx
/ktweez+bTqd6IkSaNTNbb2nOw0Jfpzv02eQLm0hgdOIV1ez9GlLCaJuVBt1
G0VbSbAl8NWdGFPaRgKr9kLn71NoOwmMv6PCaRZtL0GCvv/b+/NoBwnuPu41
02opLZDgmGvX0ZdW0aslONgu0szcnXaRoERrofdlb9pdgshu35dZB9Oeiv2Z
sK7HwyjaW4J9s00XuiTTfhL8mTFw1vc0OkgCgenKwMjttFCCtPvdKtRy6EgJ
hBZKCxLz6FgJlLs5DflTQCdKcO1I22qHC7RIMY/bydd2XqWlEsz2/3C47BYt
l2DguqCBFQ/orRL8PKnZdPg5nSWBkfiusss7erdi/rpHen9voHMk+O3T45tD
E50rwZC7u75l/KXzJBiqeWPO4Ta+vP8SfPZa8i2zI10gwdatOffdtOhCxbzm
GLzt0YsuksBjkpvaoX50iQS1BbevDtenSyWwjFbZnzmCLpdg7bulR1uPpSsk
uB2Yqek8ga6UQKcs5culKXSVBOf8jqbpWdKPJbiR52cXaU1XS5AvP3j5tR39
SoKCZYGXLZfSNRIsebp+ce4Kuk4C71+vDqu70A0SeHmodF/nQX+RYKzfkzfF
3nSTBMmXLB+rB9LNivlap/nODKOVpHjSeGjl+hhaRYqNnUw/BiXRqlJMrarr
t15Cq0lxL+FQuXkGrSFFyebCdT8yaS0pZua66KXsprWlSB4ZekhlP60jxY3o
+W5LDtO6UljuzUxKzaf1pJCcazUx9xStL0Wn/OVbD56jh0mRXXz3YEYxbSiF
eG7Bd+9S2kiKv01BfSyu0yZSuN4b4NThNj1Rim0na4Nv3KMhhfk+1U2iR7SF
FOrLh1TMr6YtpVjTyVPS8zVtJcVJHbWkN+9oG8X7zBBan6qn7aRY1tDORtpI
20sxYeGYSr8m2kGKhoF9rzn/pgVS7Bzc/8UKZT/efynGp/xc5tyWdpEiyH6j
qZ8a7S7FG4OBQ6SatKcUtglu5ae70d5SNG10vPe+F+0nhcHCkh6D+9FBUrh8
shO7D6KFUoweOSmg0ICOlEJXu/P07qPoWClSHgyPDjamE6X4Uznt7scJtEiK
3WL1Yx5TaKkUP7dUTPs5nZZLMU2WOkhsRW9VvK/K+FVj59FZUgybM273i0X0
bkV/tbpR8mV0jhR3B1t3t1tF50qxXuyvpeVK50lhuPbJ/rsedL4UPVKaq2Xe
dIEUNx13GNoG0IVSFCbumfGfkC6S4v4Ps0/ZUXSJFFn9Og02TqBLpehupm67
X0SXK87zj+LaZhldocg7Z8qvwVvoSil0+o87PiiLrpLisdgq+Otu+rEUDqZp
lan76GopVM/59Pt5kH4lRb1rTsrwo3SN4n65aJQbnKDrpKh7s2jk11N0g1Tx
8+WKuviz9Bcp7GLU8bGIblLc38wF1waW0M1SqHR+Gj3mCq0kwzXLgi19ymgV
GeoE319+KKdVZahc2t085yatJoOPdHdfu9u0hmI9ebbB90paS4bcYKlT2n1a
W4Y+twNtjR/SOjIUX4zr/OgxravoXzX2WuwzWk8Gv//Mzpi/oPVlOB+ot1zj
NT1MhrYeE0Mb39KGMjyyPKP5uZY2kmGGU/ZHjXraRIa1l1qH2X2iJ8owYfzC
6KIvNGSInOv8blETbSGD0olP2TrNtKUM91Qyu2oo+fP+y/Bp15sOY1RoGxkM
9faVR6nSdjJUvVqhptqRtpdBS312z1OatIMM49fP/5TejRbIcHnwD81dvejV
MoT8NRBV6dIuMqj9sM0dO4h2l2G08sTIEwa0pwxLb6/KXzCK9pYhaLRfiNo4
2k+GBIvS9ncm0kGK+VYeL8maSgsV75sU+8Tdko6U4eto8w0jrOlYGQySt1Y+
nk8nKvan+r+f6xfTIhnSg56+rXakpTJsPRU4cehqWq7Y38yrRyxd6a0yHJ+R
12+CB50lg/KT+nzljfRuGcR9B8l2+tI5Mli6LQrpG0TnyvDFdN/NECGdJ8OS
2PVllyLpfBl+nXvY4UcsXSDDlDj/YTpJdKEMTtWWP0el0kUylM2Nzp8oo0tk
sDLaM9Qsgy6VIeKiQMtkG10uww2Hn1bDdtAVMrhcajyms4eulOGm+vg2HfbR
VTKMO5ZY3pRLP5YhVNK1x9s8uloG83X5Xvfy6VcyXH0pVr9SQNfIcOlUZWNB
IV0nw6ENMvXcIrpBhj0VLqOySugvivPj03OUrJRuksFhUMOt+HK6WYaKnn6f
hRW0Uhpa2ekk+lbSKmnIsJgb7VFFq6ah1My+aM1jWi0NCQ0zLJZV0xppmHlN
rf2CV7RWGpLGjFWZU0Nrp0FP22D4tDpaJw1uN23DJzXQummwNtqibPyF1kuD
zeXpR0Y00fpp8PSfGze4mR6m+Lx1doyuUgDvv+Lzf9OO9VChjdIwaMPWrl1U
aZM0ZGUUHlJToyemYcHKsrVtNGik4cia+plKWrRFGjpZf5/xszttmYbKzs+W
fulFW6XB/v3qyPq+tE0a1l6trqwZQNulYeks8ykvB9P2aZh0/O/NJwa0Qxqc
up8KrxpJC9Iw4GHM/Dtj6NVpCLyjaXJjHO2SBu03ZmZXJ9DuaUi1tVpaMpn2
TMPd7qE7zpvT3mmYdX9epzMzaL80nF+3I+vEbDooDZsrHecfnUsLFfPpHdjr
0Hw6Mg05Bz9/3beIjk2D1rUhP/YspRPT8OW8rtbO5bQoDY22A6dkrqKlaTgR
Wh+42ZmWp8GlUKMizY3eqtiPmEhTyXo6SzG/X2HnUjbSu9Pw6lvK4kRfOicN
8eFP28QF0rmK82ZvfyEqlM5TfH73e1l4BJ2fhor9/TaExtAFaXA/XCIISqAL
0yB7s1zgn0IXpaG/byuPTRK6JA0XN8xP2phOl6Zh2ZZBZz230OVpuP1f+8Z1
2+mKNJzymz7WbRddmYbOdknJLnvpqjScCzv6Yc0B+nEaNE2rF686TFcrnudl
UC44Rr9KQ37WAXPHk3RNGp4cqyxeeoauU9yHyiAsPk83pKHr1NpTC4vpL2no
g4KZdlfopjSYTtSosr1GN6dhardJHnNv0krp6HU2o8OcO7RKOjb3TcmfdZ9W
TcfJkFNOlo9otXSEOF8xnv6M1khHe+PCHhYvaa10BH1tVp76ltZOx46IfSp4
T+uk49O5rqpmH2nddPgEfewxsZHWS0f8oHGjx3+n9dORub3zCJNf9LB0bG99
dYDx33/3Px1t5kmGGP0XyPufjp6LS6eMbkubpMPc9uliww70xHQoHW4dOKIT
jXQYPvLfP6wLbZGOoZ88Hg7tTlumw/3xd/UhvWgrRb7C02aD+9I26bj2UD1w
4ADaLh0/YwtPDRhM26cjP2WVUn8D2iEdDXcHztIdSQvSMeBQ+7Q+Y+jV6Rjn
YfBIZxztko6PwsMDek2g3RX7ffubsMdk2jMdj0+pve9uTnunY63f9dndZtB+
6bCzXpCtNZsOSkfAcr/fnefSQsV+CxrtNefTkelQued3stMiOjYdHZW8Bqov
pRPTUXp9XYLaclqUjlvJDz60X0VLFeenOWFeO2dang5hxoKytm701nRYRQ6z
abOezkqH68kFH1U20rsVnz/YtOs/XzonHUuzzzgqB9K5ivlJ7/dtFUrnpePw
d92av+F0vqJ/4/fjf6LpAsX5OW0p/h1PF6YjrfLSsuZkuigd3r2/9/glpkvS
sbXX/MofaXRpOr5pZm5p2kyXp6ObdhvX75l0RTrULq4a/20nXZmOuiGrO3/N
pqvSUTO519PG/fTjdCy0Ddry+RBdnY6iDtOcPx2lX6Xj3ML0aQ0n6BpFXu3r
Bh9P03XpSL15WKf+HN2Qjj6T7Hp/uEh/SYf0YGO/ust0UzrCrEp6vC+jm9NR
nH21R+0NWkmOF7qiAe9u0ypyLOnbSq/mHq0qR4+jbl3fPqTV5Gh/QV/9zVNa
Q46yqUZ9X7+gteTQ9r1u/uoNrS2HYMtvp5e1tI4cm975xb6op3XlcGn2P/v8
M60nR2Xj3nbPv9H6ckze996h+ic9TI52ripZz/7QhnI4qp9//VQ5iPdfjtMR
H8yftqFN5Pj81OPYk/b0RDkqBvUd8kSdhqLfubXbHnemLeQIn95a43E32lIO
i0Ufgx/1pK3k6Bg+9sPDPrSNHG+Ohq142J+2k+PgfxWPHwyi7eXA/KerHgyl
HeS4peHSUDWCFsiRfONYcNVoerUcTR29m+8b0y5yXJkmC74/nnaXw3/3zN/3
zGhPOZ5sXLLp3lTaW44Z6wfdvzud9pMjfk0rvbuz6CA5/lqlhFRa00I5RIe3
Pbszj46UY8OXrqPuLKRj5bjxYJ/f7SV0ohwh21feuOVIi+TQ+jDI9NZKWiqH
UoLz6QonWi6H96lzgoq19FY5hk2q1ajwoLPkWO9988xNL3q3HPcfjLS+uYnO
kaPT2ruVNwLoXDl0Epa43gih8+RI0Vvx+3o4nS+H1beLcdej6QI51N1GqF+P
pwvlKJk1TF6eTBfJkea2bVS5mC5RnKdpl29cS6NL5Qj0U3G8tpkul6PXgHmP
yjLpCjk0zRrml+2kK+XYqdS24mo2XSWH18btVlf3048V+2VqdKf0EF0tx7h2
R5eXHqVfyaHr06pT6Qm6Rg5h6pLSK6fpOsX93P5r8ZVzdIMcVfV/n16+SH9R
nO9gNdfLl+kmOdznXla6XEY3y1Gc9HHHpRu0UgbCr6tOvHSbVsmAy93mypJ7
tGoGsn4+ii55SKtlQO3oyfElT2mNDNxfsvVZ8QtaKwMDfAcHFr+htTNQmLKp
Y3EtrZOBw463d16sp3UzkG872eziZ1ovA92e93x24RutnwGl///XsAzcOHbl
WkZJ6tn/Z8MMLOv4obLXoyMtNsrA7+Cbs4XmJS02yYDn2QsDJ+vdbvHEDLim
XnBfHve4xciA9THBD8/cVy22yMCR7g8bK63qWmyZgT/Sh3lt0j632CpD8e/F
rUPzcr632EaRr/LAAvMVv1tsl4GQTU9igp63avn+TvsMaMhP9ZW4tG6xQwZm
mfukVk5vx+8HVfRTur1dOaRji1dnQLV2ufxsW80Wu2RgTajzMa+QLi12V+Tp
/Tfh44Bu/D7RDPgNMN3b8Yd2i70zcC+r9/GLf3q12C8D8oq7l96O7dvioAzU
lh8fmzK3H79/NAOZzbsiD/ce0OLIDBg9ORv/rPXAFsdmQL025FyS6uAWJ2ag
5kJuJQYN4feVZiAw4EwPj+UGLZZm/O//J/+wLX94i+UZ2Lw1tmloF8MWb83A
Sr0neqIlo/j9phmY99PJuSRvdIt3Z8CwfnxNl25GLc7JgM6cwKLr8WNbnJuB
s0aD7xl1GtfivAw4vJKOztpl0uL8DFydpHPY2nJ8iwsy0KpDVn7c7wktLlTM
o69p1J7iSfx+5Azc6XW9sXHz5BaXZGDJ1/mi6gtocani/ZK3apicn9Li8gxI
T58JOnRpaosrMvBZZaXPurvmLa7MwLVOXV7tqrdocVUGdmh7dIvWnN7ixwr3
zRlrbjaD38ecgXXOC7q087Fs8SvF+VymOkDjxMwW12Sg8v+4uvuomL7vceBJ
EoVKqCQhSSo9SUhtSZIkSVJJKulZSEJSiZIkSTIzzUzz3JQkqSQkSRKSJMQ7
CUklJEnyO9/P3db6rfz3WufOnfO0z75zrdXevXRT8qi1lLsuwIlnnJVFm+0p
916AO1ImxsWl6yj3XQDf6Vf3P9FcT3ngAujNW6Cn6eBIeegCKC39MCln0gb8
+7c0CDhvZKvwHC1Fg2a9N8sO8pwoy9DARsthk0zkRspyNFiiK3331QZn/Hu5
NNBazV80xWgTZSUayJjZn3iu7EJZmQY3ZytttZLeTFmNBgviw7wPDqI1aNBg
+sCc+8OVsiYNpvhEP337cwtlbfJ9Ila55yh3yro0SPU7fNdC0QP/Hi8N4ju5
HmKdrZRNaCBlvVPykZ0nZTNyvXHlg8Y92yibE1u+Kd27wQv/fi8N+rqqmRnd
aGsaKErr8TpPbadsS4MNF99PTTTypmxPg9KS2R8TXqEdadB5vXi7xAkfys5k
PhwmMGWX+WL8k/HLRrff+Yr2oEHKm+oDKy7uwPinQZn0VRorxA/jnwbZVuOS
Box2YvzTYOA/3qXAP+hgGtgpe05WeOiP8U+D4okftMZzAjD+aXBRx8ZjT1Qg
xj8NWsdqPgz0CML4p8GsFaPOKloFY/zTSH5Zq3FCLwTjnwb2e34t/6IeivFP
g+nSTzf4T92F8U8DnUezVWXHh2H80yA2vGX9xGR0Og1cbAP7HRR2Y/zTwCS3
dO1/F9AMGlzyf7366dw9GP80qJ8ve3z5VTSPBnn/vdpraLsX458GvF3rPe+8
QeeR673Nx8kcCMf4p4GR+aJLStP2YfzToN/hTcxwKbqUBtNiXdJfekZg/NNg
8fkrV2/K7Mf4p4Gp38Lo28XoKnJ/1tQdg/6RGP80OPlhZ2nMzAMY/2R/dgQ6
B79E19PgF3eh6bML+PfvG2lgpqOS+HTrIYx/GhyqPzgmRisK458GT9YWvf3+
Hd1Kg7uzNljaVh/G+KfB0G0LhYysaIx/GlQmLBb/PHAE458GjXc7flTqxWD8
k/U4+dtPLxvdR/b/zUs2ttNiMf5p8DxHWUMjFT1Eg8mdh8dXysZh/NPB4qzL
vGVJaCk6HM35vChT9ijGPx2CGHM3vj+NlqODoMqnWH9aPMY/HfR/v7aOyUYr
0aFQScPuvf4xjH86GOa4WwTcQqvRIS8tIX/qxuMY/3RYNPpn9s9PaE06LP0i
uX1KfALGPx32bVoTFjkrEeOfDtvXiU20K9EGdLAzOGy9wO8Exj8d7uzdaHl8
QhLGPx20bc9Um5eizelQKaVf6eh3EuOfDrbTLl++PS0Z458Oj69xHU7VoW3J
9SoJ/pfiT2H806FGeeduDcC/f+9Ih+Pa7jObhtHOdJi6qSOksuI0xj8drIdo
rz9ZpWL80+Hlyr6FgwK0Fx1anEZfjJc7g/FPh1hOtN6BvWh/OnCetKVVvUIH
0yG8++9Zx1VpGP90GFoU2S1ZgA6ng+qyHoMb07H+QiRZr+RrqzwS0VFkvMq9
C0t/oGPo0HP68UeOTzrGPx06jwVUfnyCTqTD5WDbd3ZwDuOfDin0/ouJ+ehU
0r8HQSbOahkY/3SgxSwXuJxAZ9IhsSNFUv8HmkGHrXo784O24d9fZ9OhYrrd
z7R7aB4dIoyNWdP0MjH+6bDW5vlz99PoPDKfl72087vRBXRYsXHWCZvVFzD+
yfgbPlhZ09GldHCLMJwj7kCX0+FITcwEd30axj8dQqu2r58ahK4i419kTtuT
ha4h+0tW99vzO+g6OvhHhFUeaEHX0+Fg5No7Du/RjXSw8hUMyfxrb6aDRNtw
//ib6BY6/Bl/Ndo9Ed1KhycrIyPPL0a300FOQTaw9R72t4OstyDJ6Z4JuovE
a+vXauMDOP5e8v2PrGauOo3z10eHzfQFv3TDcL4H6JAWGnBJQgnXa4i0q2/0
jtmN6y/BAFn9wsDHh3F/STEguOq5/CJX3M8yDIj//nfA4SXGmxxpf3Jf99RW
PC/kGSB3tnPi0WA8b5UYEPPnneOo33YY/wzwv2s6rNeF9bjUGODgYPHyfiLW
b9JgwIPL0yV3GmP9IU0GZMjRWIqjsB6PNgP8sgvvc0uxno0uA/JkVxuu+YT1
UAwY8GnZ+yv31AsomzBAWzdkukJYEWUzBtAnp1zbeeAaZXMGnDSYdOso3KIM
DOjt2TT04FUlZWsGyF8f1WTiXk3ZlgHFO/Zmr/9zn7I9A9w6tn45mfmQsiMD
PB0YNxJjsf6EMwOcCoJ2xE5ooOzKgKphBfcjO7AehQcDbl5+HNgUj/UJvBgw
W30ldyjwGWVfBtRrhWWYqWC9Cn8G/JxhcaoiFR3MgAMNiSGiJ+gwBixwGUy9
8hIdzoCAak+noRx0JANO34rSWWCBjmLAnVuNnKvn8ftiyHrJTZA6fQ37E88A
o8hgQ9kc7G8iA85mTNs5OwTHk8wAe9ofr4IJTyinkv6mCutFcx9TTmeA7Y6k
KPVxWJ8jkwGNQz91Ip/VUGYwwDVuzj4/2l3KbAZ4JNSP1/bH+ecxwLlNPV7M
xnogInK/XeM08x+WUs5jQPjfyuLxx69QLmCA8lr97MzR+ZSLGGAWMSB1fhzW
xyllQOvB7he7b+H+KWdAhc+Lv89fYf2kCgYU3A99mqCO9YuqGNAsaDL9bYH1
SmrI+gXdb9YLvUq5jgFe7Qsu3lyC+6ee9Hf17OvXpuJ+aSTzoSlBCzB4RLmZ
AUyztnGlP3A+Wxhg/cnggjbrBeVWBjx9n7hgSArrjbQzYHD501v9aVhvpIMB
U6/82CK7C+uLdDGgafYjPYNTnyn3MqBE4tDFqlasJ9LHANUghlaJPtYPGWBA
/329s3WHsP7GEAO+xyytXNeA9TkksiC8N+/sKr1flKWyQM7PX/Frwm/KMlmg
z+cwEl//oSyXBYX5B54cV5Kw/J/ls6DgkJVvhtEoykpZ4Hm/LGGOjSRl5Szy
/MdOc7UfTVkti5xfsWfTrKQoa2RB6gqPOo7WGMqaWdB0dtrioX60dhZ8Gvfe
62ahNGXdLJBco9LJ3DKWsgHp7yDLouoz2iQL3hgoz+YGyFA2ywLLpynnO56i
zUl/9sk77lkwjjJkgfyDC4KNu9HWWZB+6SCzTYC2Jfe72hF89yHaPgtkF4xt
+fER7ZgFF50OhFz6iXbOgsp4eu7qv2jXLMhviAoYlBhP2YO0P3UzKx/Gdq8s
4Bgtmag5iPbNgoUSG88G9KH9s6BLZ4FaWA86OAtS7LzFjR3osCwYPrZnaOAd
OjwLDmpNXjiuFR2ZBQ0+Q1pDLeioLPAyqN555iU6JgsYZ9o3bmhGx2dBi9ft
9enP0IlZcNPl+Ub6E3Qy6c/khVcvPkCnZkFGXPo44zvo9CxwzryWfL8EnZkF
SkNZxetz0IwsMPI6ZvbhPJqdBRLXSlS+HEXzyH7sN6iTC0WLsuCCxq2Jszaj
87KgaJycly2gC7LgzImspXU66KIsMJuXay2tjC7NAvVzqp7G49DlWfDKqefH
ir+4HyqyYCt3OyN7EF2VBW2LHFKX/kbXkPF/0u3fI4Gfr8uCmKeidfDvfvVZ
sDltygljJXQjiZcPq9dHzEQ3Z8F5Hk29RBvdQvarUkCTtB66NQt2Ku3bcOlf
e3sWlLyy3ac4Dd2RBaEvq4dzvmF/urKAFZk7ZcVVdG8WOHnK/gpzRfdlwQlB
qtGiJoyHATJen5iAiPnooSwYM3Roh50DxpMEE852S1h9XYHxJsWEv7fqP+dK
YnzKMCEy6sy9U6cxnuWYMHGlyhGvjn/xzwRXHzeu7fRh6nxQYgLPUsbdfdQg
ZWUmeJSuNs5PwPpEakxINPP/6331X70jJigH/1dtqY3nmyYTvAILWnxuNmP+
Z4LEQv2A0rP/8j8T5M89o1+taMTnfya0Wpm0n9P6gM//TCgfuLu8fTzW3zFj
Qk1Y9aNHE7HejjkTHOVcXq1Sxvo6wATB++ZFVamj8P0/ud/8JUY307Ceji0Z
/7pqk6unx+L7fyb83PpAsOvYeHz/z4T+7476b3Zj/RxnJkyzWr8iaz7Wz3Fl
wnmD+HPK6Vg/x4MJRW9DLCUHFPH9PxPmr44+b7tJCd//M6Fs58XXanlYT8ef
CTu2pri2DmE9nWAmaFdlOCja/qunQ/p7T91pZYoKvv9nwhmzh90T67G+TiQT
One/7lKZiPV1ophw8P6hRsU1M/D9P1m/hOWiy7FYbyeeCf6/lpVdKZ2J7/+Z
ENPlK/Lfj/V3ksn6Zd9guyhi/Z1UJnCWLEvwvohOZ8KtrnNXCm2xHk8m2V+5
i0M3tqMZTOjoKFqzJAbr87CZkByp82mlGtbn4ZH1WGujblmKFjFBV3aM69uN
WK8njwkNkhvH3etBF5D1sZ/UHZSI9XqKyPprhczQ1MB6PaVMiM1XXad8FV3O
hBApKxU7G6zfU8EEiF80k9eArmKC55xzxpO3YD2fGiaMMa64mN2MrmOC/n+t
P5Icsb5PPWl/JpO+ogLdyIS3em7BQfOw3k8zE9QCWiRfHkO3MOFBtefw0Vfo
ViaMHvO9OE4b6/+0M2FQnMlRCkF3kPnyjznDzUF3MeFy1aX7D96ge5kQfVOr
0XMC1gvqY8KkNT2hHqboASbQLm96+9oNPcSEj2MbDw0eQkuwYPzPmdMu0dBS
LBh6v63mUQlahgUnHhau/vsULceCS7F65eVf0PIsOOe40MJLFusRKbEgmr8n
ZO48tDIL7PPXR+j9q1+kxgL55aunHdmG1mBBf7HfTqkotCYLtrhmHkrMRGuz
4D8VudMlRWhdFriwU8fNq0cbsMCrS3vL9k60CQtCNMbt/CaJ9ZDMWPDZ88m7
PSpocxa8Mm9pOqWHBhacNO74NcoSbc0C3Snaytnr0LYsmL5kuff6LWh7FkQ6
rxst5Y12ZMGuGTqGD3ainVlA99ylcj8Q7cqCM1+OfV0WhPZgQZTomdvBALQX
C2JS2KpdO9C+LOjrKmuQ2I72Z8GRWyrqs93RwSyYpqz9JtcZHcaC3KAWUce/
/oazADST9BVXoyNZMCFH/cBGQEexYOXUT34PlqBjWGAe4GuRYoyOZ8HLnAXf
+P/mJ5EFeksMZypoo5NZsOx15d7bs9GpLMjUbUulzUCns2CU6ZGB3croTBZM
/drzdOpkNIMFzLsdthsnoNksyEkMVf0ujeaxYEbkhPH3/uJ6ilhw9+tnbcFP
dB4Lys6v6Qvp+VcPiwVSN1LHSraji8h++LR3u30zupQFBvvGeFo8QJeT9TZc
9qKh/F/9LBZsujKzUf4iuooFnyIu/TeBga5hwZIXdut6TqDrWNAd0CXxLgJd
T/anZpeNpg+6kQXOEfkLux3QzSxIVTFeGLkU3cICZe3bLsNz0a0ssDIbFJQq
oNvJetyfNdz2B+OrgwXhZZP4tzrRXSyYPFS8jN6M7mXB2PnzSh7f+xf/ZL26
IoaqSv/FP1kvy2ml3bn/4p8FAfr751Vk/4t/NriuULXN/Rf/kmzo8jaSnHT+
33nABqeD/j8X/7M0G6Y+P7/Mi/7vfGBDv5znhCtc9Hg2FO+yGLeh4N95wYZe
vWMqG2+jJ7LBa+ap57VN/84PNrxhV/pU9KIV2SQi0xfpTfp3nrAh+/Tst32G
6KlsWKcyVumN67/zhQ3DoRWKqUfRqmy44lZWl37533nDBoVpK/K829DqbBi8
fkMucAruNw023PS8z5thh57NhrXB3cv7j6A12SChK6GxuxitRXxPoWx8N1qb
DUfCK9LoClhPTYcNeo5as/R00bpsGNgmTWtdhdZnQ4aKjbKjJ9qADRUXXWfI
/avPZsSGsZOWtnJOoE3IfAbNtcylo03ZMO31vsRHYrQZGxarra15WIxeygYO
mb64W2hzNuib3n3/ogptwYYp9j8nNFajgQ1WvTNvHP5XD86KDb/HpnzqrUBb
s6Gl09Fk0zW0DRvWfIh+8TYfbcsGtsys0P+y0XZsUHYqPyRMQ9uz4ajfPWN2
LNqBDZmC3InGu9CObAhIHpxe6Y52YkPV97g3rNVoZzacahnKHW+MdiH93bbf
R1cd7cqG62+M9NXGod3YcLlWv6bi47/zlg2S56+9fVOO9mSDmvREG88z/85f
0r8H+9rf+6K92RC/MGJGn+m/85gNldMY0W/+nU9+JD4EkbQXT3E/+ZP97MuU
l8lCB7Lh5Y+C56e3o4PJ/I++cyZfAx1Kxrdu4c47L3C/h7EhUkItxzEZvYcN
+UHdKgOL0eFs2Dp989yIFsz3EWzyfJpqxzqAjmTDiyvjD22fhD7IhnCjkmm1
Wfh8EcWGiQ1eWybNRUez4djDhi00Pj6vxLAh+ldIhqwGOo4N+2xv/DY5h887
8WS8Mtn7ZKTRx9nAnG24P3YvPi8lkv08as+vM2/w+SqJDTayjweVbdHJbCgY
nhrTVoDPZylsCH4z40m+CjqVDXu3jTJcfhSf59JI/LypO7u5B5//0tngl1q+
6LU7OoMNobJ5M+/X4fNjJhtcrr9aZWCFprFh1FhvlsmNf8+bbJC+vfbMFws0
kw0yFlVTXGrweZVNzp+/Tnvnu6E5bPi+lNXztQ+fd3lsqOZr7R9zAS1gg+Oc
sZ/TbNAiNug+fPfS9Tc+L4vZYGZYHUKLQueR9a5ZqHhFHp3PhrCtw3JGJfi8
XcAG7Qq+3pZd6EIyX4tWHBhrhi5iQ9Q8g+K8Sehicv4UXIrd2IfP76VsaNQo
Hrr3Dl3GBtsuC+d7r9DlbCj61vtG9yX6JhsYRe3TZF+jK4gti8wvtaEr2SA1
wSDk3Cd0Ffn+0EHpTb3oajYkn3/llfwDXUPa9+v5P/qJriXx1bBPMvNfex0b
PDyOZ27oRj8i592iksFt/76/ng08mWJX6yp0Axs0bmgGl7HRjWwAB6kNT3ej
m8j5okYr+WmKbmaD79eMda++4O+bl6T/P1bdDmCgW9hQc2WV41Vz9Bs2lDrU
p3fVT8f8y4Y8/TZv1y3oNjaYH7F+6dWEv5/aSX8/FG7MtEV/IJ8P/fKiugB/
b3WQ+bX3Uf06Cd3JBoOdurwNO/H3WRcb0u81vlxVOo1yD7m+5En3Qil0L9lP
Irpwiz3+vvtGvt/0tsaHM/j7r4/sJ+OfiY+f4e/Dfjb0bV9m0KOMHiDnqc6p
rVIeWI91kJxHJtP1HrDw9+UQyT/Ri9WH2/H35zBZ7z49oY8uWiIb2tlTx9RH
4O9VyWxgVyw2XZE0CfN/NjRPCfjtaTAR8382yMPfrbFv5TD/Z0Pr0OHyD0ys
Jzs+GwqymR+iAvD3sVw2pJZmdL9fMQ7zfzZoD/bPPqGN9WjlyfV3Jj0VzMDf
14rk+og3V3bMwvq1Stmgoa32t8l4DOb/bOgNqZb+6oy/z5VJu3/xytj40Zj/
syGsfqqfciXWx1Uj7fmGut/l0OrZMKBQEvHFB3/va5DxZC34m3YX6+vOzgbb
cYd7tQzQmmQ+vmuJK1b+pd4XaGWDV2p67h/DYcra2QDThy3L5uH7BB1y/bRK
yzezhijrkuure58HzvhNWZ/M1wG6mcs0rPdrkA0Ss+dnbpX7RdkoG2IWmRl9
HMD3FSbZUD/2kk5fcz9lU3L9DO7VRaIf+H6DtK/jSzp6Y33hpdlQEZdfajb6
O77vIP152b0+MwHfh1iQdoW1chIvv+D7D9J/Tv/NZh+sX2xF7h+2xG51bgdl
a+IbMZflCtop25DPH10x8GJPK2Vb0r5vy8ztnVgv2Y54/umHtPd1lO2Je69d
TJyK9cUdiOM447c4luD/nxAvUG2oSMH/P3Ei4w+tiwhhvML/TyHt089ZdkXg
+3AX0j7tsdurJVhf25X0Hz4UKcvj+283st7Xp8zpPYDvvz1I+2RVA9cwfP/k
ST5v+OLehQCsX+1F5ieh0CXRF993e5P1unz+mbsXvs/yJeOtzrrpmI/vu/zI
fj288vcFXXwf5k/2a1fIMfVcfL8dmA0GY7vPTNfB92nBZH/Z6bB+5OD7tlDS
rj7huskCfF8XRvoT62wfnI/v+/Zkg6PES+EiE1nK4eTzXx+I1G/IUY4g47O6
Ec1dM5FyJBkfbcltnZeTKB/MBteS8ryjJfKUo8j1u0UPlscrUI7OhpoTfaM9
NipSjiHxbduz5rPmZMpxxGOfXescQMdng/9Fj1WrHytRPk7mKyhyYrNwCuXE
bCg9zJT2jJtKOYl833TbvkTPaZSTyedzu378WaZMOYX0946XxTZVFcqp2SBq
mya74Rc6jcTn3FmfI5tVKaeT86Lm27iokumUM8h8zKAt+HVOjXIm+f6G0OOx
e2dQppHxDUT8SV2vTpnxf/PtMjZx/kzKzGzI22WusElCgzI7G3gPZDrlA9Ec
cn4Uh1skPEHzskHtWVnjWtNZlAXZIHdWSlsiEy3KhvR1vj8396PFpH+xi/ar
bJhNOS8bnF/VfFQVofPJ+Ht64ix+owuyQTmnYk6Y3RzKhdkQb8nQ4J9DF5H9
6DZY9LoFXZwNkedke+ZraFIuJfvHY0HIpW3osmxoLHx2Mp+OLs8m+dmh8mgj
+iYZ7/1Vi7nj51KuIOf/BL2gFAt0Jbm/5POl98PQVWQ9SxroT7LR1dlQnlL+
Ua0BXUPWx+EEQ0VSi3ItGQ9tyyxjI3QdGb9cJve5N/pRNpi4r18fnY6uJ9cP
VZzPvYduyAapTHbB1yF0Yza0rAi42GUyj3ITGW/v4JHFYehmcp7qnR637RL6
JTkvXtEeNX1Dt5D+3uMu/bZUm/KbbAhXNzf/kIBuzQalA5fcHr9At5H1dtni
VGown3I7cdnsP1nJ6A/ZYNby3md3N7ojG3wtLKdP3ahDuZPsn1ElCZ430F3k
/JBz3i2tu4ByD5mv595LLzHRvdlgffSM1FslXcrfsqHKMe6pQgq6Lxs8VJrP
XR6nR7mf7N/Hgv2mCegBMt53n3fMldanPEj6tzX6jNJx9BDZj9XzvudIL6Q8
TOJDWbEoIwEtwQGJB2YPbaUMKEtyICVnm2OONVqKAy5ciLsXj5bmQCQ3uftQ
FVqGAzdj7PuyRhtSHs+B0O67GtJWaDkOyKRNskk7gp7IASf/YoX55Wh5DngY
G1ld/4lW5EDGOomPK42MKCtxIHXff4PVQeipHKiRvaiznodW5sCwXaZ+9yu0
Kgekp9uMLVE0pqzGAfY7es89W7Q6uV5vSyREozU4YDO2cWDVFfRsDhR4yD2W
6EBrcsDhrNPyC2omlLXIeLuN+4w2oLU5oLiq3fXjMbQOBzwDXwdVlaF1yf1u
h3178AWtzwG1xdfV+zQXUTbgQGPa3HxtN7QRB8rfr3ttdxptwoGDz+sOL6xC
m3LgzVqnlYwBtBmZH+m5qta6ppSXkvvpT/hzxxNtzoGW2NsOnNNoCw58qD+6
e+NNNJDx6Kx4Zd2JtuIAj/Wr8JPiYsrWHJitMff3vcVoG9LOX654xBVtS/ob
OcGsJhxtxwHmvY+Ke5PR9hyoEs//up2FduBA8SHHIwkX0Y4c6ATLyA/FaCcO
JDNfNqRfRztzIPopz77in104IMdaZFlUgnblgL379ROvLqHdONBeu+bxdR7a
g3z/wvuJ3RloTw74mqZtHZ+A9uJAYZnCWs4+tDe5n6VcoIkP2pfMn9WT+fqO
aD8OlNV2ePWYo/05oPFHtKx2PjqQA+qZM2QVp6GDOZDfNWfplDHoUA5YGyZa
aPbhfIdxoCP156PT7eg9HKib9uQjrwkdzoHEGynrBbXoCDI/2q0J1RXoSA7I
h9RWal5DH+TAgPsz0cMr6CgOWMV1zrtVgI4m++Pz+YjuS+gYDohl1XxtLqPj
OBBv655wpQgdT/bv8NpjqmXo4xwwU/0T5HEbnUjimxe32vlf/5LI/jw2HZoa
0ckcqE3PPXGpFZ3CAWdaMF3UjU4l6zV32fQTv9FpHEhTaTqlNh7nK50D2hka
Z0xV0Blkv9fmRBRpozPJ+sQcjIoyQ9PIfGhovYuyRTPIfFTqrRH/269Msh/u
LPAb9kezORCcm3F4/wE0h5xHT167KieheRxo/rvwWAcNLSDr3erf9j0XLSLr
cbdbwu4GWsyBRwoL5w09QueR+Dl2RVXtLTqfnD99i33KvqMLOJDeYJr5XtqM
ciEHzNW2jBKroovIfv38Ik1hIbqYnGfXqp9pWqNLOcD4b9XHzi3oMrJ/nuW/
8Q9Dl5P5lTAYl52AvskB28pRo9NY6AoOtOUyDy0qRVdyQCt64evoJ+gqcj50
aRa4f0ZXk/nU0Dl7dcwSyjUcqGAMJuzVQNdywFWyuvzQMnQdB4bC1tsVuaAf
caCPtaRCcg+6npz3Hcv11p5CN3DA6NHuJyEidCMHwn77nbG+g27iQNTkxJnZ
r9HNHCi6e0Bt7U/0S7I/9fbwJOSXUm4h8zl8yf/APPQbst5qmp7By9GtJD56
r7/J2IBuI+ebqsyP2z7odg5U1i3JqtqL/kDO7ynDDXGx6A5yHs3YcO1zMrqT
jL++j/vzHLqL9O+jSa2Age4h/TOSrxuVje7lQGvBEf50LvobB/Jkk4wn/3Mf
2R+dv7Om/Lu+nwNSpoLWrVnoAQ5ohutMMsxED5L9bZWp0XwGPUTOF3H+98wk
9DDp3+2o0Zfj0BJcaI46ErbxIFqSC5pvfZpFu9FSXKjatMfmiT9amgu+X69m
v9+GluFCr8JYu18u6PFcSP+es13VAS3Hhchw+r4Nq9ATuSA/4Vcr2xwtz4WW
rMvmo03QilzoemI3LmgBWokL2p9qku/MRk/lgpL+nO5vKmhlLsj4Ma+1/Ftv
VdJ/59/7fcai1bhg/n3X/YA/uD/UueDf/qm34RtagwuNt7dtivuInk3mw3nm
N/dXaE0u1DuUaq56hNbiAjt8X41WBVqbC+WbLFb3FqB1uCBHy/9MZ6N1yfWl
wmTD02h90r7s7s17UWgDLiRaPO6PDUAbccGjXVL91Ca0CRfaH8zUUluBNuVC
x8kVS/100Wakf1YnY4XT0Eu5EH5C6+Kc0WhzLtTNHHV3/heMXwuyXldtVyq3
oIELBjeXvfeqRVtxYejoz5rEMrQ1F1x/3dXSvIi24UKY5OynDzhoWzJfKUff
TmSg7Uh/vX7s8ruAtifjO0yDhXS0AxfiT12LzclGO3LBxOSm7J88tBPpb+Pa
ExY30M5c0FANeranAU0eRuuqS0Wnu9CuZD/oZNYekMXxunGhtIc+SWIh2oOM
d8it6dm/88eT9Hdz3o7UOLQXGc+LBFrOZbQ3F3THbbI+8Q7tS5z/e9bZabif
/Mj3R86hG69D+5PxnpuQ8PEoOpDcf7GyYPl1dDCJHxdp1tNv6FAuMFwXfXbU
WUY5jAt5jjYB27ej93BB4riLbMF5dDgXajbFzHhXh47ggtrB49foEuaUI7nA
szloGGmEPkj2s7FDtqo3OooL1hPPrjY4jY7mwsCq0AmR19AxXJBaRIuqakXH
cSFKovbAL6nllONJPI//lTVWC32cjGfd5ZyOlehELmT2PbZkeKKTyPrWZvZo
RaCTSbzHOP1OS0KncME2S+HsNzo6lQui8j/NvmJ0Grm/Y+NJlWJ0OhcqXN3M
nG6hM8jn01hW26rRmWT+V2iyLjxA00j8fOt75v4Yzfi/+TEK/f0EzSTr6dar
X/0UzeZCqsKltZLP0BwuFGTqsL7+M4/c792u8MYmtIALRXra17ueo0VkvWR8
dse+QItJ/3tfzfvvFTqPC7BifdWm/9D5XHBuTzI3bkcXkPFPYoaWd6ILyXkR
GJmr9R1dROLx1OvOtD/oYtL+fuHzieMtKJeS/a6sa3ReGV3GBWXp5Jzp89Hl
JH5KWk1il6FvkngILtXmrkdXkM9nz5XduANdyQWzbfcMXaPQVST+xYODu9LR
1eR8Ti7ScryIriHne5bZuLxqdC3pb90Lmnkruo7c77ijU80v9COyf28P6GpP
tqRcT/qz/anEGl10A1kPqxNPdFahG8n9pH5/f70V3UTGf8jlYFwEupncL6v7
5JrT6Jfk/C/aNme/CN1C9qdm0y2/SvQbLrTGTQhNeY1uJeefYdv86EF0G+lv
8enwbjmg3M6FqeM2/pynjv5A4vGeaqylIbqDC0sTNfdH2qA7ueC07wJX2hPd
RfpTrdkhF4nu4YL4dlwkKx3dy4Vvp7mf7l5BfyPnufmmuqhn6D4uNNkvS7r6
C93PBcUk3S5njRWUB7jgVbLe3HANepALEXU+f+TD0UNccPAXnMllo4fJeXzr
VN3FR2gJHuQX2DhU/kFL8iByTtGqC3pWmP95MNR3obxnK1qaB0m1MYqnUtAy
PPA4dvWs/S30eB7Ed8TuVehFy/HI83j6zFqNlZj/eVB1wLwtZANangfJDoci
hmLRijxoXWTJii5EK/Gg0aesX/odeioPtL8U8S9Ptsb8z4MG+WPpHGu0Kg8q
Ozg7R0Wg1Xjw8uV0qx9CtDoP/Lepd7JfojV4YPOsW0dj4irM/zzo+/h06LgV
WpMHU+1r1Nv2o7XI91mt+GWaj9bmgfr6pebx79E6PHC9Fhh5e4YN5n8e1N/v
dn3jgtbngcvoPUsqU9EGPDDPNfhp/wBtxAOt244bt0ivxvzPA9FDH/XbK9Cm
PBhg9VzdfhhtxoPjR9fJzryGXkrW6/JzVnsf2pwHUm5TxXwDW8z/PJCLcPHx
CEYDD6Qv0x/IiNBWPFAuUlG4/A5tTdb3Nyt1+8w1mP95ELo657qeO9qWB827
NM8anEfb8aDt6OL1yU/R9jyYaM9J8Ze3w/zPA6YMTfBlHdqRB4kJ1zXtktFO
PNB4evk77QHamQedsyctHZZdi/mfB+wXXWWJ69CuPLDtu798TSrajVzfK/pt
24j24EFLj+60ZBV7zP9kvbQc7BW80F6kfyax++qFaG8eeK2knbrWi/blQaaL
59wrS9dh/ufBwcLoHPoxtD8PAgu+vbN7gg7kQU3y45BzMxww//PAaOK2qU6B
6FAyX/fiutxL0GE84N2+V5omtR7zP1lvWtzGVxvQ4Tzwm7uneAYLHcGD2QEu
+Su70JE8ONbjLaCrOWL+58HCndvlv1qho3jwbn2649QAdDQPSrt0tv1NQcfw
oHr3TRa7CB3HA9kV46f1vkDHk/nctHvzh2H0cR5EJ+rmRM/ZgPmftN+S6Cte
jU7iwfVRARNOB6GTefB0nX6YzGl0Cg++dMmdnFuITuXB2vmSxz41otN4cKam
ar/rT3Q62X8l4bT9Kk6Y/3nAnzgYvW4ZOpP0X/LynDYPNI0HdzoZdy2i0Qwe
nK9+sj2EhWbyQHPyxSP7K9BsHgTdGs7Y8RbN4cHpwf50C8mNmP+JP9vRxs5B
C3jwoHBd/52VaBEPSs45+O7zRYvJ/W4YDU8/hs4j63snxKyYj87ngaHE3idQ
jS4g7autI4o/oAt5UFHpyZ001hnzPw9CFjy6azUPXcyDS71P/7NejS7lQZ5z
eNT4negyMl+iCH7icXQ5ia+P8+uu8tE3efDklMO7E1XoCh6s282zG25DV5Lx
fHycOWHUJsz/PFjTEBN/RR1dzYMIWWNx1zJ0DVm/eG/JEld0LbHUoqOK+9B1
PNBTvPpm1Bn0I7I/Hv7WOJmHrifzlWc7uvQeuoEHFsmnrc+1oRt5MD2oM87w
D7qJBz/83Gcxprlg/ufB5ZrCgXeG6Jc8cPhYv2aaPbqFB6dEJSrWfug3PLCa
tCI7MgbdyoMde51/36Gh23jg7HZJbvFVdDsP9t72fdH+GP2BB99/hF5t60R3
kPP8rMB9tfRmzP882N+qbzl/NrqLnA8NVbYMC3QPyT+yV48UuKN7efD51G3r
3QfQ30g+lnx07f15dB8PiqLUIxVK0P3kPOqff+VHE3qAtCs/vXrmJ3qQB3WL
m7vblF0x//NgNIse1L4UPUzOv/rw8ylb0RJ8yP5ZbtUUg5bkw2A7rz2Xh5bi
Q0OCpd1QDVqaDyrCpQWXu9EyfLCd/qzgquIWzP98KJTfofR9MVqOD5kbL91z
2YqeyAeDjuYJ9XFoeT7EH12k7ihCK/JBe6HbyvsP0Up8MDU4pqz/HT2VD39f
m58OU3bD/M+HL1WBYbHL0ap84AV96V/vjVbjg/1wsUftcbQ6Hxo1dvPfiNEa
fIiJeaoZ9Qg9mw9C6Utx6V/RmnzQ+rxir5qSO+Z/PtD6V/vKmqK1+XBgdtdb
t81oHT50xPl9HxOJ1uUD98L8gzKZaH0+dG8ZFniWoA340DOnPX1ME9qID21e
YfJD39EmfChj/LyyUsED8z8fVN89N23TQ5vx4YNFhVfbGvRSPgQvL3Jz3oE2
54OMV1umfQzagg8v3cLev6WhgQ/OdOvaBVfRVnyQ+J14b8VjtDUfZv8+5bjs
E9qGD15KtAUGo7di/ucD07NFfekMtB0forvW20UsRtvzocYwwUHaCe3AB5Ow
5PkKIWhHPvi7HKZXJqKd+GCxKPCWLR/tzIfjf+8p1FeiXfhQfVRiyZG3aFcy
fz5/ksJHeWL+50NVV9OWu7PRHnxQXJAujF6F9uTDHuVdHYIAtBcfuh4uOWp5
Gu1N9u8JycBVxWhfPuR78b8WvEH78cE3M70gXGYb5n8+GH0+ZhdljA7kQ2JG
kmruNnQwGe+OucKWZHQoH5buVj34oQwdxoeD5cPf6J/Qe/igc25QI0DOC/M/
H1Zn7s8x1ERHkP0wZvzxaeboSBJ/hq6JE5zRB/kQ2vCEIxOMjuKDIP3irr9H
0dF82PFsfvonOjqG9Gfe7UW3rqDj+KB7e9KoAw/Q8XyYtdHdRv4d+jgf1px8
ve/IIDqRD/P8S50qFbZj/if7/yE9pkkbncyHVv95Vtct0Sl8uBL312C3CzqV
D7mRZy7+Ckan8eGkY8c+l6PodD4suKi9+sQFdAYfjhW5VZ+9hM4k97OOT9l/
F00j61PvO9v0FZpB9ldIuN6TXjSTxAcr54adtDfmfz5oTjV34E9Hc8j8TD0w
ut0AzeMD+2pg8HgbtIAPY+472ai5o0V8iNxu7TYjDC0m+6/tkqrCMXQeH+iD
vlWDF9D5fJj5UxT7Oh9dwIf5PsHbyu+gC/lQ/6DqOK0ZXcSHoYqJ5oe60cV8
kFPI1vSW9MH8z4ckxblLNk5Dl5H9uz35opMuupyc15O/Z/iuQN/kw9Z7q9yT
XdAVfLAOXnKrLghdyYeoi7uPzYtFV/Fh1Izhs1kZ6Go+/EjQMF+Yh67hQ6BI
an7LbXQtH05VLL7MfY6uI+vbE3Ahvhv9iJyvxlarD4/2xfzPh05tn7yTKugG
sr+GdWdfXIhu5INGtOO+N6vQTXzYMt7MUM0D3cyHTfXrHnvvQb/kQ0bWvhWX
EtEtfPiZeWX6Xyb6Dck3qRfOO15Ft/IhOeFgBucBuo0PlyqecvveotvJ+Vi0
7LbNAPoDmX/TndsvTNyB+Z8PfSzLtG5NdCcflmRuvG+9DN3Fh42y9pC9Ad3D
B8tas3Nj/NG9ZP85HrwZHo3+RuJJYUr713R0Hx/WjVv65Uguup8Pkg8izWZV
ogdIf9cMcJ83owdJfkpy9eV9QQ+RfPP7r0WitB/mfz6MvmF14egMtIQAXr22
3JxhgpYUgGt+XOOttWgpAew7n/hz2BstLYBnqQ0znA6iZQSwvnGLTMkZ9HgB
aLISHuvkoOUE8Cvddpe4Aj1RAKeGtr42akbLC2DFopyQ21/QigJIOpD7YePY
nZj/BfDHxT2qQx09VQA32ZObD5uilQUwNbK8S9EBrSqAYsXr3wU70GoCyF8U
vGvJYbS6ABYeOtZ+Px2tIYAe+vf+zXno2QLYoVef+e4OWlMAUbGLi4NfobUE
wNeRDvn+Da0tAJv19kqR4/0x/wtgwsSHY37PQuuS+d3TUxi1BK0vAPdxs3f/
cUQbCMBlTff5w/5oIwEwIy33/zmCNhHAp/fVOw+fR5sK4Prh5At/8tFmAtib
lLI2uhq9VACrdXNz/r5GmwvgQk7xldgfaAsB5PWW75GaEID5XwDh4cufJGii
rch4VS9kyJqjrQUwd2ftqdMb0TYCGBdbFjI5CG0rgMv/mQ9mxKHtBHAo16VZ
hYa2F8CGN7c59MtoBwGkmAc0Tr+PdhTAfM0HTy+0op0EcGyMRbnSANpZAL6T
WYdOTgrE/C+AnX8zbg5poV0FoHZ4XZefBdpNAL2WPx1rNqE9BLDf696imSFo
TwE4fPdbGBiP9hLA9N0KP4R0tLcArnWO2/q8EO1Lrn9fyP55H+0ngM7eHaNk
3qL9BXBEqNI9dgAdKIBJ+vCyf2IQ5n8BrLs51qdxLjpUAEHbdfazzdFhAjjN
aqS5b0TvEcCL8pAy6UB0uACGXlQFcWPQEQJwO2wqND6PjiT7banBzWsX0QcF
MMz/6mxWhY4SwFM6t//yS3S0AH7rX9Sc/xUdI4BFDKMT7LHBmP/J/B7N/E9V
HR1PxpMiZ0M3QR8n+3X415q5a9GJAhBPe6d8Yzs6iTj3TtLOSHSyAAomeg/M
P41OEcDHVtHrcQJ0KpnPq+AhdwOdRuL3RtutRY3odAFc2cX2OfEZnSGAr9fm
1IwbHYL5XwAaM/aXlqqiaeT8eDHofN4IzRBAyHK7QwI7NFMAMfkycR+80WwB
3GHPhc2H0BwBfL4zo+3nWTSP9G9wCbs6Dy0g9zvknlJxFy0SQOjDacffvkGL
BTDDtcVScwCdJ4BVMgub4xRCMf8LYPaZybt/6qALBODp+2BnlDW6UABhul93
yXmiiwRQNSPpNmc/ulgAutPuli09gy4VwJdZdT6PxegyATje/bDNvQpdLgBL
Rav7za/RN8n9VosmrviJrhBAQ5CV4in5XZj/BXB1Pi3+6nx0lQDgYdarK1bo
agH8VLz2IM4dXSMAw/zmIvVwdK0AVLRCc44lo+vI/u11el3MQz8SQI6xx/XC
cnQ9Wa9KyVMHG9ENAihlHvSR70I3CqCi7hbt+qgwzP8CKGs+ELtlArpZAEvv
Ldzarox+KYCTTjFztmmiWwRQNEbN4OFC9BsBDEz1eG24DN0qAMbm7bNSbdBt
Aqgb3hvSuQHdLgDv4j9RVlvRHwQw3nd42wV/dAc5f+4Opn7Zi+4UQG3MsW/W
R9BdAmjKuv4sMwndIwBb64S/n86he8l57PQw0TQb/Y3sl9xrzYfy0H0CMJEy
TiwuQfcLQFrHNKetEj0gAOs3nnJDD9GDZL1WW/CHm9FDZL4d13V+eIceJufb
WBvtwh60hBCYuxOcPH+hJYUQT78t3zl6N+Z/IcSO08h0noiWFkLpMy9eljJa
RggF6WNO3p2NHi8Eo6Ye04e6aDkh2NWH2ReboicKQe1JgPNRQMsLoTio695i
O7SiEExO++c934hWEkLPDXu7nVvRU4XACZpQ3emHVhZCQnXorR1haFUhFIW5
rX51AK0mhMRi3RfrjqLVhZBcPRR8KxmtIQT76trzhhno2UJIp01n8lloTSGY
qdkdUstBawlBsv9mR0YhWlsIXsxHtlPK0TpCiNgnFXL+LlpXCNtfZ3HUHqP1
hdD87k49txltIIS78ySiFrShjcj9HxeMKfyMNhHCUW7dvUU/0KZC+H3EU/fq
MNpMCFa/JtXqy+zB/C+EC/1BAdkKaHMhjM+M7JedjrYQQriScE+IJhqEUPM5
82uVHtpKCBMaFtYoLEZbC+HGt7rEjYC2IesXz7JNWoO2Je2tlheLndB2QlC+
UP/8hTvaXgiplquv/vBFOwhhieFnkVwo2pHsH+eOpbP2o52EcO7o8UmmMWhn
IZhDZ9m6E2gXIZy0HtwbmIZ2FYLrgjOfT9HRbmQ+Z10ee42H9hCCyopJZZ8v
oj2FEPN+x5S5JWgvITy4XHzBpwLtTeZPefl+/n20rxC0T6/v7WhA+5Hrv46y
121B+wvhLGPbQMh7dKAQJj+m787rQQcLQY9x1vDDT3QoWf/uZQyVUXsx/wvh
3j1Jx1Xj0XuE4DQUudd/Mjqc3O94rvpRNXSEENzHWP2XMRcdKYT7/zUVC/TR
B4Ug1TXcWbwYHSWE2kVdE+sAHS2Eaccrf31ag44h4/viPX/yRnScEBY/UUmz
9UDHk/UbVB0+sQN9nLQX7IloCkUnCmFVXahANxKdJIR5KtnLT8aik0k8nn/a
25uEThFC24Qirkc6OlUIP4T5Bx5modOEsHxrYI6VEJ0uhIw46bPXC9AZQnDu
KRQtLkNnCkFeGpKK76BpQljPn/dg8UM0QwhNrNezrjehmWQ/nL3kAq1othA2
hL3VvPcJzRGC26XPXuu/o3lC2KJRcr95CC0QAjz9sdFHOhzzvxC+edn81zMJ
LRbCyk+f7Q6poPOEUL/wqL/MHHS+EK4u/LAoQxddIITnu6bzNU3RhULYnWPF
uGKJLiLn1W7VSSvXoIuF8AL6uhuc0KVCiE7S0fLxQJcJ4WnFgZLvO9DlZP8t
ik+N34W+KYQo0VvOlAPoCiEEy035LIhDVwqhRHdNmFkyukoIX7UXGdWeQ1cL
IXRB9wIPFrpGCKNnpW3pEaFrhWCdkFgQU4iuE0KAsEBrcjn6kRA0jo2+y7+L
rheCwpvVSWaP0Q1CKIv7EfSgGd0ohJz7iz0929BNQpD55e3z9TO6mYzvvU9s
/A/0SyFcm7WgZNpfdIsQ1siIJXJl9mH+F4LsZ+91ForoVnIetBcInkxHtwnB
wWD0hB1z0e1C8Mnz2DWgj/4gBIkdFQ9PmqE7hPBq3XX9mVboTrJeM9VSCtei
u8h5dt+5fdUmdI8QdBf7WbzwRPcKYUWrfkGwP/qbEA7fH6spsQfdR9bDszX+
7CF0P2m/N/xG6xh6gPTvUNDishT0oBBe7n6WvC4TPSSE/R/gc2s2epj47waH
8Fy0hAjGzAnjjr2KlhTBreUzP9NuoqVEsMnzmZZ+DVpaBL/5PZtuP0HLiKBH
+Pmg8yv0eBHoTX977mM7Wk4EajVTmAd70BNFsOV+7bkJA2h5ERybcvsIe1QE
5n8RNCzW2mwsi1YSwbtsoXG1EnqqCKZkB8zYoo5WFsEBp8eTuuahVUWgLPrR
H22IVhMBX21ti8IytLoIftW6X+ZZozVEkHy9IHKxA3q2CB6Myp9TuxmtKQLe
HuvrHtvRWiLoO6bn9iUQrU3mr2v9x9hwtI4Irnr82aQUjdYVwQS97+WCBLS+
CLLbLmovOYM2EEFVeEDSAxraSAQ7zB0/b+WhTUSQ93v9yt6LaFMRTL+yODqu
BG0mghdPMvKUbqOXiuCeivxbQS3aXARBQUsnLGlEW4jgS/OvRQ9eo0EE0bys
bVs/oq1EsP55U/yXXrS1CHR05/NiB9E2Ilgwd2HBZKn9mP9FcCr5SS5/AtpO
BFH/1V5cPA1tLwK5Ym7+fQ20gwjc3h/McddBO4rA19NT0G2MdiLzN+EC98hy
tLMIYvvf5yqsRruI4OGM0nyuI9qV7L/OppxFbmg3cj3TVHDPB+0hAoGkRc6W
ELSnCFZevEH/HIH2IvvpplvK4Ri0twgKi8YkTUpC+4pA0t7rWPZZtJ8IfJrr
woyz0P4iGLc7yOeuAB0ogurrSRs2F6CDRbAuQ3rRp2voUBGolIUpHrqDDiPr
f0atT+4heo8IdB9tfcpsQoeT/eyQeMmgFR0hgsmdX05WfkJHiuDu8llbnL+j
D4pAiXVY4cMQOkoEnlu1ru6XjsT8T9Z/ipLlOHl0jAgGcz/coKmg40QwKbPA
SHcOOl4EEY9X8G7ooo+T9TLrU11vik4k8zX/y+lWS3SSCGaVTvm1ew06WQTf
N7/cMXojOkUEC/8seJbugU4l49E3s9PyQ6eJIOtdSVXJLnQ6OW/yw5etOYDO
EMHFbbfLXsahM0Vgv+W3XnAymiYCtuxw5p9zaIYI8nWGB1JYaKYI2hKVnDRy
0GwRRM6VEVwuRHNEcDo+7I9VOZonAsal6Q6Nd9ECEcx5Ikjb8RgtIvPRML2p
vxktFkHgfw+lE9vQeSJ4kiq/QKULnU/2byPXSfwDXSCCqUtTfJf9RReKYF/1
Ve86mQOY/0UQuvn97q2K6GKyn/vOnO6Zji4VAW3d3twjc9FlIhi7bftD+YXo
crLe/Rnd2WbomyTeXb/IGluhK0Rw+NMrraq16Epy3n26vGTTJnQVOf8LZ9t8
8ERXi2DmfPGa/f7oGjLfB06sltmDrhWBZYi31YVD6DoRjHroradzDP1IBBu3
xKpeT0HXk3ZpmpR9JrpBBLWt8z+3ZKMbyf4uN30ckotuEsHHxDkXh4vQzSKY
IaF95PRN9EsRPC46aKVRg24RgbzVoaGCJ+g3Ipj7vrxkxSt0qwgO1gVvb2hH
t5Hxrdgx2qcH3S6CRxvYrO8/0R9E8NQn1Dx+1EHM/yJIejuvVUkW3UnyX2zJ
Yb4SuksEroeZ40zV0T0iKPO8eLh6HrpXBH9o3h9cDNHfyPcvqt34cSm6TwRh
rwwe7rdG95Pza/5EexkH9MD/5dsl7zI3owdJfpq78uT87eghkh9nLdcvC0QP
k/Gk3a+yC0dL5MCky11Wrw6jJXPAq8atJigBLZUDPcu32w+loqVz4PvbsEfJ
NLRMDry5kuM4g4ceT9obopovXkTL5UD7lN3OFiXoiTkwL+pu3aMKtHwObFq5
22FbLVoxB4K5S158eYpWyoFwwfEdMa/RU3NAa6bfgPxHtHIOREZFHs/uRavm
wJY9v/4aDqLVcqC70vdw5ehDmP9z4Mpi/h+nCWiNHNh//G/Uu6no2TnQMXNy
314NtGYO0FYUbZXSQWvlgMT//097hHVGWHeE9UfYYISNRthkhE1H2GyEl46w
+QhbjDCMsNUIW4+wzQjbjrDdCNuPsMMIO46w0wg7j7DLCLuOsNsIe4yw5wh7
jbD3CPuOsN8I+49w4AgHj3DoCIeN8J4RDh/hiBGOHOGDIxw1wtEjHDPCcSMc
P8LHRzhxhJNGOHmEU0Y4dYTTRjh9hDNGOHOEaSPMyAHXP4ZOg9Xd5v8zc4TZ
I8wZYd4IC0ZYNMLiEc4b4fwRLhjhwhEuGuHiES4d4bIRLh/hmyNcMcKVI1w1
wtU50B/Gv7FsUz/lmhHttSPa60b4UQ7I+C3RUhzfXf4/149wwwg35kDLnUus
op1yVH2lJpKPogM2PcuXodw8wi9z4MXcg2aWmcqUW0b4TQ5IyYzv6THToNw6
wm05YDrxVQQ3bjbl9hxojqtJUF+vRvlDDoBh/0c5Fx3KHaR/x9L6tITozhHu
IvczTm12d9al3JMDl9L0z53TMKDcO8LfcsDhUPkWryB0Xw5U88d7dZ9F9+eA
uv7Zsav1DCkP5EC6T8LWM2uMKA/mQFlj95CCKXooB2K01j59vg89nAMaQbp6
nfrGlCXEYPEwKyZnjQllSTG4b+c+vKZvSllKDHtOtn0/Px3bpcWgqsZZ1+65
iLKMGL5J5D7qrsX28WL4EeQ9ZXcCfl5ODMuni67ynJdRniiGMW4Bkubm5pTl
xfDBSainfgrbFcXw4GTbNAk+WkkMp7xmBR5ah9dPFcP23ZNivr6ypKwshtjZ
Y7Zqpq6grCoGqS3upXfSrSmriUFp3W2uxN6VlNXFcDtePv7ozFWUNcQwyJbb
Ka23mvJsMZg4akcYh9hQ1hSD68e3Z3MvrqGsJYb9t9csk+hcS1lbDBxbFePZ
Fuso64gh18i8he25nrKuGN41PLSaQ0fri8HmQFReueoGrF8mhmfLxhw0a3Ci
bCSGonfuUzeYbcR6ZmJgn2j91PvbmbIp6W/OrIVs3iasbyaGePPuaYK1mykv
FUPkD1/v3rFbsN6ZGFyeaeQ+/e1G2UIMWrP6O94le2D9MzEE+MpNeRnuSdlK
DP2n31lfWe2F9dDEIHHVbTAwbjtlG7K+k5hNS054Y300MdR5OJ1bkOZD2U4M
Z7fkujpO2YH10sSwdwVHJ9vPj7ID2W+nBs/9uLMT66eJodGt8kThygDKTmL4
m7MjTSo/EOupicHjwCHj9KBgyi5ikP+tPb9wdyhlVzHYw4rJocZhlN3E8DTL
eWW36W7KHmLYkKCjUL50D2VPMTBD7RViPfZS9hJDxrmpmZzEcMreYhCxbGNn
vN1H2VcMgS68h+4r91P2E0PPwjv6E/MjKfuLQfrI9AyR9UHKgWJY3JZjSf96
iHKwGPycKnTfJx2mHEr8ONFuw9ojlMPE8DlWNGPnoRjKe8QQFhu9521YLOVw
MRTM3FIdHRJHOYLsn5CHHtJ7j1KOFMPLQqc7Ew/FUz4ohtA3d7oi449RjhLD
geqNCrrnjlOOFsONis4LCVkJlGPEsPL4lQj97ETKcWR9lB+m95w7QTmexCeT
0Vt+KInycTHUL6LL/TU/STlRDJ2VjFC5J+gk0r5kVNIY02TKyWJw2vDaWATo
FDGotwSqBPTg9aliaDDsv/FCHZ1G9t+YxLbHbPz+dDEkALPnsyP2N4Osh+r1
uu7/cPyZZP0/OTGLlaIp08QQ0aLK3FGN+4EhBpjutJk2ZLj8f2aS8+CF7pyt
3yMps8WgmN53Mt0kmTJHDOXS3nLhOzMp88SgXJ0+OPk9h7JADHkHei0enMil
LBJDbVzH8SNrrlAWi2HOGqPA9+ZllPPEsKPXnPNsx23K+WQ+IxpGPz1UTblA
DOd9VZT3m9ZRLiTxtP8oe5vSE8pFYvCdT1M6++Ap5WIxfALpDUbVzyiXimFc
3/v3NUlNlMtI/3maeu3/2svFkGr4n+Vzf/z8TTFMdHnRfQgeU64QQ5lrl2Lr
ubuUK8XwyGKWzIroq5SrSPzHOy7gPtpKzWc1iY9Zfzbr7SiiXCMGzXcdqcn3
b1OuFUPzqb+VgdvuUq4TA0942Hi/yh3Kj8TQGiQtEby8kHI9iedl0xcqTyyi
vq9BDBU+j49+TcD+NpL95LPguv6+d5SbxKB9Di4WeHyh3EzOx8duVXYZ/ZRf
kv7tlfhraT9MuYWsz9rlYwL/X09nHpbT97XxpElSKEmSIpWpSEKSVYjQnBRK
EkJIkhCSJCFJQlIkSc90zjGHvihJpkwhhAoRoUJSvPt3Pbf3z8/VOXtY617D
Po/LntlR/v95VbF4ij5VkHBfFfdvsPHEG7tJEjTkXJ1Pw/5eEdmd74r7OPJp
ot5B3Rw7bTm/y6dmx8yWbyU9cD8H86fay9ajU/Tk/JHZK/2krFCqj/s68snV
rKk09Y2BnBtYvnhM5k7XDXF/Rz55DTwTOaqPkZwb8+mkm1eu325wcz6lf6tL
T84F/8in2hWi8BFu4BaWL1oeqIrqMF4ryy8Gza/2/u2N+z7yaYhH30uhp3vK
+Q/Lf7d/r0iu6Ib7P0QUF+D7M3GpkpwVRUQm/wXdPV8st5+SiIbcGvZM9Sfu
r1QRUURgV6P8Qtw3qSai9Np5Ff6uJnJWF5HseNgnJVvc/6ghomER40eaxY6Q
s6aI0twiNzdcxX2NXUWk/konTnGCvZy7i6jod2g3lWbct6gjorL+Oyv/3sB9
iroisit+cGPADtyfqCeikdp7ldMG4r4hfRH59W5oCU7C/YgGIkqNz7JROO4q
Z0MRvciy3F82FPchGono96uvoWYPwf1EZJ6hv3ycA+5DNBFRoE6nJutosKmI
rJyMtYRdYHMR3Yhe4/p8C3iQiMpvpigqhoGHiChRN7XVegHYQkRjy7r++R0J
HiYice3uHMvzYCsR7YjcZPhwDO5ftBbRvpGDD5Z3wv2LNiIafaT6oHg47l8c
LaKPIm+ngDO4f9FWRMFelYb/peB+RTsRbSq+o992Ffcp2ovo6XzzgjYb3J9I
Ipo49toXxxrcl+goonPbOjdVPP93H6KIwlXfLH7pifsOnUR0fMS9ubrluO9w
ioiyloUukLrgPsOpzF/f3DLEJbjPcDobf47q2hYb3FfoKqLKbcoxbodwX6E7
s/+AmafMvuG+Qk8R3e1g3TLbBvcTejP7jRqqnRaC+wl9RGSpWH5wZxzuJ/QV
kYHjwB4ztuJ+wlkiOmWfcEjZCvcRzhHREn/v4uYd4ACmrz6P1ObcAgey/TaE
uIk/goNEdGT/pOhhteBgEWldjGj0EcALRZTjkxum5A4OEdGUJ8UH6ldi/iVM
b55721c+wnpDRTT368lPftdx/+JyEYW+CDR444T9hzH7VSU69A2EvcJFtPii
0ZTjBrBvhIg8zpz6+1EX91dGimi467Wj8evh3ygR5R+w6ezQE/d9rhNR0vcV
TxbwuN80WkSvF32fbCFGvtsoovuZ4uiodAc5x7Dnz27RK8pyl3OsiEpiO8Vc
6+4r5zgRqU2sG95bZa6c40WU4PVqdJQ0SM4JIvLpkbfv0KYFck4UkUX9O4r5
vEjOO0VkFmERmtG4WM5JbP9KHqNO7lwq52QRXbYqutHnUqicU0Q0rqN19+1b
lsk5lcWDxp0VLe/AaSz/tB14G1sPPsDi4VHlrZ9p4HQR5U2Yt1j0BeNliCjs
U/Z+9zbMlykiiW3w6ftFS+R8RETSvUYWFi5YX7aI7I1cu87Pwvpz2Hq/CFU+
V7G/XKaP0Un1zRfmyzlPRBe41s62yfPknC+ihnGPp+emBchZLKK65oWyyW/9
5CwVkcbBJcWpvWfImRORr/ZQyRBn2F8Q0ZWXnbM12pzkfFpEGRHZNrkDx8r5
LMvPZe1F6T+M5Xye7dd0X2XAUSO5vwtYvh7aI/1FFPLrJRGVKqrOH5OF+2kL
RWTaotwuHoF8eUVERu+/DDZ7Df1cY+vbH6l8YDLyTzGz76zqHQ09kW9KRNSm
89m0bBbyTSmz75/nPz53xn2vZSIas712ymtz8G22/8zTsRUcnr8rotkS7Zep
ORivXESnuV+Wa1WQ3x4w/y7u4JBSiXz8SETWqae1b7ggn1cwfdleievzfpKc
n7J8N3G9rM8Q6L1SRDHGkf4rynE/8QuWvw/wiTlqqN9V7HnF+pdme0ah/rP8
FP4ipH/WJNR/ER0Ly9btcsUN9Z/pd9Jjq4eK8Nc7Vu/eTLd8bDIL9V9EuY6u
jRetEB8fRfTI95xdogbi4xNbr359OwUFo/6LyKvDouaeexai/ovoyT1eeURy
COq/iGLz8sZmzoQ+m0V0vl6pXfoa+v3B/G/qsM3SFHpvEVGK86zfQSbLUf9Z
fsq4Pv71U3Abyx8d/VNnO65A/RfRn7/RQ0MCwQpiCqqJTvYeAVYUU0JK2XiF
S3hfSUzCLOnyu78xn4qYBntPGypuRnypiUnR2Mxa5yTWpy6mhTdevZpggPVr
iOnkrpvzFnpif5pi6tI00/WOO/bflc3PZ13RNIR9uosp5vsH6feriCcdMWUs
Wah7OBHxpCum94W90pbORzzpiSncLO1qST9vOeuLSedMvylDLrnI2UBM7RZH
79rOnCBnQzGpOr5fY77dSs5GYlI4etnLdGoNzv9iWnLC4tO0QNxHbSKm6au1
a6+PQT9iKqaRW1PN/kzCfc3mYpqpHXdcayz6i0FiWn5OaViH+H/1X0wNPmFb
Ds2Bvi3E1Oyxfn/CCeh/mJgM6l+sLlqJ+LASk/S3Enf1JthaTGXDxjc4XAHb
iCls7Z0l4xeBRzP/fC7117qP8WzF9Cz068y1WmA7Me2XBrbvtML89mJK/TI1
+9S/+CYxVW7QmHzRF+t1FFOFdJ7/3qWIv4lsPN7i9Qll5AcnMY2fWh00exzu
m54ipmFFzZOmRuN+6qliOnrtktrH/3B/9XQxrU7sYDVLBfZyFdMKHd2eda64
D9ud6a3GItsmHf2dp5iaPAwuun/E/dreYrJ0awuvdYT9fcR0994DHWtP3Nft
K6a+c7RuR022Q/0XU52CaWjV6jGo/2Lymvho888GG9R/MR350WzuVIz7xQPF
5Gel0iBSQn8aJKa58976lhTgfvJgpudtB8OHf8L95QvFpHdu17QlB8EhYlI5
J5lw9DJ4iZhGWL6oX+WG90OZffOeuJg5QE/Lmf7UlBNjN2O+MDE5BsgWb2jD
esLFtObmHZuLGVhvBIufFY+mn3JBPo9k+xu9bl9NO/YXJaYHXjWWHkdwv/k6
Mdl/ueieMfRf/RfT7fzoY0nH0F9vFJN6YpGtliLuN48R06/djSOC8sGxYprq
VXq63BX2jhPTk1e/Puz714/Hiyn3xc8xmtnwT4KY2m7EXV8VgPqSKKbkWQtt
7YbDnztZfCnf4NqNkK+TxNQSFicLHg7/J4vpac7hnp8D0c+niMk0t2X2q1zo
JVVMvt9jVmU1Qk9pYnLfvGrPuiHQ2wE2/tJu1htHoT6kiylwWMrczCZwhpjE
3yJ/dSHoNZPF49Wc3Ko2/P2ImMzzZU9ea4CzmZ6Nrx9dOhP1MYfln6Mt6yPL
sL5cMXnPdK0UzcH+8sQ0penQrgFasF++mEzmFngZv/h3Xz3zV93I4QH2OB9J
xURn0g9FfFJB/Wdct/bplYphqP9iUqrL/+AdPx71n+Uzq0ezn3lNRv0XU9T+
R12kba6o/2L6eKlHYbSbl5wLxDTB8EWbntZMOV9ietj533xdDvWqkOnr6a+i
CFPk0ytiql2k4Zx7KlDO18Q07fnEi27WqF/FYtr1YbZfZDL6nRIx9f8x6IJH
EfJ1KcvXT+NX3rqB/qhMTO/Ob7+99gDy+22W31MK7x20RD91V0whCzL7eW4D
l7N8JPv0tfog+IGY/oRZrVYLAj9i+TdvXovJc4xXwfLf81u1xR3AT8XkHzf7
x8eHWE+lmI71Ujl+2APrfSEm0X+KvQM3oJ5Usfwxon3s3fPY/2u2nocfVQw/
o55Uiyn2Z437SRHqSS2Ll9Sdqpt0Ye93Yvphv2mE2RRH1H+mt/Mff32JMEf9
Z/7cMnLXuvfmcn9/ElNxS0qSQRLipYHpfXi7/2ce9eIri5d+cw/l2yGfN7Lx
WrybBr2cJedmZl/to04+2jiP/RDT9mUtLjFbcB5rYfH4pdOMlrO4X75VTF8G
fqy6mIvzRNv/6m3W37rpOH/9YfpsuLMlPwfnDwUJjRyUMHJwPs5fihIqrLL0
WzsL5xUlCY16XdltwymwioQ6uNy4oXAarMbez7pcdWM2WF1CN1O3Rp0UYTwN
CS19tm7cteOYT1NCG8LHFBx3wXq6Smj2iO3psXlYb3cJte6fNMLyMvajI6HP
Tzf2/L4X+9WVkM4ou5+TbGAPPQnFlz5fGDlntpz12Xx2ce/9NdB/Gkjo1oW8
x7XJqGeGErJb9i15ZxvykZGEjhQ0xXgfQbz2k5CC/vwEpxNV8u8fJhKqjVLc
+r6Ljdy/phLS66uqZbEY/aK5hPK6OH8JdEC/OEhCYwbN3KUxCvoZIiGjb6W+
/otwnrJg9rQIDDppPEfOwyT0vH3MOUMf9I9WElKXLcoXtSIerSXUfYZd0cQW
6NdGQgM9unj/yEB8jpZQS+zLLkeqwbbMH7U1sd2LwXYS+usyfZzbOLC9hBQ1
91femobxSEKfZtQPO/ES8ztKaNra6ytkbljfRAlVKpxrlX5HPnGS0GnZf6ss
X3rKeYqEHjwJ6do0fKqcp0rId/p92UsFnFemM3sOuzzcweAhvv9LaMoPIf+U
LuqTO/PnwjGSG2uQnz0l9PTMuUtFs+A/bwmFnnY9PUQN3yd8JNR2PWVIzGPo
wVdC+4qE+oR90M8sCX21OB2ZNRr6myMhWVrN+/xTOI8HsPWUfbJR3vjv/C8h
RzvPJxc6hqP+Syj41+RF7xesQv2X0OSc/tPWZ0Wg/kvIdYi3m7cI912HsP3o
SrZOjotE/ZdQiO3q8RMGrEH9Z3rp8uz88u3g5RIaURu+wFMMDpNQoPpLXjER
HC6hC/rV+S59wRESiipcHfZ7McaPlJDzvc4VvRZj/igJnag6P8unD9a3jul1
6E9rv+3YTzQb39129Dce+90oIXulTSmd7WCPGAltPlXeZaUY8RgrIcMCm6qi
Unx/iJOQhVfwkyHT/VH/mb+0uAPDT6N/TGD79W08ZvMY/ViihJI7DZltZmYq
9/9OCcXZX1zonAl9JEnIZs2TJ3s3Qk/JElpWYtD3eCr0niKhpK6Fy9K1UU9S
JaSWrx9xaSDO52lsvPehy/+U4PxxgNnHNftpVBXOL+kS2rI+89vsEbhvPENC
C+w9bz4dEi7nTAmtmzRANKgSfITF5ycDifLYVXLOltCh5cnT+7iDcySUsuBp
20d9cC7Tn5+S75HDeD+P6e2UV2xbJebLZ/pf8u2SX0WYnMUSmrhBwXm8GdYn
lVCsxD8zywLr5yQkftXRVv8OzkcCe156fOk4Tez/tITeR/k4Vv+Bfc5KSHOT
YfKgWahX51n+GSFdyLnh+0GBhMon3gxx+In4uyQhulW4ouxxf7l/CiVUmlRb
tfsr+pkrEgpT0I3180X9ucbmd362bOsaxFsxi5+cjy2tB6CHEuaP9N+n//KL
5FwqIa1RLqqFq5H/y1g+sUiaX/EI3+duS2iS6UAltzfQ310JLXofGP9XH/os
l5BBoNnP5zqItwcSerbt9Mn+d8GPJMTLbG4dmwx9V0ioiu8yLHwL+KmEmr0e
qWbFgSsllH5/74YfruAXEhrkNMLywTuMVyWh1UP/qNS4g19LSNgvG9opBeup
ZvnXaUO9oWylnGvZej/71t0WY/3vmN5iPpR/MsT3vjrGO6/lrzuL75UfJZSo
1Klgojnyzyem78f9Ok+Ohr0aGG9L3p9fgPr2VULD13MJTfXzUP8ldEPUPqhp
OOzfLKElozXL/+7zRf2XkOn68htLe+I81yKhzPy1Zy6loh9uZf7WUy/22YZ+
vU1CGVvii63n4Xzyh+W/V1lb9ma9kdc3BSnFDKzr3vWNhVwvilKWn60uOKvZ
yVlJSondI/+Iu+L8rCKlUgWr4U638X1KTUqa9T9mSoY4y1ldSkeMjTectEC8
a0jJe2Wp35dH+LumlOjZiwceZlPk3FVKei4KFYOsUE+7S8n9wp7995XxfVJH
Sqf9u71rXYrvNbps/PqixsGLBshZT0oKlf99WTNTC/Wf8ZDNMY2jcZ4ykNKV
tyXOPf+g/zJk40++u2NsNPp9IynZ3b729NpY2LOflNLsgr2qF8HeJlKa175e
/RuP/GcqpZQNOXa74uAvcykNub5br5cF/DlISgPjXsge3UY9GsKed5MU3pmJ
/sdCSiFShaiWf9+DhzFu6bd2qibixUpKPw91vPtdG3qzllLtxA17pilDjzZS
cvgRmrXqCXi0lPqduPjUdRv0ayulq1ma45Z2h77tpHSwTDpYaQ3YXkrik18k
bafAxOzT13PUvVKwo5T8ev/J2HoGPFFKARYWA2TrwE5svzPyA+f3Ak+Rksbl
YAeHvZh/qpQ2blAaF/4R65vO/LFl1piTxmBXKZXoefv1sMP+3KW09tOdnifW
Yf+eUqrr9TYh2/Pf938p7cjIX7lADfHkI6UDKduGh+YgnnyldNQ2sbePJX5/
mCWlXx0UdR7w6A/mSCmoZ/avXdboFwOkFJG0znRvDPrFQCkp3bk7YttF9BtB
UrLdZ9wvfjDqW7CUEt6POXKjCPG1kL2f4vLT8hXOuyHMfmfbQkUpOI8vkZJv
8KDdmZsGof5Lyci23urhPVXUfym9TjW70+6sI9dvGPO/kzjUZQv0HM70/U3/
ZPGXwXKOYPO3zWtOmzBUzpFS6mrc0T9k4UA5R7H4LdxzwsIdvweuY+uJ6+m+
Y+JXeXxHSylP+ceAWT7GqP9SytjRu8HnHuIjRkrTJz5KfpWNfBHL4mNDQNHP
Lzhvx0mpZZnL+MYD+D4Uz+Ljcc1x62OwVwKbf87S++c64vekRCnd37PnbfeH
sPdOKamHX+gtFKB+JEkpOYL2/pUgPpKldNchusgoG/GRIqU35x+I+u2E/1Ol
1P90bV+Veci3aVLa9Z9t0lt16OmAlJQnemU9c4P+0qV04pXzjQn/9JohpXtf
F0zatRX1IFNK1RnXmz8sQ/90RErdRnbRih6G/ipbSqs/PzdZdwucI6Ufaqqr
utqjH8uVknTP37HuCeA8tr5Nyr6KInC+lEysvr9NOgEWs3j4kbP/xSawlOWH
7mPETjZgjj1vcSso7g7mE6QU+fmK+dEp4NNSajzbSaciH+s9y94vP8mt+Yn9
nJfSmldqvveHgwuklDqv5FxXf+z/kpSsF9kMmBIN+xRKqTnu9IiQFNjvCvOn
W/hr92zE4zUpvbM95pvtD3sXs/kHi2ICVqNfLJFS63jrlXP3IH+VSunltjIb
63PwX5mULj9QvbHsE+LzNtOP6uVBeTbw91023y5Vz5OHkC/LpXQ2y9Tfyxj6
eMDqzYVhDoV3kF8fMT0MbVryIxd6qpBSeeKzbu8X4Pewp1IaVFSiHN6A/Fwp
pdjOCU2R36DHF1LKft7sN3MNuIrFm9+z5Wnx4Ncsvx7f2yjrj/erpXR+UsIj
iTvqb62UhqXsfb9ZBfO/k1LW4F8v1w/C+uqkNGZsTfqFZOSbj1KauL5P0a8R
2N8nKYVfuv11XRfsv4HVz/K0BMce6Le/SmnqrunhlxyR3xrZ/jTnvNHbBf03
M70dFiyl9ciPP6R0I8V0v5YI/mpheo50GWlXDX+2Mn/v/R6e2hP+b2Pjrzo7
ZvO//ukPi9dAMj62HHpSkJHrz9/Cue3Qm6KMdJuv9U3fB30qyei/F33GGe6O
krOKjN4+/76tPnytnNVklD2jwcB73Do5q8voaVm0vt9HsIaMzKOLLPNWr5ez
pozqUm1NHleCu8pI+smz+44e0XLuLqNpWxSuC8ZgHRlZOQb+J/2N53VlpN91
bcaeI2A9GcU/eLfZWROsL6OWUqHt8wTMbyCjHf0jlbs6Yr2GMvK5JRv3Xh37
MZLRkN5/7kRkY//9ZBS88eEXe03Yx0RGC5d+e/XXG/Y0Zfs97NRj6EbY21xG
FnO2Krb2Q7wMklHaKI+FNBTxMURG9V4n1bwGIR4sZBRVMKvtnjn0PkxGcf0H
Gd9aBr1ZySgxUS8qthj51VpGeatzMnq/xvciG/b+z7USBW3k69Eyct8qVsyY
iPxuK6Py3OV9LtYMkdcDOxll1JicmzsP/ZS9jKJTopcXK6A/I8bLnay+R+H8
4Mj25zs8pEcnfE+cKCO9n0ozbh7B9wwnGYX11hh3fzh+D5vC9GP3JvSmDH+f
yvy1yOVyRVe8P11GJn5c3nhXjO8qoxf9nu52LkP/58700l5f6BY4Ts6eMgo0
cmyd/Le7nL1lxF09WeCvju/fPmz+25ofTrmif/OVkcbv3fHthvg9fJaMajLm
nA4OQrzOkdFH/W1zbKPQHwTIKOSq5vfnFxFvgTI62rze417nf7//y0hzlnHV
nQLky2DGS5YHvJwLPSyU0c+3W42avyA+QmS02NE5WDMQelsiI/7iS9c9x6Hf
UBlVPfGdnn52I+q/jIwzG129J8XIOUxGH6Qxbfu7bJZzuIymxp6Z9ZsHR8io
enBscsrwWDlHyuh+/QqPbTvBUTJq3GcZUV0EXicj6/adpT7PwNEy8ny5Llvr
HnijjK7fLJy+9wQ4hvl3y815GQvAsTJak/H9pYIGOE5GCgus1Q8cxnriZXTG
Tudo7z7gBBm5BJrsU9+F/STKyKE5NMr/1SbUf5YvZnRcPjgJ+0+SURelpN9h
gzag/rP4elsv7XYe8ZvC9Gxyrk1nLOyZyuyxzdOTP4d4TZPRqKbAdcFWsP8B
GWmJt7i8ksE/6TIaXJan1X8k8l2GjO58nqq95Ab8mSmj8xpOww1DEb9HZGSb
+jSk2Bz+z5bRfLeMeD9l5NscGQ28NeCkVzviOVdGAy5FjNnjAP3ksf0Nt3qr
8BT5PF9G27dLZ7oVI97FLD+4RPZsVwVLZVRSo/UuOxv1gGPx/2zVqlEpYIHl
j7v3ckIfgk/L6MKkvTMr5+H9s8weyr1qnEZjvvMyOvGmL1fojvpbIKOvY8K9
m3OwvktMLxsOqvpYoJ4UyqjnxM9T3N+hnl9h+W/FhE2uJchf11h8mLW4Pq2B
PYpl1EQruM/fYK8SGWm/U7n+sxPyYamMrsze/jTCHPYuk1FBVef8Qmf447aM
gvwSansuQX69y/yxpDTy8Fb4r1xG9OmQ+owD8O8DGYV29Rprkol8/Yjlw6Ue
Ed9SoIcKGQVEnSzMD4densrIMfdBv5gxiLdKZt+t0/7TqQW/kJGQ6bL60Aro
rUpGd+f+nN38DPxaRkYz9p3gjaHPahmZ/TLa1NkJXCsjyw/v68v+8TsZRe4N
XTPBBFwno35niurGvsJ4H2XUoWLvxaYo8CcZzT05vL5bE9bTIKNxy0ZG57iB
v7L47jjqUp892E8jy98bJwn2Bdhvs4xG8y/edb8Le/yQUfK5vmav7sFeLTJS
+6C9X6MI9mxl+viiMWaICPZuk9G89/F3Xu2AP/6w/NtUc74qBP5S4CjB9lVs
3ST4swNHRzr0WXjHFPGiyFHn1TdqlmnB/x05qjO4mZzfEfpQ4sgrrH3U3X/n
V2WOhpb4nXttB72pcKTorjrn2AHoUZWj41zO03xz6FWNo/DIgOOJjdB3J45a
Mnzm3GuF/tU5qnLJOP95IrgzR68NM4/bPUQ+1+DIZNXohIEnwF042rxhh96A
q2BNjkKPt9SVGuF9LY6GXd5g97gY3JWjn36vn2uKMH83jvzGte31LUd8defI
Su1Vz93DsH5tjgS1WaG7SpAPdDhSWXpYxXkn4qkHe1/FKe7DOsSTLkfXY7au
3HYd9urJ0YHzgZK1lbCnHuOFB3tObYG9e3EU0aJ4qlYf/tHn6OnIcWrD7OG/
3hz5vMreoh4A/xpwpLdsdKFLJPzfh6NJo+ZmPI6FPgw5qsjsPTh+E/TTl6Ok
jZqZkSHQlxFH5SYOicq20J8xR6tL4vKUv4H7cTQr8cbtmkTotT9bn033eJky
9G3Ckem1NdYGgeABHBmOWuy46iDYlNnPa6BRPA8246hrlMngg3lgc46q9/iu
9NoEHsjs1zzzRZENeBDTp8/BLO9yzD+Yo8bjyutLXcBDOFpfWu3uyGO9Qzm6
UzGgxKod+7PgSCOp8P5Ma7AlR+0DQtpFfrDHMI64X0XtfmGw13CObm+cfU+6
Hva04ijo9sNA3U2w9wiOzquucGndAH9YcxRmGnL22Xr4ayRHC1X8D0+ORjzZ
cNQwbvjLe7Hw7yiOaiW7t3Tf++/7DUfx+wOmneKgjzEcqZoeDkgphH5sWXwp
PnmTPBHxNZatZ4HuvjO/EF92HGkqOHbZWAM9juPol5UWzVUB23PUfV+VkLEA
+h3Pkd3Y+bEzO4KJPV8QXrz/NeLRgaNjx771m9kOduQorZvV6AxfPD+BxWuF
t0roV/BEjppmZL58cBXzTeJow/V1nz6XYn1OHB08PmBmhQLWP5mjEu2nl5vm
Y39TODJYZl3QORL7d2b5QXN7Uqwz7DOVxVvIn5wJA2G/aRz9yFUY6vfv+9Z0
Fl8Omm9bO8D+LowtP6vs+w525ci+W8zTix/hLzeOHliOlg54BX+6c1T/M/Kr
pBz+9uAoZ4TR2smXoQdPpv+87OJv2dCLF0dTvkjHntgEPXlz5Dvn+AtrD+hv
BotHvao7ev/OMz4c7TB2CQ0uBc9k8XFL7CAsgr59WT5dGCid9gXsx9HJGUs2
OsxGfZnFUUavW6uFE+DZHPU3jnarKgfPYfObLzNY+hDsz8bTtK2MEIMDOJLs
k+y76weey/Z/o+jAqErMF8jyaWT29bSh4HkcfTjd25lmYL1BHH3Of9rWwRv7
m8/RJeOpjX0ssP9gjlq9ux39Uwd7LeAoZd6puSX/fs9ayPLJRs/Vrb1g70Uc
eUd+iJlwGP4JYfktoXGZY2/4czHLT3N2Gcakw/9LOCrod3/TEmPoYymLn94h
HfeH/vv3tRydONirMaYQelzG0fxirYyBE5G/l7PxO3VUclVDvl/B9uP8JGqJ
Ds7nYRytXPykzSkM5/eVHG39KzNvM8b5Ppzpb9u5gTVDcZ5YxdGcSz+DNg/F
94cIVk8ujc77fRHnt9VsfcfqD+ep/vv3uixfK9msWaCK99dwpN/37aRH78BR
HJWedbUc1hfzr2X7sTWbGyDG+XAd88f1hQYm21HP1rP4f+x1tacM9SqaxdPt
s7oHdbH/DcyfOzu8MjmH+NvI0d63fcK2bUO8beLIomHOVt3xsG8M28/cxI7S
UsTXZrZfn//W8LPhn1iOYkafHufRhPjZwp7/rrrg4T//xnG0zlV9a2wfxMdW
jqJeNoWdzoU+4ln9vTn28e1/5/ltHDmGvdxklwi9JTC9PzFX3/cc+tzO+oXv
O1Kvq/07T3DkGfRhvVYqeAdHstvK4x/+Oy/tZPY93/9xWAR4F+tfrqzqvb0E
nMT6A78+x9oUcZ7ZzdGFPjcHN5qDk1n+Tdh29cko8B6Ocl0b3BZaglNYvYjM
FOVogfey/PK9wqn1KcZPZf3GtKVrh+0E72P2exFUnTgInMbR9LBOLy6dwfr3
c0Svqrt9sAQf4Cg/+X2d0iiclw5ytOT7rv2Lf8A+6RxJt1QWJh+D/Q5xNOJ3
Qb7uRMRjBkdx+wIW73gJ+x/myLr7RMUFqxGPmRzp+P+cp9YN/spi+T1u9R7+
zL/vnxzZbsgVtv/rB4+y+LTSsk+zQDxmc7RmVL6FSAP6OMby48P8twtUoZ8c
jgr7P73QtT/i8zh7/lrbyKE3kO9zOao5tWxh8wHE6wmOrn34lZh8FfrMY/Xd
fkyithP4JNOHi7Pr5kHgfI4GuQ/oc3ElWMSR5eW3u+b1wXhijioT2kuvDsV8
Eo6Wi7p933MUepdy5F4r+11bgPXJOFox7EDZ+QdYP8fide6ftCv/fn/kWb4q
HLIjPhr2EDgSB/3680IJ+esUs2/Zp5c98mDP0xz94U5PdAqE/c+w/Tvbe6w2
g3/OMn/23v6n+Cf8d44jLf3y01G3oPfzHG3aZyaNdoUeLnA0+PiFdWEjoJ8C
Fs86f3s0dYP+LnLkqn1CO+o9+BJHkRr+P+P4LXK+zNFGvbjgc8vi5FzI/j5Y
4niu11Y5/8f2HxU8z+EU+ArL333t9YxGx8v5KovXQ/s/jMkFX+MofUj+0IO/
wUUcKegkREXbbJNzMatPN5oq588AX+eoQ2TZsT4zwSWsv/zVUfu5LfgGs+fU
qgt2CuBS1p9F3aEVJzD+Taavz5qRk4eDyzgKaG9K88nCem9x9K41/97HJuzv
NqsXbwq+/x0OvsPyk5mtc1d/2OMuq4ef71m+i4K97nGUXDOmLnw77FvOUTfT
LT65KbD/fVbfbnCfbw9DPD5g+fKQ+vpO4xCPD1n+Hub7fcO/ev+IzffEe3rY
avj/MbOn7pj732XQRwVHNte3bLypCv08YfmHE/oH/v/v1yzfvxKHnzaH/p6x
/imzMm1aO/RZyfrHPTM2mamAn3PU9pd/fW0y9PyC9a/7kpep7oTeX3IUGHdc
LUINXMXRp6F2D8aog1+x+Ni985fnPvBrjqYqGuwY4IPx3jBOq7/zxQzzVbP5
FSpr/cYj/mtYvSnT2Lk6HeutZfq4+F3l40jkk7cc9XDKMn6kgf2/Y/lH6JxT
rQf7vOfo7rWorrGesF8dRw41EQfc/p0PPrDnYzu+HKoLf3xk/emT7R8m+MNf
9Rz9HdjtqsdJ+PMTi7+qrjOufYe/P3PUt7Pi+C720EsD63+CJEanNkBPX1g9
0Chod+agv68c9WkfYJJ4P0HO31h/XPxbtvTldjk3chQb/tVlYnminJvYeafP
lLqa3B1ybmb5XW3N3FMBO+X8nfWnv3JyJN/BP9h5J+BDafCSXXL+yfQ3xf58
00VwC9PX5SGhtR/AvzjadsdTw6IZ3Mr6mRdDnw56Dv7N1jtq6aoDWeA2Nh7t
b9jnCG5n9nW8v5i7jvn/cBR8KnVK7SDwX47eVOWeyY3A+hV4asqrSqo+jv11
4Kl1eczduqvYvyJPFJLSPeg27NORp1/jR+eNvAn7KfFUtzn8dtgl2FeZpzNG
P9LH5MP+KjxZd7i4tDQN8anK09nML/fmxMNfajxV5408PmkD/NmJp3d7zPUe
boK/1Xmac/C5+9R/8dmZp5QdpZ+OrkR8avAU1XlaZFQD9NOFzWfovv7xUeRb
TZ4UlFY6mPz7vqLF05bLCgn+V9CfdOWJe3I+s304uBtPPyYb9ejzHnrtztPp
2LUG+a/A2jxZzRx1LFEfz+vw1PVg9aNz+8A9eNrwPsliheu/3yt4+hD1vsHU
AevpydODaRc2SxdjvXo8aUz5HmBfhHrQiyfdOgd1TxPsV5+nv3OeXxnUCu7N
06iS5c5er2EfA55mfRU6v38I+/XhySPZUVn1AexryOyZMvhN+RPYvy9PT2cN
3LKgGv4x4smgYLlVXQP8Z8zY8HKHda3wbz+e/MwUVtopQg/9efr9utl0ekfo
xYSn6HLj4sJW8ACe0lJNDU++hb5MeWoo2SrpexX6M2PvOxR9sE+EXs15Cjz1
/fwY+yQ5D+Tp+6bLfksrwYN4ylwS7rBizm45D+ZpyqfSD6bXwEN4yrU2La1V
SpbzUJ5uit7n/NQDW/DU3pA1vsQAbMnTcY2wWsWu4GE8iTvNqB/5FuMN56nj
icDnW7aDrXhSGR/+tqULeARPtWuPX3eLwPqseZpgvSz0byH2M5Inrbaf4Sbf
sF8bnjb+CkpapAkexVPW9u/fyvRhn9E8+SZE9YzTh/3G8GS7r/3sq26wty1P
VxYX3RiqjPgby57vWhRV2AJ/2fF0Ia1256uv8Oc45t+q+7qPvsHf9jxFdJ9T
9egv9DCexcOFxvq/hmDi6dHcJ8dHeUE/DjxJPI4rqx+BvhxZvBbqWCSrgSfw
5D7GysFjN/Q4kaeR7jmmk23Ak3g6sNfiFd+O+HRi8ZH+7vmbh+DJPB19Zumg
8hU8hacCWeNig4F435mnRnWPD9XR4Kk8Kb3oEZ/WCJ7Gk1qw8XDtf/V7Ok+h
QWuuXbTH+l14+nl3/s613bA/V5YPZpvYXPwDduMpdbX5+o0dYS93Zq+uThHz
DGBPD540lcvcLkyC/j1ZvEZfM5ath/29eIpdaWTpVQD/eLN8YRP8Lqcd/pvB
U1VZWUOWA/ztw5Nl3+LfVrHQx0yeOo277uxyEfrx5Slb79r+yjroy4+nGdPX
vQvZAn3O4slcc/uKXLU9cp7N4n96ksGMWPAcnl47Xoh71gD2Z/niypWA59NT
5BzAU9AL/2qXQ+C5PCXZLr2z8hk4kPmvv+GIGyp75TyP6avvcqWu/cFBzF4G
FSpkAZ7Pk9HJwIkbzcHBPPWKfPKlb3fwAp5ebNH770Q9xl/I08LX61aXngEv
4sn/wsWK0JXgEJ4mPrtSx/UFL+ZJdfmG9s9XsZ8lzN6Bo7NFfuClPBnq71TJ
roN9Qv+3vqsfToaBl/GU98AvN/A97Lmcp3TDb9uXvIe9V/A0cEG3tVvfwh9h
PHV22JD54i38tZLFs13oC/4T4jOcp49HHK09/sC/q5i/9rwp+mMIjmD+dMk4
8sETeljN0/Xttt5Vh6GXSLbed67mlh3Ba3i6Jnl9bulW6CuKJ5Mtp4zcTMFr
Wf7ofjyg+B30uI7lz1vavr9LwOt5+nTo/fTd/zia6btNqdOBWvAGntwGuIy8
3RfjbeTJVUFn2MFI8CZWnwvGe5m/B8ew9WRnWK1agfVt5mn5DGMfry7YTyxP
+l7N7gcKwVt4GuzaM+FnDPYfx9Yvcnll7Al7bWXxuv2xzWVL2DOep4MFqfPd
e8Le23i6u+er0UwV+COBp+Sv5WeHtIK382R2IX6x7lf4L5Enm3hfp2Ph8O8O
nnR0NvIL6sE7efrscNL1QSD0sYun6Zpacf73wUk8hfy5q7ZlLPS1m9lrYpfb
Nw+Dk5l+ev0wqPkB3sPq5ZugmHOToOcU1i/8PO8TvR28l6chhTGHTl8Fp/IU
rJSUObwBvI/Vp8QN01S0UuWcxtPVkkXCOhPwfp7+HFn8vKMl+ADLj6v1J43/
xwdZvB/7pvNuADidjV+Z2PO6NvgQT57bf/S49AvzZfDUpTTAWvwUfJj1bzab
Tkbx4EyebvtWdGuPA2exfDbB43ZXb/AR5s+Q45k7+4KP8hSQHDF1ch3skc3m
c0rS7ycDH+PJ4sMHyw6rwTk8+TzqGPzQFnyc2f/xqbmJHcC5PEn7c1v7lcEf
J3hS79G9NWMfOI/Fh4PzgQ4LwCfZeLm5gbPHgPN52n37fYBYGyxi/tulPfBL
M/wvZnpabeilUAWWsHpWnfQ9+x5YyuJ1mX5+VBlYxvKX4eHTv++COZ6c3Ea/
i38J5nmSHbs2yOMHWOBpwM70wMhemP8U21+IvcI3J/BpnvaHRA8/uBF8hqd+
Ot3z+18Bn+XJbtG56F6dYY9zzN+eV+5WBIDPM38putrEFoAvML0k2vXT6wN/
FPBUkbgzdfFW8EXW75jYuQ9tBF/iaXRh9jmFIOjjMquHHqtN1z4EF7L+4IFy
nsGkfXL+j6dzRnMmLz4DvsJTYVav2op+aXK+yvLDF1fh+Q7wNdbffXBb09AA
LmL1vefKfdlT98u5mKcSrqPNmcPg66yfU97nMeg9uITV9wfjDPxND8j5Butv
d7uGK84GlzL2GWAzeCv4JoufQUadhhwHl7H9mv/5knYRfIvVM18d04E3wbd5
6r1rVs3Fu+A7rD+JnPHF8Q74LntfYUTj+evge8yfj3W7GF4Al/Pk0DpDISAP
fJ+dZ7K/armkgh8w/wTZz9q/AfyQp3XdjI6XBIMfsXwxfecnh6ngx0yPpZeX
zrEAV7B+XEPaKbAb+AnrB+vXvE5qgn2esn6v+qWi5WPwM2bfyPeD48+CK3kq
+70+smo/+Dmzj3/El9i14Bcsv/nc6XF7NvglOx/psxAbD67i6dLmR1/u9Ae/
Yv131C7tNerg12y90zWNTzbBv294Er4+mKb5GlzNk2No7pqAcnANT6sG/lWb
dR1cy56vT5Ce+w/8lvWrlTP0jK6A3/E0LPX0wv43wO95ClMqU7Z+DK7jqZgK
GjM/gj/wlPAw/kiCKtb3kdk7lrI/DQbXM/+c0087OBP8ifVXWsKpEYngz8y+
adPrzYvADUx/8bYDzneA/b+w8+ZlK+uaieCvPN3rNLc+bgf4G1uvz2fnGY/A
jTyNs91i86fPQTk3sfNCj6VPBi0CN/Nk6nPaIVUK/s76qyHSqb2bwD9Y/j30
dvKDEely/sny9fhppZ3CwC08LdPt5j/7BPgXs1+7Qlr2M3ArTy13rga3qhyS
82+eRKtn5x6zBLexfu1Bj94dvcHt7DzoIRqzKQL8h+VX77Mqm/aA/7J6/EPh
3lwRWEGghJqk+rBr4A4ChTw+MLm1Aqwo0JT+hkYOH8AdBUq6K9m+4xdYSaCO
Z7VnmaplyFlZoMxRPlOCeoBVBMrI1O2TbAxWFei8WfUzhaFgNYG6//y2pW0U
uJNA41eeu33JEawuUGFNss5iF3BngS791rMx9AVrCOS+qepdQxC4Cxt/oen8
mmVgTYFmPBD9UlwL1hLIxVRj1dQ4cFeBfozocPXibnA3gQJG8888DoG7C7Rd
MI3VOgHWFijHefmKTwJYR6AS0bXsD4XgHgK9NhlZ1fEWWFegvqkLzEY/AfcU
yHP5+gNxNWA9geLHbT1Y9wXcS6BbH2n6vDawPnt+08HUerXDcu4tkE394MkJ
PcAGAr2PPplh3Q/cR6Al9sL3LxZgQ4EUnun6XhgL7iuQd5/7u5KmgI0EGpul
fmXFDLAxG99/YuicIHA/gQYv2EheK8D9BXpztT3PMxpsItDOY0XbZm0HDxAo
u6i5bUka2FSgmLs+enHHwGYCXbmsMCObA5sLpOvZ83rpZfBAgcq8c/2ay8CD
BGp8nLV1wFPwYIFCu7Vq+78FD2H+X1tqeLARPFQgVyc/vWd/wRbMHz9UL/Xp
kilnS4GaTR8rLNQHDxNoeeBQ31Nm4OECVW2reac4EmwlkFWltYmPI3iEQCc1
1o2UuIGtBbpxbOskVX/wSGavk1vWzlsCtmH+8Osou7oGPEqglrD+9UZbwaMF
Et1UiYhLAY8RyNotZ9fHLLCtQMcfbTf0kIDHCpRabWtTUAC2E+jay4yoAaXg
cUwPfYbXJj8G2wsUHNxZr70aPF6g6D1PqkO/gonZI9D42fN2sINAU88s4l06
Z8nZkdl/R9yQ//TAEwSa/ijU0doUPJH9XfPHkrwR4EkCGSwYkN7HAewk0Ok7
c9NTXcGTmf9Npv/qPAc8RSD93VNs4haDnQV6FznM5U8keKpAkUs771oTB54m
kLnf0pPf9oCnCySkdcoMzQK7CDTkbW7dOzHYVaByz7NbgwrAbgJpzpugWHUD
7M7sHXerYdZjsAfbT1rTiopqsKdAV/f1HOL9FezF9Cku3VLeDvYWyFHQyc1V
PiLnGQKdMPxQsEAD7MPs2SHks4k2eKZAyx5kp9b2AvsK9Lx68d5jRmA/gfqd
6S0NMgPPYvlxVMOJfhbg2QLVyWaqVluD57D8dDU97uhYsD+LB9O+qvMcwQEC
ffriVm7kDJ4rUPG+gjOv3cCBAi249ir1iA94nkDOz0euDvQHBwk0etPsdKNg
8HyBhiucm/96CTiYxb/fW8mRleAFzH7csAHzosALmR6cpv0y2gRexPRb7JH9
eis4RKADB7Lqj+wEL2b22rz/TOBe8BKB5pnlLjdKBy8V6KJJ3tA3R8ChTL8T
TvY7egK8TCDZ3J3j5knBy1n8rZo5zvgMeIVABWfjDr++CA5j8/do2XX0Gngl
08+drPx5N8HhzD97uz0xLgevEoi0OxhXV4Aj2PrWqjtnvwSvZvXB2H50UC04
UqBH21re9KsHrxHIKdKlR803cJRAC/13xR5rAa8VaNhQ8zfz/4LXCRS2NTat
v8pROa8XaHdVpFmtBjhaILu9PYfmaIM3CKS3s6dFsD54o0DqlY27TIzBm5g9
5vp41ZqBY5g/L/leOmYB3szqv97jX/NHgmPZ++pFViZ24C0CiS97vK5xBMex
94MtZuc4g7ey8TMDCue7g+MFat2zObr/TPA2gR5YpTrV+IMTWL+wbmbksWDw
dpYPG9ZqzF8KTmTxJK271C8cvEMg++mDRlVHgXcKZPvJdfHRTeBdLJ8sTm4O
jAcnMb0rNnUz2gXeLVDECb3yV3vByQLFvaWYrHTwHoG+5XhODjgKTmH+XjVD
wzAPvFegpTvqu1ZJwakCaecZzT58BryP9RfBJYr+l8BpAg364L7UoAi8X6DH
oed9n98EHxDI0O2b+qFy8EGBtAZ2m+/3BJwu0DoH+xd6VeBDAtU6V+c/qQVn
sHo9p9vWtHrwYdbv/I6In9EIzhRozZnqZzq/wFksPjd0fvDwL/iIQMbJX2am
qGTL+Sh7v616gkcXcLZAbZcjfmjpgI8xe2tZ5N7VB+cIJPVPPbPLGHxcIB9d
P/Xp5uBcVu8Ov3mlbgk+IVDgXWeLspHgPIGMDm1pSLADnxRI6UFy18kTwPls
v2/W/VCeChYJlPvcZEWxO1jM4vny1CuxM8ESgdKuae90CABLWb4edVpJYQFY
JtCv/h06FC4FcyzfHP1vzIZwMM/0sd1af+xasCDQoROTlVo3gU+x+WI4q/Px
4NMCfXQM6bJmF/gM86dk3diRqeCzLB+vuz2qKR18jvUb/S9X8UfB51n/3Tdy
z4o88AXWDzaGeljIwAWsnlfNe1h/BnxRoP6hPxblXwJfEmiiuFpxcRH4Msu3
myqkpmXgQoG4le5+teXg/1i/MH5/SfYT8BWm76K6YYFV4KtMb3lLNhi+BV8T
6EjJ3dUv6sFFAlUOPd96sBFczOr597HbfX+BrwvUSyPNWFfhmJxLBHrrcenb
QxXwDYGCTo36sqcLuJT1k+pfdN11wDcFKtUOqe3SG1wm0FHVrgtvGYNvsf5v
/Ki5iebg2wJFXfl2ZbIl+A7TT5NCH2Ub8F2B7mRU9iqyA98TKPlqRXLMBHC5
QC8H/tdt/FTwfdZvu6W9bnMHP2D5NCxmdsFM8EPmL5PVQ6ICwI8E2s9362iz
APyY6UHfMqRpKbiCrW90chIfDn4iUO+FnvYr1oKfsnhYV9FxaAz4mUB3+7Y7
fowHVzJ7bLysk7cL/FwgxZ6HUxekHiv8P5gSLL0=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
Om0oxUa/2v2j79BGUtS1CYu6fY+eLEXUiwcnrR/RkOJrbm5zdSVtIoU4Jv6t
fQ1tKoVpn1kFb2tpMynC/Iq7Ct/Q5lL4/jdeSfcDbSnFubbaua8/01ZSdInK
2Vj0nbaR4nD/7KDTv2g7KaSmH8U3W/ny/kvx7sb1v40qtLMUnc8beemr0S5S
vP+y/bZPF9pNYaXRTld60F5SPJneuFNDi/aVojjulc+aAXSgFKt6OwQfHEIL
pcgsvdv+2wg6QrHf40ljp46hY6SoGTsoI3Y8nSDF/KP3tZ8a0yIprP/Yjpk6
nZZKoRs7u/bIbFquOM/ZW+4am9HbpKhv3rHm6WI6Uwp7tZEvUpfT2VJM6Hox
cs0qOk8K2FZ+n+pAH5BigObfR4PX0/lSHLr6qVcXV/q4FJ9WPK/+4UUXSKGx
clhVhT99Top79eUzcoV0oRTflKa0sY6ii6W4ZDDeuD6eLpFCkK70c2kKfUuK
2LbtWotldJkUF39Pu7ZtK10uhcwv7r1XJl0hRdvKy069c+gqKSIsY7ol7aVr
pIj/EqVz9yBdK4VX1IdXtUfoOsX517RKvnGCrle4+JB5+Gm6QXE/P/cOVT9P
N0rht6HXTc9CukkKzdqm3MOX6V9STDbqtfnaVVqQiquWzxIvXqeVU7Guq5/+
9lu0airmpnZ87VRKq6VC2Sl7dP97tHoq6oQZC+6U0xqpqF3co7PvI1ozFYt/
mg8c8ITWSsWvwd8ab1fR2qn4PPjC57BntE4qzENt8k2e07qpmO03sqnnS1ov
FXuPZpW1qqP1U6GleWNI23e0YSq26PQM0ftAG6VC88vwb96f6MmpuBVzqeBV
I41UaGscMwltok0U728oGTrnF22aiodhYxInCvx4/1NhMfT6ihXKtHkqqg9M
bcxVpS1TofO0jcfAjrRVKtS7+e6/2YW2ScWyqqglWT1ou1SsMT58MKcP7ZiK
XbZPI8q1aedUpDqPzNAbQrsonn8qmL9vBO2WCqeB4r6mY2gvxXn8PjHo73ja
NxWOx+N6X5tMB6Zi+KkNFbIZtDAVRX+2f3c0pSNSEeJws4fuQjomFa8OXBj5
aAmdkIqx2yI/rF9Bi1IRqHc//fFqWpoKtTu/pg1wpOWpOGkyfeLU9fS2VAzz
GtpTfzOdmYqCgFcRTR50dips8mZcz/Ch81LRa/C+1X0C6QOpGPy7m16IkM5P
xfbSY29vRNDHU/H4954cpVi6IBXPxqrFD0ukz6UiVPXp4BkpdGEqtj1XiV2Y
ShenwkOlxNk8nS5JxYPDGlvnbqdvpWKn6bNRk3fRZamIKrq+YngOXZ6K0asf
Lumxl65IxYW3fd+3OkhXpeL7wdYLPuTTNalo96qqTdVxujYVK7a1c7pZQNel
ovPb1gvOnaPrUyGc77X7UCHdoMjz5qZBVjHdmIr6A7VFshK6KRXZeTfUE27R
v1JhW1r9NbSMFsig1264jW85rSxDpvMSfdcKWlWGphfPlq2totVkGDRx/8NV
NbS6DBV1wriltbSGDFeWH3ZeUEdryvBTMnfVrHpaS4Zqj4CQKQ20tgwTYxY9
GNdI68hw6ozf5lFNtK4MK9TLjIf+ovVkuL1VeZC2wJ/3X4bCNusX9lKmDWX4
8l/XC11VaSMZCvasX6OmRk+W4WHn2WNU1GnIsMynSVugQZvIMP5sm4nNPWlT
GX74GNo19qHNFPsfXbr7Q3/aXIZXiXM7vhlEW8qgPb+T9MVQ2kqG4z3DJ1WP
oG1kONPpQVPFaNpOhqu7LE7dH0s7ynDwvpPrnQm0swwq3T0NrhvTLoo8bqHK
xdNoNxmMpsjbXJxJe8nw4WCvKWfm0L6K85JcTjkxnw6Uob2RR48ji2ihDPXX
PS8eWEJHKObdsDombzkdozivN0u9s1fSCTJMua7inWlLi2T4Ntnbd5sDLZWh
3fliH/k6Wq7Y3zCLWOlGepsMrklpeSJXOlOGul2BDQmedLYM5Xv1LWN96DwZ
HO5cqI4MoA/IcDfE3i8shM6XQVKYOiwknD4uw7lRga8DoukCGU7+jT7oG0+f
k2FlrwWJ3sl0oQypgj3uHhK6WAb9hWpzXNPoEhm2Be/Qd9lK31LMa/zmEet3
0mUy4OpWk7W76XIZnCZUhTvsoStkSFg0ocBuP10lg84kyzarD9M1Mow783z1
ymN0rQx3pPGlVqfoOhkyol9YLztL18ug3i7u65KLdIMMzrNUdy++TDcq9tNH
4L7oGt0kg1m6aNKCm/QvxfnWXOo4v5QWpKFux+YXpvdp5TSMf11fPPsRrZqG
dI+DR0wqabU0RPwpODfjGa2ehuYlu2vwgtZIQ7yOVHvaa1ozDQafx/tOeUdr
pUEjO+Ce8UdaOw1Lrg+bMOkLrZMG7TtWO42+07ppyFiy9Nn4n7ReGo6f3tJr
3N9/9z8NgxcN3DC2dQDvfxp6v3AoGtOWNkqDZH6upn4HenIadizdv35UZxpp
0BzinqvXjTZJQ9Kes3eH96RN03B1sqvqsD60WRr+9mg3Ymh/2jwNM87stx48
iLZMQ3X/pIBBQ2mrNIjG9d03YARtk4YirSGv+o+m7dJw5u/5wf3G0o5psMDB
VVoTaOc0DImS7+xtTLukQb3H8M+a02i3NATrlKLnTNorDR1b5/l2n0P7pqFK
yUfabT4dmAZ3F91rXRbRwjR8vprWVn0JHZGGd9H2Mzstp2MU5z1lc4jaSjpB
cb5O7U+0t6VFafj0sOmrqgMtTYNWvZN523W0PA2Wj+Xn2myktym+F+PO85Rd
6UxF/qX6HVp70tlp0B/R9nkrHzovDdsu3ywQBNAH0hC0Y3zs32A6Pw2BPdxm
/gmjj6dhaqCy6u8ouiANQ7Wn/fgZR59Lw7jni8qbk+jCNBzbapf6Q0wXp2He
grtzmmR0SRpKLPNUvmfQtxT1nyw+fN1Bl6XhQ+TNz41ZdHkaSpN1XnzJpSvS
YO1iX/x5H12VhisJP2M+HaJr0uAZs86t4Shdm4aB7fYJP56k69LQM3Wl5MMZ
uj4NHYpTTr6/QDek4Wcbu0f1RXRjGgyzzL+8u0o3peFA7WfldzfoX4rva8i3
YW/v0AI5RlecXfnmHq0sR1nX7u51D2lVOQb2We/3+gmtJkepjkH0q2paXY45
m98cfPmc1pDjrYXvi9pXtKYc8ztb6dW+pbXksI3tvvLFB1pbsZ4xLPn5Z1pH
joxdO+78943WleND9HPBf820nhxXuifr1fyh9eXQSdps9UwpkPdfDrsHWwqr
VWgjOV7qXvaqbk9PlmNf8dDR1Z1oyBG/1+f10660ieL9JZGipz1oUzkOtWur
+7Q3bSbHI5fv56r60eZyWGr8cakaSFvKsUl3+LSqIbSVHL1qIodWDadtFPkP
3+tUNYq2k+PTve6/Kw1oRzlWnOhSWTmedpYjtYNyTOUk2kWOISFx/Sun0m5y
pJu8uvxkBu2leL/2vUVPZtO+cvj3uXj+8Tw6UA4Ph1c6jxfSQjlmb7HIrbCg
I+S48HHK4IpldIziPHstdHtkTSfIceJkTvbD1bRIjr79L915sIaWyvFku7XG
g7W0XI5vxc+iyzfQ2+SYHrZUqXwznSlHh8OC6PsedLYcWfeXtb6/hc6T41bI
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
OBDLsCgZHYb1Px2662T2O8qjNdNhuXNqSMsU9Kx0qE/fGBKkidZKh6beDQFS
Oui56SDx///THmGdEdYdYb0R1h9hgxE2HGGjETYeYZMRNh1hsxGGEbYYYcsR
th5hmxG2HWG7EV4/wvYj7DDCjiPsNMIuI7x1hF1H2G2EPUbYc4S9Rth7hH1G
2HeE/UbYf4QDRjhwhINGOHiEQ0Y4dITDRzhihCNHOGqEo0f41AjHjHDsCMeN
cPwIJ4xw4ggnjXDyCKeMMG2EGekQ8cout7T6j+n/mTXC7BHmjDBvhAUjLBph
8QhnjHDmCGeNcPYI54xw7gjnjXD+CBeMcOEIF41w8QiXjHBpOrDS7shsfiu1
8v9cNuL4kxHHK0a4Mh0Sxjzfdaf8FXV+1QjXjHBtOmygv8l90CdN9VN6mQ6B
u2zG2Y+SoFw/wg3pcGStVNTUD0qUG0e4KR14qwSuf6pUKTeP8Id0iEx75f9l
jibllnTompFpMalyCuW2dIg79fP8k2XzKLenQ0iLLiekHt0xwp3pUDv+yeEi
pjblrnTokJ6+y+CSLuXuEf6RDpYlaUK9uXqUe9Jh8aw3dxpL0X3pECssFc/O
16fcnw5nm1z6bDIWUx5IB7+6uTt2BBpQHkwHIxP3trBveHwoHapU1Lx01y2h
LCGGMmvru4yb6FFi0NuiUP3RayllKTEYvlGr1n2Gx6XFoJm3c3HPCUPKMmIo
VvhbdLcPj8uKwShQ9OyqM35eTgztRyVd3IUmlBXEULK7q4g2ZQVlRTEcq/0+
fp0bHlcSg0zWJy/7KLSyGNL/nrh37+dyylPEsLHy5Z8Z41ZSVhFDVBS9+8VW
oKxKxt8fMCaifDVlNTEM7HyksrxvFWUNMUhILepUXo/HNcWQN6buzfHRVpRn
icFvj+6BnFmWlLXEMG265iyPlv8ozxVDa8kNtWb1NZS1xSAK8Jn+W8uWso4Y
Vu9YoH5R2Y6yrhgsx3szF89E64nhkv6rWme99di/TAwahy1PO1TZUzYQg6+v
pHXH+o3Yz0wMKl/jKk69d6BsJIaIGOa5swc2YX8zMaw/umv9ixZHyiZi8HKX
Y41OccJ+Z2K4+kQm5vM2F8pmYsh0z4p1v7IF+5+R+XMeOH177zbKFmI4MmEc
a6LyduyHJoZ+vbFTLi9xp2xN7nf/jOLRGA/sjyYGl+yS710ROyjbiuHC14nP
3zz3xH5pYpg9LeRqkroX5fViSIo5XuLnsgv7p4nh+/GpZ5TSvSk7iMHVvG9J
6Gwf7Kcmht79h0tzEvZQdhLD692m5la792J/NbIenUdehfb7Ud5K4sVUQbLn
hT9lVzGoZvO5B5YHUHYj86dX9tRqwwHKHmL4UK3pUO4RSNmTxPedbpstKQcp
e4lB/pj521ddQZS9xfC4d/fsWNVgyj5icEr4+UJ45jBlXzHoe2yJeyl/hLKf
GDraoo/5Hwml7C+GT79rd15QCqccIAamcatBJOco5cD/xXuUqsjjGOUgMXRF
ftToOB1JOVgMrGSlnYcCjlMOEcPMA4duFO2KohwqBpO/JaqrHE5QDifx1fYg
kmkVTTlCDNb9x+fkLz1JOVIMOe/GfbmseopylBj+c5p8RL8XHS2Gmg9+F1Xv
nqZ8SgzaksvL9u2OoRwjhnNit0dv36BjyfnfBr4t0T1DOU4ME4cupL6chY4X
w5P595zcy/H8BDHQGhdIyP/F6yeKoa7pvUzwMbx/khiSdcyPzLTG8SeT9Rc8
PKv3G+cjRQz5AaLK0NshlGliMN7+e5bufxg/DDFUHdxS1D5xE1V/WCTfp2q8
TpkXRpkthtCdtjN5m+Moc8SQVTR/DLf6MmWeGOSy2Gvv6XAoC8h+cLvyousK
MWWRGDYfz3VyWJVNWUyur7/724a8PMoZYpj0Lyz2zeYiypliKNrvKRui8Ihy
Frlf1n6DRPcnlLNJPLX8XWTW+pxyjhheGv35MftIDeVcsr+W7vp8aWMt5Twx
XAxUMbMYV0c5n8xH9hnd+PV4vIDEv2HUfkkZ/Hwh2W+vTZ0/LaOCcpEYCnze
ljClHlIuJvujmcf41LDrlEvE4GOsVFfUyKLms1QMU+wv/YpRK6RcRvY3mTXz
6+zKKD8h8Z/9eVJs+TPKFWIwTZa02x2ErhSDvfObvn9bH1GuEkPzx9mLZw2y
KdeIQXF+cEDTD5yfWjKf5RtnaU5opPySjPfPq+uZ09sp14sh5r/PlfWC75Qb
xAB9QdkLbv2i3CgGrakfpWtMhyg3icHfRTd94vVR2H9DDAzzIaYfR5ryBzF0
7ptxbqrceOzHQfbf22taH/6cQLlNDC3lOv+vpzMPq+mL+ni/CklISClTaEKF
JEmWFAkJSdKgTEllKmUqmWVKSEKilLrTOUeSVKLMqUyJIkNSISFJyLvf9357
/+r5PN27z15rfdewz/1jmyalaOB+jnRalud94ElYbznXp5Nvr9a2DrO0cF9H
OkWVRfjF/e4r54Z0il59Pua1Yz/c35FO5Q+mjOzcZYCcv6WTxo/NBamdB+I+
j3S6tGdf3p3B4OZ0mtEwvPeC4/h8Szpt7XnXelQL1mtNp+Ihys+3eOrgvg/W
/46NWRkr6yPntnQaJdviEl+A/SuIiDv/1fyfVEXOiiKi5NF/tzk3yv2lLCKt
j5e8nsfjfsuOIlI7kRojC8T9kyoi6jrhSabRiUFyVhXRaffxRy2e4/5HNRE9
f06dO0lwf2M3EXX3FqSpa3Efo7qIzJy50dvjbOSsISLbSSr5Bhtwf2IvEUUG
u7rZp+J+RE0R+TooRFvl4P5DLRFN8o/Kbj2F+w77imhZX9pBpk5y1hWRrGi+
au0I3GfYX0TNagu0r6vg/sKBbH8meUvtksF6Iiqr2vPBTRH3GQ4RUWuQ1tY3
xmB9EX0KGnqtsZ0NRTThlZP76J5gYxFd6ZtuOL8Z6w0XkY7NmMzED2ATEa3f
Yqbw+BfYTESORv8eONng+6PY81vNJpgWgs1F9LZvxm2P47hP0UJEB3Yf3nvg
Gu5PtBSR6tfS0oCJuC/RSkR6v75V2PfC/YjWIjoy8dj0cAvch2gjoqWd8pKe
xbfffygipzOtZ3qZ435DWxE9Dv7uOr4V9xvaiUjlk8Uo7+W4r3CKiLKHvvdb
UoH7Ch1EFLehq807Z9xH6Mj04mFFpgW4j3CGiK6tMR451wT3DTqJSGlr0Kpu
h3DfoLOI7q09fod/i/sG54io0fnIswf6uF/QRUR9d4kmS9xwn6CriH6T4uyT
wbhP0E1ESWM+G88OwX2C7iK6YDfI/JkR7g/0EFHt9K8OK7eDvUR03pb3cr4B
XiSi+NSdZl3egH1FlH571jaFF+AlLN4kyctOBS8T0Z5pfTqPsgf7iejF+qDn
8z3wfH8RLco5k+92DfsNYPm0bMqgTxzuTwwSUaHK7/Oto2D/ahHd2ZJZYTMD
/lorotVxHx81dYJ/g0W0MH/H3Rd1uI9yvYjmHO69P8kB92GGiej+OocD3c5B
7xtF1GTWUh9yzlrOm0VUuntc7RxOXZ7f4SIKvmUVcnaarZy3imjj9E09EhRm
y3mbiFzm2wyI3eQm5x3MfwbdlhiGeMt5l4geRWy6OLAW93vtEdG+dIXLYdlL
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
/TfJZBH6lbmU4u91K59sh/fLFlJymB/trxkGPVpKqXXys/TpI6BXKyn18Oyw
oDgXbC2lU/6v157Th75tpHRj9IduL5eCSUo2Suf7JW0E20pptan6mi7t/7eT
0tya17l9278/RUrWwzVfi65hfQdm3+htD+aZgx2ldM337OfZu7G/GVLqsrfp
ZFIY9u8kpW664SbRUtjnzPY/5YvCqizYP0dKk67VzVJIgH9c2PeXWuqKlqHe
uEop40GX3eHamBfdpBTwopx3z8U84C4lJ49p1zouQD55SOncM497aTXIJy8p
Kfy+sS9fH+/PF0mpLPT43d6ReD/iKyXphNxzXbvg/cYStp7j+JK3ezEvLpOS
W8XekD92OG/7sXjU5690rYHe/Jm+DB5OF5WoyfUYwPxZOb+qg+1wOQdJyfwT
rV/pD/2uZuuNG5rY4mgt57VSMoxM/dA/GfNTsJRUY0bEFo4kOa9n6we59VaI
tJFzmJQWrfu7fGYb3mduZPGZWu+T/n6UnDdLqcV8WteiGD05h7PPt0zY9+lV
B/R/Kd0xuPbJvRPm321SMgnzaV2difP+DimpmQ81f1uB8/AuZo9t9rLV9e39
X0q73D86mU6EP6Ok5Hf+/g+d5/h9aT/T+6YLa+tmIz8OMn/N+31G0x75Ec3y
ScVFW3s84hsjpaKnissvG6KfHGX7T7u530sReoll/qKmjvNzoKc4pl+1NI29
Q6G/ePb8xB0XcmdDr6ekpFN38vszT9T/BCnVvDf8V2mPfpEopfRL+TsaO2Ke
OielOcVhVVFnwMlS0ii4rDahO+avFFYvOhyMOusKviCljpuzMpVCwelS0j5v
2Gq7Fixm+m0bP3iPI1gqpf7BxxotFMGclLw2Hlh+/SSeJ0gp1jm45GT7fJch
pUj1DFPNcOw3U0pdO0h0N9+HPVlSmlqU4KKnDM5m+vZTSd9qDPtzWH5O1w/2
ngT/5ElJk82W76cjP/OlVDD/0JheJ9HPbjD//VwUq3AU82Ehq7d1Xv1soxCP
W0xf+t86infiPHdHSsH9Cka1HUB9u8f0klHtkZ2O+BZJqT5G9Lj1LfKzWEpJ
A3MzdSdAD6VS4go/mW3cgt8fH0np6KqZNwLb9fOE1Ysc5fCwWPx+WSalxtdl
mSNy8PtmObPnz7K/S2dDfy+YvtNWvSv0wO+hlVLaXzV5WEI1+ucrKdXumVIq
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
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.4, 0.5], 
       AbsoluteThickness[1], 
       AbsoluteDashing[{1, 2}]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> FormBox[
       StyleBox[
       "\"Effects of Truncation on Response Matrix: 100 Singular Values\"", 
        Bold, StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{0, 4827.}, {-0.01, 0.01}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"Truncated SVD\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"Complete Matrix\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "180"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.827937462181872*^9, 3.8279376452572727`*^9, 3.8279376810356383`*^9, {
   3.8279378914714556`*^9, 3.827937918810661*^9}, 3.827938045968851*^9, 
   3.827938395115429*^9, 3.827938441078846*^9, {3.827938521494362*^9, 
   3.827938530050823*^9}, 3.8279389490512753`*^9, 3.8279389896285324`*^9, 
   3.8280931451771297`*^9, 3.8281077107777147`*^9, 3.828107741248669*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"92e5cd28-baa0-4ac5-bb9d-e9d7958c28fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"v", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"3", "/", "6"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<V Column: How the trajectory in a point is affected by each \
block\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"u", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "i"}], "]"}], "]"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", 
        RowBox[{"3", "/", "6"}]}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<U Line: How the trajectory in each point of the space is \
affected by a block\>\""}]}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1000", ",", "250"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.827931363234518*^9, 3.827931373532263*^9}, {
  3.82793148128053*^9, 3.8279315040468054`*^9}, {3.82793902152852*^9, 
  3.8279390217423973`*^9}, {3.827939052810627*^9, 3.8279391085483737`*^9}, {
  3.827939151744929*^9, 3.8279393554292574`*^9}, {3.8279394812297993`*^9, 
  3.8279394814816527`*^9}, {3.827939563028631*^9, 3.827939563549721*^9}, {
  3.8279397250004272`*^9, 3.827939738394328*^9}, {3.8279398672587667`*^9, 
  3.827940040200597*^9}, {3.8279400896762457`*^9, 3.827940095657195*^9}, {
  3.8280931519468083`*^9, 3.828093152040538*^9}, {3.828093202504613*^9, 
  3.8280932028442774`*^9}, {3.828093984293871*^9, 3.828093999563989*^9}, {
  3.8280943236005616`*^9, 3.828094342725416*^9}, {3.8281062814099708`*^9, 
  3.828106346764296*^9}, {3.828107353431038*^9, 3.8281073793667746`*^9}, {
  3.8281077487710505`*^9, 3.828107775386203*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[188]:=",ExpressionUUID->"3ba7f16c-8ed7-4746-895b-4c4f9e635207"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
n/0/+7X5KHmy46kmz5XWw0fEnS1LRttQPufw8eTapX4uh8jvwUfXro723pGU
z934WMDrH2JkS37L5cNrd9kJ3dWUz/l8NN1ufphuzeRzPmZe1Dr3w4XyuZyP
KRPfPY5SUj5X8NF+9+ow+98pn1fx0TtMq1rqQPelko87yXutNsyifK7iI+jJ
6AlLg8iv1Xxc6L+162kf5fNuPrKdS7RLVlK+ZglQcqvY986JdJpfAMegnjfb
/ran+QV44e7eL3Ud5XOOAGvyH1iWbLSl+QUo9p+9+F0v5XM3AfLnxyZdz7Ck
+QXYcPX6FO8met/4Apy9LR5w9rUezS/A3edQ7ZpjTPMLcKqpOlY+gvK5QoDG
/G+f51X3p/kFWDW+N3jcJfIbpQC98q/+B84uo/kFUD3Ncul8TH6tFqCAtaun
aSXly24BAhJOS6vPMN9ThFigubaxXpu+Z2gL8eHechm6yK/ZQmw3GrNar5XW
zxEiy3Xr+/9+HtH5FMLapnHomd+daH4hnOUflAcHE88VYsLtD99zLWi/+EJM
WpUwUm7B5HMh9LdsbrxtTd8z5EJsSr7WWHWY/FohhL2b1vukYxE0vxAN+hqN
7x6SXyuF6KcsWp49nfxCJcRX8ybdIxuY+06IwLtbi1UDaP3dQhjOKDCZXMx8
TxHhHWfsFb8RlM+0RTDa+ULn/m3ya7YIPoM539oPk19wRDhhaqGh95b8GiIs
0JJ18Azpe5KbCPdSti/JnUr5nCuCpsHtaY838Wh+EQIWXZ47yY3J5yJs1LX3
isml+0YuQn5+TXXuesrnChEm8o1rDknovqgSYVJCWn+zFsrnShHutnivG5pB
+6cSYW7XdJMbqymfq0Voc3Vq6xy1gub/r//Jjyterymfs8Roi7X5Z/Q70tcW
Y9DTdpPuLeTXbDFqv204am1J34M4Ylwo2l1yQYv8HmLMGNpW+Pw1+Z2bGHdt
WB1iFuVzrhiOza5JfsHk13wxMovdkZlM+VwmhmnMzoZIDu2/XAxNHeOkfRLK
5woxeupcZOG19PyqxHBRZm9iB1M+V4qxxkTKWpZDv29UYnS+5o75mEv5XC3G
svx9BrdNya+6xXiZq5/751rK5ywJXh1k32WFUT7WlmBoRb2zqyvlc7YEl1tz
ohqqiOdIUNWsrbtPl8nnEqxYZRkZ17qE5pegVWe/U5GY8jlXggBXrfW2Wo40
vwQpB7nrIjUon8skcMlxs7VcSn4tlyCsL+VzWQrlc4UER2a0V2jU0O+rKglm
SK9VsPIP0PwS+Ik7FIa/0/NTSXDyUoFdlWw/zS+B3LDzH8s9bjS/BGciUguc
jCmfs6QYI6wZ5Pud/F5biukdhhtmP8im+aVo750w5H478RwpvvZ1c9vtmHwu
ReXYRVezfShvukmx++rgzPKZlM+5UjRPndd1zp/8ni9F94ul5eEzKJ/LpDjW
2TvrtB/5h1yKO/tevPxct5Xml+Iv9pLe/XsdaH4pFv4ISajfTflcKUVCneel
slUONL8UU0eWP1t+k/K5WoqcqhvCk5PI77ulOFcQVp68jPI5KxlrSs5OM++k
3xfayTBqfjU2UED5nJ2MX9n7Ss9nWtH8yTjmoPA+10fnHcmQmu7S/Ut/ptX/
AC5cUts=
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{30., 22.486284289276853`}, {17., 20.915342276494925`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"V Column: How the trajectory in a point is affected by each \
block\"", TraditionalForm],
      PlotRange->{{0., 372.}, {-0.13501675950743738`, 0.13607549265075744`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -94.5}, 
     ImageScaled[{0.5, 0.5}], {360., 180.}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
MzaupQ0T8XnY9uAaJ3p8IqrvdkjwdKONE/FB+HZzez/aJBENV2+8OBpGIxFX
Jg5Ts06gzRKhpfXqhVYybZ4In7Fzvz/dR1skYsaKmiVHjtGWiehjaHI46hy9
NBHjs4tr3HJp60Qcszr4zCGftk3Ed+s/D1c/oe1U+9vWdsnqV7RDIorzc8X2
1bRTIm6l9pnu8oXemohJca+jQ5pol0QYaPsc2NNGl/c/ETPbL+t2WYsWqvZr
le3fN71pv0Q8v2U/q+NgWqRaf6RXPXk0HZqIVvO9ZjlOoiMTUbFypHHiTDo2
EQd/dP1+bgEtTsTimXOnFq+gpYkY/M3q+ud1tDIRR0dktW69ld6diJ1dnO06
edGpidjmfFVbS0SnJ8Ih/trG1tF0RiK6T50v/5BEH0uEtTBvyq09dGYiGtfv
/Bp3iM5KRNvP3SbMPEVnJ0Kwpq/Puwv0JdX6qGNvhDfo3EQoP+359Ps+fSMR
P5oaH7kU03mJyFZ7c6qknL6XiNO9niZMeE8XJCJLzU0R8ZV+kgiXoJXbHjbR
JYl4sjuiU8c2g3j/E7HReWWQWSe6PBHTxrSBpzZdmYi15tZe+wbS1YmwMt+/
74EBXZeIV923r/s9jq5PxMAV3RwNptINiXj3ffoTm9l0YyI6fRoRnbCIbkqE
RotG7RvWtECCWtOpdT/W0WoSyJbHjDHYQqtLoOaLfys9aE0J0j60qgr3p7Uk
WLN2xtXMcLqbBGVPjQxKEmhtCQa8PTb8j5LuK4HFhV6/+++jdSQ4fcPztslR
Wk+Cg6cany/LovUliLDpsNYphx4hQetP8Z/db9GGEjw4uLDJ+yE9XoLgC191
PUpoYwnu1L7vuOk1bSLBuqMjcle8pyHB8ZhxetO/0mYS9GhZ90OviTaXwKD4
4o0WrfV4/yVA+5pRxR1oSwmc4dA9vQe9VILdm+u6OA6grSXY9PLntv76tK0E
vTWOZtwxpO0ksMlZ2W7TJNpBgmPdw+z+TKedVPlSvN9GzKO3StDq86jsdkto
Fwk0GnJPBNvQHhIkhoYO/mpPCyVY4o01NltpPwn8M31fX/SgRRJ8jsq/2s2f
DlWdh2E1Wo5hdKRqforz8VlxdKwEdebpJv9ktFiCzYtbysz30lIJ6vsut5Ic
pJUSfCuz7lN6gt6tmufgkZLB5+lUCUri8u23XaHTJRhZvqcq6zadoZr3/k2D
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
rkOnKnE/c/zzBD06XVU/9bJbz2F0hhKjK9dZpYykjykxs/elCUPH0plK7A3U
GHhyIp2lxJp4t1MTp9DZShytfKp22ZS+pETB2yWzZ5nRuarzPbPwwD1z+oYS
599U6i1dQOcpYTWop+ULK/qeEkO+RhmtX04XKJG45/zAmlX0EyW2OWa9dllL
lyiRnhSFn/Z0qRJml55eDHKiy5XIP3OnnYYzXanErrlVehJXulqJEPOX73p5
0XVK1EjFpWk+dL0Sk2vm6xgE0g1KjOq5qOh0CN2oxNfFgiNTIukmJSzGXbx+
I5YWJMNX8+CWBYm0WjLyP6YVF8lo9WSMqL6etGYnrZkMrbBtGVV7aa1k+LyV
pbvup7sl436ls8vvQ7R2MloGx5uEHaP7JqNDZu+dnU7ROsn4PMJn1s6ztF4y
dsT1Mxp8gdZPhuD//TUiGUYjxxvZZUty/n8bJqN12Min+1+dbvb4ZFwaYqy1
yv5ms42TEZ95tsfTwY+bbZKMl17vi3rqvmo2kvEo2P3xhudvm22WjKqAnlae
3z802zwZ074FVtif+9psi2TYvlitIdH92WzLZNQHzvRePfNfs5cmI+PK+5Pe
HVvxe3XV/sz53n7vszbNtlXlWTLt8tjW7fn9ejKWdem1dHVSp2Y7JCPU6M35
njO78Hv2ZMxf77nq76duzd6ajJLpi75KH/Xk9+3JcFrrd6BdTe9meyTjitGQ
rmKj/vzePRlv37ufHFWm02y/ZIiWxPybd0WX378n41B1uu6NS3rNDk3GgcaQ
iMUl/PeFI5Ox6PD39ke6DGt2rCpf8sm+bluH8/v4ZBTcPme79t3IZkuTMdnh
0rgkGPJ7+WQErto+5NreMc3enQz9p31lwzqO4/fzyZgxpd/yYQnjm52umtet
a78G6E7k9/TJuPn6xTfRbaNmH0vG6GzX9EuBk/h9fTJe9eihZjJ/SrOzklH4
6X21i8FUfm+fjE5p7wY+7mfa7EvJmJL5ZGSdBPz+Phlta3Ry/dKmN/tGMiYK
28hfXJjB7/GTMWjS78B5ZTObfS8ZVl27Le3UaRa/z0/Gpo7Gd7fMm93sJ8k4
sn1Ly8OJ/PeXS5Lh2MvESeutebNL/w9X9xpWY/e9Dz+VZB+SdCdRSEJIpZJR
kiRJkuyTkCRJSCVJklSSJGvX2q/VEhISkiSE7JOQhBCSpJKE//X81vk9jufo
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
tcQ1aFMlHM6hg7+iWjVdkecbxaGg06dNjU/BMRya9Gnvyih15PXGcUh/vJNZ
gQecwCGf/mZvQ/6X75vEfN83xag5r+BUZj+HrvWaNhp5vekcalw8wGf8NjiT
Q8vvRjz6fhfmcGjXhmsFY8Yhr5fPoT01v9+MSoPFHOIVfGPn/YXlHOKG3eQe
CEI+bw6HuhWGvj1ZAedyaN+rXasFZsjjPcesN3N+cMFauIBD7g98+qlvggs5
5HhB8cH1f+8v5lA4Z9aGkUn4vlIOpVm9yz71v3zhMg6lTHlaNuwFfm85h6a4
715sq/hf3jKHDn+0vD+1BOdXwZyf6MSqPX9RP1UcenJP/mLGENRzNYcSs/rr
XJ6H+6KWQwlthzepPkq0/z/XccjQQHH3x6YCpes5ZO3/Xs3N+ZbSDRzKa5Wa
JHo/UrqJQ3Mla7+bjHymdAuHdvavN2pvq1a6nUO3LYofTV/7RulODm1t7bgx
fm6d0ipcMpjEquoY91FpdS7N5c310NP8rLQml/nzrvXED28alO7DpfFnbjJ/
O/6mtBaX1H6PVT274LvS2sz3dd/t4Xi/WWldLp3Rl/SYsaxFaX0unT04032t
SpvShlxy9Pw3pu7GT6WNuVTfy61519lfSptw6T9/6YRbD34rbcYl77Oxw28P
/6u0OZdu8VziIxaqzPg/W3DJ6tDsocKz3ZS25tLikzcrTpqrKW3HpbLBY+Pn
3VFXmrjUFu31LH63htJOXBJ8GfVb6K6ptAuXlpROvjlsai+l3bj0Z/zlZMXE
Pkp7cMln4q0ba2z6Ke3FpW8b/9WmmWgp7cOleFHKy39WA5RezqWv3w8H3J4z
UGlfLkm6j10oWD5IaX8uzfB7+Yq7WVvpAC5JI7jrJ8UOVjqIeZ7Bb45huo7S
IVyK6mmXsUsyROkwLvWcYTxVka+rdDiXhklYHN+yoUpHcenV36s5hS/1lI7h
0qbbdRunN/+ndByXNDW23D3bd5jSCVwaIHap0jM3UDqJS28yQ3etXjZc6VQu
+b5+PI/jYqh0Opd6JBw/HfEJzmTqQ+vG6dLUEUpzuPTB2cWy1H6k0nwu3e+z
4H7mD1jMpfQZcyxsThspLefSdierjTu2GCudw6URr/fcbZ42SulcLp0M58QN
0xyt9DkutS/t0LV6CRdw6d/h1F7eeWOULuTSls0r2iKTTJQuZtbn3z0jN2Cs
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
Nl1s18X2XUxd7NjFTl3s3MUuXezaxW5d7N7FHl3s2cVeXezdxT5dvLSLl3fx
yi727WK/Lvbv4nVdHNDFgV0c1MXBXRzSxaFdHNbF27s4vIsjujiqi6O7OKaL
Y7s4rovjuzihixO7OKmLU7o4tYvTuji9izO6OLOLWV3MyaarCUOWfrI9Yvd/
5nUxv4uFXSzuYmkXy7tY0cU5XXyqi3O7OK+Lz3VxfhcXdPGlLi7s4qIuLu7i
ki4u7eKb2dTmaNCj5jlH6bIur9/p8np5F9/PJvcp36O9OIFKP+zix11ckU1x
B1Ro1LLEwv9zZTY1f0k+9i0qSOmqLn6RTfeSD/fh9vmo/Hx1F9dk03QH24Cc
sx+Uru3it9nkPabC90AIXJdNGTc+i4Uy+EM2PWVzEh5uh+uzaYmZxgmH3fDn
Lm7IpgHvDIZ+uwM3MvOwvizs7xa4qYubs6lEd9/79rlwSzZ1Khp7BHrBbdkU
1PwsV+35e6Xbsyk463Xyu7I2pTuyqfToRvb1RXBnNu3TqLK/EQz/zaaZwwW/
VvrDKgo6GTpKjb0EVlUQ13fi4GRdWF1Bk8RHSkJUYQ0FbS2Zu+L971alNRW0
Y7pq9mrLDqV7KSio9tnY/77/UrqPgrK87EMzfsD9FPRqZvLuvIOwloLi9Uoz
z2+CBypIa76q1cu9sLaCdrr1/DrnyB+ldRSk2rR7aiUX1lWQz9edsXIXWE9B
T0TBdn0U7UrrKyjmjJP2s2+dShsoKO/f231pGbChgso1px0T/P6t9EhmPWar
lvOjYGMFmdrZsNT+dJv+fx6toOjLB5+Z+qgpbaKgTJOi1T2sYVMFRUzZoBXa
HTZT0Fftc0fnPVFVeoKC/A9lRYdJYXMF2d/vMXd3qrrSkxVkPG79mBGaPZW2
UJDlIaFj5HFNpS0VdMzG/migtobS1goqNbuponK9l9I2Cjrh3JnUXtlbaTsF
pS5xn5O3sp/S9gq6Fzt0rV0i3k8KogZWzUc7vO7I/L6KboWhvlpKOymo90aH
1ywW7Kyg2v+KtuY+hV0UlHJm9NgFIwYo7co8XzHn1rqf+D43BSWcMxeM/4n3
uyto2AmH6d0C8X4Ppp4G7GoPGzlQaU8FXW/ssb9+Kl73UpB7gOPi9bMGKe2t
oKPHlh3quVJbaR8FfVCRFL54CC9V0GUdxykDj+H7livo2h7tVXcW4fWVCkoc
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
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[
        Rational[1, 2], 0.5],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{30., 22.486284289276853`}, {17., 20.915342276494925`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"U Line: How the trajectory in each point of the space is affected \
by a block\"", TraditionalForm],
      PlotRange->{{0, 4827.}, {-0.00027049454285173847`, 0.05379936823652495}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -94.5}, 
     ImageScaled[{0.5, 0.5}], {360., 180.}]}, {}},
  ContentSelectable->True,
  ImageSize->{1000, 250},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.827939564566042*^9, {3.8279397267091165`*^9, 3.827939740015787*^9}, {
   3.8279398690935564`*^9, 3.827939894691439*^9}, 3.8279400436563425`*^9, 
   3.827940097245478*^9, 3.828093154353254*^9, {3.8280939874674096`*^9, 
   3.82809400121727*^9}, {3.828094325594737*^9, 3.82809434377381*^9}, {
   3.828106286413097*^9, 3.8281063497585564`*^9}, {3.828107359991903*^9, 
   3.8281073805371046`*^9}, {3.8281077464838066`*^9, 3.828107778437251*^9}},
 CellLabel->
  "Out[189]=",ExpressionUUID->"f0af3729-72a3-4e0f-897a-5103192d77ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"ut", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"3", "/", "6"}]}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<U Line: How the trajectory in each point of the space is affected by \
a block\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.827931363234518*^9, 3.827931373532263*^9}, {
  3.82793148128053*^9, 3.8279315040468054`*^9}, {3.82793902152852*^9, 
  3.8279390217423973`*^9}, {3.827939052810627*^9, 3.8279391085483737`*^9}, {
  3.827939151744929*^9, 3.8279393554292574`*^9}, {3.8279394812297993`*^9, 
  3.8279394814816527`*^9}, {3.827939563028631*^9, 3.827939563549721*^9}, {
  3.8279397250004272`*^9, 3.827939738394328*^9}, {3.8279398672587667`*^9, 
  3.827940040200597*^9}, {3.8279400896762457`*^9, 3.827940095657195*^9}, {
  3.8280931519468083`*^9, 3.828093152040538*^9}, {3.828093202504613*^9, 
  3.8280932028442774`*^9}, {3.828093984293871*^9, 3.828093999563989*^9}, {
  3.8280941336139965`*^9, 3.8280941776646595`*^9}, {3.828094277809105*^9, 
  3.8280943083380423`*^9}, {3.8281077913145757`*^9, 3.828107794927498*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[191]:=",ExpressionUUID->"0dee7d21-b501-4b82-8c96-053710499d60"],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1:eJxM3GlYje0bNvyFkITMmZOQTBkL0Y4QQhmjEEUZormlcTXPtVqtKVNFyBxC
NyJzMiVSiJKoFEII4Vnv2/5/tseXe/vdZ8d1XPt5nOeGD5eB67cv3tBSIBC8
6CIQ/H//bf5Vb2o14s6AczGhJvwfOGy2t1faurFTm6mO787mt27eXURrwfvo
wq+ms9bR3RBSZdPQ3m07rY0Ru+67KPvsoPuifkpn69q4YFoHfcuGddogjKJ1
cbulr2mPc2JaD6LWa4V95sroIfirmaE+1HMnrY+1kna5HXqm0gaoSh52zNV0
Pz0Ca77d6F6YfZAehT1u/oMvBB2hDeFWG54x/egJegy6dbYZkCU9RY/F2MaW
gwY2naHHwSXZd9KLuHP0eAyr7n1lxpz/6An40m5w9Gz9S/REdIs+0na00RXa
CCiznbLQ+CptjGPWXfJDaq/Rk7DhqmOXS+du0JPRYlawdrvkW/QUrHTWKusl
zaNNYBrnPis+I5+eijU2r3dpFt+jp6Hk9RyP+IEPaVPktxs0fPj1AhqoVrae
sbplYbNFQLvEpsigBY+5Ph13tQ8tjjvwhOvTES3RHG2g+ZTrMyAYN87SU1TM
9RlQ/knuWdfiGddn4pxWUkqd+DnXZ6J9a8GvCyNLuW6GynZnqiXFL7luhtk5
j9/sTCjj+izER6ndKz1azvVZ+HRB60WM4jXXZ+PQ6GXPa6MruD4b4zV3iX3C
33B9Dmbt/QatmEquz8Ful66DIhRvuW4O8fSTE04cfcd1cxSc/3zg1e0qrs+F
TG2jsWtdNdfnorTrUaNzvd5zfR42Tbtfcn1RLdfnYfjpCxsECXVcn4+C0p2j
1hR/4Pp8+G8JejFw2CeuW8DZanB+5Ix6rltgT6vgj6O+0YIFWHt0dUzUsc9c
X4Alo81ennH6wvWFGN16wh91g69cXwjr3+ntntbTgkW4YDInfVROA9cXQWd0
kc3KhG9ct8Tb0P26Ro7fmw1LdO3WPW+d2Q/+vCW0+/qqLR3a2OxcSyw2e7Oo
ttNP1lthd8jfY5f+0rBCzoY1P4O+/mK9FU4emduk+/E3663gLOnpNuZjE+sX
o82czW6ihj+sX4yJbfYFZbf4x/rFuHLfovtzDcG05vrFyPi5pVpbSQuW4I7O
jzuDh7VoNpagfP2O3I85tGgJfLU0Ny1a3pL1S2DtafjL6QstWIr6+wd6bJK0
Yv1StLNt3W/FRDXWL8WZe5N87F7RuUvR5dqmW5uiW7N+GTKnFd3YObkN65fh
7/c1ToM/0aJl+N7l5AWtjLasX4bYzL5+DhvUWb8c3aZvS+8+tB3rl6vuz5fV
Uz/QouVQLHt+/dt5DdYvR+yay3qSiPasX4Gj94Y+n2eryfoV+Ntxwh2diR1Y
vwKCueKJ47p3ZP0KDHlduND2Jy2wxrwR0lbvKjqx3hrLYyoEVU5arLfGrwpb
nwFv6FxrZJn3PbjErjPrVyLjbk33uHIaK6FdpvQssu/C+pUYsNhMNO89nbsS
igHfDH65d2X9KvSu3GH4TNCN9atwJLnNCa1EWrQK+YHfPh7R6876VVh78Obr
zIu0wAZWl/XmjV3eg/U2+CJZvs60gRbZQPeQztN6WU/W22CbIKx66xRt1tti
5/GfOSWVNGzxM+xxFytJL9bbYl6HlLz6mb1Zb4vZRou2n/tJC1bjzLTSIU/P
9GH9amSfuCt0c+vL+tUozx029uKEfqxfjSh/zdUX/tCCNXi67dqp5Pz+rF+D
8UtszB12D2D9GogqvEQHJ+mwfg1a9K6fe+oQLVgL+3NmDo7aA1m/Fh/itn4t
iaFFa7HviaBYs6Uu69di4fzVh/v70gI7NPW+86XfD1rHDsE3XV/reQ3i8+xw
5sn9tPmNtJ0dMnpZjtvjr8fn2yHwp0nsoDaDm51qh+VzfLf9TqRz7VAx8prp
9IFDml1uh/Dq4UGCLFqwDurWo1+tnTeU/ddhaJzyqlcljXV4tv/ZHetgffZf
hwfCg1N66w1j/3Vo65NgWHiHTl2Hmj7RWgfdDdh/HRQTHl2+OHA4+69D36JY
DcMntGA9XBLum/eIGcH+69HbYKBN4uyR7L8euu18R5xvM4r91+P+c3FR2l1a
tB6L7AJab5ONZv/1kFekpeuNNWT/9dAZWbZu9G66fD0Sml61f6c+hv3tceNt
k9FqIa1jj7+1Vibp72nYY6+9s2bR2rHsb48rh141CUpokT361+7tOHHJOPa3
x/fjfzrHPKJz7VEqE/hrLxnP/vZYdr9S51MxLXBAxwkrx+vbTWB/B0wT5kSU
19JwQK7pyFmDfCeyvwNGmK7VbN/RiP0dkLZLrnM8nU51gNW6qkBdU2P2d4Bf
54dPRS/pcgfcj+ju9iZwEvtvwJjgbRM2D5nM/htQLui9etwjGhsQ55qmXCWa
wv4bcHPl5+A/40zYfwM2lGWd0a+jUzdgfppoc8vDU9l/Ay58f/J+3+Zp7L8B
6Qse7es/xpT9N0JX+9WtnU20zkb0Ud5I3rsR7L8R3iKzHMUj2m4jWjmPzDQ3
nc7+qh/ccO347ZN06kaUJm5fPHbQDPbfiBc/r8YeSKbLNyL6ziSRadeZ7O+I
/f9u/jIQ0zqO8GsU6sq1zNjfEeFRTQ8uSmk7R/xtCJr7vu8s9nfEkmtaWyIP
06mOkLcd+qbHlNns74i+pgXOhoV0uSPGvxxQmrJ9Dvs7wXhz+USHbubs74T4
YTf/nbhKwwl7Nda1eCucy/5OKPHM0gibMo/9VT8fHrSvSWM++zuhY3jp9nbV
dK4TZu2cObJloQX7O2Fnns3cxJsL2H8TfoWcip54diH7b8Kfco8+gxWL2H8T
5g3pObFsnCX7b4Ljih+zW+6iRZswcGfYwh+/6dRN8NirpZNjZsX+m5AfMah3
ritdvgnBZUafeohowWZcL5s7f9VWWmczUswix38YQ2Mz3jw+nj4w/3/9N8Pl
x9O8sOH/678ZzwYt3NImie+fuhmb28Jm7zDmzd2MBb+1lgh/cj/LN0Pt7rIL
am84T8EWvH8yOToo5X/nbwvCO/yp/WrN+4stqLt4rsPLDvz90G4LCvcZdOo/
ecjl5v5b0C4j79HXyybNTt2CZes7bnW9OafZuVtwYeWCAe53LJtdvgW1Uiuf
kAfLmi3YCpchM+w/la1qts5WGBq237jl89pmYytmJC4vWhS4vtl2WxHVxSKs
Y9sN7L8Vw+4O+HJH4cj+W3Hyl+7tRVM3s/9WLJw1ZsTY1s7svxUxxqOMj/7e
zv7OCHg1ojRd6sr+zoBF9KZSc3f2d0Zs/+QJT3t5sr8zbF9MsstS82Z/Z+x5
XLTqotoO9neGda+CwMyuvuzvDKNNrV5bGfizvzM2HW7x5gMC2X8b7rtf/tYj
Q8T+21DoLy39cCiI/bfhxuuf5f57gtl/GzTm9u81NjKE/bfBJWfqshaOoey/
DZ2uDU6ZPimM/bdhQ+X77B1/6fJt+LAx6N/0c+Hsvx0D6s+OnWQXwf7boXtR
Q61jE43taDn3VO99UZHsvx33rXWzZrSLYv/tSD40ffdnXzpVtW5YdC/zDZ27
HX2vVj70Notm/+1o1y5+Vto+WuCCpcp3M9RaxjRbywVmF66M2e9I67ggpahL
6NIS2tAFLZfYmMRYx/L9XODYICmdX0dbusCoR8TZsYo4vq8LfIQO/Xxs45vt
4oL1J5ML309L4Pu7wP7qQelKHXGzxS5o/cpqX/wpOtUFcU1D5/VektjsTBfc
+ZO+ea6ahPlcIG+Y8f3FdbrABaPXeF59l5DEvC4YtrPSf8lGabPrXfD6x6GY
XrNkzO+KQnlC/joDOfO7Yu2GFb+k3RTM74ol07ruWt5Syfyu2GLrXOjxhYYr
Bh/Z5P34TTLzu6L70Eve1kU7md8Vne65vS2+uYv5XaEUvF3aIWs387vC6lL4
e+HePczvipQpqVkHQvYyvysG9T9l4rU+hfldkfPB92xp31Tmd0XUl4gJY0Pp
Alcsi/+qlfeOLle9/+5+5kZmaczviuo3WVcG7KYFbrjbV1djyEdayw3jXOJO
NUzax/xuWNHZRW1GIG3ohh0W37Re5tBww74hM3Uuf6Mt3aD2n+NeraH7md8N
t+rrrtospl3csLWsy7ixQlrkBl25+y+bZFrshrNuj/oePUenuiF0Z1BFTQGd
6YYhae/cH1XTuW7Ibd3fuM0/usANTSlvvvfqls78blDUH3GP06fr3XCyj1v+
AxNa4A7RYMuu461oLXdM2OuQ8nkDreOO2ssd22n50obu+O+C7aJFYhrumF5/
NMn6AG3pjth+V1qk/kfbueNPemkP/3u0iztmj5kxdMpLWuSOFg0aWwbW0mJ3
6M+rChJ+o1Pdceds9KWo33SmO3osSOmc1kTnusPq7/k9nRrpAtXz6ouPTvzw
v/zuEORI1ilf/C+/O3Y0Fux4f+1/+T2QUyOVY///8nvgbuCAJa/8/pffA898
p+9cbPm//B5oYTlnr3P//+X3gNm/4zP0/zcPSw+UPzA/nnLif/P3wL+Puh36
u/9v/h44f+HOx7FG/5u/B8bP+k/tSRPPj9gDDX81Q6Ju0akeeJHfvUKhoDM9
cOCGb5fuHnSu6nlTvETP7OgCD6QZdKgdYE+Xe8D9YInmBBFd74GTl8bU3LpE
Czyh9uSrRlpfvo+WJ6LuTC+O3UfreOLNWb8h9v83vydWe72cZjD0APN7ouZa
/Z1RQw8yvycWmf52bmt5iPk9MUnPeXpUagbze2Kt7oD36T2OML8npmWLx889
eZT5PdGiZaCF48bjzO8Jz6GeB7oZnWR+T2j/ts3rGJ/J/J5otfv99AWRp5jf
E/uqhL+6RZ5mfk8MnGV6YVfMGeb3xOvgdYYBiVnM74V4r44DTijPMr8XbA+l
z1uVeo75vZASVL6m5NB55vfC2IVFdZIT2czvhQE/tEQ/z/zH/F44X7Fe6HP+
AvN74bTWnGkh2ReZ3wvTsp5VOp+7xPxeqDh0Z8jtzBzm98J4t1Oblx+6zPxe
+KOXufRz8hXm90KHyzHlc81ymd8L6wrc/Y7/Rxeo+tkOvj5t5FXm94LVxr9/
9FLoei/0O/h+V2Kna8zvjVYH9kTlBtBa3tj4d5d3Yx2t442hx6S3olZdZ35v
WL9+0OrObRre6N/2Zq72hBvM743742Rjc/bRdt74NfmzTrHWTeb3hm7i5y8B
gbTIGwFt5qVmf6TF3qj+WtJFuOYW83vjdcPiMYce0JneeCZccMPA9Dbzq/rN
sU6pPEkXeCNv3pp+53TymN8bD5Q69sGJdL03wnfmGo9ueYf5hRC2dVLPcKO1
hMh/0LJnaQWtI4TJGLvTtxbnM78Q+n1nOW+/RkOIhqSBA8vH3GV+Iap/7hw/
OI22E6Lrgqrh87XuMb8Qxwf1br0mkBYJkf1bu43TR1osxF2HP6tdV99nfiFe
mG/QC7pHZwqxxCmweNeUB8wvxFYdzU03jtAFQqCmR8nvXg+ZXwh1v93OU6Po
eiHc2zv3kjbSgh3YHVHb8GlcAfPvgEH1nkcRW2idHeiSsm22+n7acAcKt7h8
cnxOYwc6etsV7un8iPl3YHyLnMZUc9puBwJqDuzZHEi77MCVFa0zf5ylRTsQ
NfnP8Hl1tHgH3rS+1n6rbiHz78CDm+5/Xa3pzB3YcvvGPP94Olf1PEev+fdv
0AU7MLHXkpeRv+nyHbDcO+ni+7GPmX8HnJ8fPmywhRb4YKxRjrlPOq3lg137
fr9rWUbr+KBkeiebt72fML8PuliFR0+2puED7UNx6l0VtKUPzlh9OuBZTNv5
oN3xzQPW9ipifh9c3fMp84otLfLBuuIlE3zTaLEPHt99ecy+ik71wcz/zgVY
jXrK/Krnj5q/qLsXneuDF+rXhKGX6QIfTLqufdanbTHz++COqdP2Uku63ge6
B75HyHfSAl+4ZJdLd1fSWr4oS/7YVDWqhPl98dF6SCvvHbShL8I+zdg4/wYN
X4wSfL6xqdMz5vdFTeyDtiWraDtfeL750Fd2kHbxRcwe06cZX2iRL85F7t/e
2fQ58/tCkp6COzF0qi8cwt8OzCuhM31xz3+OdqshL5jfF9077XXc6k4X+KLf
VqOlDbl0uS+k99seiuxYyvy+aLzf17W7LS3wg97XqyfDDtNafjgx0d78xnda
xw+GuxZ/uzzzJfP74ecLSe1aMQ0/HOjX+tneUtrSDx+r3fYF679ifj/c13go
1PKgXfxwJHVciuUVWuSH/MRp0Qs1ypjfD98DoK+9jE71Q3Zw79CcFDrTD2Y2
Eyctfk/n+kHrYnGud+9y5vdDyFgX4+emdLkf1oxPrbHfQNf7YaflaefhMbTA
HyFls7rNPkVr+SNr0pDW94tpHX+YzV/QVPKXNvSHff+78B3ymvn94SApGJK7
kLb0x5j/Zhuf9Kbt/FH+O76LRRrt4g/hj3p7+V1a5I8ZHc52iv5Oi/3RtL9P
zADdCub3x6Rr6mfnL6Qz/RE0Ni/xrw+d64+pKRPU9DLoAn/McykbkVZEl/tj
welftTat3jC/P8Z2a5c2bQwtCMDrGcufjVtLawXAOCfwvEEcrROA7t2invW4
SBsGoKjHzIxP1TQCkPXD5OrJHpXMHwDTGTvzlpnRdgFwyYr+UeFKuwQgZOIO
T9sUWhSAj6O+7rp3jxYHYOl9DdGMX3RqAKbtCTZ7MvQt8wcgeMPsGOUyOjcA
b49e33UghC4IgGDRn6OdT9PlAbg1coxDfTldH4A/LwbWWGq9Y/5APG7Zp/80
0FqBiKywlVx2oXUC0f+dyO9JGm0YiMK6CbMDHtMIhFVjwO+zrauYPxBSz6PX
XYxpu0AkGEbG7N1CuwTieZ/wGcNTaFEgpq//Mb7lY1ociBO6+cbt2lYzfyCm
Wsr/DJ9CZwbCzmbdhZXb6dxAVDvG7AjfTxcE4ozXJOfDxXR5IIzPtvbKaV/D
/IEQHTaryzWlBSLIH421OetOq4sg9na0SzlEa4nQufMxeeQLWluENqv9Pwd0
es/9EWH5M/11spm0vgim0T/7vfSmDUXombsq2/UYbSzC12Vzrzi9piGCsKXZ
+8c9apttLsL5Vef9r1rQliIU/X63ekoIbS3Cwf+CKmZfoO1EuP29q+a7z7ST
CB6XnQ72NKjjfoswdWPxrqfraaEI7eP3f9PeTYtEeHny4bCCIjpSBL2qlGfV
nT5wHiL8t95QOm8erRShV4LRl/JQOlX1vD//lcuu0BkiBA7J7mP9i84UIXvH
mcO9J3xsdrYI1v1yJhVtp3NFEFzz/xJ6hM4TIcq1d+/hb+kCEdZ2HaH/YMCn
ZpeIcCHo0EKfVXS5CI/KU4yny+hqEVZ/qh8zpYCuV71/z18jrreub3ajCBab
zebuG0QLgvDHoDb87nRaPQjnLts3LrCjtYKw8OLPnRMCae0g/EydqozZS+sE
YYXRhk3LLtP6QTDdsuWd7BVtGIQ4+9ahC/7RxkEwTlHa++h85vyDIPdT66o9
gzYPwi1907kDHGjLIMysXNkrPJy2DsLfA/ZuOEzbBaHoTm8f3KOdgjDju2Sc
9yfaJQjet4LXPe3yhfMPQsCU3ZMWT6RFQTiYVvDl9Uo6Mgiq2W0W+dNi1f6E
6vxnkEYrg6DQTX5TfoNODcKSpif3D1TTGUEY/+bP/ADNr5x/EFrtF0x0M6Sz
gzBY/vRi7FI6NwiPLd8KSoV0XhC6HinW2r6HLgiC2fOr75Zfo0uCUHLOziq9
ii4PwrrGL/0dOjRw/kEo986uTBlH1wfBo36a1+pVdGMQBiycE7Y3iBYEY71w
6/t1h2n1YHzbt81h/yNaKxit97j52fyitYOhY5vQO3DQN84/GLq3Cnf/s6D1
gzEoYNzRe160YTCc7MqeFabSxsE4s7PHGcFdGsF4/3SdcO432jwYroMjcvcN
+M75B+NZ0An/tvNo62Ccsgm86ulB2wUjdkmR4uNe2kn1PlMfVHvcoV2CscRE
r0KzgRYGY7qOVczF/j84/2Bk5b2cEjaXjgzG88iu/231oMXBGNm0/rB7Cq0M
xjVUbdiVT6cGY+7fMttX3+iMYPSsiygaM7CR8w9Ge80f7rEWdHYwOjX0aqj0
pnODkdT5+Ncx++m8YDg2ts3a8oAuCMbZoctmxvykS4JRUT4pIVrvJ+cfjO+J
GhYbFtHVwZjqMmeKtg9dH4wRM57UpKXTjcGw/mfYtuVDWhCCPSsWGkz5SauH
IMSx67VFg35x/iHYN71VL/MFtHYIDipCdxl40zohWHj+gMafVFo/BPcOfXC/
kU8bhmCDn011aANtHIKX2V+F6P+b8w9B5kvLGz/n0OaqdXn+g1OutGUIpp98
NcJpF20dgvHZkR59btJ2Idh+YGzRnY+0Uwg0Nlstc9Fu4vxD4GOTPa7TDFoY
Amneuw1pW2iRqt/x5e56MjoyBGVm34crLtPiELwNXLPwRxWtVL3v97QJZp3/
cP4hmBue/tVvMp0RgrjDbq3T7OnMEDwsawrMjKWzQ9Cz4lXU0bN0bggmDv6x
JekVnReCsNm9Iza1/cv5h+CAwOzuaEO6JAThgwflv7emy1X7sX9wzZ4gujoE
tg/GLbM4QteHoGBpxbGfhXRjCDx6d2uX8ZsWhMJe42XISr1/nH8o6nTi/3Vc
QGuFAqer5+Z50tqheGy4fFnIXlonFC9uBl+bcpvWD0X1tPay959ow1BMdu1j
MUNTcKV5/qGomG30yV+HRigq3brs3zueNg/FmG3/me4ypy1DYZDX5utmW9o6
FHraIT9bu9B2oTiYuffhhhDaKRRr9ztOC5fTLqGoevN5n8NhWhiKnff3Nvy7
SItCcfbTmDzrB3RkKM7/mdzftZwWh8Iy48MPiy+0MhRfEx5++dyqRbNTQ5Ha
Y/JOx+50RihWLyppc24InRmKCwfS278zorNDIT/xBIK5dG4oZo3Rfaixis4L
xaK8D1M0ttAFoVg1O2d/Cz+6JBTP+p1W/xpLl6uep3shpmwPXR2KdBND29sn
6PpQ+E0Y+PHwFboxFNEfJ74LL6AFYSi/OKV69WtaPQwROy9Ej/pCa4Uh99um
6Y0tWzZbOwx/bg3ddLErrROGqlMPuwj1aP0wjIlfsH7UBNowDN5C8ZxXs2jj
MGj86RkVuZxGGJK+bHw40pE2D0NnN52fD7xpyzAUFmo82xpJW4ch8tjuyerJ
tF0YNgtvD993mHZS1Qd3vjHlAu0ShgeVNsqifFoYhqP5uvu3v6BFYTAZe2ag
Rh0dGQbHg+qfDjTR4jBEe/VZMKNDK84/DHfv3lpe1o9ODcOM0t17/EbRGWHY
fvf+0l6mdGYYYpNu6Z5dRGeHYfWHGcMX2dG5YbDs9XFOlQudF4aYaftc/IPo
gjBsM93fsouELgmD9vIWFQf20eVhuOHZvXbKGbo6DDknLfyKr9P1YWi7ovsc
3yd0YxgMjmpHGrylBeFoe3nk9OpvtHo4Nnu8qzjXRo3zD0feI6sKZU9aOxyy
wsH5Cfq0Tjg+pz7vtXsSrR+O7E5r3ufMow3DYSp9erjBhjYOR+ihFU+nOdMI
x6nOXWQ7A2jzcNT7Z+eriWnLcNhq1q/ekUZbh+Npf/cXDadpu3BodjW38bhB
O4WjQdG29bci2iUcg8XZCo8qWhiODgj2/NJIi8Ixc8++Zds0WnP+4ZCr2zjU
9KHF4cgZIlLfOJJWhqO/671LVdPo1HD8CT4708OSzgiH38FBF7uupzPDMamm
se1Ddzo7HLXpfaNPhtG54diTq2l9RUHnhcOkbujP1kfognD0+l00IPoSXRKO
WQfExose0uXhqPoQ6raigq4OR9D8odn7v9H14cicldJ2XLs2nH84rvbQNGvV
jxZE4NzuqiitMbR6BMIGOF5fNovWisDi4qAN91bS2hGY7DP4w5ZttE4E9nu1
WWkQQutHYPtOWfk/BW0YgdOjp7V9e4w2jkDO5I5tnlylEYGXRk8v5j2lzSNg
HNv9Tm4tbRmBC4Om+18QtOX8I2DXSkNytjttF4ElS469O2VAO0Vgwa/jZzNN
aZcIPJ3d+9mZpbQwAi6XR57J2USLIvDlSv6RRwF0ZASurCuRfkuixRE4u/2x
zojDtDICFUtNH+y4TKdGwEfeanPFYzojAv0nFn91qqEzI6B7Wtm/0z86OwJH
9Qb9KOqmzvlHwLu3+FyOAZ0XAUG9sd1N0AUR8ErYGF+7nC6JUN2nQu+RznR5
BJI1qjpHhtDVqvziIet/JNP1Eah98f23VybdGIHg33H5LW7Tgkj0uCg7In1J
q0eiRPtBuxENtFYkEpKdZt7SaMf5R0LX5VnTuoG0TiTGj3p49q8RrR+J0Umr
7PcspA0jUTDg1UhsoI0j0bZD/Pr3vjQikbJxW0CqhDaPxP0+maudDtOWkQh6
2Lv1vFzaOhI3Xe8oFxTTdpHo0zsgwO8j7RSJUzXFxmWtNTj/SPi27Tzfvx8t
jIR4WvZpmwm0SNWv70ajgAV0ZCQqDFI/v9tAiyMxaV+2pTyAVkbi9xOTgFgF
narynS3zbmfSGZFIPjP85Mx8OjMS83dXTWh6Q2dHQm9Ccu/aP3RuJAy+rFfT
0G7P+UeiMmeyutVYuiAS51zfrD1vQZeoXBXZy8iRLo9E6+zBq+4G0dWRyLQZ
ru26m66PhL/B1+NDztONkTicLs2rfUQLomD/Re/E1TpaPQrlw7+5HGmryflH
4WX9qMmHdWntKNWfZ/JfXJtK60Thd7L0b5M1rR+FOIcv7dd60IaqetmuaZ8S
aOMo3H4ptz1zlEYU2j0V65y6TZtHQXl2zZ26N7Sl6n3GJOc4CTpw/lHQHbS+
cnA/2i4K8nsmGXqTaacopEXJlzmsoF2icO7BwysVHrQwCm+Hme/fLaFFUdC/
teFdXCYdGQWnXDOHkw9ocRRKR1i1/VVHK6OQfUmou7F9R84/CrXZpT1qh9EZ
UcgX3dQPNqczo9CqvEXbwY50dhR2n21h+SCMzo2Ctp3vYp90Oi8KXmU7vg25
Theo8nefLCx8TZeo1qW72vgLOnH+UbhaltVXfwBdHYV4T7UVxVPp+ijM+4Ps
RFu6UbW//v2Va31pQTQ0e/r5zNtJq0cjd8BW2PxHa0Uj+56rw+4SWjsav1JS
P3ZvpHWiUT3/Rca79lqcfzRW9Ns37k0f2jAaA87o/2oxgjaOhknPOR1mmtCI
xv4P4roDFrR5NM63vt9n2GraMhpzdtXm3XGmraNxI25cUUgAbReNocGhNosT
aKdoRDxOMTZMpV2iUWd9pk/PU7QwGssW22xscY0WReOLXdeL7wvpyGg8WdCz
8uEbWhwN3xdVx0800MpoRLZqOz+sdWfOPxrRndX+Lu5BZ0RjW+XEDtpD6cxo
FKpJxz41orOjsfPhqcZ4czo3GhdXTDAzW0nnRcO1zenePzfRBdHo/cDH6ZQP
XRKNe+UGGS4xdHk0ftwbUDBpN10djXGdQ+WdjtP10YiVnjr7NYdujMZHa4V/
1QNaEIPu1h5Pasto9RjMhe2kFp9prRg8sGj9ckjLLpx/DASv77S27UrrxGDs
072rU/Ro/RicXzpp0KcJtGEMlhgtqDGfQxvH4Piz8SuOWNOIweeCw/u1NtPm
Mcj06z1nhy9tGQPJiYPPX8fS1jGwKbILM99L28VAmjhx0rGTtFMM6vYkn9G8
SrvEoGev3BubCmlhDKY8ab38+htaFIM+eZ+/9PpGR8bg77Qtm7e36cr5x2C4
S5uHN3vSyhh0vRMXqjOMTo1Brk70/JDJdEYMDh+JMvoyn86MwYmAfS6uq+ns
GAzTWjNBbTudq8ojnhpxXETnxcBq5dAl2yV0QQzORmb7zUunS2JQnVYYZHqO
Lo+B00Stcwvz6OoYCEcFtRc+p+tjkL+mssPFOroxBokdCib2+EcLYiF0CtwZ
0bkb5x+LI20cyzT1aK1Y7A83r9k/kdaOxa0is9C5c2mdWMjqrjr8sqH1Y3E5
WJ6StY02jMWdqS+6eQXRxrHIWFQiN5HSiMWB144n2hyizWPxqP6Bd+F/tGUs
epWeH7L3Hm0dC8XfD4c3ltF2sRhu/Xyz/hfaKRa+JRenlql15/xjsef9LsPI
nrQwFtE/Dg0dYECLYjG317mqFBM6MhY/bsqfqi+ixbG4bTOwn/U6WqnKc+x6
faw7nRqLsX98TA6F0RmxyD4z7PohBZ0ZCz3N/2ITDtPZsZiptVpj3UU6NxZr
yx/07n+fzovFy4gx+/Ne0QWxCHnywNm+ni6JhbNsSfsvLXpw/rFod+PmGmFX
ujoWcevMlvzUo+tj0eej9gnviXRjLBZoeVp/m0ML4lBxsf1Fj5W0ehwKn8sn
/NhMa8XB6fVhT38/WjsOcb8bn7aNp3VU689m7lCk0PpxMFzvETPiFG0Yhx6z
GyJuX6ON49AYW7Rw0xMacTDfvG5O13e0eRy8st373P5BW8bh4LucDaHtenL+
cVi7YN4Yiz60XRyOdLSp6zeSdorD6siLHX5No13icCrj5Z5yS1oYh+FX9VIe
radFcTAeMPrRPQ86Mg5tooduKgynxXEwXbE5QvUXYM4/DnPt1Gb+OUKnxiEv
9fXiQTl0RhzONlgZL3tIZ8ahbOyMysTXdHYcJvT7PeDZVzo3Dg89QsQGbbQ5
/zi0K5e1CNemC+LQz6HattaALlH513WbVVPp8jjEFKlNfryIro5T/fntufry
9XR9HJaH31lZ4UE3xsHS59Rx7whaEA8/6xN23XfS6vFwEnn3u3CM1orH0tJO
exyu0NrxmFlsvalrIa0Tj6Lpau9uVtL68Yjp/nCh7w/aMB4XdJ/uH6fRi/OP
x1Wjwpef+tKIR5rASj1zNG0eD1nvFznuM2jLeHRVJphMWUZbx+Ph5pjxbZxo
u3isf7F8wBMf2ikep6wG1KXH0S7xKN7XaYgwlRbGY8yAiT4LztCieGSElHTR
u0VHxmP/741Dmkposep9x09PKKqllfHYvX/AnZN/6dR4OC8Kjonu3Jvzj0fT
sYBBG/TozHgkrEu+ZWpEZ8ejz5EWgt7z6Nx4mFll3f1iS+fFI8ooxCF/O10Q
j8+OS3qlBdMl8TAfYhLgLaPL4zG0wjxuYQZdHY8FvsJrQy/S9ap5uhjNUXtA
N8bD4ZOl+dtyWpAAK11d+/yvtHoCnGzbXz/dpg/nn4D2L+4Y7O1FayfApvZO
VswIWicBmZV3VvuY0voJaBDOm7lpMW2YgFfO70UrNtDGCciQnqmcJaSRAMdB
3UvHxdDmCeg18+Nonb20ZQJifEZ3aneKtk5AzqCrIz9ep+0SENRyU87Dp7RT
AgqjNXYcr6FdEtDtYpVtRBMtTECbHikz13Tqy/knYOyX1p3G6dKRqvcbtelQ
mwm0OAGhRse3PJtDKxOww6yX9NgqOjUBX872aydypjMSsH34mIuLRXRmAn7f
LdoxKInOTsBTybigzwfo3ATM2bG75GI2nZcAga5/ctBduiABlxIezp7xii5J
QNE+t+t/6uly1f4YX7yV1aof558Au8w1i5x60PUJ2Cvtu7/nMLoxAVrPO9y6
PoUWiBFjouuwdSGtJsbEVxXBWutodTEu5lTPz3SnNcW46n3O3iKc1hJjpfv3
4rdKupsY058e/OR/lNZW/fzHftN6XKb7ilGTObtFZgGtI8ah+YqvFm9oPTGc
CxPbfPxG64txrGjoP4l6/2aPEMNiYs6wKX1oQzEKd4+wfzuSHi9GpbnNEzFo
YzEGjH59e8oS2kSMLgYlAZUbaIjRouP97tFC2kyM+RK9ywYxtLkY8oGBHa7v
oS3EGD6l0+rFmbSlGM8iPhQ9vUYvFWPWz6OfFhXR1mK4+2hXXqyibcUYd+6Z
qNcv2k6M7vMt/J00BzTbQQzx+7zyjP60kxity+zuPzekt4qxWXJpkmAm7aLK
01T6rM8y2kOMPwv+/BntSAvFqLpf4DptB+0nxj9LsxDzGFokhq301ATLPXSo
GKZb+11YfpKOFMPRsuqFzVU6VrWuefT+2se0WIx31xyrHN7SUjEOD7wYsfUH
rRRj8JnF5RfVdJq9W4wDBaOrr3egU8WYNHqwzcMedLoY2o7df7waQGeIoeG5
xPSrPn1MjBPS7880x9KZqv291aQzYgqdJca6Nfm7rMzobDFSZFWP/RfQl8SI
rv2y5dRyOleMjp9/631YS98QY8GB48oxm+g8MZ4f8jsT4EbfEyMy/t34J750
gRhveu++MiaMVp28lNbu0xXxdIkYbe+9dFdT0qViRLn1PiZMo8vFyNnyr+nL
EbpSdZ7/djnulkVXizH+iXP7Hzl0nRgNr4ecCrxN14sxKHv50vaP6AYx9osW
WSqf041iuBZVZA2upJtU59OzRf2pD7QgEbUT1L5M+UGrJSLOwPv0NcFA3v9E
xJzuoT9Lg9ZMxKD3n05c60prJeJi9TbNKf3obol4vepswYkhtHYi5idrOA0w
pPsm4oiZ2oCESbROIk48Gv7w3wxaT/X80ocP3Sxo/UR0KGh6VbOMHpEItf1p
MzaupQ0T8XnY9uAaJ3p8IqrvdkjwdKONE/FB+HZzez/aJBENV2+8OBpGIxFX
Jg5Ts06gzRKhpfXqhVYybZ4In7Fzvz/dR1skYsaKmiVHjtGWiehjaHI46hy9
NBHjs4tr3HJp60Qcszr4zCGftk3Ed+s/D1c/oe1U+9vWdsnqV7RDIorzc8X2
1bRTIm6l9pnu8oXemohJca+jQ5pol0QYaPsc2NNGl/c/ETPbL+t2WYsWqvZr
le3fN71pv0Q8v2U/q+NgWqRaf6RXPXk0HZqIVvO9ZjlOoiMTUbFypHHiTDo2
EQd/dP1+bgEtTsTimXOnFq+gpYkY/M3q+ud1tDIRR0dktW69ld6diJ1dnO06
edGpidjmfFVbS0SnJ8Ih/trG1tF0RiK6T50v/5BEH0uEtTBvyq09dGYiGtfv
/Bp3iM5KRNvP3SbMPEVnJ0Kwpq/Puwv0JdX6qGNvhDfo3EQoP+359Ps+fSMR
P5oaH7kU03mJyFZ7c6qknL6XiNO9niZMeE8XJCJLzU0R8ZV+kgiXoJXbHjbR
JYl4sjuiU8c2g3j/E7HReWWQWSe6PBHTxrSBpzZdmYi15tZe+wbS1YmwMt+/
74EBXZeIV923r/s9jq5PxMAV3RwNptINiXj3ffoTm9l0YyI6fRoRnbCIbkqE
RotG7RvWtECCWtOpdT/W0WoSyJbHjDHYQqtLoOaLfys9aE0J0j60qgr3p7Uk
WLN2xtXMcLqbBGVPjQxKEmhtCQa8PTb8j5LuK4HFhV6/+++jdSQ4fcPztslR
Wk+Cg6cany/LovUliLDpsNYphx4hQetP8Z/db9GGEjw4uLDJ+yE9XoLgC191
PUpoYwnu1L7vuOk1bSLBuqMjcle8pyHB8ZhxetO/0mYS9GhZ90OviTaXwKD4
4o0WrfV4/yVA+5pRxR1oSwmc4dA9vQe9VILdm+u6OA6grSXY9PLntv76tK0E
vTWOZtwxpO0ksMlZ2W7TJNpBgmPdw+z+TKedVPlSvN9GzKO3StDq86jsdkto
Fwk0GnJPBNvQHhIkhoYO/mpPCyVY4o01NltpPwn8M31fX/SgRRJ8jsq/2s2f
DlWdh2E1Wo5hdKRqforz8VlxdKwEdebpJv9ktFiCzYtbysz30lIJ6vsut5Ic
pJUSfCuz7lN6gt6tmufgkZLB5+lUCUri8u23XaHTJRhZvqcq6zadoZr3/k2D
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
rkOnKnE/c/zzBD06XVU/9bJbz2F0hhKjK9dZpYykjykxs/elCUPH0plK7A3U
GHhyIp2lxJp4t1MTp9DZShytfKp22ZS+pETB2yWzZ5nRuarzPbPwwD1z+oYS
599U6i1dQOcpYTWop+ULK/qeEkO+RhmtX04XKJG45/zAmlX0EyW2OWa9dllL
lyiRnhSFn/Z0qRJml55eDHKiy5XIP3OnnYYzXanErrlVehJXulqJEPOX73p5
0XVK1EjFpWk+dL0Sk2vm6xgE0g1KjOq5qOh0CN2oxNfFgiNTIukmJSzGXbx+
I5YWJMNX8+CWBYm0WjLyP6YVF8lo9WSMqL6etGYnrZkMrbBtGVV7aa1k+LyV
pbvup7sl436ls8vvQ7R2MloGx5uEHaP7JqNDZu+dnU7ROsn4PMJn1s6ztF4y
dsT1Mxp8gdZPhuD//TUiGUYjxxvZZUty/n8bJqN12Min+1+dbvb4ZFwaYqy1
yv5ms42TEZ95tsfTwY+bbZKMl17vi3rqvmo2kvEo2P3xhudvm22WjKqAnlae
3z802zwZ074FVtif+9psi2TYvlitIdH92WzLZNQHzvRePfNfs5cmI+PK+5Pe
HVvxe3XV/sz53n7vszbNtlXlWTLt8tjW7fn9ejKWdem1dHVSp2Y7JCPU6M35
njO78Hv2ZMxf77nq76duzd6ajJLpi75KH/Xk9+3JcFrrd6BdTe9meyTjitGQ
rmKj/vzePRlv37ufHFWm02y/ZIiWxPybd0WX378n41B1uu6NS3rNDk3GgcaQ
iMUl/PeFI5Ox6PD39ke6DGt2rCpf8sm+bluH8/v4ZBTcPme79t3IZkuTMdnh
0rgkGPJ7+WQErto+5NreMc3enQz9p31lwzqO4/fzyZgxpd/yYQnjm52umtet
a78G6E7k9/TJuPn6xTfRbaNmH0vG6GzX9EuBk/h9fTJe9eihZjJ/SrOzklH4
6X21i8FUfm+fjE5p7wY+7mfa7EvJmJL5ZGSdBPz+Phlta3Ry/dKmN/tGMiYK
28hfXJjB7/GTMWjS78B5ZTObfS8ZVl27Le3UaRa/z0/Gpo7Gd7fMm93sJ8k4
sn1Ly8OJ/PeXS5Lh2MvESeutebNL/w9X9xpWY/e9Dz+VZB+SdCdRSEJIpZJR
kiRJkuyTkCRJSCVJklSSJGvX2q/VEhISkiSE7JOQhBCSpJKE//X81vk9jufo
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
tcQ1aFMlHM6hg7+iWjVdkecbxaGg06dNjU/BMRya9Gnvyih15PXGcUh/vJNZ
gQecwCGf/mZvQ/6X75vEfN83xag5r+BUZj+HrvWaNhp5vekcalw8wGf8NjiT
Q8vvRjz6fhfmcGjXhmsFY8Yhr5fPoT01v9+MSoPFHOIVfGPn/YXlHOKG3eQe
CEI+bw6HuhWGvj1ZAedyaN+rXasFZsjjPcesN3N+cMFauIBD7g98+qlvggs5
5HhB8cH1f+8v5lA4Z9aGkUn4vlIOpVm9yz71v3zhMg6lTHlaNuwFfm85h6a4
715sq/hf3jKHDn+0vD+1BOdXwZyf6MSqPX9RP1UcenJP/mLGENRzNYcSs/rr
XJ6H+6KWQwlthzepPkq0/z/XccjQQHH3x6YCpes5ZO3/Xs3N+ZbSDRzKa5Wa
JHo/UrqJQ3Mla7+bjHymdAuHdvavN2pvq1a6nUO3LYofTV/7RulODm1t7bgx
fm6d0ipcMpjEquoY91FpdS7N5c310NP8rLQml/nzrvXED28alO7DpfFnbjJ/
O/6mtBaX1H6PVT274LvS2sz3dd/t4Xi/WWldLp3Rl/SYsaxFaX0unT04032t
SpvShlxy9Pw3pu7GT6WNuVTfy61519lfSptw6T9/6YRbD34rbcYl77Oxw28P
/6u0OZdu8VziIxaqzPg/W3DJ6tDsocKz3ZS25tLikzcrTpqrKW3HpbLBY+Pn
3VFXmrjUFu31LH63htJOXBJ8GfVb6K6ptAuXlpROvjlsai+l3bj0Z/zlZMXE
Pkp7cMln4q0ba2z6Ke3FpW8b/9WmmWgp7cOleFHKy39WA5RezqWv3w8H3J4z
UGlfLkm6j10oWD5IaX8uzfB7+Yq7WVvpAC5JI7jrJ8UOVjqIeZ7Bb45huo7S
IVyK6mmXsUsyROkwLvWcYTxVka+rdDiXhklYHN+yoUpHcenV36s5hS/1lI7h
0qbbdRunN/+ndByXNDW23D3bd5jSCVwaIHap0jM3UDqJS28yQ3etXjZc6VQu
+b5+PI/jYqh0Opd6JBw/HfEJzmTqQ+vG6dLUEUpzuPTB2cWy1H6k0nwu3e+z
4H7mD1jMpfQZcyxsThspLefSdierjTu2GCudw6URr/fcbZ42SulcLp0M58QN
0xyt9DkutS/t0LV6CRdw6d/h1F7eeWOULuTSls0r2iKTTJQuZtbn3z0jN2Cs
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
Nl1s18X2XUxd7NjFTl3s3MUuXezaxW5d7N7FHl3s2cVeXezdxT5dvLSLl3fx
yi727WK/Lvbv4nVdHNDFgV0c1MXBXRzSxaFdHNbF27s4vIsjujiqi6O7OKaL
Y7s4rovjuzihixO7OKmLU7o4tYvTuji9izO6OLOLWV3MyaarCUOWfrI9Yvd/
5nUxv4uFXSzuYmkXy7tY0cU5XXyqi3O7OK+Lz3VxfhcXdPGlLi7s4qIuLu7i
ki4u7eKb2dTmaNCj5jlH6bIur9/p8np5F9/PJvcp36O9OIFKP+zix11ckU1x
B1Ro1LLEwv9zZTY1f0k+9i0qSOmqLn6RTfeSD/fh9vmo/Hx1F9dk03QH24Cc
sx+Uru3it9nkPabC90AIXJdNGTc+i4Uy+EM2PWVzEh5uh+uzaYmZxgmH3fDn
Lm7IpgHvDIZ+uwM3MvOwvizs7xa4qYubs6lEd9/79rlwSzZ1Khp7BHrBbdkU
1PwsV+35e6Xbsyk463Xyu7I2pTuyqfToRvb1RXBnNu3TqLK/EQz/zaaZwwW/
VvrDKgo6GTpKjb0EVlUQ13fi4GRdWF1Bk8RHSkJUYQ0FbS2Zu+L971alNRW0
Y7pq9mrLDqV7KSio9tnY/77/UrqPgrK87EMzfsD9FPRqZvLuvIOwloLi9Uoz
z2+CBypIa76q1cu9sLaCdrr1/DrnyB+ldRSk2rR7aiUX1lWQz9edsXIXWE9B
T0TBdn0U7UrrKyjmjJP2s2+dShsoKO/f231pGbChgso1px0T/P6t9EhmPWar
lvOjYGMFmdrZsNT+dJv+fx6toOjLB5+Z+qgpbaKgTJOi1T2sYVMFRUzZoBXa
HTZT0Fftc0fnPVFVeoKC/A9lRYdJYXMF2d/vMXd3qrrSkxVkPG79mBGaPZW2
UJDlIaFj5HFNpS0VdMzG/migtobS1goqNbuponK9l9I2Cjrh3JnUXtlbaTsF
pS5xn5O3sp/S9gq6Fzt0rV0i3k8KogZWzUc7vO7I/L6KboWhvlpKOymo90aH
1ywW7Kyg2v+KtuY+hV0UlHJm9NgFIwYo7co8XzHn1rqf+D43BSWcMxeM/4n3
uyto2AmH6d0C8X4Ppp4G7GoPGzlQaU8FXW/ssb9+Kl73UpB7gOPi9bMGKe2t
oKPHlh3quVJbaR8FfVCRFL54CC9V0GUdxykDj+H7livo2h7tVXcW4fWVCkoc
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
       "]]}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[1.6]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
      1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       NCache[
        Rational[1, 180], 0.005555555555555556]], AbsoluteThickness[
      1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[
    Rational[1, 2], 0.5],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->{710.0000000000001, 178.18181818181816`},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"U Line: How the trajectory in each point of the space is affected by a \
block\"", TraditionalForm],
  PlotRange->{{0, 4827.}, {-0.00027049454285173847`, 0.05379936823652495}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8280941433787627`*^9, {3.8280941735168047`*^9, 3.8280941785988035`*^9}, {
   3.828094282224829*^9, 3.828094309014289*^9}, {3.8281077883322887`*^9, 
   3.8281077959699*^9}},
 CellLabel->
  "Out[191]=",ExpressionUUID->"61a9fd29-8f5f-446e-8599-2a6b7dedc350"]
}, Open  ]],

Cell["(Sum\.b2 1;;i)/(Sum\.b2 total) -> \[OpenCurlyDoubleQuote]Cov. \
Percentual\[CloseCurlyDoubleQuote]", "Text",
 CellChangeTimes->{{3.827930538577753*^9, 
  3.8279306017273755`*^9}},ExpressionUUID->"ba30ea82-eced-407f-8b14-\
e2092d733c08"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MinvT", "=", 
   RowBox[{"v", ".", "winv", ".", 
    RowBox[{"ConjugateTranspose", "[", "ut", "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.82783978821834*^9, 3.827839819133582*^9}, {
   3.8278398532080116`*^9, 3.827839855177882*^9}, {3.827839941625233*^9, 
   3.8278399462855535`*^9}, {3.827840033107688*^9, 3.8278400332815924`*^9}, {
   3.8278401813860345`*^9, 3.827840192517642*^9}, {3.8278402647881355`*^9, 
   3.8278402713263783`*^9}, 3.8278403173459463`*^9, {3.827840369449024*^9, 
   3.827840407559135*^9}, {3.8278404470704436`*^9, 3.827840470918744*^9}, {
   3.8278409907057695`*^9, 3.827840993631089*^9}, {3.8278425371809845`*^9, 
   3.827842571760124*^9}, {3.8278426439792547`*^9, 3.827842650536007*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[192]:=",ExpressionUUID->"c70e8c6e-6fd8-4332-a726-59b344ffd05b"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ref Type (1):  Perfect Undulator", "Subsection",
 CellChangeTimes->{{3.824905656399987*^9, 3.8249056625099897`*^9}, {
  3.825149882556616*^9, 
  3.8251498881347733`*^9}},ExpressionUUID->"ef70ef16-bbb9-43dd-9335-\
1b0808cb37c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpGet", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"dir", ",", "\"\<trajectory1.mx\>\""}], "]"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.8278306299408903`*^9},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[193]:=",ExpressionUUID->"1623f315-ff44-437f-bc69-964582aae034"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Mag", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"mag0", "=", 
     RowBox[{"idGenerateMag", "[", 
      RowBox[{
      "typeID", ",", "nPeriods", ",", "periodL", ",", "blockThick", ",", 
       "blockGap", ",", "symmetry", ",", "magnAmp", ",", 
       RowBox[{"magError", "=", "0"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Term", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"term0", "=", 
     RowBox[{"idGenerateTerm", "[", 
      RowBox[{
      "termType", ",", "blockThick", ",", "blockGap", ",", "periodL", ",", 
       "magnAmp", ",", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "}"}], "}"}], ",", 
       RowBox[{"magError", "=", "0"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Draw", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"device", "=", 
     RowBox[{"idDraw", "[", 
      RowBox[{
       RowBox[{"typeID", "=", "\"\<DeltaUndulator\>\""}], ",", "gap", ",", 
       "nPeriods", ",", "periodL", ",", "blockGeo", ",", "blockThick", ",", 
       "blockGap", ",", "mag0", ",", "term0", ",", "mode", ",", "subdiv"}], 
      " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "Solve", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"idSolve", "[", "device", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.824905703712673*^9, 3.82490573054066*^9}, {
   3.824905777862282*^9, 3.8249058598121243`*^9}, 3.824906565149931*^9, {
   3.824911513891982*^9, 3.8249115169289103`*^9}, 3.8249115786309843`*^9, {
   3.825148694579793*^9, 3.825148698049436*^9}, {3.8272433557828712`*^9, 
   3.8272433595996857`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[105]:=",ExpressionUUID->"e613e100-fc56-4911-a412-150419a58812"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Field", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"baxis0", "=", 
    RowBox[{"idField", "[", 
     RowBox[{"device", ",", "li", ",", "lf", ",", "lNpts", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"display", "=", "1"}], ",", 
      RowBox[{"oneplot", "=", "0"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824905703712673*^9, 3.82490573054066*^9}, {
   3.824905777862282*^9, 3.8249058598121243`*^9}, 3.824906565149931*^9, {
   3.824911513891982*^9, 3.8249115198519845`*^9}, 3.8249115820875573`*^9, {
   3.8251487013343415`*^9, 3.8251487040816617`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[202]:=",ExpressionUUID->"f04abf64-1f36-4464-82ee-a62391758bcd"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1:eJwkm3VYFF0UxkEFBQxQEKwPUBFEUJQQYy8HlBSVLukG6W6WbiQklVZaSsrY
6xikokgIYqEiInYQJt/M4j8+87A7Mztz74n3/R1ha3cduyUsLCzq7Cws1P+L
/5yILLb4Bz9WcmPZnXxly8cdCb5nNvEuo+zotI64yhrCkdCT/S0z6veNURys
8G59sSNxf9ktLbviX4zhC3rJ/9EdiS8bIxakHvAhzvtOe3ZYOhKFoztCTHg+
02AubEASHImeXM1PPDe7Gb5CZ31lhRyJSEaHw93i77Rq9SoBGosjsXZkeKi9
mRONe+FrR8cdiL66NzxnX32n8Z0fNNckHAj8ghb36OUapNExxapX7EAcnnIX
kWRPZNA//b1wiu5A+HWf3niQtgK18K9Ts7F0IMSW/6CXr2XB0yD23hkciOjj
YQfO6/5kCDnTUr2EHIiDxwsTrKUGafqZOnuDWByIev6jovrcrxiJ1x2GIsbt
CX5nnVAu0ynajTch/gmEPdFcL5ms9YagzazO2JhebE8YtdUwPs8SNHH5CkYu
nfz8ij72M5kLDAur65bFlvaEv7wKzWJZNyMr8eHSSrAn/g28KDmfzoZ7L0+W
1wvZEy+XXVzZk/WNsfD0t3obiz2hdjgm2eDXLE2GnecjHrcjgmkxn/q/z9Cc
9+xI6yTsiImgb7md50dpRUaHpO8X2xGzCy3vtip/ZAxFaD0aptsREtPvvYdT
WxicNXaBzyztCFqBoITdpTmGwlDQ5jdgR8jbas0orJyh+fw9c+ODkB3xTKdl
SNaOC1XvuGj9g8WOcGgU+3LK5T3jxcmrbH/GbYkTpgWnZF+OMXgDH1QuvWlL
FDn/N6gx9IWmUTpxjKvElrgzuptWNPGSFn7356e1EbbE5rZjbU4bl6LmH+QD
srIlXp5s/CJ8/jtjest22a2KtsSblIETzRG/GYKqB0Z3CtsSfPkOE1672ZGe
x4ngvazk9VrzZDzCvtAS8mz+O/DShoifFwlgOT1Hu3Er4CbctCFcGZAUHrAc
/XifYqtWYkMcpd3bpyA+S6OWq1aEDXGAzvPXO/wfwxy1Vxta2RA2t2pWpEX/
pJ116DtuoWhDbOrQPyOn8IPWk/bqi72wDcEt/6I23v8L49+VuUw3VhvijEl7
iZ76EizzeuV+v5fWxK/yiasftyxFTiu3joXetCb01/bNyfpfoxXK7g+NKbEm
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
TKJ50V8WiId9c1yNnr65eBNlIAvFw/3bx6Ty44IW/WaxeND6bvrkvXnCIr8o
FQ9z3y7XpWdfW/Sf5ePh9d2+pZJnMxElH7RCPKhs/JnzadPVRT9aLR5EG3iI
cdN2fIwSmLXiQS/rglJ5VvGiP20UD6N7HV0XOqpQg/KvpfWW8aBAnEwc4fVA
TL/aMR4GbxbyLekrw9R4SI0H+XlGBk1buBUz/euAeHDL0uChH8tBzHlFejwY
Ff/d37/BcNHPjo+HbzTx1lqbc5jCc8rS4mHM77XqZq10xPS3c+PhczUxkPS9
Fil/f8AoKo6H2m3xl159aV30uyvjgbV+05BoWjKqofjMhniY4XRz7pc8seh/
t5Pfv5f174LMBcScnyTiwf36dOzjcQZi+uHd8eDgNryzzC4L+8pKqZ/tj4ff
Q1WX4HvIoj8+Gg8WTdVjyn9q8ZPii/5p4/EQzZa0/3ZQFmL65VPxsP1T09ME
18uIyYN+iYflV11y73jlL/rn8+T7cfeIjn91Gl2k5jlZEiDncZucx93qRT99
RQL8uG66fcAxGXNRA3jcCbBxU2d7kMDFRX9dIAFyN8hd7NNKQ9Q4cYRQAgjS
P/vWzaYv+u1iCfA6Tqe3x6cKP6L4U6kE2FAxqR5yD2Om/y6fAJfqTovvU4pF
zPlSSIDuQfZLZ/eGL/rxagnQVvzRbM35SsyUC7USoC/HUHP2avmiP29Env+u
i4wSRyVi/6P13tMyAUZ+mTufrm9HTL/eMQGKpf/A7r4oRLV/bh4JcON5+MjV
4YRF/z4gARYE2yzyVEpwPzXvSk8ArTMbMsTeFC/6+fEJYDm8K6t4XTqWowaK
0xIAJb85svpo/aK/n5sAVww6WvYuvYIoucu6OAEefdA7JL0QiZl+f2UCGPPq
q19bH4Up+8W8IQH0219JxMQ3Yab/354A72/ohzgNFWPm/C2RAI4pfUrCT28u
8gDdCbDe+XRvmX0rvvc+VsqwPwG+9eWMN+9sxUw+YDQBDB4/q7EpiEZShn/M
dccTAGc7bfEvLMdMXmAqAbZe7f1eV1eBs295ppz8kgCJnIldoe0NiMkPzJPn
T1cq/9ffhP9Ivr12jCURJAZWJbbZNSMmT7AiEb4P3WpqLCxClJ2typ0IROFX
tt9LCzCTLxBIhN5Zs53Z/dWoc9mAwFGhROj52JFh/dVvkTcQSwT2w59OBxU0
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

             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Magnetic Field [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox[
             StyleBox["\"Z [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-200., 1406.5009322560597`}, {-0.0003022814086394129, 
          0.000010985506295855091`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Bx\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJwsm3c8le8bx2loqVRCWjSEBglJde6LrEqF7CR7Ze+990o0JEUatORbUmnc
TxIRkb2y9zyjIql+z3POr396eR3OOc/9PPd9fa7P532JWrjoWM/j4uI6ysPF
Rf3P+WdPXOg6I2qf8J4mJ7H29qJuO2I8vPzAhFMJ7byOpNpKwo5YGxeae8vw
Ay07AI0IZNsRdvtdJOROlNIa7+gmbgq1I+SyGTTj4x9pS7/YS4mZ2RHzaTLj
wtplNJgOrtsNdsRJ0Y95rlblNC+RS15yInZE0XCuvEjwJ9qDo/eFDnPZET5b
LcuCblfQut3fvVbptiU2aOUf8G6qpK3NrDfVJGwJLt2GS7NrqmjHPg5z62bb
Eg5xs+8+GFbTQif/3DkTakt0nD3p//XJF9pzwTUalma2xJuq1cGVi2tpoyA+
5gC2xPfX3n3p72tpIg6Hk91FbAm9NZKGz0K/0vTSdPb6c9kS4S947Haq1dHi
39g2hHXbECL3rU3V+etpeCDQJ46wIQLF5Xi3jdTTfqxIFb6YbUOUaK2JbChr
oEkq5L5ND7UhlLfsL/Z53Eg7Z/7GLNvMhsj5crDuYmYT7XL81/l5YEOsa9//
MvZyM63y2eC9JyI2hJijfnv+lRbav47fR19w2RAtXue3xd1upcnyrJp4121N
NGxsy2941UZzkBJLKSOsibrU6AnZtnZaluHBfV+yrYnEoCuXti36RmsI02pq
DLUm6KkF9xVQJ23pQ2u/b2bWhHXBu6TGiC4aavDfMADWhMav7enFDt00zz8X
8LiINfGg5fb+3HU9tAdidy2+c1kT25SNvp6o7aF1nSpeONdtRfC8uLq+O7GX
xu9Xkzf/vRXREHXE5ZF2H+1YTv/xZbesiNkkiVLhTf20kM+/JleHWRE/vTKM
FrD6aYXfyQUytyL69iwtXFk7QBvduE1ui5IVUcykh5gUDdI2qx9okRC1Ig7/
8zwfcneIput6MmAvtxUhuSvqU9CNYVrcNctNB3osiZZZiZVvs0ZouMT3Pby3
JPRVFBTXPR6lfR9LstK4ZUlcA7Mz5z+O0ajHVSvMktC6XDjv+/A4zZT28oGB
uSUxxoqbyRGcpF2yrT5xTsmSMHhw/rvs6SlaRUov3UbUkoh3OjT09gSd9vfV
dJoztyUxMzZ3qHSGTpPt493v3WNBCIkk27Y+YNDsebe0Bb23ICqFvmxdZ8Wk
3ZTbHxR1y4II/zLMv2Y7i9ZgqimSFGZBpNyIlOObZNGWxJp/uGRuQciY87FM
8Xca7T9vm0wlC2JDVJCm7rUfNM+2hCV3RC2I1v01GcWBP2n359969JDbgkjQ
k861sp+mde4qOvWsx5wo2+j8iM9shsav/5lZ/N6c+Hlh66tT5r9oR0O6L5fc
Mic0jtQ+lXKapQXn/VCoDDMnBtLm330Z+Zv27OvSjq/m5oTIpZKLf3PnaCOz
m0NalcyJh653uVe2/KFtIm9Hj6g5oXnnPH2Y/x/t9AlqR5kTvHpeQ1+kuFCs
9zk7eo8ZcWJvgtPuDi70Lstz2cx7M6LuhuFh5RRuxPoUl//vlhnxaMsOnS2a
85A486b2onAzImN9Vo4I33xkup58AizMCN26sOC7HfNRmkrFVQFlM6Kqpnyj
w9MF6JNTp+KmLWaEw39iB0MuLkR/r7C+bZ9nRmib8v6I9edBNqGr5p0pPUck
N53WqnNahL7WHdRwiDxHBJ3ZXijouBgd3G6T7KdyjhjUvXKmwmsJuueT0hC7
4Bwhv/N0rE/CUsRXWSycXmpKTI7f8MWPl6GADQNmuZGmxJUDq1ct/saLBp1X
5hapmBLdl38l6wmvQFrvD0x8XGBKONSNO/61Xoler7Ha11h6lljsoNEXb8aH
qI/rjzxL3Alb7btIYBVKefkSs1TOEnv8DdP66leh30v7Fs5feJbQFfOTu5ex
GlmfXa65+qMJUUdMtb52WINqn+xPFY0yIcYSvhmGqfAjxXkWLdKqJsScSrib
r/hadJc8PmGhCdH9pFdaQVAA8eUWWZ36eIZY6rJH0nSVIPL/1f3ANOoM4Vw0
3WAmKIQGji9jOKmeITb+6XZfJLkOnaIeyIVniPhIJYGio8KomH4uKPGjMWG7
0ozHymc92n4k/sP1KGMi6c5B/ofPNqALlwuXPFQ1JgIUVsud+bcRzQ51kjve
mFA42ghaZzYjK8UlVyo+GhE5tin6a6xEUE3ivo6WKCOirqIgIG6rKFLsOrtl
WNWI+LvevMtnXBTd2RtrN73QiJB5mCZggreglZFP83nKDAmBs8fo3zK3Ir+m
ju9row2J8UXx4q5R21C/+KKD29UMiStZ8gLP/LajUwF7w2R5DImb+USyrr8Y
elV9pvxImQFxkh63YjJmB9omEr38dLQB0XLfMd/6tjhKdi84baFmQAQ+DezQ
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
/u9VMeqdzshhetiDt215qX3+LZz/JerfaJo9yOtFT8nJlmG2vHxmD4oPPHVU
5+qxciDZgNbbg8mLiCOCtR14xWk1gQaWPRgsSFLRetOLWyT2elStcQAUd/Bp
Tu8gph6X0n0OoNJdpLfh9Sh2biZv0GkHsLXBd75um8QK+Yy45x4OYHrhZdeG
CDqeF9Ux+DjNAYpK6h7Y3GfgL2fKj9x75gDCyR83WUcxcbrM0+yb9Q7Q8s0l
SGY9C1ssufHnCssBJB8ulB90YeE9pDy5sOY8PDsZ53mErEczRe4vYvadB50s
tM/NgoVLks7yh54+Dye7vxy584+Jk6003Hw9zkMvP/eqPGMmpuIJ17Tz0Nna
rGzuzMDbVm/aaf/sPBgzZl/p7qfjyeHFseb15yE5oEdM22kCv8SsfiPWeRjf
4ZhlNDyCI690KumscYSq6BPRV34P4JNOFTeP7XOEe8s7+X0+9WAhlcLfyqcd
YWe4FN+h9jbcT7V3Ho6QvKXVznJeHaaWY1+aI4gNBnbr0Eqw7yfP1bueOUK/
JZfUCjcnrJJ1zmVbvSNEJzw9UabzHq3wPla1geUIN3I8oysTv6IWTTmJtWuc
wN9I8HeWTRu6s1Ukevk+J3AMW2UQc6EHUcf/wtNOEFM+Gm77cQApfP2B/ro7
wUhgRfbtohG0IK8782eqE6RcFF5JKE0gsjn7NfnUCfLLeLjlttNRuh554tY5
wffs6l1iZgxktevWsy6mE2jIiFkc1mKiPfMT+VpWO8NfiyT5zzNMNNvq7VQr
4wzJl3n/DJqyUGkB2fDqOIOdTrnJt2gWSo4hTwh3Z0iNOtt1052FjE3JBjvV
GeQ3/1uzU5SFKLv/v6fOIPDIbqI9mYkoe+NBnTPoDpQvySpioGL2A+wMM9fp
Cw5eoiOqO89Y7QIpd3xPp52cRJT9kybjAomy135ZjY0iYVtScOu4wLwC3fZu
wSFEqsEVke4ukIZHbpV870X5lKBJdYFW/ZpnFirfkD95vHk+dQG/VHg74daA
KLniVOcCB4UVi3eKlKMV106GWzNdYNf4Yw8V07togvLjlrhC73/rvV/3vMQ6
W8kHaJ0r2J2bjJ5S+IJfUBcs4QrpzqpaibPNeCPZzm094Ao7hCa/Vp/rxuHW
7vc3H3UFkTvmvaM5/Zjdfxq5wpFnsUy9B8P4BNVQ2LuC47XMvIe64/hpLiXY
XeHRi/dPzkRMYbY/GOcKtueC4navYuAgyl+65gp3ZDaZ56xl4t4RUtDdd4WC
X3uf639lYg2yHCx4RX4/1bjvUkdZ+DGxcSN3hStIb0urHghj4dW70o7/aXGF
1C2itB3B/++Xhl2hLFczs/QwC3+bF5z3Y8YVNnItOP72LRMrU37lYjfwOxHh
JvuLgfNa7RZOCrnBzSSJSccxOl6u2rlvVNwN6POMbpzaPoUpO3xQwQ1WFB37
0T8whlvWV6T0ariBP9fGx/x7hvFhqt82dIN109NPnTf24xyqP7Nzg9QH/5qX
P+jCi00lNjT7usGRd3MlB7qbMLXd6mPdIPrIgpu23FW4nvLb0t3gZVThynXu
hViBaoDz3IBPtGGh5+F8dIPyp166Ae+/iLfDBhVoPqnKSz+5AS3s752uxEZk
Ry1Yixsot6+oLDrTiaqpfnDYDYJG4o4tD+xD+141XHg54waJd3c+F7g6xPFz
F7uDfP86MSPTMUTFlQVC7pDuZ/XZ779JZPlbdv1jcXcoU452u/CGjii7776C
O9gwc6JTGxmIki93NdxBK2tqbe0dJkqj/AVDd1h5T/xk6R4WYvefdu6w2mNZ
sTPZH5GnGalo3WHgtZDXrigW+kD5y7HuoGxTo5+lx+L4j+nu4HqNsSJkiInI
7ik5Oc8dMtY9kj0mz0Ss93pv41+6Q/cqPpNfhxiIigOiP7lDV1TXrAFjCr1L
B+GIFnfgKTAxP9g8jrZS/e6wO1zTWHv33uERFOuy0ydgxh0eGN6+OF95AE1S
fvdiDyibndvYsrAHUeXBQ8gDLic80tx2ohVR7a6ruAes9tH23+NWizZt5N7r
qOABwrd4uV/IvUMRVICn4QGV7fn/LXK6jMluJ8nK0AN+mL0fVPQuxSepgNrO
AwZTR9JrNtbjZ5VNoya+HuA2GLWa+3s7ZvvvsR5QdITv30ntXhxM+bHpHkBf
qKrgFTSI+3n3e2vnecBwycNmvnOjWIPyK196wFP/fO6phgmc3ydaf/STB0jd
P//7kAUd85NyW63FA+b4/nYNXmBg32JScQx7wDyjxMrFHkzcSfmNMx4QxxCp
D1jJwioXpxMVF3vCtkYW08SB7IfmHF/LC3mC87fNfrfJerSCeqDEPeHJxg4D
bMfCnvUGQlIKnmA4bHlrFy8Lt9Cq1XZqeMKoRPDbQScmpuKQHYae8Dbs7o7a
WAa+s5ZsIOw8oVg+a3yLER0vZvuVnpBpqfOs/90EdqYEWqwnMA/JKBCqo7iB
fHuhdE8weWWUUGg+iCk5w5/nCXuFzn9cKNuLb1IH9ktP2DD+eWHri3a8gGyP
eD95Qu3YrszlPXWY3L3Di1s8IePl7kyvuQ/4i6ul4MJhT9ifvkJp+uZFLNvR
oso94wkJoo0zNAmMSDXk+WeRFwwr3mnhyq+l3KScX4Je8M1UsCw2rhVZbTrw
9ccOL+huvvnYfmsPouJYxn4vMNSNzVI1HUB7fmzdM6nuBT/vSMe+NBhBl8yu
mYwaeIE240z2oclxNPN5RcKgrRdoKS4J0JpHR1S56PXxgkhG/ESmCgOV5vwa
6ozxgg2VPduZB5lIfIWLQPtVL1BKyNh+bIyJkv36VZpzvcA33jG/wICFvvcb
edS/8IKdgcuWZpL7x1Cr5lZNuRfwVi+uUvZhoXevVWo/N3tBXvyOk5M7yXq0
o/hv+ZAXjKd4bd6bzUSxqVK7S6e9gOXvMMFTw0CUG00s8gabC7xi3IV0pGsv
HP9G0Bvy1xbFu2ZOomLyuHi5wxsCdcdOfVYdQ5T8LtzvDa63ryoOBQyhyIf+
a/9T94buQj9twXN9aJRsnx8beMOWS38qWzZ3opNUgbD1Bokj8tV7tRpR4QS1
4bxB0uAwsb7zExI2Ii8gxhte1g2ISeg/QsGlH//cuOoN7lks0zfWz3G/1MFd
Gbne0PDs99/dAVX42PUC4ysvvEFzibFj/YZmnM8jFpda7g0leU/MHg90YX73
6y+Sm73hQbjMu+2K/dj/G99g/JA3DO3/6tOhMYw7NaL5Y6a9QbF1ySf8ZwxT
8iZikQ+cihx0yD8whR9sdnMLEfQB1zVZS2+x6Ji8e1kBO3wgfpfRBdt/DOz5
88wXn/0+cEAq+N+SEiZuM/8656HuAw/U1/ucBBamtoOrgQ/Q4ls/LQ1hYSot
cLT1AR8xmvwesj4tpQJcHx841mS6tEGNhal43CrGB1Lrtq8/WM3EFD5idtUH
ZLSa3t5eycSKgxfXnM31geh/1sLSSxiYHUe88IGi3M/RVi5TmGoX9cp9gG9x
4Dv+w+PYgQIEmn3gSbV0Z92FYfwlzbb6xJAPlNefNzSP7seyFAAz7QN/F9yy
ElLuxhkOOpJqi3whmimbufJdM/7bWG6oLOgLX871FWriamylRFa0Hb6wrUju
qvbkC1z56Olzxf2+cPPFj4erVHPRHiHxfnl1X9DImrzXea0cUenYPgNf2CLA
p5iR34BmJ1crSdn6gptOqYtO6DdkSsUzPr4gYxwvXreqD1G3e0eMLywrOLcU
9g0hSVKOb73qC5v+OD3bvWAMpWQOz27O9YUo3l1dTMtJ9H0RWUBf+ML2M4sO
zWTSkbEHeSCV+0IEt+O04VsGIqgb3OwLdfsvGt5LYyJ2XDnkCwofEwUktrFQ
/PN9fbzTvqAz0dM65cFCdKphX+QHtIyUmYukvmPjAYJ+sO9SbfFvExYqpnCV
HX5QbcN0lPjBRCKWpICX94OygvpjJceYiEoDfqn5wcU23S//GTIQ297Q9wO7
J7+3vVtPR1p37cWZNn7QumQKL985gdj2m7cfnO+arazOHEHCgbpRo9F+4LdW
687x+wModKji2eAVP0i9cP0Dj3sPYtvd9/zg6b1ueSXJNkRdTleRHxybN944
deorKpCQRO1lfrDX/wgaaCEQ/+Usp+YmP6gMqYv8zQrC/lxrM+sH/aAw/ZSj
7MsS3H0+vrLmpx8oC9cfPIDqMDvu4PGHpTsy2+ME2zF1fH8S8Ifay4fKegd6
MB/ZPpaK+cPcUbubyYKD2HOdWSQh7w9OAe1PZrhHcVtk49M3av4wftV355uI
CQz0Yz0v9f2hUEqdcRvomDxdVj638Yfb+68ZPvZi4KXlcrT/vP2hhTjm8Occ
E7vKPHR8HO0Pd/KaGVvms3DDDZHr96/4g/Z/F24ctGJhKu24e88fBvHzW85k
PcqmAogifzC0TCzydGbhBd2hYjfL/EHRy/HoaiEWZsdBTf5wc/yakHcoE9cW
nY+4MugPYcXDZlE5DCxLyvPUn/5QcrrDXcGfjil7NpknAH4/TXwsvnISc/0i
D2yBALCIPe28IWcU21AbQCwAuou6I9eXD+LKGvIN5QOA3rhIRDKrF0uTx1OI
WgC0pWo/W3upA1+5d+tTgH4AbBLMLU7H9Xh2leC0j00ALB2Mi00o/ojNghK3
e3oHwBp/uVrLC1m4bJhb1zU6AHi4+78tffwaSer6hDteCYB5PPlJBjdrUAop
x+zuBYDmq0uv9j5qQT8lLbqsigLg2d+JM7+KupHxlebl5mUBsDk5qyzqZz+i
0rizTQEg6G4t+m16GIk5kR38YACYhMyvDrk2juJb9l/T+xkAZUF3BDzeTiEq
PtfmCQQzr/7oM+IMpP9ky88TAoHwtUlq9qcYExULkwpRLBDES2qkxb6Rz3/0
8tNq8oHArb7vV+8pFopmhIcpqwXCm4WvGj9FsNCoycwTmn4geT8CxE4HsJAW
BSDZBMLuxy9e88uzUNE+CvgKhMxmVntHARNR7eS+6EAYjK44WjzI4PiRVwIh
WliwZWU9HQ16HUnfeS8Q0k6Ncs8MT3L8yaJA0JKaW9N2YwxR8dTWskDgOWIf
s61riONXNgVC98ILrt8/9SH/ret0NgwGwqSbj0/3bCfHv/wZCL2bflvr7mlC
arPzn/DzBIH7xt8uvJmVHD9TIAh4lvg+3J77H+L7SnZwYkFgt6rT6N7If5jt
b8oHwSeRxTe03lbitlyyYVALAn2Z5Rm9tCbM9jv1g8DHbZK1d1kXvkcVNOsg
+G/BM8GG2j7M9j+9gsCBf2x5+OAQdtUjFzwqCIZ/zHu6OHcMs/3Qy0GQ7/zO
PGtyEitSBtndIFimMN1o2EjHbH/0eRAE3znD4zPMwDzzozoGPwbBu9LM5fxP
mZjtlzYGwQ6JkzM18ixMpa1dA0FgUbmoOSOAhdn+6Y8giB3tWJ4dwcKZZDlt
XhgMDnlyruqnWJjtp64NhsKA2Ld8HUxsE6PKqtkeDOvjbueabmditr8qFwyy
NcYaCmIMLG0qrfVJNRhWqnycx/9yCrP9Vr1g+Gp/58fmtHE8R7YPhHUwPNNz
uv+APozZ/qtXMHRuvMl8P9mPy5bxLH0VFQypSLTxW343Zvuxl4PBOmzX3dzr
LZjCB/+7GwyhsXnLVwXVYLY/+zwYFDUL5rwcXmOTV+0f7n8MhoaitaYMzWyO
X9sYDPHWt4Ib2z8iMSrvHggG4kG0kkxtPce//REM77jw07A7HYh896CMhSHw
W3Gz67bcXo6fuzYEfIVe7b77ZRC9OZzZlro9BK5elSn4njfK8XflQkCw0dF/
3dpJFE0BFqohEGaZufx+IJ3j9+qFQK1jdZ/9HQbSGnO7FGEdAsJ1ky5fw5gc
/9crBDLnFTyaEmKhDSUmjICoECjpmBPtcGYhth98OQSqlVd8tY5hIcqu87wb
AjnnvD8SlizE9oefh4B8cq7k3nksVOBCHqAfQ+Cvn71qgikTsf3ixhAQ65Pj
e+rBQIFqGxdbD4SA3c4nyzfQ6IjtH/8IAf8jf0OzgyY4PNa8UNCPiBT8MzuC
9EvfVTxaGgqbfN+PT64cRFTa+GB1KIxW7J/f8a0HvZaSnckTDoWMgx6bBRa1
I+cBUsFsCYWWc2/+Ze2pQ6JU/ioZCoWRPiOsKyWIindvy4TCWsvlWyWq/FA0
z2a9W4qhILlRvVNslsBsPkw5FOx/7M6PM/uKqeW6cSwU4MjApWLFNnxzR03G
dZ1QyP7F8Ob378Ha35Y8vWYcCmYTF4emCwbwfAp4tAgFw5ajlR23RzCVbl52
CIVJ3s5+5b0T2J7Ky9xDweHZscnTm+iYwiVT/UNh9vfQn9fGDMzm1cJD4cDR
uedKmkwcttnhcHJ8KPC71Zze8ZOJ91HAdWoobL2wezLsLAsPUvl9Rih8UHwe
dC+aha+R7WZsDrleAwP+aR4sTJWf6AehYCxr5G2wlYUp+zjyaSi89FmtYJDK
xP9R/ERxKJB7/Hz4awa2pPi5klB4o5D+9VIGHQtQvFFlKPzs6HNYbzqJK8L9
VwTVhUJW8q456z+jOIDiY9pCQZaLFvth5xDeMzl1yK83FM4K+Fl0LenDPbfJ
CjIaClqH5NLGXb7hNCoPZIZCsvD9/dw3G7Dayuxwj9lQaPqV1Z3qW47ZPN+8
MMhYuWhPB76HKTnvsjQM/hyTvjYg/RJR29tpdRjZH2coXO6uRquoBRAOA2+t
7NFrX5rRh+sff9pvCYMx4f2iB451Iwo3s5MMA81ZqzTp5H4kQeWPMmFQ9cKh
QuDqMGpn8yBhIDawpDj+yDiHL1QOg/777/q+eU4hJcoAOEZ+nlVJtfkyBmJ9
IxtWnTDYcqiXdXQVE1E0h4lxGBQai+uc/cJERhRuYxEGCgLrNgaosxAvhe84
hMHoi/R7FmFkP0QJLvcw4BMOifsSzEJulEDwD4MUz5n+LMTi8I7hYSB5Xoze
RTBRUyN5gsSHgZbauMjLPwwUl0AeGKlh8Ono5wZrBh0doniNjDDQX7pNaZvs
FJqkAoucMNggvm6H0vQYukUFAg/C4JhWp84FpWFOvvo0DNpFqs9qyfQjHsrQ
Lg4DjVcCp20auzj8ZUkYnJba9ewYbzOHR6skX3+05xXTqApR7SeqC4NtknNb
pbc+R1Q5orWFQfZW1WmF9kc48o7atkO9YcD18HHhuX+fsLxx2EHF0TBw3bfc
ucSsEY9QeS4zDPZG7NTZJ92JMyleaZb8+1dRGf9s+vBJigedFw6Zf35l6EYM
Ye69jukyS8MhcplmvK/mGC4cvPdEenU41I+9FpfKmcQ2mT1le4TDwTz6Vpxh
ER2T1bVz15ZwyB63aq6tZXD4CclwWCoq6+N5i4nZuJhMOFzeXbjs+S4WpuT9
DsVwsl/XRZd8WJjNpyqHw3R0XmpQFAtTdvTWY+EgZLBTebMBCx+lAmGdcGga
Mb8Lo0w8d/RF6GbjcAgX2l5ho8jEZDd+daNFOFwx+xEepczA5s93PVnvEA6O
jH/Lzv6b4uTV7uFgnPO8hzU0jin6SdA/HAxcFndc1RrBbF42nLx++omIeP0B
vIvC4+LDQVNrvrjO+h7MxgVTw+FQM+vmPL9WTNklfBnhIBtUGnrmRi1WIeXT
ipxwyD0R+i5n8B3+SfEiD8JB5EWJ2PX7qeg+lY8/DYe5XT9aPm0sRSYUn1VM
/v3Hi4sfM+o4/G4JuX7SWo+1P7UjNh5dGQ4fzHsOLznUizyndnybVxcOr8M3
bzhpP4jYuFZbOHz/Sb9aoDmKWo1vLPvXQ96PkOPNk6UTKJGvZcufEfJ65bys
c87QEaLyeEY4FA59qCyJZyBGwAntX7/CIT2voEbLhcnhibkjINDm4GuB5Sxk
QMWTSyJgV9utKRl7FmLHFasioHPFQoV7ZD0in6Z8xroIuByjtGOSfN2FwjlE
IyDfsNT3ygoWYsf7EhGQtIZP7Y4bE7Hz/70R4Cvx6t1sEgPFSGxdNnogAnKD
j0x9OEdHByi+WSkCInWml019meDwm0cjYN27wMW7DEdR1jGygmiT3y+tqLLH
axCx8R2jCKhstPDWOdqL2DiLeQS0W59dmtHXjl6Qcr/TPgK+7Hmx5cDyemRP
fSG3CEjX2eL6V7cUbaD4ML8I2JJdzRKwvMThrcMiYMOKW7k7fd/hMMoQjosA
p8isBeVhtViWMjAvRsB63jn57LOteIjisa5FwOL7D96OLu/B1PjE11sRcDJt
9YNXRwc4PND9CIj/Z6xfqjKC/1EN+H8RUPjTKzni2zhm42OvIqD0LndP5s8p
zMa53keAp0rp7ErEwIKUIK+IANrzVL7G/UxMyamPXyMgeHJHd+wwE1Nx1ofW
CNDYabxVWp+FpVZ9Z77viYDRi+2Pj5H7h9ydS4mRCKhatKh7gy+Lw1MwIuCI
9vCFP7tZWJ3iF39FwEXI00m8zcRsHp07EpoWnvj7qZ6BH91YZ/tySSRcOVpz
V6GYjs+d1g0uWhUJJQ4+24ofTuLVSy5cLlwXCabzX13MMRjDlFx4KhoJNlIJ
OPfCEKbs6AKJSKhVWFYt6tmHJSl+Y28kCE3sSzI83ok7uvyYjw5EQuTcm3lK
gY2YzccrRYJoGdxMka/AyhTfezQSMrTjr3O9fIwpWDRXm3w9xvnMm8JCROH6
d40iYcuixs7XW6qQsWOWzW3zSDCkqyrW0psQNT5yyz4SLI9Vg2lxF8IUL+IW
CUbeijMntvcj96RTj274RYJVif7IeblhxMYNw8j328/Nsh0fQ2x8MC4SYocO
3RuRnELx1AFzMRLe3OvflT9Bnv/UDbsWCWKvxexGZhmIijsv3YqEoFYh8Yl3
TJRD8V73I0GrfnO3H42F2HzKf5FQzCrqtCHrD1UOk19FwtItiw4WkfWJPT/w
PhLy033ikjRYHN65IhLkGFfdFGuZaLNJ48PYr5HQXjMmwc3PRHUUX9tK/sx7
WGveSgaKLD/WFtkTCbRTixQng6bQ/qAoRvhIJJjcjFNDJ8fRKMXDMCJh9d8Q
iY23hxFlp4T8ioRhrpm5Ldf7OfMM3FFQFzRc8MygG82jBoSWREHl9FvxFaPN
iLw71n6rokAl1mekTPALsqUGtNZFQe2KwE7NrJdImBowE42CGWHtTX9673L4
NokoiO6d7DujVI6p8Rm3vVFQuoowCQhvwDJs/jMK5HUcLd/ofsPs+QqlKNh2
qtkzf64XX6X476NR4GtNlBpuHsLHyOPeQTsK+pv4DCWYo/iP42t5O6MoOLIz
5rC97iSm2lUb8yhQl1stdfMKHVNxuJV9FKQM3Bz2fMnAaynexy0KmBLV4xIp
TFxO8aB+UZCzf8DvtygLs+c9wqJASO5vxi93Ft79ZH2JSVwUWKg6LftE6rsu
K/1W44tR0LnnhrKZKQunUrzlNfL9AySOV08zsSoFJN+KIs8Dluzbk0w8TfF8
98n1ibxZvN6UgSm8+/R/UcDVctvq5hY6PksdwK/I68uVyIs/OIEp++/U+ygo
q5atSHsygql24EQF+fM8k3eFbwewFxVofY2C8A/TJz1ievAOKoBpjQJl7wPa
gvptmBoXUO+Jgrv9zKGNgV9xEnmcqY6Qr6eccjq79z1GFM/EINf7mXZ5fL87
osaHlH9FwSGja5uenSvhzMNwR0PA3gPJK9bUIQPKoFkSDfxbeVRLxtoQG+9d
FQ1N6i3NsbU96C0l39ZFg/R8oUrl+YOIilMURKOh5/iAk/nUCKLsFXmJaDBZ
kJjj6zGBGikAZG805DhtzO8/QEdUfCpzIBoO+qUMWLgyOPM5StHwx+xxuqgJ
k5NHHo0G3rfa969zsRCFU+3WjoY51vlgpgULsfNJo2hYUhPCfZqsRwtbNeUk
zKOh7IxDdKQLC7HzSvtoKBG7tvuMMAs5UAGoWzQAEZe0MpKJ2PmlXzRw6Ycn
xOcyELVdRcOi4aoXf8zTUDpi55lx0fAzaIfr5KZJJEe2rxsvRsNHyV3GmoWj
HL72WjQMVln93t4+iDKit0ytuxUND3gbXMwLexE777wfDQseHRZ/jTsQmw/7
Lxq8K26rvBqrR+z881U0DIcf8Vy0powzv/Q+GvRPKLr2SdzizEtURMPh7wvj
F88VYzZt/TUaYvfujBxQreHko63RYFP5lqUU2oKlqQLVEw3Xu/zMHW91c/LS
kWjw32pV193Tjyk7kIcRDcZG65te9w9z8tNf0XDooeKTmNhxTMXr87ljQIfL
0EP8yRQnT10SA/TBvvgHWxjYzNtQ9h9fDBSJ/Jf6fAuTk68KxUBjx4WnR9qY
+GNPtcVvkRh41LLQW+Xk//NW8RiwNPH/YRzBwpIU/yYdA1cn1/atDPx//qoQ
A/3B+Zd4FFiYPd8FMTB00fGhQOH/81iNGDh0b1240RgDU/HKlFYM5IY/Pret
lc7JZw1joLP/kdSf6UlsfOH2hnGzGEjUyTJsKxjj5LV2MbDL07nsHXOIw9u5
xsDrb0yLgW99nPzWNwaMm/RnVMW6MHveLDQGrD0TBGyMmzh5bmwMtEv/Ohry
vRJT46TdKTHg9Ue4X8zwKSffTY8Bm2MPd7xS+A/RD5EKMpt8ne4eWm1Vidh5
b14MSPp9GK1d3YSo5W4tIH/OWiP+sasTsfPflzFwPOP3oc7XfYjCrRqJGMh2
vOw9XDeE2HnwpxjIqOs+7ZE2hkRCWs2/1sZA77vVmsldk4idD7fEQPGfFUdR
DR1R5aW6OwZk/eU9G/oYiJ0XD5Prcf7HhYZ8JhqjeEJ6DLiWbR5tk2Vx8uOZ
GBBYdXSwxZ/FmcfjioVi/rZzSyJZnDx5cSxIO2jz9mixECWnS/hiQfxQZs1k
J5OTLwvFQndq8rJrEky0ngqQRWJhQkCgon8ng5M3i8fCi03h1nplU4jNL0rH
Qq2MiSPvnXFO/qwQC4xfmp/L5o8gyj4oglgQykhot54/wMmjNWLBYqnTW9vS
bnScMpi1YiHu/Piy9PIWTj5tGAsKe+iLEhtrUIHq7PwnZrGgaKDSZrP+DSev
tosFqRfhZXxNNzA1HvLQNRa+Ly5p0I/4iNn5tS/5fiYfTvLdqcfsecXQWGjb
Mrqs07cDs/Ps2FjIhpjPExd7MYXn3E6JBXe6iOP14kHMzrfTYyGRt9XyzZVR
rMqqeZuVHQtvoozljy2c5PDWebHw5bB/yk5vOn5I8ZkFsbB5Vr/DPIuB2fn3
y1gYdhPqkA1mYvb8JBELj/v+RecIsDA7D/9Efp8J5poKJxb2kpM+eqk2FkbX
Bm8KimFhdj7eQv6+x5KVi6xZuD37rk9KN/n5RwQuP13Awuy8fDgWVHpXvbaw
YGI2D0qPhblXoadmfBmYnZ/PkOu1O962WYWO71LznFxx8AIpvOpKmsDsPH1x
HEQ/Giu8sHwUL6MG8PjiAF/ZUKWwbRCz83WhONCUK0uQY/Vgapw4TCQOZKok
Qjpk2jE7bxePA3PxrG9fjOtwE8WfSseBcE37scCpEszO3xXiIPPftlJz53DM
ni+FOFDeI5x16xbByeM14uDl6+NmRrJfEdsu1IoDMbpA8bcVbZx83jAO6loa
K+9Y9SCeOa0xN7M4aNr17GZU5gAnr7eLg7Yb64f4Lo4gqv1zdo0DiwzGh9ci
E5z83jcO7OnzzF0F6aiWmncNjYNRngxeTT0GJ8+PjYNnjsEiyhpMJE8NFKfE
gb5uTXMoi4nY+X56HLhY3JMSNmEhyu6yyI4D4xKvasdoFmLn/XlxEFQ0sTzS
k4Wo+MW0IA72qB0PDd3OQuz8/2UcjC30kqm5zOTM3xJxsL0nJM6cYHDm8T6R
31d626nRbDqqGouWNqiNg7z5Dz1vOE0iNh/QEgel8jVd51aOIWmDOdPT3eTf
n1l36TYaQmxeYDgO0sgz89emPnSlxC3pFD0OWH9LIryvf0NsfmAmDvylO1TW
Vjagud1Dr49zxcOgu9jFFV/LEZsnWBwPXSX6afdE8xAVZ6vzxYNUc8wjVsgL
Dl8gFA9p6o8Nd8VW47IFdUIqIvEQbHa97UZOM4c3EI+HSLOAnpuy3XiXq7o6
SMdDv8MfBRe/fg5/oBAPHpn7PpRFDGPq9h6CeBDdnbzUSGacwyNoxINyYv0S
bZsp/FONbFi04sEzkntb8kIGh08wjId7hbn7h3mZ2IQqqGbxoCHvdc3oM5PD
K9jFg7eyLvOdKgtT5WyvazyU7Unkag39P7/gGw87Dt4Qcw1hYbG4VKndofGw
eOj4aXel//MMsfEgWR+c9OsDEydSgWNKPHTEPE3bN+//fEN6PJwTUFfXnaZj
Sr5vz46H4gN3J3qVpzi8Q148VIQvHL29eBxT4+SiBfHQlDnjN6c7zOEfXsbD
eLWd0g71fvyGAmqJeDi6+chuU65uDg/xiVwv1diFmgrNmLIrhGvjodLtEPJ5
WsXhI1riQX5ao86p4Tmm4hiB7njIbkhU+Ob7ELF5iWFy/ZScN9bc+4TGKSCP
Hg9FuoLXs2QbEZufmIkHB9nRufsLOhFlz67gSoDglZnXR7X7EJunWJwA1kdr
feJdhlDRqWdfl/IlgOYSw5k8xTHE5iuEEiBScLl3R+ok2vBanGuRSAK4nzSQ
ES6gIzZvIZ4AF0PGp5dUMVCoGPmJ0gkwfdCie9VNJmLzFwoJYLhBcGG2JAtR
8fY/lACyP799e+7N4vAY6gnw9+nLqk9RLKT5Jzbh96kEuNn6+eE1QxaHzzBI
gKV70z7OjTNRATUQcS4BruWYnwukMTm8hm0CLGSNbVihwUAClAHhkgBqiS2C
D3joHH7DJwEccxmzWTPjKJASyCHk9ZSX1IdajnB4jpgE8E70e7Pi/AAiuwPV
8QsJ8HKlXV2FdA+H77iaAG8OnklqvdOKqONoOCsBFKe56yIrajm8R24CfEJp
Ki5XMXoUdjSn/0kCPHCel53x+QJm8x8vEqDJIeew+scPmG/iXW03ToD8+/bv
4z7WYTYPUp4AyWKujOuZ7ZiSXx01CSAgvyH/rVgvZvMhzQkQV7J+YpPeIO74
cH93a1cCdDiVeqsqjmI2LzJE/v1RgfL+wgkMUmQHOZUA31NaL3Dr0TGbH5lO
gMI7r3uvRjEw1W5+/ZcAtW8T1qaeZ2I2T7IoEZbPKbY9WsrCvDxLX1WvTAQl
nNTMbcfCbL5EMBHeeR0TzyHrkatbyFDF5kSo4pN/L3iehdm8yY5EMHbK2znH
x8KUvVYmlQiP7+v1n/FiYjZ/sj8RfKf2/NmQxsCHNEiFjhJhbtlo9xkbOmbz
KOqJENhwM3SqcwLnPOtyf3cqEeis6JcpDqOYzacYkK/3uqjyxg9iKk4oPpcI
Gh3bU6+b9mI2r2KbCJfzvEy1V3Zgx/jKmiKXRJA9MdngfqAes/kVn0SQXnL3
SvLjUlz3g3ykQhKhwWJyxVrxq5jNs8Qkwk4I91pa/hZR40BPLpCvR1XXJejV
cviWq4nwfvUd/kd7W1Em1fBmJUJGvJWExUw3h3fJTQS1j34R4nIDaB4lyJ4k
gpmHVEHZ3hEO//IiEbjGBE+8rhpH1PjcbUyuJ6v+SdTwFIeHKU+ENqG69b4H
GKiKAlBqEmHBZf3Jgn1MDh/TnAiRftdvvhlgIhkq4O9KhJLb67bc02UhNi8z
lAjXnXW30kk9d2XA60j6VCLkmy2GCV8WYvMz0+T9WRWwfpE0C1Hl89K/RBg7
V9zZeY+J2DzNoiSo/GDxNKyFgSzemGWnrEyCPy2LmHYEHbH5GsEkSL2tqTBV
PInKdjR9SdycBDenEplG9mOIzdvsSIJQl21u+reHENUuxEolgaS3VZtIXB9i
8zf7k6D29NOBMu9OlPqX2BmFyN8/rLb8eF4jYvM46kkgZGbQNv9CBaKma8NO
JYHh1ZiI0XVPEJvPMUiC0lk+nbr5hZiyR4LOJUEkcWaFbuVnDq9jmwS7zHcQ
DaVNuAREX/i5JMHlG8Bac6GLw+/4JAH8Yfx25uvHYo/IFQpJgti3eMO06DCH
54lJgp834qd42scwZQe7X0iCPRGLPq/dMMXhe64mQRLX3LbnQ3TMDA9Tds5K
ApZpQoLtTwaH98lNgrInbRurXzOxPhUQPEmCd8ct47MP/Z//eZEEprs3bPwQ
xMJU/GWDk+D+6nxdxfD/80DlSXBRetRT5RgLb6EarJokmCl+1Spf/38+qDkJ
2rO6jM4KMXE0JQC6kmCjYoxbLT+DwwsNJQFfVfq984lTmD1+PEVeT3fXfLtz
4xx+aDoJdiqVO9oVDWMd8keDf0kwKXX91OiTfg5PtCgZUtM+/tVy6sYUjn56
ZTIw1z7eIizQwuGLBJMh/qC5+VHXL5ga3zu1ORlM3K50P9B6xeGNdiTDSLOR
YnzoHRROHn/HpZKheCnB9Xa4DLH5o/3JILepUVZJvwENFgqu0UDJcPrRw4yV
Et8Qm0dSTwb+wKab4UO9SFMkSUnlVDKUxfqDw7IhxOaTDJLBOGGL4KruUfSU
lHtwLhneGxze/VFlErF5JdtkOOli0ve/ks48rob1j+NUolJkKZIoKbkKWSua
b0WRrU1R1lxZsiSU7RdCXMs5s8YVIZQtlzbUNU/ilq1S2qSinahO59xCXH7z
POfP86o5M/PMc2ae5/m+P++ZRisooy+R8TO2yqDxvur94dQOivBLkTI4+Eu2
8NJJJbUvuPXl9P0y2BE2ZO6jESo1z3RUBscqN0/5b5uKqpOmt5PlMuiTHvtR
JY3vCN90Wgaf94668WClinJ3qLCZeEHaX+WH3mu7lWreKUkGYbFhTLKPksLp
ctu/ZGBqs3/4njUdav7pngxe1dbM3W6joAbguDySQf5VfXflvFY1D5UnA3dq
+C2XnI9UBC74FcrAP/HL1v7FjWo+qlwGIR4jB74+V0tVNSXXm7+TgdfVgWzN
wUo1L9Usgy3uZgupa0WUK14waZdBTc9wePPHIzU/9UX63ORrYBKyEl17KA3o
f8lA776qNrB3DiI8VW85rE/V9+1sKkJ9baQHTj857Os/tE4nuxIRvspYDhWj
9urZZtWicNwgI+Sg+VWWpGprRIS3spZD5un4hpyqj6jil/REHC+HwJcpu8es
aUWEv5omB8sFFnZmkxRoRuiWbl1KDra2y38bFNqBCI/lIYcx52xWUkuUKAEH
lBbJwad4c7bhTyUifFaAHLZ8jU5NXK1CfXDAZqUcki98TraXnkeE11onh4CI
ib2ZMBXalFxw5NcWOSSqfr1JMFUhwm9FyOHUqGFPLh9VomIccIiSwwT69+Y/
bnUgwnPFyGFFpYGL9VEFmo4BfZkcXKZ/67xu14YI3xUrB2OrupmRuS2IxFni
5fDhXn6GZXsTIrxXohzuLrq7iHlWhzSCrlCK23IYtiTlc9CnKkT4rww5hN+d
UllvXILW4zieKIeszxWrT4fmIsKD5cpBS7tvZPqJBPRyovzchwI5PKmds9Vo
XqaaDyuTw9cDhpv+11pA4bR5Q40ctp6mps73q1DzYk1y4C1DztSceE+dwQX8
NjkUmaejifkNan6sSw5uMb98Thd9oH5sb7eu/ikHUXP/pVORn6kKDJBp0lBh
6bCp7GI7hafPm3rT0MS5JnWZdlD4cRqqR0Ofxw89dppJ463Rm3M29qNBNjTP
ZlW5kpqJAZ6BNGzINo6/Pl+l5hGMadhd+Hl0W7SKUkyZ3bhuGA1HNU6VFu1T
UcQPNYKG7SH+c7sdVFQC9quMoiHsm2n74ntKNb9gTUNOS7LT1/YOCsfTf/+N
how353Uc3ykoHBdfM54G0x7WvQx6t1N9AjrHBk+i4d8Q05iInE8UXo5cPY2G
WWWNqWu1P1B4erLKiYblKwpXflHWU8RXRdEwuQq8vnm/ozAutcKNhq9JSa/u
xpRRePfLPWjwHDryyv0FL9T59XnS/hsyfsbrplLfil33BS2iYeaQt6+omDuo
GOeNfWlIfHz6vzN6z9X5vAAa9PXivOY0laIj2I8QRINb9YlL1ak1iPizVtJw
6EeC9cXEekR8M2toGJw/9OR3sRnh8s7idTTMyDnV0S/6E8LLPX6hNPg4bL03
6lUbeiIN/3y30pA+0+2O8qkC4e7gs52GGCFv0I+aDnUeMJKGsoAb14JuKpFX
Zq8fXntpeFjyKPuWvQoRn9d+Gq481ims2q1C0t104KJDUnt2r6yfcliFqp5X
my08SgM8LUyf6qNC2M6x4ITUvrkhNftrlQjrE+bLabDynhEZY6tEJF/N0WCc
taTLaWIHwuVyz9M0VI0z/9+H1+3IhPgcpPbxN7V1SPuMiF/sAg1dYxPfmhp9
RMS/c5kGC31l00zjRoRxOvckafu1Fflmb96jAzhwfpMGRZXBJbGjAuF43ay/
aDiwpTNr8OBXaFLKxXi3VBp09i084/7kb3Xe8R4NZhOcNuyaEkc1Yl9DFg3N
zrm7zo7/hyK+M0QDddw3JGzPa+rMcKN86jENEx5Xnny/qIratiu1wjmPhliP
uNJhUXXUPAy0vKBh1dPVfbWuNVGWGMAolH4PS+wGDoppofB0xek1Df5a9OEx
X1qpcpyvLKfBaM+CfifCFNQd59wBjm+l6/+4fopHXAdF/GvvaPifNTuT26tU
+4jqaTjuXFMeMlhFzcAFmmYa3GelhZRtVlGDcUHhEw3FGgklL46pqHatN/On
tNNwY573Q36dinq6UpoxqGhInVg/43QfFYV/LpO+0JCQ4PL+7joltRcviH2n
we/vqvGF+zso4oP7RcO9TZYRrgsUFF7+maDJwJJ/Vv0v51Ir1RtPkHszkOm8
9oqWZQuFcUs7PQYGT6o5lDGjicL4lW0/BpYtat7TT7+O4vCAeSADHxNLDvmt
f0uR/KgxA38/qwtdyhRTs/GAZBgDe8bc6zF0xWOK+OlGMHDf5IzYvu0PtZ9p
FAPD681D0sZnI6w3srZmIGpVuRvX/QrdDDD8bvUbA/7Pzv8WXfIG4fK51XgG
xow3v7fRoxbh5fTRkxiwe12aJ+5vRNNwXnUaAzDN09x750eEH7ejnBhwXa+5
+bp2K/qIfXkUA4OGjHuwUU+BHkvdwdyNgXfXe3is9+xAWIc40oOBn7n/vNjk
rEQ78Q1nnrQ/9/TxcS1KtAhfwEUMeAesyNTyUyHiC/BlIKtkaVKf/SrUE+dj
AxioPNcZ/2SzCr3F/pYgBqryLdH6ESpE/H0rGdAuyeq1ilYiXJ4cuoYB9+82
s25ldaB1WNi4joHY9B0TW88pEPEHhTJg8P3gj/KQNoRxXKOtDKy6dNDLW+cT
UmWavxy8nYHlO0evljk0q/O4kQx8DfTqHjSkHuF45MC9DITe3Ldq8/FqRHyC
+xmo0Q9Znp5WgpZYne42PMRAhXFfi9y4PIRtYYZHpf7AmgyWmyUhvaoiw/4n
GDhg6vajyuQ+hU+3n5wBC7uZ25bV51MY9zDgGFiwy+PrP+Xl1Gmc/z0t9R+D
R52nfd9TeDmobxwDEdMjrU6cb6Dw8FDvAgOHLZzcfiZ/UPu7Lkv9wzq1MGvN
Zwrf3nWSGJjh+Otc0YV2qjTl7y19bjJg/mBHc6ZVB/WXfuCe3n9J109umFRq
r6SOrf9yRDtVas99Ce8Wdimp1ThvfI+B5yMepGlGqCgn7GfJYmDFxAU9yzJU
FPEtIul8Lu+9npSlolpfb0rTeMxAzl3PGzJp/pRnp5vdM086vksLdz82UKl9
JC8YKKy8f+78YiWFp9u/Chj4oJiMwvw6KF/sgyhmoKQhU75MR0GRfHMZAxqB
PXduU3ymenWadv+oZMDHL2XjkYCPFPE/1jDQedHCcc+6RrXPrI6Bet97Z9a5
1lIM3qCJgbvPtlMZOpVUKPZJtTBw/Gv+NepwETULA3ltDNy5oZlW2D+Hwrev
L0oGupPjZXGph6gvOE/dxUBBYzHHfBIR8Sd1M9Cya/2V0B+FiPgofzJw7erN
MRoWFegQBiA0WDimMWxwbO/3aBku2Guz8Dxg79aywno0FReYdVkIWdrwd4lX
M+qHC6IGLBwa0BG9YGsLIv6LASwoY4Pm5w5oVee3jVgwTaOZLzbtKA4XSExY
qAl6Uuvkr0DEj2nGgueJnb2yXioQ8btZsKA5xqUzsluBrPGCqRULm1rf3Tle
p0AY//g4loWrF6uvHjimQJV4QcqOhdKLC18+rG1HqY8TvjXbs7AkYcKZV25t
6rz4VBbG6kZPP+H+GYXsliaojizEJBn6//XtIyK+TmcWXLXC74zc0IxwnLnB
lYUW5+e+VXENSPmHNGB1Z6H5z4kvo2Jr0Qs8wPJkIXvZrerF2VVIGt151i5k
IXNWY9+kPmUoCgPlPixc0vXKS3YvQHg48s6fBXG4KmpBcDbCOF1NIAuNAT9/
/m+GgIg/dAULv67qivdd09W+u2Dp/EuX5Gla5VF4+v02hIUVYa9/Lp5dRMVi
v9hGFrbG2K+zml5GbcUDrC0s3FKu/jnMuZKagx9Y4SyEz3i/e9Pkaork4SOk
823dv6NP73fUdyupQfewkHbMRWWb+Y4iPtMoFv7s5TH51dZ31O2q1tqSaOn6
3R8+ddGaGgrrw17HsOCYfuBQUGUVhbtf8XHpeDa/dnpp+JZybP1Hq1jGQmLc
rstBE95QuHxZxLJQlzZm6GS3cork72NZmO8X9Pa9SymVS/xNLBzeWePSZfya
In7VeBb6mjha9rv7isKP2/wEFt4E2WtuNnhJ+eDAcCILBv0fLMsOyqV+2zDQ
/8UNFgbP/mNfwJVsSgsHdG+zoDFx0Qjz1Ayqxmzh5mcpLFxsG62Tv+0mdQ/n
/TNYcClIibjceVbtY8pkYfehB/5KtJcivleRhf55Gkq7DbsRxkH+yWEhYoZf
52WdUwiXh57ksrBavJVdOYBDXXgF8jkLKT17xgxwFFDh2Tgxp0Dqb7e+v5XV
CYj4XIql/rBuwc4/Lwlqv0CZ1H5Lbz3QessjbP9BlSxsfJRgd6GAQ8Q/WyP1
77Xbd0VfYRHxIdaxkOp8Kvj7NgY1Z83TetjEgreQfGLBbBoR31wLCwkPZyg+
zJehs1gH1iadv6LU0dLuJCK6MKXU3/Maj/7rcFztM+hiYWn151NH1hxDVlg3
1i39ni+tm+KXHoOID/entP3NjiNF1kcQjgdkaHAQKDxuS7p/CKVIw+d0bQ6C
k629b62NRlg/kKbLgVGYm16e7UGE4+ipBhwwpS8azukfQM4YKB7Awerpve0W
6kQhYwzAGnEwfdrkJwOH7EPEj2bCQdXItnWPvfYg4uc142DLzF2bbW7vQoRH
tuCg76VSLU3zSITxpWQrDpakHc3rm7oTET55rLR94Phb4podCC9v3rTjoFd1
1ZN/rbYjwivbc5C9OZA+3yMcEV/DVA5C2ko9z34OQ4RfduRgbKMfa1O/FfG4
wOss/X/GsNlPOzcjwjO7cjDVrOqWo9sm5IELaO4cRMiXlt88txERvtmTgyEf
f7szYNAG1N3pbn9lIQcpXYKZw7V1iPDOPhwsrHvVEjovBCVjP4Q/B7/fMZIP
0liLCP8cyMGsXU4l6e/XIOIvXsGBohEtyheD1Tx0MAd1N3cl+N5fjQYYf4mM
D+Gga+kVI9WDVWo+eiMHc65lmDw/thL9gyeIWzgYE3C45E31cjUvHc7B7Fzf
HUsclqFI7KOI4EBDfvPjooRANT+9h4ORFr7VByYuRcSnHMVBnI/LnJlNAWqe
OpqD7Xn1ftPj/FG1dDuIjeHASj/j9twdi9V89XHpeu6eUM3P8kO4/M7LpOtR
d/i/UhdfNW/NcrAj3yHY29YHEf9FLAd+CfPNAud5q/nrs1J7u0aFBIZ4IeJ3
judg8OjGG/Vai9Q8dgIHcwvmTmdcF6CkJ9IJJnKw1naZR03TPDWffYODR/0b
GgYc80TS03/uqdsceO5w6MX5zVXz2ikcZIb+5xDX7IH0sW8jQ/p7w7wR6++7
q/ntTA56zryilR0xGxHftMhBzaiKxnivWWqeO4eDFvtrS+/84YbwcufRXA64
5i895sa7qvnu5xy4LvtyM2iDCxrtrbx6pED6/kSHl2Pvg5r3LpY+D2mLb0yi
ENZHHCrjQNs9yl9onqnmvys5iB19dJu3YgYi/usaDtKM+v7KCHdS8+B10u/r
WeqwKR8c0MxwaUbcxMG4eB359srpaj68hQNZ+veXZrenIYyHRrVxsLHLb9m9
ntPUvLiSgykJyctdhSmI+ES6OHBaVb7Bb/lkNT/ezUHpu2TeY9kkRHzcPzno
0VV0JuSDvZon1+Bh0AbvG0eqJyKpdefs0uZhme3riDePJqj5cl0eLlkfuW3b
OR5l/sxbGWHAQ1hka3m5h52aNx/Ag7to1HeVvS3ajP0lRjx4ppUvHqE3Ts2f
m/Dw5JhB9tNxYxG+nOFmPEzO0677m7ZR8+gWPCRYaKU1NVgjXI4Ps+Jh1PVp
tQE61mo+fSwPXz7IU/6qGI2O4AGhHQ/V8evlBYrRiPDq9jwkWgeuOmxoifDj
a9NUHr5q93S7c3EUIvy6Iw9n3EJ2TE01R8RX7syDRVfatcRIc0R4dlcengb1
2GQbbI7OY6DXnYfey5eEH987EhG+3ZOHvqcGxrXuHoHwcH3dQh76/+uQKBgP
R4R39+HhVWpbqF/1MET8LP48yMDOI/GbCSL8eyAPKVfPFVi3D0HEn76Ch53n
6blWlkMR4eGDpb87FdVO9TFGeHlidYjUnjK90PFPjRDh4zdKx3ti1rYCSyNk
ggvWW3jQ3P880C5pECK8fDgPZb9vsv2xeCDKxwXBCOnzi20H08wHIsLP7+Gh
x5oSgx6jByKio4ziYbTJHyMa8w0R4emjeXD8s6CV3tUfEd1lDA/HV+0/M9Sg
PyJ8/XEeXow49HAz1R81Lt3+OkDGg2ra52K/AD1EeHuWh18XzvFWP/UR8c/E
Stsv94Vn5rqI8PdnefBqc+2hN0UHEb98PA9+s3T6ev7SRYTHT+BB36xPd5Nc
C/2HA1yJ0vEOWquzWKGDCJ9/g4fb9r/ceuhqozs4gHSbh09P23V7xfZChNdP
kfrjgeQNoU80EfHdZPAQu/u/KkZXExF+P5MHw02ebt8yNRDx3YvS9T0ZfD54
aE9EeP4cHiyz9vn+WKSFnnpLA5BcHuycLp68b94TEb7/OQ/BDpN/W23xn4hv
P3MKpP1tmb6nNO+rSHj/Yh46+9Rk1E/+Ltpiv04ZD2D/9lrP5C6R8P+VPHgo
ND03nPohEv9+DQ/mxZ9PWD3/JpI8QB0PzrVrTeLffxPxcMu1Seqv+pcn/fv+
i0jyAS087LGfj1Iqv4oYd4I2HrR1fJb2GNspkryAkgfXO43a/s6dIvH5dPEw
MtBDsU1sFUl+oJuHkLqbthNMVSJ5H8BPHrTyVoSu0vlXJHkCDQHWFBqn332g
Epf/qh/vpC3AWY3dT4+/bxVJvkBXgPeVvk7iZIXYP93Mw8FAgFmHnJ8nuihE
kjcYIIDNyBv0srRmkfiDjARw14xuPna7UyT5AxMBjhsNP1P74JNI3k9gJn2/
7MSoZWNaRZJHsBDgU8PGE88uqcQxZQUnJ1kJkLr6tLmFaYNI8gljBQjLremk
repErHefaCfAC2fd+yUlzSLJK9gLMP/755cGNyrFU9hXNFWAmJmO3U5Mq0jy
C47S8YdsCL5o3yiS9yU4C6Bt/TUyr6NBJHkGVwH40waPxu2uF4ku1l2ALOun
HpayNpHkGzwFMCt6ZnO5xzuR6GwXCuBZ/iLWW6NaJHkHHwHMGw66Tfv7rUj8
SP4CjH/8Y7R3r/ciyT8ESv8/NeqgRWeVSN7fsEKAdyefpe/UKBFJHiJYAIuT
cyeczH4j4u5jGSK1b+IusXhcqUjyERsFOOjlJa8zeSKGYYB+iwDtUVs/GA3/
KJK8RLgAy8/PGbblZpNIfEwRAjSFj1slr0sRSX5ijwBWmY8erzB8JJL3SUQJ
cKTANFq//okzyVNEC6C3MXOQ3KVIPIYBuxgBCsbZuQy4mCeSfMVxAZxbn5r3
GfVWdMQAk0wAk1cz3mxvvyCSvAUrQN2uWxa2YfnOeHowJFaAoX9CS25evkjy
F2cFiFpr+WKT2RuRvN8iXoDrpnH9o2c8E0keI0EAj7k7q4J/Pyfit0UMThRg
EjXM5o3ylUjyGTcEKM26rVsA10WiU74twNuo0mH6OQkiyWukCBCQ+ub84r8e
icQ3lSG19+C41IFigUjyG5kCvNavyHhZlyPiclM/UQDj3/3X3pnHiiTPkSNA
X8f4kmFj74l4+Vc/V4CajqAeYLhXJPmO5wK4XDN+fnpMvvjq4YUdegUC9PA9
XD6ffimSvEexABeVn/rX/1nkfAj7rcoEeErvyzhgWiiS/EelAL31bYbZwz2R
6MBrBNj/Z3jh0dV5IsmD1AlAT1z/8fx91vkD1sU3CXApuGDM7cPXnUk+pEWA
CsO7ubfMTzjH4QFsmwD3Rh3c4bHM25nkRZTS/tI3vuBW5InkdQNdAmRHxBje
caoQSX6kW4BtZ5SzysN2OP8fU7dYnA==
             "]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Magnetic Field [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox[
             StyleBox["\"Z [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-200., 1406.5009322560597`}, {-1.2344084045349608`, 
          1.2333141918590798`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"By\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1: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
hTGLZefvcqIQUfahnF4PIvxI606eX/yISkfVRR7EnubDj/S2LsOG17yjD1t6
EBW3PwiHR0/RjvJRC/YgjnQVqdsH/aPxBZ6Zp/e6E1wiRz42cJPrP/8c3Sty
J+qf2aZHs3yjkU+78LWlO6E853zspdIrmoOX2p3PHO5E9jFdtqpjv2lk9BH4
3etGzDsrHsqcXKTJ/c315Cl2I/7NVNKGzz+jVzmePiRu5UY8HHm+U+IfO5pv
fPZeidONuJ+UVzwoxoSDZ5hUDPpcCZ7vDduuZT+g3bNcF2tV7Epkz+3l5OKe
ohnsc+/0sHIlnFsdA/i+v6Qd/Zz9J5TTlRB59tnKZfw7fTk6aZbU50IIrbPX
XGRdpKWSx6Og2IXY2ix+/UCnEB4ZWRzYZeVC6CWZax9s+kS3ZyR8F2IFX/Xe
uXNc+FKxq097nzNx7uQLs9F1nIiMfo3Xi52JrEkJ2xsN07QK1ZaxB1bORNxh
gbnvzsO0eTK9D3E6E6FyV4LOm0zSgx7+Sfje50Q0hIjsc0ULtLtyilcWi52I
Q412zQJsLMgg2ZmJz9qJSMnanl389QbtyK0My9VcTkRgv7BilSMbEtOzE/eu
diQqpy6/PCP+jjb5sqE5hd+REPwQaqkq/5h+M3tWs77agYg1D0mULxmh75W3
xRf4HYiZdTWg4DJPi+7/z/ZxtT3B/LHr6L3imzTzbT+eTfHbE7u+njh/f5AJ
i5HlAX+NHfEvUYP5RdF92peLB7+vF7AjiHUC4yI7h2k3t0xl2NdsIrbFqus9
e/GTtpfZkitaYBPBP+kgICQ1S4s+tr+urMaWuJVi3rbmEzc23/Rd+oSALTE1
qRZ4NfMeTWxyY2tfjQ2x9dQJUe/5fvqXur2GowI2hOCzdDi+hw0RVLiptSam
HR+r6kr9o+99a+oiJ2hNnN3yWdZxnhlF59e/Na21Ijh9ZxyEXZchqnwJELQi
Bgc8Tvt6ztDE7m34mVVrSUwq0wx2bD1J+xJXl39I0JJ4zb+13+LvNI0Q+bTi
Wq0F4er68oWzBR/ae5V28KWgBaHmK8h/ze4jLTqgVmmh1pxQecNtoJ3HjIB9
7IKokDkR8u7xr6xoZix80thUb9dG4uIbXhtLrTv0Lw7V99yENhJtvDHPrVse
04gfH7wTdpkRayqcy8JMZmjU7dUIkZ/9LCfedf+lR5Pl1dldpoSFuqVwyKYF
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
SNsHNcz/AWPOckk=
             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Magnetic Field [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox[
             StyleBox["\"Z [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}}, FrameStyle -> Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{-200., 
          1406.5009322560597`}, {-1.1686421703203449`*^-6, 
          0.000016459264130252845`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Bz\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1200, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8251491889276104`*^9, 3.8251495163387327`*^9, 
  3.8272448445447063`*^9, 3.827307675909442*^9, 3.8278304430442295`*^9, 
  3.8281079184568567`*^9},
 CellLabel->
  "During evaluation of \
In[202]:=",ExpressionUUID->"ed90721c-041f-4b6c-a8c4-a9f34a9413d9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Trajectory", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"trajectory1", "=", 
    RowBox[{"idTrajectory", "[", 
     RowBox[{"device", ",", " ", "eEnergy", ",", 
      RowBox[{"r0", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "li", ",", "0", ",", "0", ",", "1"}], 
        "}"}]}], ",", "lf", ",", "lstep", ",", 
      RowBox[{"display", "=", "0"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824802346035345*^9, 3.824802350185668*^9}, {
   3.8248030966686926`*^9, 3.8248031224551735`*^9}, {3.8248031538253565`*^9, 
   3.8248031591437225`*^9}, {3.8248086818090315`*^9, 3.824808683897382*^9}, 
   3.8248165715193048`*^9, {3.8261220480092506`*^9, 3.8261220548737164`*^9}, {
   3.8269646407369895`*^9, 3.826964653628522*^9}, {3.82696497467295*^9, 
   3.826964989394376*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[70]:=",ExpressionUUID->"3c96820c-329c-4841-917f-6e44a4477cd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<trajectory1.mx\>\""}], "]"}], ",", 
    "trajectory1"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.827830582639052*^9, 3.827830591131175*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[72]:=",ExpressionUUID->"1d12864d-3637-444a-a6fd-e7022cb8df9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Axis", " ", "Plot"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"trajectory1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<X [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Reference Trajectory\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"trajectory1", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Y [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Reference Trajectory\>\""}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plot", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"trajectory1", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Z [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Reference Trajectory\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plot", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"plot", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"plot", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.82490068369711*^9, 3.824900684712673*^9}, {
   3.8249007362288237`*^9, 3.8249007773532677`*^9}, {3.8249008575412397`*^9, 
   3.8249010309361167`*^9}, 3.8249010699942904`*^9, {3.827244256631784*^9, 
   3.8272443314199395`*^9}, {3.828093542276013*^9, 3.8280936160730305`*^9}, {
   3.828093656829087*^9, 3.828093724854493*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[113]:=",ExpressionUUID->"c683d2ce-7e07-46c2-9fb8-fd8bc8bfac3e"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJxVnHlcTd/3/0tRiJIQkigkSRmaTC+UMkQUUqlokKRB83ybb/Od7zVnSohC
iJIkSkJIQioJKUPmvIXf/T6s83k8fv7xeD5O+6y9136tdfbe69wzYYv/Ws9+
MjIyywbIyPzf///+9SyU+f//wcrXwdt+9vP5/1ARX9av/+x65jexCppCrfbO
/KWy4B+rYVpMd9yPM5rE6tCf0lS/eosusQY6V1nlWD41ItbCSDPjNQ3nTYkn
QvtF+5Lp20Csg++fjn8KGm9JPBmqF/Re8pKXE+tib78xHQ/W2BLrIdd5QtTA
a3bE+vBKEx6vFWwgNsDETPVxB+47ERvCp9vRePwCN2Ij2Lx2+lxdt4V4Jlp2
KxeuFXsSz8LlWWeCtuR6E8/G79Vqb892bSeeAx1uT5hGhD+xMS6Mv/Jo2bFA
YhN0WI1drXYxiNgUrjJDryW9DyE2g23yhLOLVoYTm8MpuHCR3KNI4rlQsvhv
Hi8thnge9s6aKOmYwyKej5aYQzG15fHEC1B+1U8lyi2ReCGUqwIzZDSSiQED
3ZW6/p9T/jELuPlx3YDXHWy6vggPlW0mcr6m0/VFwBQDryMTs+j6Ypxkn8jz
DMih64vxcZ2RkPuRQ9eXILnui+w4Ux5dXwIfQ0vXdB6frlsgyWn9GtFfAV23
gLdGoVV/loiuW6J198o5h9UkdN0SBkm6gRblu+j6UsQZ3Wq9EbOHri/FIc4y
5yH2++i6Fcze3O0/aPEBum6FReOmWDseyaXr1nj+sEmFXXyQrlvD0txk7IgH
h+j6Mjj5NlRn/T5M15ehsEXTMMnkKF1fjizt8ggOK4+uL8ci765Ra54co+sr
0BnpOmv74uN0fQWOuZy6mF52gq6vxIxrlbu3WBfQ9ZVYcNcn/tTrU3TdBvYZ
X55MlxTSdRuUp/8e+/h0EV1fhfZHx7tk9p6h66uQHdm1s5/gLF1fjQv7J0Wt
Ep+j66uhWTXhjHNeMV23hVdl2Mvj187/Y9ji3GuHJSVvL9Df20Jrufi08viS
f1xhC5dDq+7O33KJ2q9B3cy3SY3nLlP7NYg3/q4XrFZG7ddgyaJx9ReTrlD7
NTALU5Is63+V2q/Fr0wvju+KCmq/FoHj3rcPHXeN2q+Ffa0Jq/sHccVa3H2a
vdOruZLa2+FF08H5nbXXqb0dHKZpDGu5XkXt7RA+Ulb1cvUNam+H2CeXeV8a
b1J7e7zfaL9U4XM1tbfHDxV7SdjoW9TeHh4nrD/W2dRSe3vY9Lj1CnNuU/t1
kHmd+m1rax21Xwe3c0OUW+ffpfbrwJ/64eL+k/eo/Tq8erNF4bigntqvx9qh
TmMbne5T+/VwsIxwKZ72gNqvR/vxtQp58g+p/Xo8W7bvv2FviGU2YL7Ok/4e
Dxuo/QYE7fumNaT2EbXfgKzk8rOJtxup/QY0DlrZtKTpMbV3wNFYteJ7PU3U
3gEp5qEVhSOeUnsHHFD9OCXI6hm1d8DdWHuNopRmar8R5bWd5vINz6n9Riws
7f9OzbCV2m/EhBv/dVXbtFH7jUhpsjomHPyC2jtC3+2oz8P7xHBE8rzgm69y
26m9I9r5pZ7GES+pvSM+/zq/drZTB7V3wp+wX4vtrV5ReydM6prWrbLgNbV3
wu3vL9d2L3xD7Z1woG6s4XabTmrvDMXNHUvHb31L7Z2l8a19d19WF7V3xung
kS1J17qpvTPqzru9ipR7T+03wbN39MQZ9h+o/SY42Cya4Fj8kdpvwvfMD5Nc
eT3UfhMsH36Yq2b3idq7YEraxsUlGp+pvQuKWuxlrnwkZrnAqWug7+66L9Te
BRsGn1K8d+4rtXfFHq54WdvRb9TeFY6tEX2Oh79Te1csu5NR8rDgB7V3RQCf
7fCmspfau8G5zCli7uuf/1jLDQ5z5PvFjfpF93NDjO2dcz4b+v6xmxtKtjyo
upb3m+7vhtbiusS1A/7+41w3/Dlanxg1V+bfOqLCDe9sxn2r7SNuc0NQqx6b
Wy1L64zNEJ2fucB2b79/rLUZAV38XTlRcv8Ym1FpXTCyzVP+H7ttRn7yuYKn
Tv3/MWszzk9ydZjgMuAf525G9s5jha47FMj+Zgxfzo1bka5I9jdj/s+ZIUfP
DyT7WxBk+PGBWc8gsr8F25O6jV6YK5H9LVCw2rUmXjSE7G+B353C70Pklcn+
FojePHxnsViF7G/BtWlJDxOVhpH9LbB9xE9b94K4bQvid9yVWXdNley7I3/q
vPbJp4aTfXfcvRdtFnlUjey7Y7rKiukDT44g++7Int5Svat8JNl3x+e/8nf/
tI0i++449GVcvvrw0WRfev/dhS6N68aQfXc8/OlbYHxiLNn3QPcLpynLho0j
+x64PsQ0aUamJtn3wNdtUVHKQ7XIvgfKrxx+YviCmOWBSSd2W+tXTCD7HtBa
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
Fnz2N27uqKX9uHUW3FNLDh7KovxumwVh/bKw328pnhyyUHC1dsuB7aRnN2l/
qvRurpxC+vfOwlntEv2co8QBWajc5rH7bgez/suC1f53e5cwzMpC3ICjuh8O
M+d/WVBMaTog1GHO/7Kw8EDPm/tbyZ4kC9rW6svmtFF/crOw6daa6IJ46m9+
FuRy/q65WkbjKcrChmrJgq97aLwlWWhQeJDoMo38UZGF0CHKY0J66Ly7JgtJ
bO+G/hPIn/VZ8J9vdnTjIPJ3UxZ+yAVrtL+h+mtbFtao36paZKJH85+FbKVP
vzu7aT57spC4bqXQQ4vOu3uzwLtmM+FUfzrvlsnGdbtttRFVpBfFbOwu+PxR
xor0pJKN579ZS75Hk97Us6EgNvrxiXnfRisbtXOn2/R7SHrVzQZnesvAny2k
Z8NsuIfKb7eay9R/spGade7ojFrm/fJs+N67+9hrDMWPdTa+y38QfNYjts3G
0xWbHA/+YtZ/2Zju7z5VMYtZ/2WjLV1LZvg1ilfvbLjahMtV9zDv22VD8rb1
UFwhxXt4NlQ96qdG9KfnKUs6vsr5+2v7KF+wpfaWmiXrH2TqsdlIuxi00/gv
5RtJNv58llnfuIJ53zsbqLGsO5xG9bl86finKR0s0KB6bFE25lzr29gZR78f
KcmGss1eM3krqsdWZOPcKMtdCxupPliTjQULOzzUb9P5d302PqfGXs6aSfm2
SepPnoHBh+u0v27LhsqaeuP+SpSvO7PB2+i8dNwfWg/1ZEO/N963JZvyfW82
CmOuxh8pZt7/zkHy+7/ljeeY/X8Orh2pHKO8hvSvkgPLIUY53wqZ+k8OTuif
7u98j1n/5eBWqKxD62lm/ZeD63uXCdtXMed/OWCdOF3BL2LqvzkwC+pW+3SS
eX82Bx4KJs19idQ/6xykNusVKn1i3qfLwcfh4syqPlrPOeTgp6jYPPosc/6f
gwMyHWPfapJ/vHOg4BT5xusA+S8gB2NWVT+fmEf+Dc+BzZeJWh+eU/2VlQPR
gCPl8iVUf2XnYL7L1hEBqlR/5eRguTV/U/CQTTT/OahZWTrcjMfMfw7qfdQK
Ry6n8+78HOhmVDxuriH9FOVg280/qWWTaf9QkgM5tQXfTxkx7y9I/f99dFjv
c9JnjXT85y83Jk1g3ufOwcl1BXtGfiV9N+WgM3mTzqljTP0nBxsG7z6zbRTF
S6fU/6dvubVYEffkoDk/TCvUlLg3BxatnM1b3jLrPw5uNvpH7HMilufgQ3mO
Y/cE5jyQg/evVKebq1M8KXEwYvDRHL+DFP8qHCg0STIv3KT8oMaB8aa6Ijk+
5Q91DgwjGo9fUaX9ogYHI188W1zM1Nu0OMifVKTVeYPykw4HW3wDf7cvpHqd
Lgc/Q66UzMuZ+Y/1ORjfKbZfqkG/5zHkYGBJ5ZMTe6geOJuD0+ZRX+FJ9UJT
DpIrX1y0NKT8Oo8D65fzBw6/RftpcHB9UKB7qAnlZwsOXl1X8lFZzzyPOHj4
6+fZO+qU31dycOxLyYEpIZT/bTn4o7VgwGwj0rc9B493rehre0fswMF03rAf
E7dTPDhzsC7o7K/NJ5jza6l/DaYJGo8Te3AQ+XjYedY25nnGgd7TfWVTmPWc
LwfHrw3IcZ/OnG9wsLx0tHjDdupPMAfDrC8X3lFizrs5WHpto32rFY0nmoPe
W/17VafQeFlSfx1c+ijqAvkjSdq/4OAjBQPIX2wONpSeVjA3IX9mcuBe+bft
sjH5m8PBj21nNYWg+riAg0Oj7CqdfOj3URIOSr56++Zepfncy4HnrondFoPo
vDuXA0Wv0DW8j6SHIxxcs7Tq8TMjveRzMMik73pvKempgIPtBhPaez6R3oo4
qL4yMOLjXdJjMQcuKWZ3+lmTXks4UJJv2NNnR3ou46Du5MqbtSHM+ks6/g21
e4rlKT6qOMjb9GPHe3viGg5kxYn1kZ7EdRysMJRZMM2YuF7a/+Vnz/Gr6X4N
HIzbPebMSKYe1STVx9JxZzo8KZ6bpfO59RYvV4fZv3EQ47rMbl8k5YMO6d/f
Lvz2KZDyRScHMwMdvq8fSfvDdxzk1P5cz31L+aaHg1zd70omxnT+/ZUDieBH
foAL1ed6OShYYXHE+SbVY/uk+hxXu+iyA/2+UoaLyX1jP43cSfVYeS4+mnu8
vN5N59+KXEx/ZlMjbqPzbyUu/r4dpLziCp03qHChN/qc+fFVlI/VuJj58eng
chHla3UuHMfZf37IpnyuwYWC366fvNGU77W4eDhU5dP6hfQ80OHCco5sp0EE
U0/iImPXmjleTL1Un4sNn15IVoQwzxcuIqvP/iwSEM/m4pnRxpmzgpl6Exeq
LX5r5qgRz+MiMOPX+lchdH9wsfSkXgfXmOxbcPHt5NE5e4YyzyPp+I/tD8qP
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

           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"X [mm]\"", 12, StripOnInput -> False], TraditionalForm],
          None}, {
         FormBox["\"Points\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{71., 1.5000000000000568`}, {36., 21.78645171365352}},
      ImageSize->Medium,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Reference Trajectory\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-0.010045305437404948`, 0.010733855830850224`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {180, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
/zS42/g/Xctj8p+GpZdHb52ew+Q/DRtbtyZrZTL5l3+eOMb/ehqT/zRkvyk2
XpDM5D8N67qW+LYlMPlPw7tXnMuVsUz+06Ax+83ViCgm/2l4NObnH6twJv/y
+/nFgWsTwuQ/DZL21R812Uz+05DVNubUGn8m/2mwVvN/ruvN5D8dbx/q/PjP
g8l/OgpyrHM+MM+zejrGVw76prqeyX86soYeN5GtYfKfjuz+qyvjHJj8p+PH
2gN9lO2Z/KejaIS+yhOm/5ik4+jovpbly5j8p0M3xK4314bJfzoeLjj6Mt2K
yX861tqqHSqzZPKfjikP+wy+uoTJfzqezVgW17GYyX86Kk9o6R9cxOQ/HRd/
/bs/ZwGT/3SsL4l6dJ/p75x0TI9NcXlrwuQ/HXNnjzD/O5fJfzpW6yk72hoz
+U/HhEqXdzPnMPlPx4knHScCZjP5l1/P78LqekMm/+n4nfg3d/x0Jv/paBi4
wiNhCpP/dIQ8n3zWYRKTf/n14Nvh3ROY/KfjkW5PtdnjmPzL72+d7EvLGCb/
6dj/4MCtLG0m/+nomb3qbPkIJv/pOB7wcGCJJpP/dDzP6Of3aSCTfy5s7r+I
mtiXyT8Xn7TzL31kvq/VuZC98lvpz3yfa3HRz+7xerUfzPc/F8tHZdQ/7mC+
/7l42cvJg9/GfP9zMepq5pMxLWQTLj6/TDh37zUZXEQZPn/IZ8Ybay5+jOs1
ecYzsj0Xd7b7sMsfk525GF8c53fuEZnFRW7xaLEVY28uClsslZ80ktlc3Egv
/1D4kBn/uWhaUPpxJTPecbjwazHZYHOfGf+5OGclkN6/y4z/8vjqp26ecIcZ
/7nQq926IreBGf+5OO17X9XrJjP+y+OfcEN8hRlfK7gIeJc57mctM/5z0b3t
4/uYy8z4z8X61OYg/XPM+M+F+fq5O9WOMeM/F6Yml4ydypjxn4tGzZ3Ta3cx
4z8XRd1bn9dKmfGfi5bmrqGjc5nxn4snyS7cG0nM+M/FrxX3Rb4RzPifgZ0b
Fwa88mPG/wzEFdurZbGY8T8DK3r9VxO0hsl/Bv5j3zj2x5bJfwZyv+ZbvgKT
/wwsvV33d+RcJv8Z6Ddhd/JBZj5lkoFBr75H35vA5D8Dscu/Bs4YyeQ/A6d2
FeziqjP5z8DzuX6Ll/dh8p8Bd43P2t1/mPlfBh6VTdMb8YWZ/2Xg5O20hJct
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
nNUR5ve9JXDVHCbzaqLzVF3y52fpQO/VGnReTEkK6xBE+6ym82vKUrRXL168
TMicB5Tiy/kqy/i7dN5RVYqsdSlWx0Yzvx8qRfX3T85eHnT+VVOK16ll8X4H
mfPCUvSCyvLIMDpPrC1FxNfMtP6DmfPjUqzv8WFEcSlZV4qQ4qX9vJnf19CT
4rdyTfr4OrK+FPOKI63nr01W2FCKoa8mzVvyjGwkRaqr4LG6R4rCJlJE3prc
6dpONpNC/1zyN83IVIUhhYNt3fm+KmkKW0ix4to35eNFZGspPp+Lc7Obma6w
nRRhurXr7C6R7aVIKl56ucSBq7CjFJ/WPZ307jnZWYoSYVHroJAMhV2kGNHa
HRvZP1NhlhRbVd895pSQPaV4Of2PpGRplsLe8nykWHRGNpP9pagp/vLuLidb
YbYUM+cpN4zRzlE4VIq+N0LuXz1HjpRitL2uXZtnrsKxUky1LjHp1y9PYY4U
uWGyP2fLySlSpIVuu2Y2hacwV4qEq5Y7BDHkbCkec82b2bfIPCnKDxw9Z6vL
V1gkhfRW+lTbaLJUipNB8bnzb5G3STHs1rbaPF2BwjL5/Xpyd3q/GPIeKabN
OwzjW+RSKXYHR9d+Gi9UuEyKpXcqn/8OJVdIMeNYzbTOi+Qqef79clvrB4uo
/0sRpBNWsmET+bQUFscjrp47RK6RQuuWjkaPv+RLUjSZWjUW2omp/0vR79aF
vdOk5Dop7Py0+kS/IjdIMbLo4azn0/Kp/0uxfOu40UciyY1SHJnweKD2NfJT
Kd4eXL7SapSE+r8UY9eqJDzaSm6W3+/J66ZPPUduld+v/7Yemqgupf4vxdNz
IXlxLHKHFDnZX5NFFeRvUnxVVyu+/Y/cKX+eNgze3rGigPq/FN6Gz80jt5OV
CtDcI/PY+vdk5QKs7Gru/dK4kPp/AcLTv3LMU8mqBfgRMW7Siztk9QKEXeww
nKtTRP2/AP82DZsh9CdrFcj760XtSdVk7QII78z8eaLnNur/BRjl7bqs0Jas
WwDOrf+s0nnbFv4PUFMYWQ==
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Y [mm]\"", 12, StripOnInput -> False], TraditionalForm],
          None}, {
         FormBox["\"Points\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{71., 1.5000000000000568`}, {36., 21.78645171365352}},
      ImageSize->Medium,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Reference Trajectory\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-3.4630267193589266`*^-7, 
        4.2564517573690836`*^-7}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {540, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1:eJw123lAlFXbBvDJLDDtha8sfdOC0oLMAtOS0l6u0sJcAlODcgFXcElwBQGd
YZ1hnX0x0cEVXJJ9ccmhtKSyoLK00qCypLSgtLC07u95mAv/aM5vztxccz/P
OTNz/uj+BYkvL+6j0WhevFWjUR+9/7rCvY9Lm/gEev7bnkD7et3Ua3+vS3s9
0Gtdrwd7HdfroV6j14FeB/b6Aa81vR7O/Hj6Ieb3Opj5vR7B/F6PZH6vH2N+
r0OZ3+tRzO/148xfQo9mfq/HML/XTzC/108yv9djmd/rMOb3+inm9/pp5i+m
xzG/1+OZ3+tnmN/r/0HUf7G9Dvc6vNfwOoDW0bKI88963UbraE/v/HNeu3vn
aW3v/ATm987T4b3zE5nfO0/LQs4/z3xaR3t6519gfu88re2dj2B+7zwd3js/
ifm987Qs4PyLzKd1tKd3fjLze+dpbe/8FOb3ztPhvfNTmd87T8t8zk9jPq2j
Pb3zLzG/d57W9s5H4t+e/N55Orx3PsrrABq0xPH1dBvdRHtozXSv3TRobW89
HdtbT4f31r/M/N76l3HDe8FYT3voJlpLa2Z4HU5jBv7pqZ/H+hl8v3TTDF4f
WjMT3joaM3FTz6C3fiZ6Phub5rKe1tGaWbi5p47GLPTtGdC6Wbilp24O62fh
1p7nac0r8Ompo/EKfHsGtO4V9Oupm836V9C/53laE43be+poRMOvZ0DrouHf
U/ca66NxR8/ztCYGA3vqaMRgUM+A1sXgnp66V1kfg3t7nqc1ryKwp47Gqxju
fZ71ryLIW8f6VzHS+3dZ/xpGeXNZ/xqe9L4v1r+G8d73zfrX8Ky3L9bPxiRv
36yfjSjvdWH9bMR4rxvrZyOu53laMwfLeupozMG6ngGtmwNdT90s1s9BUc/z
tGYutvTU0ZiLfT0DWjcXR3rqZrJ+Lj7qeZ7WzMO3PXU05uHPngGtm4f/qAuy
aQbr5yFYtY7WxGKiatCIxcKeBUzrYpHTU/8y62Oxv6ee1sThdE89HRiHPj0L
nEYcxqhumu51XByWq9bRujiUqQZdGoefeurppjiMVjdIU5TX7XHIUq2jNfPx
tWrQgfPxTM8GojEf09UNoItkvjJ/mzqgdfPxnLohdC8xfz7mD1AHdNN8bFM3
iG4a8+fjxn/UAa1ZAK26QXRTmb8AI3o2CI0F6KNuEN0U5i/AgLvVAa1bgGmD
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
o3lyg/L9Swem41b981kSkMj+01E4uDpTwmmkI9r6T4bE0lHpGJY/IkO0dFw6
6qc8oxM3nZSOppxxWvHQunT0+faRTdJGm9JxcsddG0Xo0nSkPaI5Jn5J7D8d
Hs+GtySAbkrH+vuvH5UQujUd4/L1RyWcbk/H23vvPyqRdFc6/l7z4RGJpTUb
cfZqzhFJpP034rPR04+Ilg7ciHkhI4+IkQ7dCM9vA4+Im8ZGTDjke0Qq6KiN
2DCi7xHx0HEb0ZF98xFpoZM2YskXfY5IG63biB9H/ntYOmnTRqD5N+X8R5du
hGXaV4fFbxX734g/rtcelgC6aSOOfaM9LCF060bU/fGUct6g2zfiuxe/PySR
dNdG/N2Rfkhiac0mnG72PSSJtP8m3Lslr1G0dOAmbNjSp1GMdOgmPBmb3CBu
Gpswe++leqmgozbhp2cXKucROm4THB99WyctdNImtO5YVidttG4T0t7Q1Ekn
bdqE38/vrhWhSzdhTePsWvFbzf43Yd+6B5TfI3TTJtS88leNhNCtm3C+9Bvl
9wndvglfvt1SI5F01ybE6N6vkVhao8W20OYaSaT9tVjQcbJGtHSgFucrT9SI
kQ7VIr7xcI24aWgRl7OnRiroKC1qRuTUiIeO02Ja2swaaaGTtKh+4s4aaaN1
Wqy57+1q6aRNWozuE6uc7+lSLSzbfq0SvzXsX4ufUlZXSQDdpMXNb/5SKSF0
qxa3HF1YKeF0u9JP7NkKiaS7tDDGRiq/l2iNDpeXnzooibSvDpVdLx8ULe2v
w3sdP7wpRnqwDkMP6N8UNx2ow2rPU29KBR2s1B+8cUA8dKgOjddbDkgLHabD
Dw9VH5A2Gjps/7j0gHTSk3R4/7xLOf/RUTqc9zgOiN9ar2N0eNauOICO02Hf
YtsBCaETdKiaXnhAwukkHSa8m3pAIukUHX7aP+eAxNI6Ha7tCjkgibRB8ajf
94uWNunw5Bc794uRdil/L+D5/eKmS3U4aD2zTyroch1eLpq7Tzx0pQ539ftq
r7TQjTqMWRe1V9roJmU+60S5dNLNSt4/T5WL0K3KvLu2TPzWeX1WhwuXxpZJ
AN2uw7qbTu6RELpDhwfiF+2RcLpLh+Rz/7dHIulryvUMad0tsbQmAylB7t2S
SPtmICBro/L7kfbPwAd3L90tRnpwBkL+nLdb3HRgBkaVz94tFXRwBtbNVuyh
QzMQ/t/XdksLHZaBod0zdksbjQxcnvT8bumkJ2Wg/vSI3SJ0VAae9+mzW/zW
ex2jzA9/f5cE0HEZqFqh3SUhdEIGnnz4wV0STidloHznkZ0SSadkYOnNz++U
WFqXgVcDTuyQRNqQga+mjN8hWtqUAfsjVdvFSLsykJH9kPJ7li7NQMmg0lKp
oMszEJpyf6l46MoMnGt70y0tdGMGYv6NcEsb3ZSBzSd/2yaddLPiiAPbROjW
DHyak7xN/JK9PpuBI7qXt0kA3Z6Brc+N2yYhdEcGTvQL2SbhdJfi1BHbJJK+
loFhnz+8TWJpTSYaHlKcSPtmImnj8G2ipf0zEfTfwdvESA/OxJ/bNNvETQdm
4sq0r7dKBR2s1I/as1U8dGgmQl+M2yotdFgmntjWb6u00chEyP92lkgnPSkT
v90XUiJCR2Xiwd8rtohfitcxmUi4ErxFAui4TPg0bn1DQuiETPS9+Y43JJxO
ykRsSd5miaRTMvFhsO9miaV1maj91+SSRNqQiRt/PuQSLW3KxD9Pn3KKkXZl
4updmU5x06WZMH82ySkVdHkmLtUGKL/v6cpMzJS+TmmhGzOhC/xT+b1PN2Vi
aFunQzrpZuX6GX91iNCtmRgdodhvg9dnM7HN75JDAuj2TNw26FuHhNAdmfji
+1MOCae7MtFp2O+QSPpaJp79MtUhsbQmC1HWpxySSPtmoSLtol20tH8WZF6O
XYz04Cx89/dAu7jpwCzUnHbZpIIOzsL/fAfaxEOHZqH87nyrtNBhWUg49K9y
3qCRhT8a11mkk56UhaoTv5tF6KgsfD5pg1n8Ur2OyUIkBpglgI7Lgv/NB00S
Qidk4dxdcSYJp5Oy4O47zCSRdEoWnpn+p1FiaV0W7kg/a5RE2pCFgmEnjaKl
TVnQP+4xipF2KR74llHcdGkWfv3pqFEq6PIsrDp82CgeulLpf0+1UVroxixo
79lulDa6KQvpN2UZpZNuzsLvf88yitCtWVhiGGwUvzSvz2bhgUc/KJYAul25
/uuXF0sI3ZGF3Zf+KZJwuisLLT9kFUkkfS0Ldy3QFEksrclG1cfrCyWR9s1G
v/M/F4iW9s+GKzquQIz04Gx8/ddX+eKmA7Nxc8S8fKmgg7Px3Zxf8sRDh2bj
k3fy86SFDsvG3LCwPGmjkY2ugj8N0klPysbBrHcNInRUNhLbdhrEL93rmGw8
tsaonMfouGxsfznHICF0QjYO9M00SDidlI0rDRkGiaRTsvHWOp1BYmldNuwz
Ug2SSBuyMWf3coNoaVM2/jtqukGMtEt5/cJgg7jp0mz8ouvUSwVdno3m5t16
8dCV2XgoZ4peWujGbMTLt7nSRjdl47d5y3Olk27ORmnqzzkidGs2vtqzIEf8
Nnp9NhsRuWeU8yDdno32b6ZmSwjdkY2dq97LknC6KxvnP4nIkkj6WjYefep0
psTSmhy8FL0yUxJp3xw8FTg4U7S0fw463J9miJEenIMvz2/NEDcdmIOcsykZ
UkEH52DsG/MzxEOH5mDc/FkZ0kKH5SD406gMaaORg4yRijvpSTkI3BSZIUJH
5eDK6ckZ4rfJ65gctCT9L0MC6LgcfPrnQxkSQifk4PY9N2VIOJ2Ug9a8UzqJ
pFNy8PX2XJ3E0rocPNodopNE2pCDdc73taKlTTnITpmlFSPtyoFm6hebxE2X
5iB3WuQmqaDLc7DwjhMbxUNX5sAxN2yjtNCNObivuyJd2uimHLyZ9Vi6dNLN
Oah+tSFNhG7NwX9enpYmflqvz+ZgqOP3VAmg23MwZFV5qoTQHTk49FhiqoTT
XTm40/+FVImkr+Ug/bVHUiWW1uRid9rQVEmkfXOBp+9OFS3tnwvHzwNTxUgP
zsWcHYrddGAuTi37v1SpoINzEb7aJ1U8dGgu7gy/skFa6LBcjL7wyQZpo5GL
4jHbN0gnPSkXu36N3SBCR+Ui81LuUfHReR2Ti+Dzs46KHx2Xi7v333tUBtEJ
ubjmbDsiAXRSLmpGbT0iQXRKLr4KizkiIbQuFw/n33FExtKGXHzd72Pl/Eyb
crHTWHhYImhXLko+iTwskXSp0u+0/x6WaLo8FzmP/aycr+nKXHwy9vghiacb
c3FPxS7lvE035WLGrOJDkkw35+LAMu0h0dKtuZh9bP0h0dNnc9Hy7upDYqTb
letfv+qQOOmOXOi2K3bTXbl4Py/pkJTR13LRpV1xSCpojR6XDy08JA20rx6b
3px5SDy0vx5RI/53SE7Sg/V4YFXAIWmhA/XYMuFao5yhg/XY2NHcKG10qB5+
wyyNcpEO02Nc4KxG6aShx+p5dzZKNz1Jj09sHzeI0FF6DCgxNIhPhtcxesx9
dUKD+NFxeuTs0zTIIDpBj6HT36mXADpJj/7n8uoliE7R49/imHoJoXV6HHsx
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
b1ffECPdXoSPrh18Q5x0h9JP/dI3xE13FeFOn6A3pIy+VoTcNzs2SwWtKcZL
YZWbpYH2LcbgS5s2i4f2L8abu2dtlpP04GI83zJms7TQgcX4Y/LQzXKGDlZe
n9J/s7TRocVY8dxNm+UiHVYMv8dvuKSTRjH6Ffztkm56klK/SLHQUcVwH//L
JT4Gr2OKsbv6T5f40XHK62d3umQQnVCMw/d/55IAOqkYjx35yCVBdEox7p5c
5ZIQWleM51YWumQsbShGxdRYl4TTpmIMyB/hkgjaVQzfpzudEkmXKv00H3RK
NF1ejBnfLHNKLF1ZjKCXHnRKPN1YjPy/2xySSDcVo/t4iUOS6eZi3LV2rkO0
dGsxGsqGOURPn1X6q++yi5FuL8bQLe/axUl3FOP8Vzvs4qa7inFsg8EuZfS1
Yvz75zq7VNAaI96NXmaXBtrXiHHjFtnFQ/sbse/KfLucpAcbcbZUcQsdaETF
i4rP0MFGPPTHPLu00aFGBB+PsctFOsyIZ2+dZpdOGkb8Nfdpu3TTk4z4syXA
LkJHGTHw3A2b+OR5HWPEZ7mf2MSPjjPi1uhtNhlEJxhhjVhkkwA6yYhpVcNt
EkSnGKF5/FurhNA6I6bbtlhlLG0w4sShWVYJp01GvJL7f1aJoF1GLDrVapFI
utSI4WPtFommy43oPzrOIrF0pRHvn37cIvF0o5L/zu0WSaSbjMgP/M0syXSz
cj1M58yipVsVP9FiFj191oj4906axUi3G7F19wmzOOkOIzz/HDeLm+5S7t+X
isvoa0Zcf+Yds1TQGhPOP/uWWRroviZog2vM4qF9TZiZtsMsJ+kBJnwyLN8s
LbS/CaMzlprlDD3QhGPrYJY2erAJ78T7meUiPdSEfk+eMUknHWjCs8M2m6Sb
Hm7C1LdeMYnQwSYcPfF/JvHJ93qkCZPvPmUUPzrUhMcdeqMMoseY8ODQF4wS
QIcpf39eP6ME0eNNuPHlp8USQsOEl4/sLJax9EQT9pxIL5ZwepIJv42bVywR
9FQTRnwXUSyRdJQJuu6wYommZ5owckposcTSMSZsf3lkscTTc0xwT3ikWBLp
OBNiHlOcTC9S8u8eUSxaOsGE0wMeKhY9vcKEMy/cWyxGOsmEVU//p1ic9FoT
XmjoLhI3nWLCXf+eLZIyOt2E7NaqIqmgdSbMWJdZJA10tgknKqYUiYc2KD7w
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
RnHSTVYsq9A2yhb6hLIf/ruiUdx0sxXm12c2yk76lBWvD3iqUcroVitaCu9p
lP30aSt+e/OvBqmgzyrrYcqZBqmhz1mxcnptgzTQ7VYcrjY3yBH6ghVD5iU1
iIfusGLWmOkNcpy+bMUnN8Y0yEm6y4qYV4c2yIf0VWU9HvJpkBb6mhWG6d31
8hl9w4qRd1yqlzO0xgbD/u/q5Wu6rw2ZlvP10kb72nCp/9f18j09wIbYp76q
l4u0vw0JDym+RA+0IezzL+ulkx5sw51TztbLFXqoDR+VnK6XbjrQhg+uf1Qv
1+nhNtx3/Hi9CB1sQ11WXb3cbPZ6pA0Lb99ZLz50qA2u1YX10p8eY8PuW1bX
ix8dZsP8qJn1cic93oYi3zH1MoiGDVE331EvQ+iJNiQ+3FknAfQk5fUrTtXJ
MHqqDUPf2lcnQXSUDY9pCurkEXqmDel9V9ZJCB1jw8z1M+tkND3HhhGf/a9O
xtJxNmjnPVon4+hFNhy/J7BOwukEGx5vvrtOJtArbLj5Z/86iaCTbFjfenud
TKHX2rBg94A6iaRTbIjboHgGnW5DaZTiaFqnzIf0r5PZdLYN0x/yrZNY2mDD
mtg+dbKQLlTu7yN/1Uo8bbLB//bLtbKcttmw9N2vaiWRdtnw3Svv1soausSG
e285UCvJdKkN7mnGWkmjd9lQcy6xVrR0uQ1/6F6qlSz6gA3jAkbWip6utCG3
rF+tFNC1Nnx6W0eNGOlGG35V//8eK31UWU+/7KsRJ91kQ+gfphrZQp+w4T8t
qTXipptt0HyYUCM76VPK+rv2Wo2U0a025A+bXiP76dM2bPxyco1U0GdtuGVV
RI3U0OdsOH/3CzXSQLfb8OFXz9fIEfqCDVuPKvbQHcp6bpxYI8fpy8p6O/1s
jZyku2x4fsT4GvmQvmrDtWuP10gLfc2GeQcfrJHP6Bs27LlyZ42coTV2tNX8
Uy1f033tKBj6fbW00b52/OQ8US3f0wPs2P3Ojmq5SPvbYYvdVC2X6IF2uKbE
VEsnPdiOitWjquUKPdSO0e/dVi3ddKAdJ0f/UCXX6eF2PFLydpUIHWyH7v3S
KrnZ4vVIO7oXZVWJDx2q5F9eWiX96TF27Nw3s0r86DA70ionVMmd9Hg7Ar54
skoG0VD6O/ZolQyhJ9qx6bugKgmgJ9mR5BpeJcPoqXbc8uCwKgmio+zwfe+B
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
vhlBqsWO/wfZUELK
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          NCache[
           Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           NCache[
            Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[
          1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Z [mm]\"", 12, StripOnInput -> False], TraditionalForm],
          None}, {
         FormBox["\"Points\"", TraditionalForm], None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{71., 1.5000000000000568`}, {36., 21.78645171365352}},
      ImageSize->Medium,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Reference Trajectory\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-200., 1407.9996964410618`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {900, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1097.2727272727277`, 272.7272727272727},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.8280936184657946`*^9, {3.8280937127049637`*^9, 3.828093726653209*^9}},
 CellLabel->
  "Out[117]=",ExpressionUUID->"17758429-6b59-476f-8ae5-d6afe34979f5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Undulator with magnetization errors AND Position errors", "Subsection",
 CellChangeTimes->{{3.8248085959951057`*^9, 3.8248085993883896`*^9}, {
  3.824892042253575*^9, 3.8248920718633785`*^9}, {3.824892531676162*^9, 
  3.8248925508024073`*^9}, {3.824902427931222*^9, 
  3.8249024283530684`*^9}},ExpressionUUID->"2edc69f2-2481-4bd7-bc6f-\
b513072e0d67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"device2", "=", 
   RowBox[{"idDraw", "[", 
    RowBox[{
     RowBox[{"typeID", "=", "\"\<DeltaUndulator\>\""}], ",", "gap", ",", 
     "nPeriods", ",", "periodL", ",", "blockGeo", ",", "blockThick", ",", 
     "blockGap", ",", "magnetizations", ",", "terminations", ",", "mode", ",",
      "subdiv"}], " ", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.8248928149054813`*^9}, {3.824895447213827*^9, 
   3.8248954933247595`*^9}, {3.8249116342001486`*^9, 
   3.8249116464691386`*^9}, {3.824912541665639*^9, 3.8249125520256057`*^9}, {
   3.824912641195282*^9, 3.824912642721958*^9}, {3.8251487838997545`*^9, 
   3.8251488031184034`*^9}, {3.82724352747953*^9, 3.8272435728395495`*^9}, {
   3.8272436562927294`*^9, 3.8272436816492047`*^9}, {3.827243739546035*^9, 
   3.8272437431199875`*^9}, 3.8272438746406345`*^9, 3.8272439898516293`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[92]:=",ExpressionUUID->"51970c01-f619-4545-9077-87159e95ab32"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"nTotalBl", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Length", "[", 
       RowBox[{"magnetizations", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"terminations", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "+", 
      RowBox[{"Length", "[", 
       RowBox[{"terminations", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}]}], ")"}], "*", "4"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nCasseteBl", "=", 
   RowBox[{"nTotalBl", "/", "4"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.8248928149054813`*^9}, {3.824895447213827*^9, 
   3.8248954933247595`*^9}, {3.8249116342001486`*^9, 
   3.8249116464691386`*^9}, {3.824912541665639*^9, 3.8249125520256057`*^9}, {
   3.824912641195282*^9, 3.824912642721958*^9}, {3.8251487838997545`*^9, 
   3.8251488031184034`*^9}, {3.82724352747953*^9, 3.8272435728395495`*^9}, {
   3.8272436562927294`*^9, 3.8272436816492047`*^9}, {3.827243739546035*^9, 
   3.8272437431199875`*^9}, 3.8272438746406345`*^9, 3.8272439898516293`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[93]:=",ExpressionUUID->"c9a8538f-04dd-4dbf-8412-99f003dc1c35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DumpGet", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{"dir", ",", "\"\<listShim.mx\>\""}], "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listShim", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{"listShim", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "magnetizations", "]"}], ",", "nCasseteBl"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"shimLimit", "=", "0.1"}], ";", "\[IndentingNewLine]", 
    RowBox[{"listShim", "=", 
     RowBox[{"RandomReal", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "shimLimit"}], ",", "shimLimit"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "nCasseteBl"}], "}"}]}], "]"}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.8248928149054813`*^9}, {3.824895447213827*^9, 
   3.8248954933247595`*^9}, {3.8249116342001486`*^9, 
   3.8249116464691386`*^9}, {3.824912541665639*^9, 3.8249125520256057`*^9}, {
   3.824912641195282*^9, 3.824912642721958*^9}, {3.8251487838997545`*^9, 
   3.8251488031184034`*^9}, {3.82724352747953*^9, 3.8272435728395495`*^9}, {
   3.8272436562927294`*^9, 3.8272436816492047`*^9}, {3.827243739546035*^9, 
   3.8272437431199875`*^9}, {3.8272438746406345`*^9, 
   3.8272438970597906`*^9}, {3.8272440832990894`*^9, 3.8272441135427685`*^9}, 
   3.827245083602747*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[95]:=",ExpressionUUID->"1c22e0b5-9f9c-48ea-92a8-998802b6fe3a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Apply", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"j", "=", "1"}], ",", 
     RowBox[{"j", "\[LessEqual]", 
      RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
     RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", " ", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cassetteID", "=", 
          RowBox[{
           RowBox[{"radObjCntStuf", "[", "device2", "]"}], "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"radTrfOrnt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"radObjCntStuf", "[", "cassetteID", "]"}], "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"radTrfTrsl", "[", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"listShim", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.824892822842905*^9}, 3.824895064378887*^9, {
   3.824895140087889*^9, 3.8248951931234293`*^9}, {3.8248952390184603`*^9, 
   3.824895293367147*^9}, {3.824895339249571*^9, 3.8248953597778115`*^9}, 
   3.8248954752460537`*^9, {3.8248955056939583`*^9, 3.8248955060429153`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[97]:=",ExpressionUUID->"392e52f6-4c00-45eb-9e78-fcedfc261635"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Solve", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"idSolve", "[", "device2", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824802346035345*^9, 3.824802350185668*^9}, {
   3.8248030966686926`*^9, 3.8248031224551735`*^9}, 3.8248955277931347`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[98]:=",ExpressionUUID->"3e9235f3-a0ed-410c-98e0-c64bc76a605c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"radObjDrw", "[", "device2", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Delta Undulator 52.5\>\""}], ",", 
      RowBox[{"BaseStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"14", ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Times\>\""}]}], "}"}]}]}], 
     "]"}], ",", 
    RowBox[{"ImageMargins", "\[Rule]", "5"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"600", ",", "350"}], "}"}]}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8248900522968903`*^9, 3.824890052979478*^9}, 
   3.824895545539844*^9, 3.824904676072342*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[248]:=",ExpressionUUID->"bf5d013c-c6d3-4e28-ab6b-be92052e2047"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Trajectory", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"trajectory2", "=", 
    RowBox[{"idTrajectory", "[", 
     RowBox[{"device2", ",", " ", "eEnergy", ",", 
      RowBox[{"r0", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "li", ",", "0", ",", "0", ",", "1"}], 
        "}"}]}], ",", "lf", ",", "lstep", ",", 
      RowBox[{"display", "=", "0"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824802346035345*^9, 3.824802350185668*^9}, {
   3.8248030966686926`*^9, 3.8248031224551735`*^9}, {3.8248031538253565`*^9, 
   3.8248031591437225`*^9}, {3.8248086818090315`*^9, 3.824808683897382*^9}, 
   3.8248165715193048`*^9, {3.8248955317533083`*^9, 3.8248955564117584`*^9}, 
   3.824902935602762*^9, 3.8249030312606745`*^9, {3.824904623415433*^9, 
   3.8249046241497526`*^9}, {3.827243844400959*^9, 3.8272438555905485`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[99]:=",ExpressionUUID->"51e023db-7d3b-4d29-acbb-602a2aa5c31b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DumpSave", "[", 
   RowBox[{
    RowBox[{"StringJoin", "[", 
     RowBox[{"dir", ",", "\"\<trajectory2.mx\>\""}], "]"}], ",", 
    "trajectory2"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.827830582639052*^9, 3.827830591131175*^9}, {
  3.827830757208102*^9, 3.827830760106438*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[100]:=",ExpressionUUID->"fcb31fea-df92-4bb5-ab88-2af0685af375"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Field", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"baxis1", "=", 
    RowBox[{"idField", "[", 
     RowBox[{"device2", ",", "li", ",", "lf", ",", "lNpts", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"display", "=", "0"}], ",", 
      RowBox[{"oneplot", "=", "0"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8281079098987694`*^9, 3.8281079193103657`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[203]:=",ExpressionUUID->"25c4fe18-7f3c-4d35-b037-28c4d811dab1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"baxis1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
        RowBox[{"baxis0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Field Difference\>\""}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"baxis1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"baxis0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Field Difference\>\""}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"baxis1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
        RowBox[{"baxis0", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Field Difference\>\""}]}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.828107929273642*^9, 3.8281079786249237`*^9}, {
  3.8281080100749545`*^9, 3.8281080956091137`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[207]:=",ExpressionUUID->"33d210a6-b692-486b-80fb-bdac5b04cf24"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
NuvtAsQjYua9Yz70noj55cG8b3Kb4f2wXvhwflvlGN16nC8HRZHkkJvCYL5w
fxpFeavWHM+zt8b4R5H6zlZ2W6TjMf7MuhOt6DDiWUUUtVasasix6Izxj6Ka
JNIZl2YA+4+iesMnpX0H471EHvPOmT0+2sLf5kdRQ4631ZJmwv41iv617/7l
fBvsV4s4vcu6uO8fcX5SwmxpcFxbuA8t5/Qulz3ntwWrWJ6hmnD1DuK9SuaD
5d4/M+DPq6OoduenH3u3YX9dy/yyncX6zlgPRNGkavwsDRqkA/uPJkN68Pju
Ex2MfzT1oEPfbkq6Y/yjSVqwsUNOH7xHMYqmP83yt2Qcxf21STT9Gz3XsWon
6mcWTY2tUvLO+uE82yKawrTT/4Z0hv+iaI7/cj5cvY71wDaaJP8KL98bhXjD
IZqK5r3Rb/RCPOIUTbVboxdrrhT8fzS5NDj46xrAP3tw/qeaj4w84c99oola
PDteYb4B/p/lQzdK7tlthP9n/aH5/Q9vB8dwffdMoeudwdJostz017vwNuIr
Becf/Pa7uBHrQxbzn9izLf9g/cll3rt4/U+RcF/LPPtg9OKpQvzH7LDzYvUP
tEfJrOEefKEduOj/9T9b311YP0qYN1+a6bULXM71M/61+3MrpFexvNL365Eb
4ErmHl2c+hRgvayOJuXhvoOy7kB/LffHt6iwNY/Qf6IY9mc/RSvzUV/NGFIu
XNzLz124D46hncm+XxY/A+vFkINsxiyRIfrbKIacrrS1mjQWbBJDGo/Wdfo6
DmwWQ9W9g3U2DQNbxJDRlQ6NP/uDKYbEEUeH/RbYNoZEPZ8EegrlOcQQLVlh
liUGOzEvmqe1KBUs5vTvypJ23hHGn/n+N2VpPdiH25e276R+B4xXEHOFYra0
FnIJpy978P3fHnAMy6V7gt9qgaXMNmtmJPZB+xWcftOIRzs+oP+yYkjtrb/i
yUxh/Wf5ns/PkuZgPPKYZ0t2vvuG+ZzP5a2xySyYi/NFJctXvZ7joY/zyCJm
1cnp8Rdwf1DCHPEqQ3YH523lMdSwz8ZFfQ/ea6lY/8tm3Y8+hf+q5PKd7sid
h8NfVseQz6lBtYnHsT7UxpDinvffcxlYf0SxZGR+rGWiBOuZJrP8nnH5pbWw
/1gSm0ddcH2A+2i9WJIUGolEv3H/bBRLl2d3eB+rj/tEk1hS+lyN2qWP+0Yz
Tt/YQr3CA/eRFrEkyjnWvfMW3N9SLNEya8cna3F/acucdM9ZSwf3tw5c3p4c
K5+1YCcu76ssbY8ULGZe88lJ7g32YD5z3qxPO7AP67vY9Wi3FSg/iMsr+iSR
B0C/hOW1OvdMRqF+MbGkNmzS5b52uJ+Wcn0eR81dl4b7UQWn3+wqUxfjPj6L
5d3fJ694gfOqXJb/d+Dh/Eis93mxFD78VcdOz7H+5ceSev7GDcYXsL9WxtKf
RRc3broyAOMfS+9HxWwvtsP7rJJYKui1L9DACfFdOdffTPlLViSc78aS5c/H
r7IacD5dyenry1oErRXuuzi9vvvKe9mYr7WxFFbaQiYKw/wWxZHl6rxXvu/g
LzXjKGz2p3V77sJfaseRyH3hpbcWYbD/OCKVyae+uhLYfxwV9Ng+tXQh2CSO
Gotm9sv2ApvFkWTInutnHMAWcaRslht5vyWYWN9icWJ1X5Rvy+mjjaVXPkC/
A5e3vGOLi4vgf504/f5bLR8Ew57FrD/o+6iv1kL8z/Vr7Rk7/wbs0YfT38/0
7qOF/ghinrJDemsQ7FHCvNLbLjoZ+9kYzj8m9vEHEeJtaRxtLM7vqdqGeFoR
R0e3ZZzI7Izznqw4avCL/2Rtjf1SbhzV/f0hXRCL93t5cXQ6rOPj56cbmtbL
/DjSrOrX6VGXIRj/ONIITe0WvQvvu4riqFnFl/rVQ7G/K2F+9jW/mw7eE5bH
UYu8OXZ6V5FfFUdtJO4OX1U4z6uMoy8F+j2sAvE+tDqO/hQUBGwO7IHxj6N/
hkeeXh6I8zFRPP1rVO5z39kb4x/P8cuyb5+UiGe0mcNi13rpqmP840kkSTu5
ILUj7J9Z1f5sl/M4PzFhttVR9YxFe8ziqXGme+2BwEmwf+b1Dh6pMzH/idmz
feK7+zNh/8x1qp2LxIjfHLi8+VFpucbC/p/lp9q2nNXOHvYfT2FdvaQ5S7Df
8IinjRs89P/LxHmWTzx1WJh5dEFtM4x/PIWbLbFe2Us4/2MufWv3wBn+NYZ5
ae7p5WMRr0jjSbI7Yoo9wf4UzJrNsn/VCec/XL//dPcM2IH5k8vyz4UPj9Zh
f5fH8jkfntasEPZ/LG+9oN/FX1jPlcxTDk752QHrdVE8qVVsfP3yhHCfzfkb
h/pfegUu5/r192vbbZtwv81c5Xlk8Ddh/ef0GotsTv9D+dVcfveAR5kq6K9l
+S+Zw9S7mP+iBFJLKmvzRx2smUDhyw+bZYbCn2gnkKjbPbVfQ4XznwRSzt7W
18gX5Rmx/IrRLhvB35gkkOpw2y2rtIX3cly+eaXGwkHC+p9AyTXlk67lwZ4p
gXr/npi8fyL8gW0CKdp1uxZpvwn2n0DV5t3KswMiYP8J7H92zu1/NAr2n0CS
Do5bP76Kgf2z/u3fb/b+FQf7TyCx57MhT64lYPw5/9ve6zsOScT4c3614r3d
DJMw/ty++9tzLyWCpQlkFXVjjm0MWMH5883sYvTBWdz+/luf589BebnMzw8M
K5qwBePP6Z1Ob9nxOh7jz/rqZvT/ZY36KVmfdHPl/dWofxGnN2m+/eYKtK+E
5Xkq6YMpaH85t+f9m4/SvugfFcvrX/r8NUH/VXL+ERMeWD5B/1azfEtN+106
wvkf53c1nFPaTjj/20Li/uPbDLolnP9tIYfzPT10xoG1t9C+Kynv7O3BeltI
uTfNcNcvsBHnv6l+428/lGeyhUTvP53MLBXivy0UFhD1LvMD1heLLSS59GBx
9jTE18Tp+x+pqnURxp/Lv7i1rnJTOMaf5V6pxTHuaK8Ty4PiHw7+BhZvIcp5
nZ3edTPGnzlux0PZG8h9OH+QfF/vReAglmfoPOyRhPIlLLdy6zMxDvpjmKe6
/jHZJ8T/W3j/si1O9gn1V3D9E/f5qH9Fe7OYJ7aas/6WEP9x/R4N8Qw6Lpz/
sPxNWK3SGfaUz5wdXPNQeE+iZI5b4t6nFu8Ziph7znObPBLxYMkWCm84uCXt
lnD+s4Wyfv1YmuMmvO/ZQh365wZYX0X+yi2UP2L7grW7sJ+q5vRjDdY/fwB9
tVzerRMT8gbDP4kSKWtdsxb3Jwv2n0iXU2SWRl7Cexhmly/tnoaiPXqJpCz0
0Gsl7MeMEklCEY5TR8MfmSTyfvxY6PWXYDOW13zJivFG/1iw3LWo17APYEok
NYfKqTlOmE+2nH5GzSvd62AHTr9/x3WZCfYnTiz/HGP1Yb3wvpa52q6Z+1Gw
B6fvWH6j8pDw3pTLb6m6PnEBOIjTz50/2nyL8P6U2enjyTHjUZ8Yzj/T/7Th
EuE9Ere390+nkDboDwWXN2xQct0TxO9ZiWTlYa+7Zin6PzeRjLqVfcz4jvUi
L5FerVBVyT2xnuQn0qainc/Le+N8TZlI6tt1i/Z9QrxQlEj/2kfU7D2tj/Wf
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
lkK/J5Y+lo9BedYp9Gtmz/FG/vBXtin08+ySwrJOE2D/XH60/YgBNcL7FOY7
nbdkbIW/cWS+fnL/+zuI75y4Pev0u2bZI75yZl701SpiCvyLmPmn2pb50wX7
5/4weNPa8Aj8hQfz9Bbqheq4D/Zivn4gfmtn3If78Hi01P35oBTn+X7MSYvG
Gg7A+6gg5tzPK2StcR8dyrxgzto9vsL7R+ZLl3X6TAJHMIfPMbXdifwxKRR2
dPWxL544z074//gfvyN5IryPTCGJ577XHVri/jqN5bH7DH4I99WKFFK+dTz0
XA/tyeT58n2Xm8of7c1i+ZBhwaXm8HfZKRSR8m15/UTsP3JTKNw9xuxvFfzz
IZ5fvTr3TBiD/sxj+e7Op290Rbx4kuV633f8Ske8m59C6qcNHRvk4AssL6+o
7KItvL9k/vy6/s0v8DVO3zq3W7+R0FfE8rwl9QNy4H+LWd5u7AGOH5u4hOUn
P97U9MZ4ljJPaxbwSYJ4t5w5f9yvzgPQvmfM389nFywAq7g//Cr07gvxcgVz
qJGjaiHyVzJ/6VLSzxjlVzG3tojS8BX2d8yZI8wWjEV9a7j/g3us8vYT4n2W
12t6+q1C/FzPHDdj6TozvCcVpVLj3NHNrrzH/NZI5fi+6PHE7rBHzVT6ZznY
umNpQ9PvT7RSKexet9C1Qdh/aXN+k7LMi8Nx/9splRpOTz5rNRb3zXosn/Dl
zJxkvK82YPn0vDrDnElNbMQ8/62Z1jrIjVOpvvdtm12FeK9okkq/3+cspJmI
b0xTqVPe9MxRJbh/N0ul5pqtLg3ajPv64amkbpyketgc72ctUknNI9zr3V/M
l3HM9Rve0x30NzFnrG5lPQrz05p5c8SzK06wN1vujxv/eu21gH3NYLnJbNcN
2bAPB+bbO2cdScP7D0dOr5U+NuOz8F6RWVqUd9Qf92vOnD5077JbvcHiVAp3
yNdb+Rj53ViutTav5wGU78F8Z6PV9yzYmxeXV3Yof3uF8L6N5dNWbuqlgfjE
j8ur1L3c2gzzOSiVXpkqSz/YEew/lf409nb/rIf9sITHU79nu+xcnH9HpJJk
jXn0bT/cP8awfPolq2EBWF8SeDxvHv628xPiASnzx25TGqMRL6elknLGxilp
eljvFFzevoTCut5C/M/17+m0+Uc21tss5uJeh88kYv+SzeUdudtY/hbnb7ks
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
Q+In/A8b/gVB
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{36., 1.5}, {17.00000000000003, 20.571824254645094`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Field Difference\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-0.015408982773558288`, 0.012699254890839007`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {193.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
Kawixyxp2tse8w9vFeO98AxcV8bNf+T4sPTYbrCAPG1Vz2kNmI+Eq5hES+LQ
ZTHSZxT+qNeBEUuRPxHZfvwJmxDkX0w+U6WwckT5Qun+yda7NUZjPSMhZ5Wt
uX0I8790FWPCSvFpL8xX8lVMPsj8p8ZW1GfeKqZ8UuItN8V6RUHx24zvdbML
6r+CbP65etlQH5Sf/CvN574Y85uKPDZlyAcnL5Q/gvGChbl+/LkoPzluc7Pl
TQ+Un2z87v3qYsyHQrKqYMa5xTAja3XvqxfhjvKTRQ4b/lXifjG5QrC5aCKe
n1Ayyx6dOJVbP5KvzY688RT5larT+3Yys4RbT5ELelfGa2L9lEderz9MKy0I
5SdvOdFr1Cg8TxURTLLqiYnuAKyXlBSed2Hqmr+ofxWFd50fJUxB+/AimeTi
1hObL2E9wScrvwpOrUR7CshO83b4X4KFkYwV7Tpw8yTMIlloZGiJRRDX/pFM
9Crqj2snWBxJ64vgSZonEX8o2TrB7G8ILKH4u319KVkAS8kzO8WPkXLrObr+
wWiDeR2555/8LLVoRwWsIF/TbRhdgfVRBbmnUz+z79x6j+x5oe56f/QPFdkk
sNVKGzzfvCiaHx5UDRiJ/sAn7zLJfvCRW/+Ru4+IrfLn1n/kM3+6PdnBrf/I
Kasy01dw6z/yFuuAjNbc+o9clHU7cBy3/iOv3ar/uh/Sl5BF2p2vnkX/kpJv
ds/pqYv8y8m2Ls5SU6785BP3zlnqo/0UUYzl7n337Snau4LC60eIjDdw678o
Jpnyz6V+CJ4XFXnjpoNGA7A+561mkg6v9z/g4fnjr2a84viKobux3xGQzeP2
vjgwDeUni1cFL80cjfKThX8fVx/DeYiI7BZk6zwD84WYHHbcvXkl5qNQctN1
w8C7WL9JyDzfB3unL8D4Tz7kf0WqifWGnBxRnyxoxnyYR97S701jKuZLBTk5
jicsw/qjglw+z6frrkWY/9Tpudyw18N8qyI7Zbp5WMO8aFqvZxzL7gnzyRJd
v+8ncL+AvHnH7dwviF9I/lmzIvkOt/4hl1xPqbbwRfnJg7yK241G/sXkDRHm
8x6gfKHkDM9b3t0xf0uimST8TOqWnZi/pdGMXa+f1/3cDJSfrj/5fOOxCOyn
88h6I8Q/0jBfK8hVv0vX/sN8XUE2WG9/sYhb/5FlIZVlezHfq8iBN8a1Nsd6
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
jrBHGhMUNez7ysPvGT0p/S2j8+fn432HmPK3/qpdYBaeN19K/56T3zcnOIDi
f3NG//Z2fB8xiDws7+NHd3wPMZTi+3kqyWk9vqcYTr7dZOAVC0dQft3275yc
he8zRtP9gzo/Pa2J7zlKKL2ZiwYNH4nv/cTR/cnZ/cd2hhPofsdlszftw/ck
kyncbnfFDw1YSveXHzDTUuLvPVLTWKjOK4+SA/i+pYzKZx7cuGU9nEnp5yiG
9QjA9zLlaUw17OP27lH4vmYW1V9K8ex1R/E9z+w0lrdk3J5TE/H3WblpTNTF
706aBM6j9lmjeT1Eiv5SQF7SqJ9Yie+LFlH+bJZ+CXDD+6bzVJ6BltGDU/F9
UgXlZ7HjjQkquITaa/Grr0dM4TIqj/PZJMU6fC/1FuVnmG7gbR1837UijVU8
0Znx8w6+z3qfrn+340r7Nfi+axXF/7hGf3wawqvJIfrzx8zG92SVlD+VcXw1
F15H5fvZxXKrLcLrKbxnza8xHfB93Q+Uv5S62JRshKvSGD+6352yZvy9VAOV
X1mqsuuD7/82khPqpmTG4/u9TVS/ox9MH8znvt+bzpi7jcGqBfg+syY5v/7l
ngxcr5XOVCfFZ3udwveUtdOZeGVEzJt2MD+d8XodnDHXFd9D1ktngt2/nuUw
2CCdVUUr313Yj+/7GqYzZViOqUYw4hekM9H44oD3xrjemNJLnFoxaRa+x2xC
4WvY9vyXKI9ZOpOPGv6x/1h8T1lI6QmO6hvp4/vQ5ums8W/nPvMz8f1tq3Qm
KQrzDFqP75Fbp7PQqDbZWTfxPWxG6TX+UgSWw/aUXm3Qg27O+L64E6U3bILp
lP74nrgLpaevdXn/plctFlF95MbkOE1Cem5Uvp1+Y/0L37bYg+I7dSigzhLf
z/ak9KcIN+lrvWmxmPLnVe7yuy2+7+1LnlMYWSd60eKAdFZn0tSvxA3xB1H8
kROOd9PC9aEU363Qp16zkb9wag+m10+vA/IXkc6kAlWq0V+UJ5qu9/QKahqI
8yMJXX/x7pNRW5+2OC6dmSgtg8INkX4Clb/KImqjYV2Lk9NZRauUX2cHKVss
pfInSI//voz7U6k+3T1j1mjgflk6U2RpbHji9qTFmekswCbCLEGFcHk6c2p2
Htu3Gc6i/CZlmRqMQP1kp7P6KYGtBM9etjg3nVXrD+ve4RfKl0f1dT+je/RW
hBdQfRdECvtdQPmKKL5557N+3rzS4vMU3iai6vLlm/iedToru5Esq5Hg+hIK
L5e92G2F8LJ0lre31Y2Ef68x/1N5zT4NWd3qTst8XZHOZE+3L1lejfzfp/pq
YxFrtOBki6vSWUT70ftlbXB/Nd3/43Bz2QJFi5XkZr2C5dsutriO0vvgcKDz
sOstrqfymRqH5Q/KQP+n9mvICtO3eY7zv3SWXTv474aPpS1uoOuTPJV5hjL0
/3SW++jYyQ2u91vy20Tpvepyvc25Ey3myRjbWaPKbHsa/V/GsnOWxTjHo720
ZMz8h2WeyZUH6P8y1pS5326c/j30fxmL/DruWutSPA96MuY4Y5LLGA20h4GM
JfcMqhhkWtliQxk7++TtyvyheF4EMubhuNVsufJKS36MZexdbv70tACEm8jY
xQsvtaa7wmYy1mqjy3PZXdS3UMacFjo83LIR9W0uYxUex+oib1/G+38Zs9Eo
vmPkfxf9X8b6LLtWOunto5ZwRuX9Wplow32v317GTI6ftbXVLkP/l7G2Lp86
LF6P8rrIWOxqYbf2TkhfJGOfhDbH9+2uaInPTcZk38bmO8w722IPGQvY9LDL
xMF30P9lLPfoFj3Hp9fQ/2Ws6tX92SHSAvR/GVNFZ9bwrxa23B8gY6Eldu0f
brqN/i9jo98ujk69jfYIlTHLmae9MvejvsNlzPhG+aFhWWjvCBlb27u37LQb
HC1jwmebh5b3Oor+L6P9j2NhhEE5+r+MfTHvVe0aWIH+L2N/xmQ1lp5E/0mW
sbqX2XPmvb/REp9UxhKyPh5u5YT2S6X4Eo6LDdcHo//L2ODqrcuUr7F+zqT6
eOqyunLuKfR/GTPUen8+9tdh9H+6/2fk7jGX5C3xZcvYmXiJMOjUxRbnypj9
mujFb2qvtzhPxjR7fWzIeJ6N/i9jK2q/DPZaivIUyVjKrPZz99vieTgvY7fS
Buz92XimxQoZO/x2xL0k3dIWl8iYYOHfMZstkV4Z1ffDwMzkjSjvLRl7/ca2
R+9DBej/VF83/KcWZqK+7suY3vOzy8fdu9sSXkXP43jjQbsPnkf/lzG3Wfu2
b96C/qqUMbN9Ipcb6++j/8vY+BnbzlwsR33Wy9jm2H3FzZ4Ybz7I2BFXbfmk
ILSHSsb0VffDNr6qaQlvkDGLkg9pCy6ivhtlLOjyj0/fLG6j/8vYh/y9ly6m
P0H/z2C8+X7j/10chf6fwbTDD936xj0vWhlsfXyas/ze+RZrZ7Bv6VcXbtuO
/PEz2EMPjytHe5a3WC+Dvan626U66lKLDTLY/AHjXp0KO4H+n8Hk44+uK4k/
gP6fwZStVlnld0B/M85gfTocuFQYe9vmfwCRmAE=
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{36., 1.5}, {17.00000000000003, 20.571824254645094`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Field Difference\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-0.010791838124454278`, 0.009002723711759142}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {580.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{{}, {}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6], 
          LineBox[CompressedData["
1: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
lpvLVj+qr8LE45mm+u3FJE+NiYVn37fUDSf/qyV63xjl9Z9Ok3/VY2K51JHR
ytUUH8DE0z2FUfczaf/DjIkXU29lzNpG/s2KiR5r/pX847TetWfCcduE1GpX
Wg85i9ozY3ju029k/+5MfFrbbnh9mjjfZuLI/paz9t/cBjmMCa/V8d1+SuQP
mEwYvUiYqbGN5jeLCZ99DSdizlE5m4lC31qzvCDKv4RMNEt+31e8iOZPIRPH
h1c7nty3fZBLmCiOSLoxMoLWV+VMqBt47Zr1H9ljhUj+lE/+wiCKx1VMnHte
GDlxouUg1zCxzqr0Up8czbd6Jj4/MTxl10jxuomJ92oRzmxL8X4eE50876NW
pZRftTFxwitAaZkG+YNuJn7en//DeMrmQe5jiuJ7i0eCQLz+i8PmrMx07SLK
hyXj4HrefXRSDLFMHO7pn3Yof+04yApx2DKy3fTzL/H6MA6v7vRHOy2j/EMt
DrPZtzz3bRSvl+IwrPNuo89jOv/Wi0P4sIrgtX/F+6tx2Cbd8SvOivbLzOIQ
1zKybrclxT+rOLAeT7jWZUrx0j4OdyberJ58hvIN5zjs2mTeqiBH+aF7HCa/
dHcOHkX7WX5x8JR7nb55O5WHxeHIxj+yK2aK7S8OXutGWXhk0vtZccgec8hS
6ivFJ3YcTnmOYvHDKf8RxkE+Se7FyEm0/1AYh55Zq1qu/KX8qSQOP61tjBn/
0XiUx6Gxen7dmyk03hVxMJznX/YvmPxtVRxO345Mid9J86smDuvxrLE5meJD
fRwmSZtJLueSv20SyZvbpLNtL8WT1jgkVMakfa0gbotDZ3j3x0W6xN2i8bee
K6vuT/6wLw6Z/okxPa9ovjPiMbF73cyLY8g/SsajbvZR9TxDsheZeDTozt7A
uEDtVYhH4vn9JRJHaL6rxOP14YIonjb5T7V4lN/dFvG2luaPVjy8U4s3rEsh
1ouHa/XKMzU+tD6GSN7uvrObz1J9s3jongt2PqdN9msVj9udiipzNGj9Zh8P
pYebh+/fR+1zjofk1pr5P+Kp/e7xWHKvfXp1HY2fXzxm3QjU79eh8QiLx8op
pvcmTaT4xBT15/gUzeftFE9Y8VAf6ZgZzxTHo3jcKx7SKFdA8V8Yj2HD67bN
Fu8PFsbDTGKd84qDVF4SDxPu35l+W6h+eTwi0lRXSdjQ+yvicfPcBY+GMvH6
NR5HbbYf11AhfdTEI/zrs+Ba8Xq1Ph4Zp2Pz6/PIfpvi8WnCliDZZZT/tMbj
3fE1zW/9aX+wLR5LV53f9qBfnO/F437pucMz9lM+1hcPRf8ArSW3KT9lJCCe
Z7n69lGKP5IJWCW3L7pHheKPTAKEq8fUZriS/1ZIwNWXj+0irCkeqSTASGd8
3fPJlF+rJeCL0vMazVZirQSs7lqUd+kCxSu9BGRNNKobc5LiAxLQ0CJ/VKWe
4pdZAlxf7wl7PJ3ilVUCXHIttU8WUbyxT8Di2q36FSsjyf4T0LFk+uvOV7S+
c0/AmUkV3xcsjCH7T8CzobP+DPQShyXgvdsiFn4SMxNQs1S2r1T8PCsB+YGX
dl+vofexE3A5q5uT84ninzABG54uzel5RO0rTMDjffX7b+6n9pckIHFM3v63
ntTf8gSsHLqBe8ycxqsiASoeQ85PthavXxOw6O32Ris9n0GuScC5aMVskzxa
T9QnYFvbmzWqcuTPmhJwK7rxZfNT8metCbByUNp7uZXK2xLQ3/X65N1Oiq/d
CXCSvbfBSbze7EuA84H0VYtukHxGImLUBNcuL6P2SSbChmG1e8V+0p9MIkbs
eeIe/4b6o5CIdkupHSv/kf5UEjG5L6kg4C31Xy0RvsPeHvYJp3xAKxHfkg5v
9NlDrJeIZx+WYIsyMRJxK7Nf4fsHep9ZIjw37pK2/kbyrRIxYVdeY4t4/tkn
YrH8RLtnHTRfnRPhHFxw5dAJ8ufuiThx3+CMq50430rETY+5/6b2UHwJS4R6
5W/PYWw6z2Em4pKTRGY8awnZfyLMXsiVP9awIftPREZdi16MMfknYSJaXuiV
JB4j/1OYiK3RC1smbSR/U5IIXacdHdM3k32XJ2Kc2hCm/lHKTysSkRNytclH
mvxPVSIOOvzoH82j8ppEcLWaPdq2i/dzElGb1bnNW5f2W5oSYTRf8HX8KYoX
rYmYOe1FxGY78s9tibi27WqxfaA4309EVp7uwOs62n/qS4Sk+prDR4PpPg8j
CQpyZfNbNtJ5qGQSpsddGHnUgNZ7Mknw0vs8ZNFPWr8qJEHVJd1i0ziabypJ
CJz319Kij+arWhKCmVv3x/CItZLAuzip8a0kzVe9JLCqR2uP2kv5HpLQMM3D
+d1CirdmSdAeEV+sOI7OY62S8PrLVP1pm+l8wD4JJ9wHAgu+Uv7hnIRDnN+x
ZxwpH3NPwl2NvJwaH4qXfkl4lLRuThSP1g9hSeBkfW7a1x9G/j8J12fvyck/
GkX6T8Lt8EWHgiNjSf9J8Jz4ZVztWTo/EiYhIUqhevpKOl8qTELNlQ+SirHE
JUnoHXOp4UwAcbmo/35rs4w0iSuSsIoxdZTdGXpfVRIu+MysUB9DXJOEx8KZ
U2/tiiH9i/ofuGexw2ZqX1MSvp468CT3E52XtSbhj13F9CptikdtSegoqxnG
MqL+difBsYP9z9GE5ldfEq7O/93ZXUnzlZGMbzHD9ig603pPMhkaT38MXZNO
8VcmGRsvJZwMDqX8RSEZ6l+OHB5WTvtLKskI9hw9ecMr2i9VS8bX8fZXlm9a
SvFfVB5qvO7kUbrPp5eMgaYTf+7vofshSMYs24OzjZUpvzJLBmKe8r7wxecp
yVBZn716eTXZs30yCvdKftwnS/PRORmvpvz4oxshtv9kPFF3+zaqg+KbXzLW
eX744R8kzv+ScXR9l8ToJcTMZEw54BQguZKeZyXDRjL9cds+8X5cMub3Pjjd
PJ/mqzAZfvMdWodepv2awmS8CI+/x19K+yclybgwpdM+eAbdDylPxto963yt
3em+WkUydsjtbVTvMiL9J+P7uBsBmUxaD9Qkg6d+usL9AcX7+mQorWdr/eZT
/tSUjLAR3XNnR5I/ak1Gec3zV2EHiNuSMWHssYXv71N+1Z0M+3TX6ysbSH99
yTiVmb7sOpPWt4wU9Gz6fetEP8mXTMHAgrgIp6HkL2RSsO152Jj9tbqk/xSs
Lvi90cKL7v+ppOAlLyTJKJTWv2opOObrP4N3mc7ftFJQv3b5mNjtdF6vl4JJ
2WuEw5to/wkpKBe+mbYyiPa3zFLgdyjjfbcv7T9ZpeDAxJMMzb/kH+xTEOhR
sXa1sfg+SApsJi9ufL+Z/JV7CnrLU4dOtyH9+KWgeWnxb0cFmj9hKTg34Ftk
F0TMTEHul/dSH84Qs1LgxDsaueM+MTsFwVMuBFhdJRam4L6OhNHnNPH+dAru
lg5TMl1OXJKCsIl3FBMukfxy0fsvDBSWP6P2VaSgVmnR/nd11P6qFMj+0z+4
KIXWOzUpeGauUOjfSf2vT8H4B37bT36g8WlKQY1idGSTD62PW1NwUjmj91My
xbe2FFi7/5d/0IL8eXcKvspduLT8KfnTvhS8Se6smPJXfP+KhZvcuyf+Xaf7
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
VplQnLrVqVqe7mfaZ0IjI2qeVhyt350zMdIk/WD2edp/dc/Er4PB27VrxOeN
mfALKh/B+I/2W8IyEa64rqyzjsabmYmcZ5r5Mo9pf4WVCe2vhV8CHcXnP5ko
Wv1l2jDx/U5hJmY5hHGnTBWf/2RiX/WpFeqnKB6XZELiCXPqlUXE5ZmQCmh8
n5tPXCEaz6ZLHlocmg9VmVC+eSnfp43eV5MJWX/f83LW4vtcmai9Zv/yWhHt
9zRl4sXonHOHbovvN2Vi+cByPfnj1N62TJxcqZqutJr2k7szscLp/dK2COK+
TMQvX1LvPV28/5+Fy2f9siaNovqSWTiXGNV1Zoj4PlgWdi6s3cb6Ru1VyMJC
23AfxR5x/pcF67F553cdpHiqloXz8lNevv9F8VMrC60T1D02ziZ/qpeFG3N2
DC3cLf69VBYyo10jGj7TesQsCwsmxd4praH7gVZZ+OA4Q1DnSf7EPgtOnGH1
J+rInzpnYfGHgKkLHtL6yT0LJeUbzQ9tEO//ZWHTpKfPWjQofoVlQSmwQvi7
k/wZMwt17+5XCQLJ37FE5efcOyL3k39lZ2FHY8O7UzbkH4VZ8HO4LH01m7gw
C33bvoQ82EpckgWXoZMX9d2l+uVZ+Fi9Y1L3E3p/haj/77wzrYLF8T8Lu9pS
RrPY1L6aLKx3vmmYJE3tr88C5+x9o9hKykebshBzcoDvNYfiS2sWhj1bNNX2
LOWjbVkYczB3gkkUrc+7Rc+/mvjjgMZi0n8WthYyUv1W0vqKkY1I6bUqnv2k
L8ls9L7ru3t/I8VTmWy4dNndGRJH+wMK2WiuW33/bzWxSjbGb3MzuqpPrJaN
e19ubgr7S/5QKxtfhx6w1VpM8VcvG2X7tpwp5tH+ArIxImV6j/RPOs8wy8bw
5h6naRdpvWKVDZN1azODtxPbZ+PxVz67WYLWj87ZsLJo/q1xm85L3UXtu7xW
/3cH7d/6ZUOOlfBjmPh+a1g2KoY/tQi/QfOXmQ0JrQuvWzfS/GZlI9CnIvRe
s/g+RjYUVocr25uQvQizkW62oSgwjs7TCkXyhx7qqLlG/qQkG1GcE3Wzxorv
K2YjM/jMjrYJ4vOfbPR1T3p1sUp8fyEb4YZ2vaMGiGuyoa1vPTesjrg+G64a
Z1s+LCVuysZMZtknXVvx/T7R+6o0N8zVpv29tmy8u+FXM/U67X92Z6Mz0qem
+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
redFf+I+Lr67LglTf0j+8g8Xi4umVsRMoPoMHtYxpzPmgeK9BA+3Xtq8uPOa
7FeSh5DI2jX2IbR/L8XDjTu3Jk1RofWBDA/zD5xNnTqa7ofI81ByKcjNdQWt
VxR46HFLmiKlQPfHlXgYePNrU+pVGn8VHna0CXXiskhfqjyM2BGvMbmO9KvG
g6C0i5lgRvsZmjxkqmxn/XtD+aIWD+aTotRfpFO+rsNDV3qr3Rs+sR4Pk03z
G0OliA14aI39uDlfmuqDh/Xd8YYvYmm+mfKgkfeq8Sqb1gNmPCziWv8nTKH2
WfDQPXzHqpHpYvvn4e2tw/2nT5G/sOXhePjIFatkKV+15yE5JP3egiVkX1t4
0Jc/73frN503OvOg3NZTz8ol/+TKQ1pPR1RxLq3f3Hn47vD4kUwg7W9587D9
1XffMSxiPx7cSt+4mMym54N4WLDhAfOIDo1/GA++/21UNRSfl0XxwJWWc/n2
iJjJg7fKZ9Wc88SJPHAcO2o3nKb6LB4Orj7zeaI2zf8MHkymXYdqCvlXNg9O
h9zmChLp94g8HoYcO2JhMHQU2T8PQqkil6O36Dxnr0jfGuHP7n6j9WQhD7uW
ee3QLyR7KOZh5Jj8fRUWZA8lPEwtsbl4K5/ynTKR/my0f89YQPO1nAfd5DtP
nojvX5zlYUOIXvnNQuIKHmYcLtqmFEP2VCkav5mcefobaX1QJeqv5kybtw0U
n27y8PpN6SdMpPVlDQ9P/hYMH1pI+0e1PPzQLg+ukxd/b4GHS3nHVk5MoO+3
NPDwyNHyClf8+7Qm0fy/Hnh+vSGNZwsP//2MOTWvQPz7TB7qcj6WhiSSP37H
w1DbrzYBQ2m+tInaE1Ds/8SAuIuHvUGMEH9b2m/vFvXXYO5/ogXcIPfycPeF
XluvE+XTfTysLasc0n2L5scfHuYZzR+uKS3+/gsfN9dbmM62pvgpwcexDSnD
b1p2D963kOTjdtS9RwaNdN4pxccFpXFXUz7SeZ0MH9eOdhYd/0zn/fJ8eG8Z
uZr5h87TFPjQ82fGVjpRuRIfzuwL5b8TqL4KHz/823+82k/neaqi5203jjM+
Td+HU+Mj8dLpVu0Eus+iycf8x/f7i/ni32Pz0XM6JfG2IZ0X6/DRdCTYkSFD
81mPD/fn9bubsyg+GvCxoHOu9DkNGk/w0cqMGH4smfyTKR+Vk7xcfHZT/DPj
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
sap0
           "]]}}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.006944444444444445], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{36., 1.5}, {17.00000000000003, 20.571824254645094`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Field Difference\"", TraditionalForm],
      PlotRange->{{0, 1609.}, {-0.012480706567476949`, 0.010167894157279072`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {967.5, -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->{1101.4545454545457`, Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.828108059483797*^9, 3.8281080985061636`*^9}},
 CellLabel->
  "Out[207]=",ExpressionUUID->"d339fcc2-2cf5-4851-9b5a-ac3bd3e52884"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Trajectory Differences", "Subsection",
 CellChangeTimes->{{3.8249011837628756`*^9, 3.8249012267714796`*^9}, {
  3.8272445020921583`*^9, 
  3.827244503648264*^9}},ExpressionUUID->"e9bdc5e7-67b0-4003-af87-\
8cf661efeb9d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "the", " ", "Delta_Field", " ", "needed", " ", "to", " ",
     "correct"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"deltaTraject", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"trajectory2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"trajectory2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"trajectory2", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.824900575966677*^9, 3.8249005883999367`*^9}, 
   3.824900619759215*^9, 3.8249011190090437`*^9, {3.824902938149889*^9, 
   3.824902942212983*^9}, {3.8249030235136623`*^9, 3.8249030263379836`*^9}, {
   3.827244198595034*^9, 3.8272442505312796`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[194]:=",ExpressionUUID->"ff6b6569-181a-4447-85a0-73565e8bc607"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Axis", " ", "Plot"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "deltaTraject", "]"}], "/", "3"}]}], "}"}]}],
       "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<X\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject", "]"}], "/", "3"}], "+", 
          "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject", "]"}], "/", "3"}]}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Y\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plot", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"deltaTraject", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{"Length", "[", "deltaTraject", "]"}], "/", "3"}]}], "+", 
           "1"}], ",", 
          RowBox[{"Length", "[", "deltaTraject", "]"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Z\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plot", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"plot", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"plot", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.82490068369711*^9, 3.824900684712673*^9}, {
   3.8249007362288237`*^9, 3.8249007773532677`*^9}, {3.8249008575412397`*^9, 
   3.8249010309361167`*^9}, 3.8249010699942904`*^9, {3.827244256631784*^9, 
   3.8272443314199395`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->"In[89]:=",ExpressionUUID->"d717ccd7-e3e0-43c9-bde5-7b458df1258b"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
Gk6uSsKTtlP/LkwhVychtXMTv3ouuTYJh6XNDi9WkOuYdpvt/l3e5MYkeOpY
NYyMITcnYYfhvHQIyO1JyBRtHuG3l9yZhNL1Z4qk5WROMvTb1zvevENWSMbN
9fNt/zWSlZPhHVy3fNZ3snoyrlcMvRDeP5XqnwyjkqfzTmuSdZNxInrH9e+G
ZINkLJ13crKRFdk0GRke/Ud7ryYjGdpFWhNzA8jWybBd4PluTyLZIRlFTlN3
7JCQXZIRW3zncWQJmZuMKUs4T/UqyT7JuLG+pf/p++SgZHQbFWqovCNHJuP2
EMWB5p1kXjKiR49RNxmYRvVn2o3Dq/5pkgXJOB325NBWA7IsGb3b3kj7LyAX
JWO2ouo0BydycTKSh6+4EuxNLktG4WKnD2FR5PJklE7e2LU2k1zF7K/W/Yz+
dnJ1MnP9df756Qi5Nhn/FGdkiqvIdck48vXXfL0H5EbGzqN6H39Lbk7G8Jyy
Jzrfye1MfZeHKibJ86n+yVCcFTbr1nAyJwWpso55P3XJCikIEJuvk59NVk7B
DzmTKd9syOopyEx8/6x8DVk7BQsd9aKX+5N1U9Bku93ufAzZIAXaxs2qX7LI
pinYsVTL4lMhGSnoV/hYqaSUbJ2Cjve9ivUqyA4p0FneMmLzbbJLCr4c3+wX
UU/mpmB/Z8FefCT7pOB8ufmzez/JQSkwfWKgNl4+neqfglDVXMNFamReCoI3
3Nk2ayyZn4LTQxx/cgzIghTYrfl4b5cFWcZ8/qS/y7WXkItSsLYwWp/nQi5m
8tnkvfHqBnJZCj61J6/9EkwuT8HhEpmwN49clYLxYwdf+5tFrk5B9yT52rcF
5NoULL3V50TZfnJdCjg+fY54nCA3pqD6hhzv10VyM9P/0JVLwXfI7Sm4l7Bm
8a06cmcKbH+nbPnXROakom24wmaV/8gKqVgcY9f1r5usnIrpLitybytkUP1T
8fdnyOIwNbJ2KpwMKmr+jibrpkIt76yr3xSyQSrWDPhVcc6EbJoKr2J962/z
yEgFf9X9yuF2ZOtUbGp0ldNzITukomJX6rnpHmSXVGgNznxiGEDmpmL1UKG1
bhTZJxXbB6x5NDyZHJSK4m/7+nNyyZGp8K6YsvRVAZnHxHtU3Hp8L5mfihsf
NmpEHCULUrFtUyxn4jmyLBXxCyMOV1wlF6XiXZbhLMMacnEqzCdovYh5Ri5L
xQ7XmWbSt+TyVPTSdj8c8ZlclYrfmyNOD/1Jrk6FcombvS8nk+qfisktP2Zt
7E+uS0V+fieGqpIbU9G166av+0hycyqc//uibj+W3J4K1cSV055NInemom71
cB2OIZmThtl2iWrXZpIV0hDw2ah68hyychqCTp4vmmFJVk/D/L/pvi2Lydpp
2Plnr8IKe7JuGk4ueKcW6kg2SEP7nww351Vk0zQ0f7+S2WsdGUz8fjrbYtzJ
1mlwvdx4/q4X2SENS7dN6//Lj+ySho9neMF9A8ncNCiMCz/5NZjskwbHuVFr
r4STg9LwY5fR64hocmQaUt1azg6OI/PSMP7G0Oz0BDI/DeLEg1Zvk8mCNLSt
uKw3kk+WpaGflVrX5ExyURq0X7f8U8khF6fh7pXm0NsCclkaNGZvO7VCRC5P
w9UTadkH8slVaVDqe8XnqpRcnQb12/sCiwvY+qeB2zUqZ/k2tv5pkI9aGnC5
kK1/Go7YhwV3bmfrn4ZfslXHvu9g65+Gv33nD6jYydY/DTsu/5u1tIitPx96
0YrvjrJW4ONvw+2Id6yV+bBtcW/7xlqdD/VHl0SNrLX5eDr0460y1rp8HCwy
bPVlbcDHcnGykQprUz4snr88d4j9POBDZ8rYLXNYW/OZ+o2cfY/9/A58XM1s
DFvP2oUPjUVls36w+XL5MMkrfJfP2oePpd7O/eexDuJj2Eo31y72eEXy4RA7
vvoiax4fc3tvyxaz5vNxp/W7fwRrAR+HDH0uebOWMZ9n/NR8T9ZFfPDa40v8
WRfzUbLlVngc6zI+3vgOHCxjXc6HXKyv6hnWVXw0HY3fU8e6mg/dM6IN//u8
tXz8W6ddOpTNp46P+nHNFyaxbuTD47vOP8P/1Z+PDQbSrsms2/kQ3ngzV4V1
J3P89H7rv2b3z0mHh7v1dglrhXR8WvY4SY+1cjoinwiPFrLnn3o6AqqK819t
ZeufjqBp94Ja2fNVNx2H0h+Xn5Wx9U+H/NVnrRbs+W2ajjXCiTFB7PmPdJwe
8CLOhh0f1ulYEuqsfoMdPw7peHXzOv9tNlv/dNzpmj9yZwZb/3TkeCz88yuV
rX86mpxm6v9KZOufjtT6idxd7HiPTEfzKe6LH1Fs/dMxacVsp95hbP3TcfTW
W7877PeLIB0xwRN+r2W/f2TpmNDVOeGiJ1v/dPic5nn9YL/PitNhIPb50I/9
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
CxD9n+IM7VNknQK8CGk7qno/d+7/AUICtLA=
             "]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.013490586960292504`, 
           0.015535493844987808`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"X\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1: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
+RKnebR+Cr7piwP2+9CGKTj60HKufDNtkoJWCRpOk8pppKBmds+4wve0RQpK
fw+a2Unbl/VPwVXBiX3+ZrSt4v5mLNza0pN2SEHQ6g4tqrbQLinwyG9l9rOS
9kyB1auMTVl/6MAUPFR/uKBslB/rn4JitV3J4WvohBS0Gfi8ZbWcFqag7G+o
+fUbtDwFDvNGBq5U92f9U/B1VNvuQdPpvBQM7n8kuHs4XZSCrIham4En6ZIU
xX69fdvkH3RpCqJmvqwfOyGA9Vc8r6ZbT9sG01Up2O1xeH7DSbpacT8H3nuc
+UvXpmBnzNUO66cHsv4p2OMyW+1OHN2YAhV5Z/m7q3RzCm6bjXmV2zmI9U9F
2AuV1k02tHoqZi5P2HZ3K62ZihsfR+bOfkVrpyKnzYxHViODWf9UzNLsKP3l
T+srrvcxym5uKW2YisjaRyGW7UJY/1T0Hrt5TK8ltGK2zPn9NrQkh7ZIxZ+f
5uMnvqctU/E1Q+6WPzGU9U+F3/fu57sm0g6pGJ73pNGvmnZJxZArOpdu6Iex
/qkYU/zoZq9gOjAVU7Y++DevkhakYvfpzjOX9Q9n/VOhOmdDL0MfWpiKWxPn
Xj17iZanov7Htg9NfSJY/1RcNNnT46Q3nZcKq4N3f/ypoIsU+b/4Hny3k4D1
T0WW/o2FyybRpakYN7z8e2tnuiIVwhX3FtwV0VWp8G3htOryGbo6FUFvhjY9
e0vXpuKRQ8kw3R6RrH8qFoeU/0o0oxtTkdT18Yf+nnRzKvrgy/1X2bRKGnLa
lW19fplWT4PjgdSOPb7Tmmk4tFC/MF4vivVPg+2N7jvHL6Z10uDlVS4ZKqD1
0zC2jeS0/QHaMA0j9xh9flRDm6RhqKrB1W3to1n/NFz5teNkwUTaIg0pk2t0
WrvSlmkQWYum7smibdNw/lrmCNll2iENydFZ2+/8oF3SoN7z2U77YTGsfxru
mmYbjV9BB6YhfMD6p7YptCANhpphEaWn6YQ0VBZU9XX5SAvTUK8SPN1CN5b1
T4P09nU/Wys6R3H/rVQvp8fSeWlIO7l4/stjdFEaNp8NWm35li5JQ4Vl8+uK
PnGsfxo6Tm1pP2shXZGGbFnz9/JIuioNemt75E8qpqvTIDy8aPXuV3RtGvYX
h/dp0TOe9U9D7QUntdlz6cY0vG4+JQgNo5vT8KGg07tNhbRKOsTdbdflPqPV
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
3a0saCc5qu7NsOlmSbvI0bp6iuS+Db1BjiTj7zey7GlPOXYtlaqvdKZ95ait
WTe5nwcdKEeHx4s8av3pUDlaOp7auiOcFshxy6DkilMcHSOHu4dz0+A0OkEO
tZ1Bvd9I6BQ5ioR1U/K30EI5Rv0bYu++ixbL8WvMo9BR+2m5op7RbvJPxXS2
HDk+KQcPn6Jz5Irfz96X/crpXDnuVTnXjq+k8+To6jys6cdtukCOd/c3qJ56
RBfJ8TPwqlb4C7pYcf3TEQPQQJfIMTx/78iWX+hTcpzptnFC+U+6VI7dZq+n
xbU8wvmveN7d3WdZtKMr5Ah5pDevXRe6Ug58LFlY2ZOukkMv/+iiNF36jhx1
F9QsLYfS1XLE2hnN6TKarpHj7O6caXdM6Fo5DPPbj5eCrlPU3/DmMFsLul6O
zvI/fXpZ0u/keCww61BjQzfK4Z3Q99cWe7pJMd5mpb+yd6ab5RCPMbqh60H/
lmPM7cQjL/xplSyYPUnI2hVOt85CR/Mvwc5xtHoWahIdlw1NozWyYOhsPK5B
QmtmIT2ttPP+LbRWFk50HfFu4y5aOwtv/4y7YLif7pOFHOd52Z+LaZ0s9K5c
71V8itbLgs7b7TP8y49M/R+0MCI9
             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {0, 0.08502902221690833}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Y\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJxd2HuczHX///EPraxQU61spRpd1CqXaxS15dCQWKHGsXVsCC02pigrYpzX
oUyOm1OjxDqUkdMWaRRaJeYKWYdqyqGtHKYSm8jv2/v5eP9ut2v843a/vd6v
9+t9/Hw+szX7DOnQr7zjOK2vdpx//te/xCPO//7z/i9Tk+xKclqS05NcI8nu
JN+Z5FpJvivJGUm+J8l1k1wvyZ4k10/yfUm+P8kNktwwyQ8k+cEkZyb5oSQ/
nORGSW6c5CZJbprkR5Ls/V8Hk+w0S4on2WmeFE+y82hSPMlOi6R4kp3HkuJJ
dlomxZPstEqKJ9nJSoon2WmdFE+y83hSPMlOm6R4kp22SfEkO+2S4kl2nsDu
jxRPsvMkziRu7SXuwy1kr3UW7a3bylFrH/ntcQfyrTuRb92FfOts8jvgbuRb
9yDfuhf51k+T31EO+sm37k2+dR/yrZ8hvxPuSz52+pNv/Sz51gPI70z+QPKt
c8m3Hkw+9gbI74KfJx8HXyAfR4eSj50XyX+K/JfIx8Hh5Nv4CPKxM5L8bNqP
Ih97R5OPnSD51mPJ74rHkY/d48nH/gnkW08kv5scnkQ+jk8mH3unkG/jU8nv
zvink4+d18jH8Rnk40SI/B7EXycfJ2aSj12zycfeOeT3pP5c8nF8HvnY+wb5
ODqf/F6sx0LysXsx+Tj+Jvm4NEz+04x3CfnY9Tb5OHMp+TjwDvl+xrNMdmN3
If3hghWyH3tW0T+Or5bDOPIe9XBWRI7jtmup31vu+z718fR11MfF66mPa2yk
Pp6wifo49QPq42UfUh/7t1C/j5y5lfr4lij1cZ1t1MdtPqE+Hv8p9fHe7dTH
DXZSH6//jPrPyL5d1MeVv6A+Prmb+vjEHurjiTHqy8HV/6U+/vkr6tO+2X7q
95XXHqA+bnqQ+n3JL6E+LjpMfdqvOkp9vONb6sveiXHq44+/p34/+cZj1Jed
8cepj68/SX3ZH/2R+nJ81k/Ul6Ov/UJ98jecpj71KiSo31/5rX+lPl75G/Vl
173nqC8HvvyD+rJvzgXqy6FJf1Jf9rzzF/Vl5/xl6j9rnPqIs1X15bwl5WSv
HKp9leyXF+5JkYNy3/DVcliOLU6Vo/KlL6+R4/Lx+lVlJ8c4c8911Je3d7ie
+nLzozdQX641Lo368k3em6gvP1A1nfryH4dupr5xcMSrt1J/wD/2nih/G/WN
J99b8XbqGwcfy8Z+tX97Ge2Dih8poL+wPCBWnfrGzpbTzCcuf1WL9XQGar1O
HGqi+vKeK9c1VX35vT/csl9+4fC9clCeMqCBHMaXG8lRuUp2czluHFz0SCvZ
GWTm03lNW9ltHN3Wrj31jYNdRnSivtrv2PMU9RVf9Uh36stNN/eivrF7cPXe
1Fe8/6d9qJ9rxjfvqb7UN/aO/Lwf9Y3j4298lvqKL7g3h/pyuOoA6htHD27E
UfXf+u6B1Df2n++NnedM+3252G3szvVhr+INqmO/vGI3/QflzqNsfbnUY+sb
O6N/Z7xx42CTL7Az2Ix/8EfYbRy89CX2GkczHPrzGzs1nrL1FU/72tZXvFmQ
8UbVf9/sQdRX+xH+XOoPMe27vvEc9eVB5YdQf4jm2zZAfePwjrrPU9/Ye/q2
F6iv9t/fMpT6aj+6xjDqq/2Sm1+kfsCsd4eKL8ku4/C9h7Db2Hts7HDZYxzd
9zv2yi/XzJN9xvGfLxP3q79HXsEBY6f2HPoPGgfzmjCekOLlnmf8YcVr12O+
EfnbM6xfVO07L+8vx2TvA08zXzla8KSckP2rKnD/nzdedqa97DIOjjzQm+eR
4h/uGih75Lu/fp7nk3zxnpdkn/IH+l7meWXsLW4wWg4oXv14kOeXcTQ4epwc
Uvy24+N5nhmHt7kmyhF5bLlJPN/kV9fjmHH8SsZknneKr+qFE6r3W2fsvGDi
y6/DrheUP53+3PKivdT3GAfXHprA/I29977HeH2Kn/UxH7/i53Yy34A8tC7r
ETSO3jON9QoZO98WsZ5h2dnxAvOXF41+jvmrXrMh/Zi/4s0vdGP+sqtqK+Yv
+1fX4fwPNb6mHM9bl+xa2pPzLy94ieejR/6jK/fdK9/0HPfXZxx9tKO9r8bB
G8ZyfgOKt/FyX4PG3pxZOKR48Wh7n+UZqTii9uMz6S8qJ6pTL6bxXPUM44mr
/m81eR4lFJ83kfviDDO+bznvA5c8pKmdvzwjtTPzl4tWtGb+ckm1+5m/HGqX
wf4TT3mM/ZdXzuK+Benfk83+yy882Yv9lwed4z5GZO/Ivuy/HPigP/sv91+d
w/7LO9tzfxPyhuWDOP8vGl/zbi7nX365N+fLLa/egT1ygyPYK7+yFPvk5bWw
X859mv4Dcmk29YNyfjXGF5JPv8H4w/Kpn5lfRH69Kuc9Kt9a8RnmL/941M/8
5aUZPZm/7O3HejsvGZ8f0ZH5y54f2jJ/edjK5sxf9n3mYf5yNL8q+0+85EHO
v5y77jHOv+y6iudxkPb7OnL+5ZVr+L4Jy1/92o3zLz8Q4HxG5dcu870Tk6cO
tM9/+YfJxBNyJKMH53+4sbt2Nudf7tGzA+dfjucxfg/t37+R8y/nN27B/ssv
P/gU+y/vONeH/Zc3OHb/jYO7Y7xPQoo36W6ff/LD145k/9X+rYNj2H95QAee
tzFjb/e1PJ/jyj/zN8/zhHG0W/0p7H+eaZ/yyDT23zi48/ZX2X+5Q/Fr7L9x
9KFbQuy/8ue9h33G7sO3v878jZ3bBuCAcfjkNBxUfrVJOKT+D3TBYWP/ksv0
HzGOt3gZRzW+H96YwfxVb8kpxh+XvWeZX0L1Zr1j5z/C+Mc0+/6Tr23B+rmN
nXaNxjJ/42AgdRTzl9M6vsj81f7MEe67X752F/cvIEdX8HsmKO8c2pXzL3c7
a78n5UaZfA9FVO/5ciM4/4pfeGA051/j/6PXWM6/4u82Hc/5l1usmcD5f9l4
8rKJnH/j4IhbJ3H+FR9yNfYo3rA37b2Kd72b/nyKj+0yjvsvb/1mDPdf7ev9
yPiDcu2v7ftP7jmK3x9hOX8mv6cicpP7eb5F1X9oLt8HMfmnua+w/8bRWB77
mVB+xaZT2f+R/zg8rzznySVfOTKT/TeOXh2ew/4bu+c+WsD+Gwf/2Dyf/Vf7
W68sZP+Nvakpb7L/8uTeYfbf2Klw6xLOv+IPrsZhefGNb3H+1X/Ah6PKn9oH
x4wj3R7Hcc3n21ScUPs33qR/Z5RpP8eFXcbxgb0Yn1seks74PcbR/zRaxPyN
/df9ewHzV3zSedbHL7cOz2X+xu60+2czf3nWJnv/jb07cnnehI2dfwe4rxF5
5lT2MyqPmc/zMCZXncXzMy5fasZ9TMj7Z3dl/q8Yexvz+94l1zrJfXTLfQ7y
veSRb5oxmPMvzyjH+fXJdWZxX/3yvRdxQG5p73NQnteB77mQ/Ntb/L4JyzeM
5fszIrfdzN8DorJz2z3MX84O8/0Ul68ZMZj5yxcCw5n/aOMrN/B97pIHLbLP
P+OgqxXr71H8vis8X72Kz+vG/vmMvU+unsX+q/2mU9yfgNqXT+N8BBXfegv3
JySf+ZPzFFb7+1dx3iLysQzOY9TYX/lBzmvMON5+M44buyffwflOKL9RH3v+
x/zjaKtx9vwbh78cjd3Gce9T2GMcHF4Ze429nyygns/YX7ES9qv/dSsWM3+5
0lXMJ6j+KtRiviHFP77xDeYv1zrM/Ymo3ttjuD9RxX+pwvMqpv5eq8b7ME7/
KTzvEnLJefbXCZr1bnuF+5Mq3+/n/rjkjc/yfZouB17qwPrIwcv8HsiQd06w
v5fkI4/z+yRTfrQxv/e98t2X+ftBlvzJ8JHcJ7n+/FFytjytC/bLTd9+Wc6R
R420f2+Q/+93oJwnx9bYv98w/p38vsmXy461Zj9kbwbzL5DXnOX+hI2D3/yX
74NCubuTz37JnQfyPCsy9v5rJPsVVbzdDu5HsXG0XEX2P6Z6R+/nfVKi+HeP
cP7jxvF913EeS9W+Y1/7vDcObyp4Wy5T+6tWLGX/x/5jf9WZ77D/xuH89svY
f+N4+ZM43dgde2I5+6/4r9NwhrHXWYw96q/aJJxp7Gx/DHvl676j/yzj6KBO
2Kf87YWML1vtX/qO8ftV/9FLzC9H+Y9chQMaz9Iy1idPXhO371/5mjGsZ77c
+D7uZ0j9Tf2B51OB4k3m8fwKK97/Ke5nocZ3pQ73M2IcLKvGfhcp3vJO+/0q
L1g1nf1X++mDed7GFK8+n+/3EvnEQ/b7Xu6dzfd/qfKX/s3zPCGPbIDL5Occ
7Iwz3vQsTjV2GgzmPLsUv+sm/r6Trnjp0/w9yC1PaM15z5Cb7+F726P8Zid5
HmUqXvNR1sOr+OG9rFeWcXRqaB77r/YPj2T9s9W+3ET2x2/srd2e/cxR/uhj
7HfAON5xKOchT/H2Fzk/QfVf+wXOW77av7mf8xlS/6dvXcH+G/u/bL6S/Td2
x1qsYv/lkbevZv/VX9cvcZH6Szz5LvtvHA6/g4sVn7EHxzS+/C9wieK/LMJx
9b+kFS7V/Kp9Qb2E4nXuxWXK9wxivM54M5+S15hPqvH/nTfm6zIOXv16Ifuv
9l8Mt/ffODqqA+uXoXh6be6rR/Exv7P+mepvzDaeT17FS2ayX1lyu0H2farx
+Bbx/syWR4y139fG3k+mcj5y5I1R7mdA/U24h/OUJ3+2h+dtUO196zh/+Rpf
hW/4fgnJ+57EBWq//Foc1nhyb8WF6v+q4Tii+EM16b9I+cvSqR9V/wu68fwo
lq85xnhj6i9/Ne+DEvX3XITvhbjaX/sj96FUTq3F+iWU37kf61um/LPvs/7O
BONWqdyHVHmXn/1zGfsPbrLPf+Pw56mcB7ex+9cnOC8Z8ryJnCeP8tMLOW+Z
ipd7n/PoNfZmvsn5zVL8P7nvsf9ypZvWsP/G0TXzsV/j3V+GczS+s9Uj7L9x
6OwdOM/YU5SGg8bB906Tny/XeQ2H1N93VXCB5vOwHV9Y7SutYfyFms/LJfb+
K17xFPMvUn/9T7M+Uc1naJz1K9Z8au5ifWOql7uK+1ai/Oxp7Edc+b/ksl+l
ql+3E/uZ0Prd/ph9/6u/okft/k80/R3oyPlINY6mj+D8uIyduc/xfkw39g65
g/voVvs7qnD+MoyDGx7gfnqUfybMec1Uvq8N9qp9u4Y4Sx7Q0/6eVH6XbThb
vqaXvf/y/v9QP0fue5/93la9o37Gn6fx/tbNvv/lE9WYf77q+761v8dlz1rW
q0DrNWEa6xlWvPNA1rvQ2L3xcfYjov631WG/iozj81LYz6jadyvBxeq/3lt2
/+WspzkfJervryqcn7ix/+tCXKr+P/Jw3hJaj6vfxmVqP/Jv+/yfZNbH35zz
mmrs7z0Yu+RJ43C6cfTOMdht7OzuizOM4x0aYI+x++Mz9v6rvW8O9sqv1MFZ
yv9jNfPxaXxv1cTZqr9oCuvhl+v/yHrlqP3njXFAPjOd9c1T+8zD7EdQ7ni3
ff/Lv73E/oWMg3u+YH8LFH8jA4fV/7kZnIdCxX0pOCKXTOb8FKl9uxr27zeK
//IJ561Y6/HMKByT92bhEnnn3Tiu/EHp9vtf8fE329+78pQ69vkvf9bS/v6d
bOaXM8Tef/m1Jfb3sNznCE43dmrfyvjdcpOncYbaN1mGPYqfOoMz5UaZrI/X
2NtiLM5SfuNd2GccHXgd652t9jU62u9/9bdkFs5R+6wYDqi/fqnsZ57cvhEO
yi/n4HzqzbD7r/73r8EFis/dhcPKLz6KC9V+w0/2/qv94QQuUvsTv+Go2i+3
8WLFK/2CY8q/+hguUfuFh3Bc3rrXPv/V/smdOCFX24rL5MJN2Mk36xlYZ3//
GQcXr7Xvf2On4fs4Xe0rb8Bu4+ihD3CG2jeP2u8/tT/0Gc6U/x3DXtX7sgRn
ye2/xz65t13PbNXbYtfLr3jTCzhH/ccv4YC8vhz3O0/58Qr2/it/XiV7/zV+
V1Uckse6cIFcIw2H1f816bhQ8YE1cET1smra57/qvXUXjireoy4uVrzVfTim
/tyZuET1CprY97/aP90clyp+d0uckAuzcJm8pDV2ppj6B208Va5u811yZjP7
/Wfs3PkwdsvfeOz3v7H3ndrYo/gluz6Z6m9tZexV/OTfdv/l87/b/Vd/A0/Z
/Vf8qD0PfsW/OW33X/7+T7v/al/7Orv/ir9Rz+6/xvNltt1/tT/xqt1/4+Cs
L+3+y/Wq8z4JK3/7AFyofO92HFG9V2rzPipSvNt0HJU/vICL5bH9eb/FVG/K
Qfv+V72C1vb9r3inzfb9Lze8177/1d/4efb9r3zf/3//TzWe0NO+/42dUvt9
7pIzL9n3v3Ew80G+d92K7+iNM+QjI7BH7d9+BWcqPmoQ9sopze33v8ZT18E+
5T/5DvWz5cfqY7/aj1rKfHIUT3FwQJ7+GOuTJ3ceznoGlX9bAeufL1ew39sh
+ZV1dv+V/4B9/oWNvdXW2+8/xTPW2/e/8t/8wL7/1X5zMe/TqOKbTvA9Wiyv
S7N/z9b63LaO79kS+dUhfO/GVW9bX76HS+X35/G9nJAbVcFlcs0d/F52ppn+
0rfjVHlnJdq75OgcnG4czOtPPbfi94+w3/+K/7qL8XrkrXWYT6baf1LR/v3c
ODroL/v7X/Ejjn3/K14lzb7/FT/vsfdfntuR/clR+4v27xMB1W82n/3NU/uZ
G+3+y7ft4nzkq717D+cnJP++jfNWIN++hPMZVr2ROfweLJSfrsbvxYjab3oH
FxmHq1bh92fU2F/aEBeT78MxjS/SHZeov47ZOG7s/qslLlX+5AycUPvKl6hf
Jj/5Onamm/7H3YhTjb0jJzIfl+Ken5lvunFwfgt7/xVfNs9+/8t3nGT9PMbR
9+6z3//q/9AY1tur9uVi7EeW4rm1sU/xNuPYv2x5cyn765d3dsM5qtfDft8H
NN7WA+zzX/3fbt/3Qdm92X7/Kb9R0H7/Kf/vbPv9x/wfs/df7c9YFyo+u6v9
/lP/P46x33+K31Bkv/+Un26/T4rlw13t+5/xbrPvf8VnN2S+cc0/vgGXqv8C
L+uVULzdflwmTxrC+jqvmvYfu+zf/4yd/huxyzga68X+pRt7G6Xa339q/2nE
7r/cr4t9/svlLtjnv+r1CXG+vOrf5+b8Zal9eCn2GbuXVuU8Zyv+cDPsV7xl
Ls5R/PbX7N9/FH9omf37j8Z/33r79x/Fd23C+YqfiOCQxrvgTVyg8TaYgMOK
3/80LlR/XevjiNq3uWDvv8a3dDSOqt64v1iPYrX/PoBj8t7v7d9/lf9Ee/v3
X8WbfcL6l2o8fR+0f/9V/03X2fe/7M607//XTH81i+3+G0dv6Gf339j7ij0f
6Wo/+wvOj1uuP8/+/U/tDw7FHnlTb5wpF/mxVx4dsPdfHhyy91/9r/kYZ8t3
Xba//+URrRhfjsZ/7SIcMA7efMm+/9X/ij7MP6j4Dvu8z1f+q01Zv5Dad7bn
u0Dx9Xfa57/qz5pt//6neM0K7F9E+fuG4iK5XRxH1b7z45yHYvnTtThm7G5Y
2T7/jcPlG9vnv+Jpg+zz39h/S4F9/surP8FlxvE2P2NnhhlP7rVr2X/j+Mh6
2GXs/6U1TjcONvRjt7H7WABnqP3rI7FH/f0xBmcaO8dewV61b/sizlJ/j/fH
PrW/pT3OVvyOB7Bf8W+r4Rzj6IWEvf/qv3axvf+K37fQ3n/50nP2/huHA03t
/Vf/U6+191/tV2xlf8KKf/UMLtR67r3Wvv/V/odtdv/V/qExdv/lPVn2/mt9
s932/tO+Ii6Rh/1t77/ar7+aeKnqd7T5CcX9bXCZxrNqMnZCpr/P9+MU4+gt
99nvAeNg8WJcxdh9wn6/uORf7fdKmvzVfJxu7P/oJ1xD9Q42tufHOPzgLFxL
7c/+Ys+TxlOx5ftyXeP4xDD2GHtzL+IGyt/cYR3nTfnDCnFjjW/xReyVW2Wt
l1toPDNCOEv9rfkKt1W9y1U3cD7V/vdmuJPi9w/G2ao/fibuofb73sN+rUfm
p7ivxnNmL85R/Z4HcK7i6ftxQPtzZDcepvbTojhPrhPBo1Rv50IcVHzwZDxB
8RrP43x5RTc8nfPSAoe0H1U9eLbm90MNXKD5z6+MF6r9i5dYz7BceBYvVf/P
nsCFWs+fvsGrNf+hh3BE4+9Ugterv2OHcZHio77HW5T/0ikcVf+17Xi2yyUu
xlus9ofuwbs1viGP45jafzME71e9fgtwidbj0S/xUbV/t8JG7q/iu1vg4+p/
81RcqviIg/iU+v/lnk3cb/W3ZwI+p/kXHcdlyr/p8SL5kvbjrvXYed34Ys0P
uP/G4WEzcaqxv2XKh9x/xX9/EbuMgwdO4DTjeK0Om7n/cqUPcA1jbyR9C/df
9bsOwbXkwZtxhupP/gvXNXYH6n3E/dd46nbEDTSeP3Nwpvp7YghurPGc6Ie9
xs7HbXEL9ZdRC2dpvNtPUb+t4pOXY5/GU9QZd1J/35Ux32zV2zwT91C8QW3s
Z33fZ/36arzlG+Mc1Ru/nf3IVfxUOxxQ/ZzD7Ocw+V+5OE/9t6qAR6n+r8s5
H0H1d3sXPEHxt67H+fL1Rzl/09X/1o04pPFteAvPlqNhXKD1G7gWL9T+pBzA
Ya3PisrUW6rxNO2MC5X/3Fq8Wv2H72A+EbW/shivV3xgPdanSPGRu/EWzSc0
nPWNaj5f/Zv92K78VqdxseofWsf+7ua8juF8xORJ7bZy/znvNT7m/is+vBQf
NY7VyY5y/+UpRfi4caB62jbuv3Fo3gB8yjhxbBNOyH9cxuc0v7MPf8L9l2sM
xpd0Hs7Pxc5MM96aG3CKcWJgMU419u2I4Spy2z3YZRxrsQ2nKd+9Eqcbh8dP
wTWMnUf92G0cfPY/uJb6q13GfDLkfZtxXePokZHYo/z3HsINjF0fnmc9M1Wv
z3rcWPO9OBR7jd07H8AtNN6jf7FfWYpfNQe3VX/7H8Y+Y/8XZ9j/ThrflbU4
W+1vmYh7KN41B/vlcHfcV/XG98I5Gm/XAM419vpCOKD+n/8ID9N41pzHeYqf
seMdpf4qTMFB+Yvv8AStZ5U7WI985ee0x9PloZNwSO3f/wjP1nw22vUv0HlI
r8/+LFR8eC4Oa39fKMRLNZ53juNC48hSN+djtepd6I4j2u90e57Xa32et+ez
SOvpT/mU+28cynwQR409bfrj7ap3OoSL1d+4jXi3+hv9NY7JgxN4v+7Hxau2
c/+VX+rCR1X/tuo4Lr91Ez6u/Vt6HS41DrxUHp/SeoXOUi+h+LSD+JzGc9Nm
XKb2p+fjS+r/q+HYmWXiYzrgFOPIyntxqnHwylW4irG39lF7/4090fX2/hsn
XnzN3n9j168D7P03jv7Qyt5/xVPq2Puv+A3X4gxj/+4L9v4bh0+etPff2Kl0
1N5/+bODOFP9LTyMG6u/M/Z8eY3dFW3/LdR/+vXUzzKOZ96P26p/f0/sk/vN
wJ1U70/7/MxWvZWVWL8eav+ND/vV/4FFuK/Wd6vd3xyt/6rH2P9c5S9bjAMa
/7t/4mFq/2HnHdx/td++Fo9Svc1VdnL/lT+zH56g+g9sxvmKL6jyGfdf8/sw
G4cUX7QYz9Z8e36DC+R6acXcf9Xv1RyHVa/bs3ipxrtyHC5U/PwsvFrx1AU4
ov6/mIfXK95pKi5S/rEX8Bb5l/Y4qvHfkIG3y57zjL9Y4231Ed6t/keNxjG5
fCO8X+t/8znWr0TnKWUVPqr1q9AbxzWeXtXxcdV7Yi/7VUp/U/Ep9fd3Fk5o
/o2q4nPqP6WE81Cm/kevxJc0v/UTsTPb1Js1EKfIpV1xqnG0WydcxTg4uBt2
GTuTc3GafGIqTjf2vrMB1zB2bzmF3Wr/238Yfy31f2Q0zlD7AyW4rvor14T1
8mi8j6/EDYzDQ+5gPzLV/poFuLHi4VvZb6/qrXoTt1B/i2vv4v4r/ssq3Jb6
9T/n/ivuW4c7Gfvb1v+C+6/+hqzAPTSflrfs5v5rfZ8fh/vKG+I4R+3/uv9L
7r/qtR+JA2p/dgMepvh9x3CePL/8Hu6/xrPnRhzU+odvwhPUvmplnK/+2/1K
f9M1nq934ZDWo/ccPFv9JTrhAtX7tBJeqP47bGB+Ya1XZle8VP3VucB6FSr/
xxBeLTfNwBGN7/JW1n+98su64CLFU35j/7YofvF1HNV8VmXi7RrPkR85D8XK
b7AE79b4M/vjmNrXz8T71X/ddFyi9Th3NT6q9mkVcFzz+eYGfFz5uR5cqvjy
nviUxpM1Hyfk/SfwOY1v4SPMp0z1P1iGL6m/a25hfZw5/zjcpACnyLE7WN9U
43itNbiKsXdKC/bLZRx97FucZuy8/TL7nW7sPl2d81RDHrYeu5X/6hN7uf+q
P+c4zpDzHo5x/40Dlcdgj7Grzce4gcY78yLOVPwpz3+5/8b+On7s1Xi2TMEt
jEM/rMZZxpEZu3Bbtd//HfYZB4+cxZ2MY6V/4my549+4h8Y/4TL2a/5nLuC+
xr7rzuAc5efEca7aj92LA1rv45vxMGPPrctwnvLXvYZHaX0eegkH1T6zJ54g
P9AC52s9Nt2LpxsnMtNwSOP999+s92ytx8WfcIHqnzuIF6p992IcVn+dN+Ol
Ol9/RHCh8huswKvlK2/jiNo/uASv1/w2hHER6/8W3qLxnXwHR7We3lV4u/I9
7+NinZcxH+Ldqnf2UxzT+fDuwfu1vw0P4RK1n3McH9V46idwXPP/8S98XPUX
V2R9SzXeljfiU+rvwO04ofzH7sHnVH9uQ1ym9d7pxZd0H75ug525/9jzWRec
Yuxd0BunGsc75uIqxonf7PlxGTsvj8VpxpGfp+F043DLubiGsXtGGLuN/TtW
4lrGsZ/X4wzjgPMxrmvsq2jvo0f5zj7cwDh46ijOVP7uk/b+G7uWJOz9lwdd
tPdf87k35Svuv3Ho+6q4rdZrRnXs0/wa1MSdNL+v7sHZGm9OA9xD47vQBPvV
X7AV7qv+yrfHOdqPMd1wruZ7/hkcUH7Oc3iYfOAlnKf5NwniUfKSKTio9uVm
4Qmaf8+FOF/rs+EdPF3jq7QGh7Rf3YrwbLlwGy7Q+fn9c7xQ/TXej8Naj7Hf
4KUa3/aTuFD5KQm8WvmP/okjGu+Y8vu4/2pfVBkXGUcTaXiLxnfX7Tiq/O53
4+3a71c9uFjj2foQ3q38081xTP3f2hbv135ndcYlmt/QXvio9m/Rsziu87Iz
gI/r/pwegUu1P2nj8Smt/0PTcULj7zUHn2M9F+My3de3l+NL6n9HBDvzzHxP
foBT5Ks/xanG8dq7cRVjf4sD2GXs7fMtTlN8zI843TixIIFryJv+xG5j377y
+7n/xq4zlXGG+kuthusqfuft2KP8RnfjBop38uBMxXMfwo2NPROaY69xZEEb
3EJ+vxPOUv6unritcfS7/tin9n8MwZ3UvvIInK24exzuITechv2a3+OzcV/j
WK9FOEfr/8IynKv8SWtwQPnzi/Awxd/dhvPUX/RzPErxfftwUOM9eRRP0PzK
TuB8Y6fyWTxdvq0Mh9R/vXIHuP/GQe81uED73f5GvFD1nqmBw2o/rDZeahyY
WA8Xqv3cB/Fq1V/uxRGd102t8XrV+6wDLtJ+l3THW9RfaV8clcuew9t1nlOH
42LVSw/i3cbhu6fgmPp/cCber3jLBbhE+V2W4qPqv9+7OK79G7YRH5fHf4xL
5ZnF+JTqLfkvTqj/yGF8Tvu39Rgu0/y+PIUv6Twd+QM7Bab/n//GKcbRsopf
c/+N3RWvx1WMA9VuwS7j8L/+hdOMI/Xr4nTj2CMNcQ31364pdqt991a4lnFo
gA9naHzDu+K6Gs/EPthjHJ85CDdQfngYzjT2vPcKbqzxbJ6Evca+XTNwC8W/
LsBZxt7jS3BbjffXldhnnPh7He6k9lU+wtkaz807cQ/1f9de7Dd2GpTgvhpv
s+9xjsb3xM84V+7+Ow5oP3Iu4WHyixUOcv/lcdfiUfKM6jio9V3oxhM0/hV1
cL7Gs/E+PF3j/bQRDmk+e1vg2Vqfo+1wger91AUvVH/nn8Zh9XfVALxU+de9
gAs1vhoj8WpjV50JOKLz1PBVvF7tm8/FRer/yTfxFu1H90Ic1XnKWYu3q/6w
D3Gxxjv2U7xb8Vd345jWa/4BvF/jWfYtLlH+uh/xUd2XjxM4rvHt/hMf1/hL
ypdw/9Xf8cr4lMb7axpOaH0v34bPqX2lu3GZ+r/Jgy9pvHc+hJ03zHrUa45T
jKMPt8GpxvGWnXAVY1fHnthl7H26P04z9g8agtONg8PzcA3j8Pix2G0cmTEV
11L9BbNKtv4/2GiVfA==
             "]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-5.85951693210518*^-6, 
           1.647123895054392*^-7}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Z\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1113.6363636363626`, 279.09090909090907`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.824900800909726*^9, 3.8249009169268103`*^9, 
  3.8249010353531265`*^9, 3.824901072134997*^9, 3.8249032980875945`*^9, 
  3.8249063812924504`*^9, 3.8249122913038473`*^9, 3.824912765987609*^9, 
  3.8249137061946907`*^9, 3.825149412371241*^9, 3.8251495386714354`*^9, 
  3.827245226977601*^9, 3.827307978282213*^9, 3.8278427138420134`*^9, 
  3.8279278425123014`*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"dbcc727b-a2e2-4a31-aa4d-59996ecffc4a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Calculate Shims", "Subsection",
 CellChangeTimes->{{3.8249011837628756`*^9, 
  3.8249011912753353`*^9}},ExpressionUUID->"0b10e8fd-91fd-4ee4-82bf-\
f717418c7b2a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Apply", " ", "the", " ", "transformation", " ", "Matrix", " ", "and", " ",
     "Calc", " ", "the", " ", "Shimmings"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"shimCalc", "=", 
     RowBox[{"Minv", ".", "deltaTraject"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"shimCalc2", "=", 
     RowBox[{"MinvT", ".", "deltaTraject"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"shimCalc", ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Points\>\"", ",", "12"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Needed Shim [mm]\>\"", ",", "12"}], "]"}]}], 
           "}"}]}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"shimCalc2", ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Points\>\"", ",", "12"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Needed Shim [mm]\>\"", ",", "12"}], "]"}]}], 
           "}"}]}]}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.821194443228359*^9, 3.8211944437984858`*^9}, {
   3.82119457974789*^9, 3.8211945902727675`*^9}, {3.821195901434203*^9, 
   3.82119598793792*^9}, {3.821196142770613*^9, 3.821196284181345*^9}, {
   3.8211969425536966`*^9, 3.8211969538545895`*^9}, 3.8211996453278694`*^9, {
   3.821199683127198*^9, 3.82119978675629*^9}, {3.8212679084945154`*^9, 
   3.8212679268265*^9}, 3.821268237751954*^9, {3.821269226058944*^9, 
   3.821269254873703*^9}, 3.82126934771651*^9, {3.821269392906514*^9, 
   3.8212694247072954`*^9}, {3.8212701480010767`*^9, 
   3.8212701605322685`*^9}, {3.821270262293741*^9, 3.821270392842778*^9}, {
   3.8212704273417273`*^9, 3.8212704564212275`*^9}, {3.821270488061589*^9, 
   3.82127050653154*^9}, {3.821270618582383*^9, 3.821270630426077*^9}, {
   3.821270710691185*^9, 3.8212707492865343`*^9}, {3.8212768864226465`*^9, 
   3.821276899282255*^9}, {3.821277179378686*^9, 3.821277197510287*^9}, {
   3.8212773374940376`*^9, 3.821277345795353*^9}, {3.821283763916668*^9, 
   3.821283853659628*^9}, {3.8212850232794895`*^9, 3.8212850320864506`*^9}, {
   3.824901290868057*^9, 3.824901296056916*^9}, 3.8249015970252514`*^9, {
   3.824901888524062*^9, 3.8249018915406666`*^9}, {3.8249019388227367`*^9, 
   3.824902083149663*^9}, 3.827244529002741*^9, {3.827245256383757*^9, 
   3.8272453009622154`*^9}, {3.8278427257811565`*^9, 
   3.8278427979595375`*^9}, {3.8278429092398868`*^9, 
   3.8278429304052873`*^9}, {3.8279278789324794`*^9, 
   3.8279279134790277`*^9}, {3.8279279922348533`*^9, 3.8279280129342413`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[195]:=",ExpressionUUID->"ef9530d1-7df5-41c2-88bd-949d4ef6be77"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJw12HlcTfn/B/BDRaXRjQymSdcSheGqpE19tCgtuu1pc5MWTcuNmMJMh7IM
4WZtrFeamO/wnSijMsYZYy19ZTT4jeV7hRlFXGQmhO+r33kf//R4+pzPeX+W
92c5d+S83PDUvhzH5ffhuN6/4j+9F7e8oeOrPIVA/8G4i+O++6pxDNmYcbr2
WXbn7JloGf7mr2vLdqFyS8b5pe/Y93MYeRjjNGMafA/Hkz9lfHOfShe5A1nO
uNPq8KawJHrfKMadKWqXTU6m8jFMl5WQ816TRh7LuCceGW9Sx5HtGKeoX3Y0
KpQ8nnGmmwbVdYbR+yYyvsjjo91vo8iTGN/k3K3t8KfnFYzb+fBV8qws8hTG
HXs30LVB6q8D6sVNTZj3+2nRjozjF5z8bdooKndinD67vfaJL3kq49h/+3p3
WlI8Z8a1yEtNf5Wen8Y4lxhT27JAsgvjmqKG6mxjya6MH6f3HXTEmeq7MaFu
cu652zPI7owrGdTz/tRksgfjlkwKWv1WGv/pjOsK3XK9fADZk3HCLQ+XJRZk
L8blP1z6Zc4UMmOcuvKyn1WH1/+Th1XGAwy/ktP7Ebenq23v9qmieVi+o77E
xJDKvdHfvybxe+zE9/Fw0e0ZFV+PoXIfxnmnLVD3c6L6cKzlg3vL/Ci+L+O6
NQeXrgug+vD8Z53yaCl//FDvglPfQjMqh7dO3SH7NZjKZ2I+JtQ0OfWh98Ny
34Mr30r54Y/xnzbA6RXlBw/LzQNVDnqazwDkk/Ot2LlpVA772+97tDyE6s9C
ew9bJR2g9vKwmYeFMkSa30DGHdLefxo7jcph2bJAJwMpv4IYd9uyWdGqpHK4
a5s+f6gH1Q9Ge5o81xZZUTncpfrartiHykMYV2A3ffv4WOoffFMXHGjmQ++f
jfFy6DozbAbVh3ctmmA1Uxq/UPT/lc2G825UH754sTulQspvJdbPW8VaPT3P
4CevZeseW9L7lIzvXpqyrVEh1hdQrv22tdjQjepjnQle/TP/ovxg8OhLMd+G
OVN9uDzacOO7SaIFuDVcP9xkMPUvHOtB7rd3Pa0PBr8KcK1UW1N7Yf0zvcMZ
yh8Bnr1/ZlmJlP8RjPPdvDElPILi429tymuvUFeKD7fsyauVBVN9WButcYiW
+h+J/A2NXbV4FNWHExJNPk+k9cTDc/8O2WBN60WAO/yDk4yl/MC+or5wtmVA
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
YrDhm/3NhVOE/wG87jJx
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Needed Shim [mm]\"", 12, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox["\"Points\"", 12, StripOnInput -> False], TraditionalForm],
          None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{48., 1.702127659574444}, {38.00000000000006, 
       0.4999999999999858}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 372.}, {-238.7049752430612, 235.79936151473157`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.007333333333333334], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
cnmRt8+q/wEI65Bw
          "]]}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6]}, {}}, {
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.007333333333333334], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"Needed Shim [mm]\"", 12, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox["\"Points\"", 12, StripOnInput -> False], TraditionalForm],
          None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{Automatic, Automatic},
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{48., 1.702127659574444}, {38.00000000000006, 
       0.4999999999999858}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{0., 372.}, {-1.1652543792508123`, 1.2127725384253338`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.827842856559437*^9, 3.8278429432404623`*^9, 
  3.8279280164915485`*^9, 3.8279414689473286`*^9, 3.8280939759283133`*^9, 
  3.8281078355187817`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"8db3df49-a1cd-41e2-ad2f-c4eb20da6d0b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"listShim2", "=", "shimCalc2"}], ";"}]], "Input",
 CellChangeTimes->{{3.8278428928220506`*^9, 3.827842899242975*^9}, 
   3.8278429327399673`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[260]:=",ExpressionUUID->"efdf3924-1aaf-4e1f-b567-25ae70670d28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Limit", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"shimLimit", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"blockIdx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", 
              RowBox[{"listShim2", "[", 
               RowBox[{"[", "blockIdx", "]"}], "]"}], "]"}], ">", 
             "shimLimit"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"listShim2", "[", 
                 RowBox[{"[", "blockIdx", "]"}], "]"}], ">", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"listShim2", "[", 
                  RowBox[{"[", "blockIdx", "]"}], "]"}], "=", "shimLimit"}], 
                ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"listShim2", "[", 
                 RowBox[{"[", "blockIdx", "]"}], "]"}], "=", 
                RowBox[{"-", "shimLimit"}]}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.821194443228359*^9, 3.8211944437984858`*^9}, {
   3.82119457974789*^9, 3.8211945902727675`*^9}, {3.821195901434203*^9, 
   3.82119598793792*^9}, {3.821196142770613*^9, 3.821196284181345*^9}, {
   3.8211969425536966`*^9, 3.8211969538545895`*^9}, 3.8211996453278694`*^9, {
   3.821199683127198*^9, 3.82119978675629*^9}, {3.8212679084945154`*^9, 
   3.8212679268265*^9}, 3.821268237751954*^9, {3.821269226058944*^9, 
   3.821269254873703*^9}, 3.82126934771651*^9, {3.821269392906514*^9, 
   3.8212694247072954`*^9}, {3.8212701480010767`*^9, 
   3.8212701605322685`*^9}, {3.821270262293741*^9, 3.821270392842778*^9}, {
   3.8212704273417273`*^9, 3.8212704564212275`*^9}, {3.821270488061589*^9, 
   3.82127050653154*^9}, {3.821270618582383*^9, 3.821270630426077*^9}, {
   3.821270710691185*^9, 3.8212707492865343`*^9}, {3.8212768864226465`*^9, 
   3.821276899282255*^9}, {3.821277179378686*^9, 3.821277197510287*^9}, {
   3.8212773374940376`*^9, 3.821277345795353*^9}, {3.821283763916668*^9, 
   3.821283853659628*^9}, {3.8212850232794895`*^9, 3.8212850320864506`*^9}, {
   3.824901290868057*^9, 3.824901296056916*^9}, 3.8249015970252514`*^9, {
   3.8249016379163294`*^9, 3.8249016914625273`*^9}, {3.8249017309388514`*^9, 
   3.824901874025295*^9}, {3.8249021032439055`*^9, 3.82490219108585*^9}, {
   3.824904647135212*^9, 3.8249046475414*^9}, 3.8249136395587606`*^9, {
   3.8272443689784193`*^9, 3.8272443719057446`*^9}, {3.8272474285428495`*^9, 
   3.827247446352648*^9}, {3.827308030444498*^9, 3.827308032681735*^9}, {
   3.8273086526586914`*^9, 3.827308653197789*^9}, 3.8278429587780075`*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[261]:=",ExpressionUUID->"aa3e9c16-54a5-460d-a5ed-e4f32a23a8d9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"listShim2", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Points\>\"", ",", "12"}], "]"}], ",", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Real Shim [mm]\>\"", ",", "12"}], "]"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.821194443228359*^9, 3.8211944437984858`*^9}, {
   3.82119457974789*^9, 3.8211945902727675`*^9}, {3.821195901434203*^9, 
   3.82119598793792*^9}, {3.821196142770613*^9, 3.821196284181345*^9}, {
   3.8211969425536966`*^9, 3.8211969538545895`*^9}, 3.8211996453278694`*^9, {
   3.821199683127198*^9, 3.82119978675629*^9}, {3.8212679084945154`*^9, 
   3.8212679268265*^9}, 3.821268237751954*^9, {3.821269226058944*^9, 
   3.821269254873703*^9}, 3.82126934771651*^9, {3.821269392906514*^9, 
   3.8212694247072954`*^9}, {3.8212701480010767`*^9, 
   3.8212701605322685`*^9}, {3.821270262293741*^9, 3.821270392842778*^9}, {
   3.8212704273417273`*^9, 3.8212704564212275`*^9}, {3.821270488061589*^9, 
   3.82127050653154*^9}, {3.821270618582383*^9, 3.821270630426077*^9}, {
   3.821270710691185*^9, 3.8212707492865343`*^9}, {3.8212768864226465`*^9, 
   3.821276899282255*^9}, {3.821277179378686*^9, 3.821277197510287*^9}, {
   3.8212773374940376`*^9, 3.821277345795353*^9}, {3.821283763916668*^9, 
   3.821283853659628*^9}, {3.8212850232794895`*^9, 3.8212850320864506`*^9}, {
   3.824901290868057*^9, 3.824901296056916*^9}, 3.8249015970252514`*^9, {
   3.8249016379163294`*^9, 3.8249016914625273`*^9}, {3.8249017309388514`*^9, 
   3.824901874025295*^9}, {3.8249021032439055`*^9, 3.82490219108585*^9}, {
   3.824904647135212*^9, 3.8249046475414*^9}, 3.8249136395587606`*^9, {
   3.8272443689784193`*^9, 3.8272443719057446`*^9}, {3.8272474285428495`*^9, 
   3.827247446352648*^9}, {3.827308030444498*^9, 3.827308032681735*^9}, {
   3.8273086526586914`*^9, 3.827308653197789*^9}, {3.8278429587780075`*^9, 
   3.8278429617087345`*^9}, 3.8278430443550324`*^9, {3.8279280782532835`*^9, 
   3.8279280796156807`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[264]:=",ExpressionUUID->"2add3be3-7ad7-43ea-b6b6-930aa80b0754"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
rHaG58lQZtw6f78P7XdDGZO/DManBtzuy70PsJb15CHD8fIU9xHnqd94MLxA
hnsOKs+SBq7+GV4lA39Q5JBnPDrvchleLQPmv+nk59N5oWF4rQzZ4u0Wj8eT
v6xneJ0Mkd6LB9+6TP6+neF5cnx09ftkdRnVj6EcRcsODyw7Rf6cL0dz7qpH
0lbyl9ZyxPxj3/IhivPncgSE1Dobz5RS/nJ8Nd166pA15M8FcszLqKworVlO
+cuxY8b7TWYXyJ+r5Mg//HhUsh3p58qhnVM+1+5P8udqOYzyzdL6tdLzmUYO
vwVVKY0Z5M+1cnR++ipPvIT8Vr0cs+O+vOmcRf5cJ0ddZYpHWTjVT7sc+wcE
jIgfQv6cp8AdnaavRV+u/hVwfu/SdnML+XO+An9kTGrY5kL331qB527yz1/s
q6X8FSjkTb/T1ErnnUfX+FlB8+xrr1D+Cvw82Tx5niXpixTYuuKAxm4o+XOV
AsUX1Ib2tnTe5ipgNW3J/Y8Pqyl/BSY0j/e6WEX9R9MVB8anthWTP9cqEDBC
Oq6oF9VvvQL6Br4Nv7eSP9cpIPQ2fHS0lvZvuwK/OR1Z0Pv7s5S/En0KG0NM
zFdT/kqcvHnrietp8ud8JcKs5L99kFG/t1Yi3bQjL2AS50+V8ORb9T0eGu74
P9I8Td8=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"Real Shim [mm]\"", 12, StripOnInput -> False], 
      TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Points\"", 12, StripOnInput -> False], TraditionalForm], 
     None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->{193.63636363636314`, Automatic},
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 372.}, {-0.5, 0.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8279280801953516`*^9, 3.827941482891686*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"e9d1d442-71e7-4058-9869-9453324288cf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Corrected Undulator ", "Subsection",
 CellChangeTimes->{{3.8248085959951057`*^9, 3.8248085993883896`*^9}, {
  3.824892042253575*^9, 3.8248920718633785`*^9}, {3.824892531676162*^9, 
  3.8248925508024073`*^9}, {3.824902413925147*^9, 
  3.8249024190717306`*^9}},ExpressionUUID->"63cb7b68-69b8-493f-a136-\
c9025ac39c97"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"device3", "=", 
     RowBox[{"radObjDpl", "[", 
      RowBox[{"device2", ",", 
       RowBox[{"FreeSym", "\[Rule]", " ", "False"}]}], "]"}]}], ";"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"device3", "=", 
     RowBox[{"idDraw", "[", 
      RowBox[{
       RowBox[{"typeID", "=", "\"\<DeltaUndulator\>\""}], ",", "gap", ",", 
       "nPeriods", ",", "periodL", ",", "blockGeo", ",", "blockThick", ",", 
       "blockGap", ",", "magnetizations", ",", "terminations", ",", "mode", 
       ",", "subdiv"}], " ", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Apply", " ", "Shimming"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cassetteID", "=", 
           RowBox[{
            RowBox[{"radObjCntStuf", "[", "device3", "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"radObjCntStuf", "[", "cassetteID", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"listShim", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "i"}], "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.8248928149054813`*^9}, {3.824895447213827*^9, 
   3.8248954933247595`*^9}, {3.8249024890042977`*^9, 3.824902513124793*^9}, 
   3.82724439961287*^9, {3.8279281522900085`*^9, 3.8279281692059107`*^9}, {
   3.8279414911564474`*^9, 3.827941514055707*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[265]:=",ExpressionUUID->"c7a983f6-9028-4f60-be21-de82ab631ee7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Apply", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"blockIdx", "=", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", 
       RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"cassetteID", "=", 
           RowBox[{
            RowBox[{"radObjCntStuf", "[", "device3", "]"}], "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"radTrfOrnt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"radObjCntStuf", "[", "cassetteID", "]"}], "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"radTrfTrsl", "[", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"listShim2", "[", 
                RowBox[{"[", "blockIdx", "]"}], "]"}]}], "}"}], "]"}]}], 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.824892584156816*^9, 3.8248926661455865`*^9}, {
   3.8248927952725334`*^9, 3.824892822842905*^9}, 3.824895064378887*^9, {
   3.824895140087889*^9, 3.8248951931234293`*^9}, {3.8248952390184603`*^9, 
   3.824895293367147*^9}, {3.824895339249571*^9, 3.8248953597778115`*^9}, 
   3.8248954752460537`*^9, {3.8248955056939583`*^9, 3.8248955060429153`*^9}, {
   3.824902528500389*^9, 3.824902571728715*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[267]:=",ExpressionUUID->"132cd346-b542-43ac-8a5c-e18de6bd0000"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Solve", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"idSolve", "[", "device3", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824802346035345*^9, 3.824802350185668*^9}, {
   3.8248030966686926`*^9, 3.8248031224551735`*^9}, 3.8248955277931347`*^9, {
   3.824902680454297*^9, 3.8249026806417837`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[269]:=",ExpressionUUID->"22da4846-beb0-4db9-b777-184eec0da713"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Trajectory", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"trajectory3", "=", 
    RowBox[{"idTrajectory", "[", 
     RowBox[{"device3", ",", " ", "eEnergy", ",", 
      RowBox[{"r0", "=", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "li", ",", "0", ",", "0", ",", "1"}], 
        "}"}]}], ",", "lf", ",", "lstep", ",", 
      RowBox[{"display", "=", "0"}]}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.824802346035345*^9, 3.824802350185668*^9}, {
   3.8248030966686926`*^9, 3.8248031224551735`*^9}, {3.8248031538253565`*^9, 
   3.8248031591437225`*^9}, {3.8248086818090315`*^9, 3.824808683897382*^9}, 
   3.8248165715193048`*^9, {3.8248955317533083`*^9, 3.8248955564117584`*^9}, {
   3.824902893869215*^9, 3.8249029186659765`*^9}, {3.8249029988064523`*^9, 
   3.8249029990876255`*^9}, {3.8249030930091248`*^9, 3.824903093712798*^9}, {
   3.824904613259015*^9, 3.824904613462223*^9}, {3.8272444738243523`*^9, 
   3.827244478880456*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[270]:=",ExpressionUUID->"b5fe7c81-3cac-4227-a06f-524617374df8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Calculate", " ", "the", " ", "Delta_Field", " ", "needed", " ", "to", " ",
     "correct"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"deltaTraject2", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"trajectory3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"trajectory3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"trajectory3", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
       RowBox[{"trajectory1", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.824900575966677*^9, 3.8249005883999367`*^9}, 
   3.824900619759215*^9, 3.8249011190090437`*^9, 3.8249027096143074`*^9, {
   3.8249030040720463`*^9, 3.824903004290864*^9}, {3.8249030970885315`*^9, 
   3.824903097494796*^9}, {3.824903133697212*^9, 3.8249031384082756`*^9}, {
   3.827244490199969*^9, 3.8272445448086853`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[271]:=",ExpressionUUID->"f669df04-440c-4c4c-99b0-cc0d37b1db28"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "=", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Axis", " ", "Plot"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "[", 
    RowBox[{"[", "1", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<X\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plot2", "[", 
    RowBox[{"[", "2", "]"}], "]"}], "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject2", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}], "+", 
          "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Orange", "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Y\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plot2", "[", 
     RowBox[{"[", "3", "]"}], "]"}], "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"deltaTraject2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], "+",
            "1"}], ",", 
          RowBox[{"Length", "[", "deltaTraject2", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", "Green", "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Z\>\"", "}"}], ",", "Above"}], "]"}]}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"plot2", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"plot2", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"plot2", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1100", ",", "300"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.82490068369711*^9, 3.824900684712673*^9}, {
   3.8249007362288237`*^9, 3.8249007773532677`*^9}, {3.8249008575412397`*^9, 
   3.8249010309361167`*^9}, 3.8249010699942904`*^9, {3.824902716744213*^9, 
   3.824902730933509*^9}, {3.824902763197254*^9, 3.824902821900547*^9}, {
   3.8249031559804335`*^9, 3.824903157806467*^9}, {3.827244561530105*^9, 
   3.827244605387975*^9}, {3.827308242511836*^9, 3.8273082592878866`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[272]:=",ExpressionUUID->"60500423-26a0-42a3-b065-af9ba141ddde"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]], 
            LineBox[CompressedData["
1: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
qkh2vJckoWDgILudW9j6J2HLNvd+//f3Q5aEA4dmd73bwNY/CTraCSZua9n6
J4Eb9/Jk6Sq2/kmw6Tf9TBX796yRyY9/9VL6Arb+SXC4ZOisPJutP3O+NlpE
zp/G1j8JotXvgkdOZOufjE7fa67HR7P1T8YUw5/jf7J/r1WTUXjvpeD3ILb+
yahq+3bpUj+2/oyb3xvO/0f3B71k+M9Pv+rD3j8MkuF4Ydk0zieyUTLWzVc8
0a+JjGTwzgz46vqUvf8ng7v3UGN4HXv/T8aB4nmPTa+z9/9kRD+4fLX2Inv/
T8ac6bVJvU+y9/9kDKreI3x9kL3/J0M912OH6x72/p+MQ9qP7qals/f/ZGxq
adG2jWbv/8lwuWHueDOQvf8nY4X2eFGzO3v/T8bxWNOUy5vZ+38ydEXXa63M
2ft/MnweKEtKwd7/k7FaPjD33Uz2/s/kP7H0X6sue/9PhoZZtW7NcPb+nwzB
rd5nuIrs/T8Z94XPaxS62ee/ZEy3D9lo85F9/ktGeWH8Ju/n7PNfMjQ/4YvF
Hfb5Lxk1iqee/LnEPv8lw1ohynx3Efv8l4KzG9N+38phn/9S4OrN39mRzj7/
peBa+s7m7gj2+S8FBRXPm954sc9/KUw93l096cA+/6Xg35wRL7zM2ee/FDh4
9l+su5h9/kuBvq+G5sup7PNfCj7Uz3xZqE02ScHUyVXC9IFkixRgSd5M0R/2
+T8FRbKJqy5/Yp//U9CsYf6h30v2+T8F8w49VfGqZZ//U+D5te3Gx8vs838K
Ovef3B1WzD7/p0C24PI/rVz2+T8F9725T2p47PN/CkIyXm3MiGKf/1MQ8a9C
18OPff5Pwa6wgjgv9vdKYQraHqkuO2BFLmGcfGfs8JXkshTY9qreWjeXLEtB
jfjLroZJ5OoUiG24vQ21yHUpSDz3SvZWhdzAHL9p4pq2XuTGFLzVtnG0+c7+
/kvBcs3vV0e3sL//UlBxc7372hfs778U6Mg1rmtkf+/JpeLlto3aj66zv/9S
8Uvpb5heOfv7LxVWR0VqtSfZ33+pqBIPvVJ+mKzDtMf1evQxm6yXit2PTbys
hWSDVIT78zb+SCYbpUJ5fo7xnSgyUiGe5HjpSTDZJBXrC8K/afiQLVLx3M42
J92NbJsKo5O3LkzfSuakos13Q/h3G7J7Kp44LpWvNyf7pEL9tAO3bCU5OBX1
K3c9Ey0mc1MR4TijbsscciIT/7pTRb9pZB6T39TQvAz297s0FWO29PPr0CLn
poIXrZ08R439/Z+KtV1zjG0GsL//U5GeqbzRkp0fKEvFrafbK6d00fyBLBWb
5DS5rz+Tq1MxX1ux0Pc/cl0qNDTqn756Tm5IxSLtDZ9n1JMbUyHVHKThc5Pc
zJzvD/3i86+Q21NxJWL86doz5E7mfEsufv1+jCyXhouXU8OG5ZMV0zBzu73L
RClZNQ0Dejc0jUsnq6fh6Yl1Kb1jyTpp0NmTaH4xhKyXhsgpoZmrvMkGaVhZ
cWnaAWeyURrW+DrK39lERhqOf0upum7Ozv+kwUFTtjNzOTv/kwbBwdp5s43Y
+Z809Fk+cevxKez8TxoGOxRq/tRh53/S8DzSv2PIMHb+Jw2x3k26fxXZ+R8m
v5PDLpb9pvknbhpWr7423ridnJiGhX2l2wrfknlpkFtaX9jyiCxNQ/MK+djB
t8i5adAwPJekx85/FaZheeMztTkl5JI0JH5R7V5ygFyWhrCp031MxWQZ0/98
Y7lDErk6DclZA9dEs/NvdWk4p5i1V+ZNbkjDu5YGj/HbyI1puFfB45bbsPN/
aUh4sTSQt4ad/0uD7PGz/COL2fm/NJhbT3utbMjO/6XDduqXZRcmsvN/6TCd
cmnxcS12/i8dt6ac7ng8mJ3/S0eqjtHy6f3Y+b90HCjt0C74TfOReukY0lWR
Pfkr2SAd08dxNl15TzZKR7hy2Rf7F2Sk40el3lX5erJJOiwch4vLqskW6bjO
Hflo92WybTqOiT7rm5eSOel487f29OyjZPd0GOzjnZ2dS/ZJx45euXlWYnJw
OtKGf3q2N5Wd/01H2bFAsxEx7PxvOvKt34+qD2Hnf9PRJrcwsMGHnf9NR5G/
9nV9d3b+Nx3LWub9ur6Vnf9Nx8FHJ8YUbGTnf9PRtXjoq9J17PxvOnY96P7V
vIqd/01Hw9CK29PAzv+mw+/F5vAAI3b+Nx3Ow5/7HzFg53+Z8xVmGHBFj53/
TcfSvk9nHtMhN6dDziPj1jZ1cns6mt/stX09iNyZDvUajyOa/chyGej7WVFO
6S/NjytmIGqfe6+CDrJqBox/DOvz9gM7/5+BpRVNCpWN7Px/BhKu9p+6/BE7
/58BFffx911us/P/GXh5xlLfQMbO/2eA46AVcKSUnf/PwNmZTelPCtn5/wwM
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
mP26
             "]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}, {{
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.013941369763132773`, 
           0.03532503431411503}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"X\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                 "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]], 
            LineBox[CompressedData["
1:eJxV3GlYzG/YPvBBCCGEyBKSKMme/UQISShCaKMQTZv2mvZpn2nWiEKIQhSy
hxA/S0iyZ8+ebCE88/ydz4t/bxyf45prru95X9+bozf6uHrPX9lUIBDMbCEQ
/O+f/37qJgn+/x+kGtQ4TA49ffIftfGp3+iL83vV0Lo4us1imyS9ntZDoXsz
97onglP/rI+6NQOHJTe2pnvAYeQc2/uPO9GG6DCtIspxjwHdF/YXjMdJg/vS
RjD/NiqiWe0A2hgW2Qr5JVNz2gR6piYtrPKG0YMQ3HTIOt0Do2gzVFga7fEZ
NY42x+rTm+tde4O2QLdzzu8da6fQQzE1tVum/49p9DC4JgwJMV04kx6OSMuB
4i5N59AjsCXs+0ChyI4eiUnXuzwdmD+fHoVdIvcFQ5o50KMx8oC5W2LSItoS
XVMOeVtPXUKPwfcQk/nKIcvosZild2JAlYkzPQ6vhy71fnXbhR4Px03pWqY5
bvQEDPtb5FklXklPhIVb/1uDpB70JPRdL0/xPbaaBob/XNWuSQuvfxYBXkc7
JQ4PWM/6ZHzx9Fl5LFbI+mS4GC3/1eOpD+tTMPz6zENRC/xYnwLzpjtm7bvr
z/pUHJjfZvD6gA2sT8XgYxWOigFBrFthioHicGNdMOtWWHFr7MXYm6GsT4PX
hUFP9K6Gsz4NNR8XRm16Esn6dPzXPWFWgnYU69OxdNTQmaPMo1mfgX7L/uxZ
5hrD+gw80s05FLsjlnVrZErvvBnVEMe6NX7+GayntTSB9ZnYskB9W3RNzPpM
YO+68TMWJLE+C8M2RR37+jqZ9Vl46NkhZ4gslfXZ6DK/bs/muemsz4buiArr
7+kS1m1QYHBt8tpoKes26Phpe2FCZAbrc2CQPXZzQYKM9TnYOPLGnAmb5Kzb
Yuv2jBE5xxSs2yJ/xGWzSS+VrM+FfhO3tIReatbnoqHv24A3bpms2yHfapT0
weGN/ww7eMwOOlrVNYuft8NGc/NCh4TN/1xqh9Ujzmfda57N/nm4GB6x6uvM
HPbPw03/s320u21l/zyIP3Wq9qqjS+dB9c3Ydl3FNvbPh2+abIvD0e3sn48P
01rn+efnsn8+rr5K7dVj1w72z0fGtHz/nIKd7F8Ae29nw8UndrF/AQ64jwrJ
qcpj/wIkbKvpUPlrN/sX4PqAnfX2Zvnst4eFf9m6BM8C9ttjoLRm5q3Cvey3
R5ZMe2xu8/3st8eD9asqiocXst8B1wb6Cme/peGAyFH2x27sPsB+B8xtkbU3
zvsg+x1w0e6Vy67xRexfiKlbjOcHdyhm/0LETX7ujw+0aCEcRrnOtrp1iP0L
cS488tu10sPsX4StudUYfOQI+xchcIN/1b7DJexfhINNFwftPH2U/YtgGtL6
9eqbx9jviDXDphnP/3ic/Y7Y9TI/4niXk+x3hNP545eazzzFfs3nt8+XyeNP
s38x5GZ90195lLJ/MQpOVThKOp5h/2IMbvdhedg5unQxxve0DXsRcpb9S2AA
4ZWWY86xfwlepx653OcPLVqCYkXcav/LZexfgpHtpvSduuU8+5fCP3uPXmXw
BfYvReTKSWOEyy6yfylC06d5us0sZ/9SdH32Ia5xwiX2O+HacEVR6rjL7HfC
uW53l3hN+Y/9TtjdS3/1p/lX2O8E3dOT3IPXXWX/MvjmuW51z7jG/mUoOj8m
qOvZ6+xfhnGdp5mHR1Swfxlenl2id7LPDfYvxw+9gD5a/9FYjsIzBatTQ26y
fzlm7FeKlBa32L8cWk1PZK14TwtWIOhqcoHpgUr2r4DjLEEowm6zfwXKL9RW
vrStYv8KfOh7t3jNwDvsd8a0OTuXG+hU/7OhMyateJwy+zsNZ2yvf5E17+3d
f3Z2Rs91F0sSau/x+52xbsKYZjYf7/9zjjNq5w6pFAgecp4zlpiPfq9j8Oif
a5wh2flh93085nwXtF4lzP5gWcP5Ljjf62jI1Ds0XJDc+2TJ7tAnnO+CdRnn
NrgYP+V8Fxj12XRm7x06xwWWe/6eqkx/xvkuOGjUtqr33Oec74InmdPu3u/8
gvNd4bJNNWTxc9rQFaobti3fHXvJ+a74YX8h5l3mK853xaOfDvWHo2o53xUm
r12bFvi+5nxXvO/0+a/Fujec74qoKWPbFvq85XxXHJ60cZVa9I7z3bCs0+Xc
5Rvfc74bsl9WCcJPf+B8NwRcrsjxq/vI+W44sCHI77myjvPdYNeq2VOt8Z84
3w1rboe2ePGKLnXDrmcL1tzcWM/5bvDatHFVL4fPnO+OZtZbHXp1/cL57jhg
eeWC6RMa7rDtEXIkt+gr57tj1DvfS2/TvnG+O+pSRkd4+n3nfHeMe+69IcGl
gfPdUT7n94Fji39wvjuO6T65Eez0k/NXouDc3mVT1vzi/JXYdW9GC3VMI+ev
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
GEQLU3Bgb6ufOgl0UApCj5iMvqygRSl4tWlMlDSXFqcgpe2PSe5FtCQF3d4H
xE89S6tTkL3JvZ3FDTonBS5LrSYOqqHzUvBm6JWhwz7ShSnQNbtwasYfuiQF
18rN/de0fc79p6BddoA8swddnoJm13TaV5rSFSkofHJEpD+Ork7BpytOU1fO
omtSYDZtpLRkMV2bgnWHQop0V9N1KZi7K9rMK4huSMGWpoMrLiXQglQ02+9w
yURFa6ci6vk+mXgnrZuKkKKS+tpDtH4qnG8dfzvzPG2YisfrB53Pr6RNUtHZ
WadN++e0RSpSfeYq/D/TlqkwXXEx8WHTF9x/Kg4lr5g3uyNtnYqrgmmhp/vQ
dqk4q5OXMW4o7ZiKubrFX0pBO6eiNG3EITs72jMVNd9SFW9X0MJUiDtFaGd4
00GpaPpDe6xVJC1KxReHOZ2bptPiVDiKJk37bwstScX58IUW2ftodSqShi+t
DztF56Rib/6yJW7X6LxU/Dwl/mr3iC5MhX/LClOrD3RJKrouN1gz7g9dmop2
S87PHtnuJfefigECs0MWveiKVBxOLbhvZk5Xp+LotlQMnEjXaOZ9u7qrvy1d
m4ojeQ90+y6n61KhDHAv7rWebkiF0Hx9yx4RtCAN1qsunumeRmunIXeO9KnB
Flo3DR9KkW+4j9ZPg/hqcNKgU7RhGu4vNWoYe402ScPOkDa2Cx7RFmmw2/t1
j/8H2jINFTOOvMz+QyMNsm0HZbfbveL+01C8NbN5l960XRoOaRkschlCO6bh
VdzzNUcm0c5pGPmg86uudrRnGtwMWgyOdqaFaTC40HX+VyEdlAYvbWUfYRQt
SkNYz1Pmn6S0OA2e16y+b9hGS9Lg41PbRlBEq9NwrMkKi+RzdE4aXILz1nSt
pPPS0GPFEq3c53RhGiab3Im1+EqXpOG6Tmz+iea13H8alJP91ll3ocvTsPrs
7e+3jOmKNHjX4fCK0XR1GqI2Tlv8bgZdk4aueWFVIY50bRpaPOi7VGc1XZeG
SW/HD9kWTDekwU/gLJmQRAvSEfLylPTxRlo7HZHJW1sn5tO66Vi0qqts7Ala
Px3LTrqIv1yhDdPRb5BXxyMPaZN0PK4dYRz9gbZIR1uPnBiHv7RlOp7Zbttv
ofua+0+HQ8Pr9x370NbpcK0zmvxrKG2XjibdE4Nqp9CO6ZiQ2tPm7gLaOR2p
sqZRV9xpz3T8HbxE+0wALUzH4Gy79ofj6aB0eHt5NslX0aJ0+MzsHZOdR4vT
cXN62lrZUVqSjmlNWp+Jv0yr0xEWVXEs+D6dk46NB39c8HpH56XDZc6MDOff
dGE69mRbtlnY7g33nw40bbPYtjddmo5S4byzsyzo8nSMjbAQ20ymK9IhHTa7
zH4+XZ0O46xl9u5udE069n8fezvUn65Nx6eyMbs2xdF16fBKLPxyTkk3pMPj
8v5DX3bRAgmKllXvG3yU1pLg46zeXusv09oSNBv7fczh+7SOBGNX3+6r9Z7W
1fS/6vBj4R9aT4L01h199rZ/y/dFgu5Riukt+tA9JKj4G7jCeRhtKEHn721r
jk2ljSSYlXJqSGcH2kSC8dUfP69fRZtJsHX2Qu3yQNpCgq9Zl4INE+kREuzP
3xYXtJG2lMC9r/fminx6vARPJlV5DTxJQ4IBIy0exlyjrST45v2x/ZPHtLUE
n1p/njXlE22jyb+/sjqv6Tu+nxLYt7n4qrMebS9B3Zqhvkn9aUcJLvptHNly
NO0kweimD4pSrGlnCdLcu1oaLKHdJSiYt+fewbW0pwS7bMKiFoTTXhKY7A17
0JhGCyVQlQU578uh/SW4uibOyuMgHSTB3V5PxcZldJgEdrZBbd7epkUSqDsa
7yp6RcdKEGw6bkHkD1oswe0WIy3ntHn/zykSHLp3/HCPnrREAo9kwcr35rRc
s495l7VPg1Zr3o+XvzKk8+ksCRZEXeq10p3OkSC7ruDLmA10rgTz595I1xXT
eRLsKTq+9XUmXSBBlY5/uwv5dKEEAXYf7u88SRdLEPY8oHPqdbpEAu28ioLg
J/QJzT73fXdb95kuleDZNGWZZ/MP/1wmwc3fH/p4daXLJZA1Zm0JHEhf0bx/
0zyGJo+jKzTvb27izp1z6EpNvg7Hsy6toKsl0D99IfKzD/1AgktLNsT2i6Vr
JKgpQYGjkn4uwTHzF7eleXStBP9d0rl39Rj9TgIDddmeNlfpOgmOyypXz3pM
f9G8Hy2m+SR+ohs09+GW0bzyZh//uVGCGFfBpRZdaIEUw789PGNlQmtJMa7u
xuzosbS2FNbGWdmnbWgdKa7/8en3ezmtK8WlNzHe43xoPSmMyo7PCY2h9aU4
vUCy76SC7iFFC+9r0mZ5tKEUhtuOv55zjDaSYlhFdMzmK7SJFB0ebP1V/4g2
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
6ZnXgsM/0UaZGJNoZ6H61gT/A5wJ7jU=
             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0.5, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.00014616977999471468`, 
           2.24540555711533}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Y\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{}, {{{}, {}, {
            Hue[0.67, 0.6, 0.6], 
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]], 
            LineBox[CompressedData["
1:eJxd1HtcjOn7B/AHYRBmVwhhEHJYBiGEQQhhpGUQRpLQMhKyYgchhEFIWkZC
bJilJYRxDrEhtIRByHkQ5fz73Z/n44/v+Mfr/bru63Tf81QvaIr/uJKSJPUp
I0nif/mfvav0v/80/0uFg5UOdnGwq4PdHKxycH0Huzu4kYM9HNzUwc0d3MLB
age3cnBrB7dxsKeD2zq4nYPbO9jLwR0c3NHBnRzs7eDODu7i4K4O1vyvjQ6W
ujnEHSx1d4g7WOrhEHew5OMQd7DU0yHuYKmXQ9zBUm+HuIMlX4e4g6U+DnEH
S30d4g6W+jnEHSz5OcQdLPV3iDtYGkCrjspxB0sDaS/Gf1jDuJb2ka35YV+e
/2E/2dYf1jJ/EO3P/B8OYP4PD2H+D+uY708PZ/4PBzL/h0cx/4dHM3+wbKOe
+T88hvk/HMT8Hx7L/AA6mPm0FML8Hx7P/B+ewPxfmT+R+T8cxvwfnsx8WmNg
/hB6KvNpYzjzaes05tPSdOYPZf4M5tPGmcz/EZ/FfFqazXwdz0cxn9bMZT6t
MjL/h+cxfxg9n/m0ZgHzaWM082nrQuYPZ/5i5tPGGObT0lLm0+ZlzB/BfsuZ
T9tWMJ/WmphP61cxP5BezXzasIb5tCWO+bRtLfNHylavZz5timc+LSUw/0d8
I/NHcf4/mU9Lm5lPG8zM/+EtzB8tOyaJ+XTKVubTtmTm0x7bma9n/g7ZKlra
yXq0aZdsPe2Vyvo/zu+RbaYL9rIfXWiRbaMV+9h/jGz1fvanQ9PYnz7wD/vT
bgfZn05IZ3/a8zD708+OsD997Cj7B8ned5z96UdW9qedTrI/7XWK/en5p9mf
zj/D/vToc+xPF2Wy/1jZqRfYn56fxf707MvsT/fPZn/ZRsMV9mf8r6vsT3+9
xv70xOvsHyz73Q32l21MyGV/xsfeYn/GB+axPz32LvvLtmpt7C9bs/g++7Pe
zQfsP05293z2l625+Ij9ZVsjnrC/bFX3p+xPt3vO/rLNAS/ZX7Zxy2v2l21S
vmH/EFgd9pb96cfv2F+2ed579ped3a2I/Xm+6Uf2l23r8pn9GY/+yv6yNd+/
s/942DK8xDG5v2ztjZKyNbLzpjvJ1su2eZeRbZQd2FIh2yw7YlB52VbZxh3O
sm2yM9pWli2FwmWkn9hfdmL0z+wvu3wTF/aX/ex5VfaXfSezOvvLfnygBvvL
7rC9FvvDxqQ5tdl/grDmUvW67C9sfLpcpWJ/xM3TR9B6WFrmQhth45HOddhf
do91NdlfPl8ih/PbZMe2L8f+E+Hslf/x/WUnfVZ0kfszfq+2bL3swIAmso2y
56e1lm2GjarlHWRbYWvUao1sG6w5/Y+PbGkSzus8+shWwdZ99/uzP6yZP2kQ
+8vnz30ZzP6wVJAwhP1lX+4wjP1lR18cwf5y/nvNKPYPQ/2ZPfXsD9vM/cew
PyyVbhPE/rInvKGNsPXPRWPZHzYHvqWtsue3DWZ/WPVGS0u/IZ7qQ6tgvaUy
rYGlYRbW08OaMg1po+wTYZzHDBtLxnB+q+zjs7ifTa5XadWP/Scj/uEr70cF
S6WG8P40cnz+Qd6vXo7/1yWA/WVPLeXP/vL5LdW07C/H95Tle9pkRyX1Zf8p
8B3px/vLVtTxZX/Zn1/2Zn/ZlpGMG2VfG8R8s+yqW1nfKntbdT/2l90vkPNI
BnnfEgNkK2U/mM24SrZ7q36y1bK3R/XifLKDIjrL1srOHFOT88pefcRL/t4M
sp+P1vL7hY3WWiNlm+T4t84h/J7l+OauU2RbYOvaExH8vmFN8vTfZWfDtvoB
Rn7v8vlFWxbItsv1Aqsv5vc/FW6wa6lsJazfP2AF/x7J8UZfTbLVsOR/ZTX/
Psnxj5viZGvh7NVj1vHvFWypWDWe+8v5pQ9s4P6wtbjbRu4Pq+cfTOT+sC2k
2ibuD9tnjd7M/eXzzfuauT8cuvw2bYNTFOO2cH/YnPmElsKFFU+Ck7g/rBt+
h1bBuQ8GbeX+sLroJK2BXdPVydwftn9IoPWw1/AS27g/XBw/ljbC6WknaJMc
r+m2nfvDBSnTaAtsSjxPW+W4se4O7i/PV3smbYNTQq/Sdlg1r00K958mrN2S
SCthfVXlTu4PZ/5iotWwqmXdXdwfzu5ynNbCxX3C/+L+cMrzDqncHzYMq76b
+8Ohugp7uL/sDtX2cn8441ktC/eH3U4dpK1y/wqj/ub+8vlbFfdxfzjs9Rna
DmvSo/dz/whhr0m+adwfzlVX/of7w8qAm7QaVo3bfID7w76+IQe5P2xq0yyd
+8NxyS9pA5wTsPsQ94ed1RMPc3/4i5/7Ee4v9yu4TVtgV/2qDO4Pp7TueZT7
w+aPRbRNnj941zHuDxuajzzO/acLeyxUWLm/7MFjaRVc7HucVsNuSW4nuD9s
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
aDfU23o/nVYJF38MPk67C+cOLDgTdPz/AHsygWE=
             "]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}, {{
            Directive[
             PointSize[
              NCache[
               Rational[1, 120], 0.008333333333333333]], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 1, 0]]}, {}}}, {{}, {}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.002291635259780378, 
           3.784183277844022*^-8}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{"\"Z\""}, "LineLegend", DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxDividers -> {
                  "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "True", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.8249028606656933`*^9, 3.8249033267757773`*^9, 3.8249064093688846`*^9, 
   3.8249119259363146`*^9, 3.824912800913784*^9, 3.8249138438694477`*^9, 
   3.8251495611328278`*^9, 3.8272456095634127`*^9, 3.8272475445883636`*^9, 
   3.8273081549471865`*^9, {3.8273082451033726`*^9, 3.8273082605067997`*^9}, 
   3.827843188837061*^9, 3.827941625356044*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"51588866-9c9b-4af3-bdd1-678199b096bd"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Shimming Process Results", "Subsection",
 CellChangeTimes->{{3.824904556197274*^9, 
  3.824904564853549*^9}},ExpressionUUID->"52a31b18-3abb-4b43-a313-\
51b7683ce30e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"imsize", "=", "Medium"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p11", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Bx_before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p12", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"deltaTraject2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
         "}"}]}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Bx_after\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p21", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}], "+", 
          "1"}], ",", 
         RowBox[{"2", "*", 
          RowBox[{
           RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}]}], 
        "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<By_before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p22", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"deltaTraject2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}], "+", 
           "1"}], ",", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}]}], 
         "}"}]}], "]"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<By_after\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p31", "=", 
   RowBox[{"ListLinePlot", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"deltaTraject", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], "+", 
          "1"}], ",", 
         RowBox[{"Length", "[", "deltaTraject2", "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Points\>\"", ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
       "}"}]}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", "\"\<Bz_before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p32", "=", 
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"deltaTraject2", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], "+",
            "1"}], ",", 
          RowBox[{"Length", "[", "deltaTraject2", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Points\>\"", ",", 
         RowBox[{"Style", "[", 
          RowBox[{"\"\<Field Difference [T]\>\"", ",", "12"}], "]"}]}], 
        "}"}]}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", "\"\<Bz_after\>\"", "}"}], ",", "Above"}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"p11", ",", "p12"}], "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"p21", ",", "p22"}], "}"}], "]"}], ",", 
     RowBox[{"Show", "[", 
      RowBox[{"{", 
       RowBox[{"p31", ",", "p32"}], "}"}], "]"}]}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1100", ",", "300"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8249035859237256`*^9, 3.824903666525509*^9}, {
  3.8249037001837883`*^9, 3.8249037668536053`*^9}, {3.824904104821476*^9, 
  3.824904126012784*^9}, {3.824904181714403*^9, 3.824904254556784*^9}, {
  3.8249043375098376`*^9, 3.8249043816345606`*^9}, {3.8249044196188016`*^9, 
  3.824904422775826*^9}, {3.824904492008911*^9, 3.824904534806017*^9}, {
  3.827244624597973*^9, 3.8272447202998905`*^9}, {3.8273081229908304`*^9, 
  3.827308149528612*^9}, {3.8273083390893373`*^9, 3.827308498022955*^9}, {
  3.8273085333653746`*^9, 3.8273085461527405`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[318]:=",ExpressionUUID->"56f3f8d6-9db2-441b-a4e2-38ea50fadda0"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
7VvV2b93JUnI3+nxtPdqtv+TMNchp/CuBdv/zPkN/23tvYTt/yTM6vHvwRsT
tv+Z+skchalz2P5PwmitHveM9Nn+T4JMYYlo0GS2/5Ogl29iumsc2/9JMMme
+ebFSLb/k/B63fo7tf+x/Z+MhoUrVDz7s/2fDPXvSZeO9GT7PxlOhQ6/BL/Y
+38yivy/X+vZxt7/k7FwhXLz0Dfs/T8Zu6w5gqtP2ft/Mi4UrJvd5x57/0+G
rPF2aVMle/9PxlfJLJWV7P3VLBnlW2srVx1l7//J2L0+7lNLAXv/T0byzY/u
Q7LY+38yhio87P84kb3/J0OZ/zJvVih7/09Gs0X2teke7P0/Gb1ex7y5a8/e
/5NR8LvPR9WV7P0/GXg9a0ovsPf/ZPjvMJy5X4+9/yfjP5OR5/6yzzv5zPnX
H3IZMpi9/ydjyqRDVZ847P0/Ge+4wdOFbezzXzJOul3L+fucff5LRlPtqyzj
avb5Lxklg9+ttrnIPv8l403LtsOLitnnv2TM5+nPUclln/+ScXpiUMyFZPb5
Lxkm7U/7rQxhn/+SIbgo3V7lyj7/JWPki0feU23Z578UqAk0R8SYss9/Kdil
Ou3cTX32+S8FS38N7uw/lqyegvKZK5qWDSJzU1CodnBXahf7/J+C4z8GBz78
wD7/pyA8fNy6qezzumEKdry6mppVxT7/p+CoWN1e9Qz7/J8Ct9Pczv372ef/
FMT4vd+1KpN9/k9B2CX300Ni2ef/FLzLcV781Yd9/k/BRNM+U9/y2Of/FBRv
uOHRvpIcnAKRb4XjCBMyn8lnoOqfddPIghQcHvT9U+kosjAFJyYObZk6gCxL
wVjHo0VVnez7XwoyV0SMTG5l3/9S0L6y5ntQA/v+l4In38WRstvs+18K4hZO
6/m1nH3/S8Gsf5vckovZ978UaKS3v3XZxb7/pcDiveRFSgb7/peCt/6ZNZ18
9v0vBSZr7i0q92Xf/1JQV5n28pYT+/6XgteqWs5T1pI7UqBZNTv5mTmZk4pD
dbeUGo3ISqlQn9I7bTL7vquSikuORx9eGUdWT0VdU8KH3cPIXObzBwZsusi+
P+uk4uLoV5nDOWS9VPSdy+tT3M6+/6eiJLLFxv8d+/6finWtM223NbLv/0x9
3VVa6bXs+38qlM/M0Hxcxb7/p+LugTBVc/Z9n5eKxrP7TZ6eZN//U+F4+/fh
tEPs+38qajIcjRx2s+//qRgsnHB/ZRb7/p+KzYWHJ/BSyIJUFI+rTxRFk4Wp
4Gps8nsdRJal4l7NZ1N7dr4iPxUuo7a/+OVELkyFaMPiqPMbyCWp2LdBLarA
mlyWitFlg5ceNifLU/FvSPq4WpCrUnEi2X62uiG5JhU7bPtF+euS61PxxUL6
7YU2uSkV1iVxD9aNJrekQlVc1e/BEHJbKrr+VAstBpA7UjFeY3rtWQUyJw1H
jn95PbSTnf9JQ3bBpIJN39j5nzR4qrTuTX3Pzv+koWSVt1UeOz/ETUNNnvOF
tHqyThqG2T87uKGarJeGULOCbb2vkQ3TwHFr/5FUTkYazvUxudJygmyWhmt9
m86PPUS2SsOZ0T9mzdxNtksD/+Ti++OyyLw0tFZO8vmUTHZLQ9GE0XOz+WTv
NNwXh+ZpBJKD06Cxc4Nz7DYyPw2lVbh8m0cWpKHOXsnhzxqyMA13j+5JUF1O
lqXhsV3+/KEg5zPn5zDIs/9McmEaJrVl//s5kVyShljD6DcvR7Pzf2lweiV6
XfsfO/+Xhml7Ds2tVWLn/9Kw5/m2Me+6aP6wJg2/6uttRn0j16ehsnBpdWAL
uSkNtYGvYv48I7ek4bn+wbUlteS2NPS2nz8l5wa5Iw2zFpq/KbtE5qRj7nBR
zODTZKV0uM99oL2viKySjifvX0z32UtWT8dQM4lN8A4yNx3zB+6+VCYi66RD
mzfJZ3oSWS8duztvZL7gkw3T8XjW5rdVwWSk4/6s0p9vvclm6bi7asBKuLPz
v+nQ9PrkXefIzv+mI0Pz3qWD69n533Qozpgz/+Jqdv43HfVm20dpWLLzv8zx
1r6bVrmEnf9Nx/d5JvrlYOd/02F7MXJGz3ns/G86Ppx1Hps9k53/Zc5/q36h
vx47/5uOqk2/7WWT2fnfdAwQGIz8rc3O/6ZD36BitUiTnf9NR5FxFs9mNLks
HYW/zS8YjiDLmXj6jTNnDCVXpWPIxItqhqps/6fDYu86j3kD2f5PR55KeNh0
dn68KR1/9m6bMUiR7X/mfCx2XrvZg+3/dLjZnZuwsYud/2fav8fBxRfY+XZO
BqKkXl/efWPn/zOw7qf+geef2Pn/DPjvway8d+z8fwbW1ht7aTaz8/8ZcOz8
UefVyM7/Z2Dqj91uCfXs/H8GTMvVwlz/b/4/Ay/uz09Vu83O/2dgzLu92hmV
7Px/Bob+uF5Tf5FslYEv4dIe386Q7TIwaMSeIc9LyLwMzP1mYbvrENktA8fO
D1HU30P2zsDRMwcdd7LfVwRn4O2uygNPxWR+BpRC9ae3J5MFGSiwmCt9E0MW
MvmVLaooDSXLMpA5y36Yoy85PwMOt+5GfXInF2ag00RTxHMkl2TgxPiFvuft
yGUZULHqd7aXFVmega/Od+cbLyVXZUD4ec4DL2NyTQbKxzcq5s0k12fgwONd
r29MITdlIORSadMv9vuelgy8unukSHck+/1PBhQ8sgy3q7L9n4GO9y6HT/Zl
+18IfqmyU68eZAUhFlU86b+xg75fUhLC44j//vLPZGUh6p3yj497S1YR4mVW
0PqMRrKaEAG8kSVdD8jqQizt8d8TjztkDSGm5c5Z+7SCzBUist+U8WblZC0h
7DI+Vpw4SdYRQuVWm8nII+QpQnSmLhsew35/pifEzC0Rei05ZAMhDM+ID6wQ
kQ2FeFSmUHVaQDYSQtFhxp+xfDKEmOT07IQoiGwqRMbFM4F9vMhmQkT0OPw5
zoVsIURf8zsKyuz3fVZM+7X7/ty1hmwjxJJ9a2JhSbYTYlz6rM5vpuSNQgwd
/M3nghGZx5zvMvNTBQZkJyHeVD5xPTCF7MbEP9bcek+L7CGEpvUl48mjyN5C
3Hr3Unp2CNlfiMPCHh9iB5KDhbB/utZY2IccLkSwwvKPLzlkvhBfepWOjPxN
33/GMe1zXZbg2M5+H8r0R3vhnuRP5FQhrE5bvW5nvz8VClGbvkFzxytyphDz
/gt879tIlglxvW1UbeBjcq4Q0c+tL+TWkfOFKF//Rv9pNXmfEG7mV87q3CIX
CsH1DbUKv0YuEsLA2qvpzmVyiRDG4oWioRfIpUI8906+Y8V+/1smRHrE7IHB
J8nlQswysvYUHCXLhaio/7E88hC5QoiblfKfa/aRq4Q4NX1oaP/d5NtC6L7b
4r4jh1zDnM9iWVWXhFwnxOwjv5/rppPrhdhy7YX+JAG5QYh7haHBr6PJTULo
vdE9uy6M3CzEN8PT+ZH+5BYhFjzU+7p8O7lVCD+j45xzzuQ2ITa9+qV6xZ7c
LsSE3+Epm9aQO4RIONjWkmxB7hRisfW8kkWLyBwRTvK1LBLmkBVE6FV4qscq
XbKSCH5vkz7t0SIri+B6f/eIcPb7fBURbNdxRc8GkNVEcPpQ4XmjB1ldhGqV
1jsLv9P6AA0RTsdFHbJsYdcPiKB9LSzx0xOylghtxV+mTrrDricQYWXWUr/e
l8hTRHh/8r+x8ez6BD0R1GZXfi0uIBuIYJIzIS9OTDZkjpdl9GhALNlIhNcL
OetW+JEhwmhBRO0ydr2EqQhj3T4/67OabCbCiNkzPyQtJFuI4PFv7OIH08lW
IvwZ2drnE5dsI4Jeh9WU+kFkO+bzO76O1u2i9R4bRRjar7bJ4QmZJ8LNEU1y
8zNkJxGWanq4fpOQ3UTgDf/yd7M32UOEVStLxuyyIHuL8O3MhWuHdMj+TH9+
m2udrEAOZo5/ts5tUROtbwkXYX9O8X/159n1LyKMtB+fv0xKjhNh3ZI5e3N9
2fUwIpRl5PattiSnivDk7p5JL3XIQhEKVUbdftCLnCkC18NS91Ajrd+RiXD3
RHvb+rPkXBFU/a+rvZOQ85n8mhY0WnmS94lQM0/hWboZuVCE1Xvm/tylSS4S
Ydywjo3hnbT+qIQ5/4Sgo2MfkktFqLPrMEo6Ri4TYcEaM16xgFwuwr0h4iKB
I1kugnxkks3QueQKEYIbFxlZq5KrRPi1bs2iOe9pPdVtEdYEDzS5cZldnyVC
SY7H8B455DoRvE0LHzd5seu1RNi8t2KP+xJygwi74k7J8zTY9VvM9blkVyH/
K63/ahbhg9v0xqFV5BYm38yYJuc8cqsIBfqfv/j5ktuY8eR74erSpeR2Jv+I
WMuWkeQO5nq6tCFjYxutV+tk8r9zKfVIBZkjRsT1Q2MaZGQFMU7PNO333YOs
JEbc3E+aXSArizFCfM3/jxpZRQzrg/qyny203k5NjMljU2f/Lieri7FZ8ql4
gIisIYa9VvlZY2cyV4yBPS1H5s0ha4kxWv4f87xL1hFjztsBwdNe0frAKWL8
4Mz1TS1j1xeKUdLMebwtnWwghr7RnKcvndj1hmK4SdM7FI3IRmIsPvnf29b/
2PWHzOcFo5MKW2l9oylzfNvESxbXyGbM+XQ9+v4+n2whxrjZNzzE4WQrMd5a
iqetXEe2EeNe3aqFE2eT7cQYu0I4T2soeaMYsqhsV5MftH6TJ8bGqf/OBT4i
O4lhqD5RfvUs2U0MC76Ow+g8socYmucqzSKi2fWkYsQIVTUeupD9xcjFvkmj
LMnBYlzpVT9usQE5XIypUtNdxhrs+lMxqn1DjvxUIMeJcbhqqWDDJ1q/KmDi
J3rFWteTU8WwCYTHlStkoRiiBd+8M4rJmWJwJzxRzpORZWLUBY9RrI4l5zLt
U+w/vZ8XOV8M2/ipPw3Wk/eJcbzySsnsxeRCMS6HDrvaqUsuEiP1fHiG9why
iRh/vfe8iFYglzLtefK3vuYnWu9bJsbsQWZDljwil4txd4j2ndeX2PXDYixx
dS3uOkiuEMNUsN08PYNcJcbN5a7c3EDybaY9qrdzde3Z9cZi5IeOHGK9iFwn
xr+6G0qq7HrmesaVp2oiBpIbxHA9+/74/m+0Hrrpf+e7YtDOenKzGL4jrz73
ukBuEcPl4aKWmXvIrWKUh99J7EogtzHHT97tVLeN3M6cv5f6z6tW5A4xAkL0
7tfMJHeK4f9fHu/3CDJHApvQI07zOGQFCWJHmz9Lfk3rw5UkyFj+71bDTbKy
BGeiJV81S8gqEniOrIq1zCKrSaBs9OvE8lCyugQn98k3KTuQNSQIeFbwLHIR
mSvBHr1SxcwJZC0JDie9NzXpT9aRQPHm8hVBn2h9/BQJTqfMtZp1j12PL4H1
8uclISfJBhJs/XNp2oIssqEEkfr+GumBZCPG4cuyN7Pr9SGB8Iyk5+XZZFMJ
VPR+PTwyjGwmQWHmhF/LPtF+AAsJ6mwGbeYVka0k4M58tiPXnWwjgbf57wwF
bbIdY+HP73kvaP/BRglu97m0xCuXzJNg/cvoq1G2ZCcJFju2mT0aRHaT4Njg
m08jqmi/g4cEodU7VML4ZG8J/tsTuvvBbLK/BHbbL58Sf6L9FcES7O/8s+LU
PnK4BAu1c9/MX8/uv2Dy75N4f+IgcpwEjbkZP3yv0n4OgQRWgzNuDQoip0rg
NryvRftEspDpzz7ZGv810H6RTAkOKI466JBGlknA23TJs3o+OVeCT9pPN234
SPtR8iVwemQ1npNL3sec39+EYRfNyYUSqPczbJb9oP0uRUz/u82IkO5h98NI
8PJo58+rluRSCZKjN8RM7qD9NGVMe4/8MKuxgFwuQXVx+adPy8hyCTpm3Mz1
/Ub7dSokMBoeExu5k1zFnO+udhftReTbEuyw3fUz9D3tB6qRQP/D8TqBiFwn
waSQVCU7Q3K9BPFBKmhtpP1GDUx7XX32xzSe3Z/EXD9HtYZuYvcrNUuQ6lgw
Xe8e7WdqkUDDfsOHkkByqwS2Kcd+3R9JbpPg4Y+qigQ57Zdql+Don+jf55zI
HUx+/fYk2yuROyXgHE2t2niE9mNxMuF0tta90JKskIka4RUz/c+030uJ8VTz
XZ8yyMqMFZZ11uqy+8UyoVQzYM7pPNpPppYJeUfM487HtP9MPRP8X1vG+KuR
NTKh05Hwepgl7V/jZsJGfLd/Syztf9PKhEfLz1/vymi/nE4mTHWnxE1qpf11
UzKhAQPbi6PY/XiM9fI8r1jSfj0D5nhXK6vXhdP+PsNM3I/yv3noEO0PNMpE
pkFN1cMHtL8QmRhwSzS4Zw+yaSbEiz04ZpNpv6JZJgS1yhsu2dB+R4tMKO8a
Ny44gvZLWmXC9ub00LD9tP/SJhMIn7X7xm3av2mXibJvgW/WfqP9oBszUfg5
on3gcHZ/KGOVt68yw2h/qlMmDE0azpdeof2xbplouaH7bmAf2n/rkQm7/mbT
9M1ov7F3JoJPla87FU/7p/2Z/pnmetvkEu3vDmbaX2N7z/R22k8enok2nYBT
fuPZ/eeZ8H6sndSwiva3xzH1J/hycr/R/nlBJvSMs/67O5f236dmwqph34jy
ENrPL2TyPdWv7VcJ/T5AJhPvlMjU5Qr93oAsE02meSG6Q7Vo/DOf72c+wPiC
Oo1/5nr5nPMnzo9+T2EfU//cnob+3vR7T4WM+ySmGvek36MpYtrTXz654Cn9
fkRJJnKfZ2SVl9PvVZRmomLM7rWPVk3vdhmTn8HSjQ1LZ3a7nLn+6o5YDMSc
bsszkT+2YcmAufO7XcF8Plhj0bkd6HZVJtTPuLx/L1vY7dtM+WcXk41S027X
MOdnEjb8TtaSbtdlwm1q68Y/ErNu1zPjI9pUo1C0rNsNTPsXXqrKTbfodhNz
/J+/bhYnr+h2cyZ4uhFvny206nYLU3+XxfgnJqu63cqMV5+n95caWXe7jam/
c/p0HcPV3W7PRNGzC55RM2y63ZGJVlP+Putpa7rdyfSfhuLCAzq23eZkwcxu
wYAIzbXdVsgCL/hTy8ORdt1WykL8Fespx9XWdVs5CxudTjT3GbC+2ypZ4ASk
VT1Q2NBttSy4xc/49l8nWT0L8kquz9mvG7utkQVt7QiLcy323eZmwdNM+kCx
cVO3tbJQevDM4eT7Dt3WyUL67+opQ7fwuj0lC/te3ShzaSDrZWGWqrr7+DWO
3TbIQkNnrILJHbJhFqy6cvN2m27uthFT7tA7Y8Z5MrLAd0+LaNHb0m3TLOBQ
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
v58fOK75gYNDmfEj89363BuXaTzyZFZS8GM9ofGeL/PR2t0HuunvSals+2U+
+rvfMH/fZPuzbrmNpJj+vtbLfu95JYInoOtHs6ydrfnPdg9dbztkzph1sOQX
c/+1E3KGSgc1t5dX9ea/E1LuEK8Gk85es3YifLSn4uCkvpd689+J/Lz/Esb9
VOk1doK94/g/4znDem0n297Nb9azP2v0mr0Tzd8n+7PztXrtJ2uv1G0fcoDV
a46s/ej2A9c/je81T9YeM6vq17SJvc7fCY7BZHPpxkm9LpXZ0+jRf8mTey2V
7Y/NrecX9k3tdb3M9sv6Rx+e1utmmQ8VXigsmt7rjp2or31TEXXLsNdy/oDq
R7lFFTN6reoPqdFV6animb1m+cMu99S3eN4syl/WXpThkRQ4m/KXOdZu1fG1
RpS/P0qbuVUKRsaUvz86WM/nJA2bQ/n7w29LucWPL2SOrP969pkb9SaUvz/s
RaEug0vnUv7+suvFj5bcrHmUvz+CH1ndV/KdT/n7w2VhPzRam1L+/mCd+xgS
OXUB5S/bn6rLezcpmVH+/uAkKHT2f0mWC0BpenyrSvlCyj8A3qdjp7LMQfkH
gH3gRHXTcbJhADpM4u5sHLGI8g+AnaJV9vNIsl0A6o0erQl9RWbLnHF/ndny
xZR/AJrnXz+ld5TMCYDf3RaHMYOXUP4yDzf36/Il5weAY3HVI6meXBoA3pUH
Asn0pZR/APLXlZ9rTyfXB6BGuE3btJXcHIBQg/wW7UXLKP8AFD+ZK5ohJssF
wu6i9vDf78mqgZBu7fqsPdec8g9E447wEzsTyIaB6JzPqXpzm4xANL89OaFo
yHLKPxD9y37U/LAlswOxc2H0hPkZZL9ApK8tCWq8QeYE4oKh36v5chaUfyBm
Xzm34ZYxOT8QPq5dyx5uI5fK9vfqq670fWRpIDpSjul03yPXB6LmdOmEH/Ir
KP9AlJ9R/L1mJrkjEHpa2j8bN5DlgmR/b0PrN6SRVYPQ3aE57WEZmRUk+/vs
tGF2E9kwCBIVdnRsH0vKPwiNSjWTr+uQ7YLAXV0SpmZOZgdBeaTNjLjNZL8g
2G1bMm1ZPJkThPItBs8P7SPzgqA56c214RfJ+UHQ04/4NuQRuTQIOhMNN2t8
IUtl+x+xSVukspLyD0JCQd6mB3rk5iC4q96K+r6M3CHL59nrgyoeZLlgPGJf
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
/nbuwP00/nNhEjVO0q6xf+H/AXsyvDM=
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Field Difference [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.013490715227336785`, 
           0.015533544527216796`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"Bx_before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Bx_after\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Q1aTQWetxZ5as1Nlx+iitRCM+HZAdIWuXosXbTPHaz1UxndG6k1/rKpRxnfG
kzxLA88GZXxndPv7M3vhL2V8Z0z2ibur1fI+4zujaURW45u2dJYzPItatmho
Txc5o076oiSgE13tDMN/DtHvO9Mq69CqUO3OFQ1aZx1+NCxyOdGFxjps83x3
akc32mkdbhvbDtuvqYy/Dm77V+9f2F8Zfx1cW0R9iBqujL8O8cUFkwqnKuOv
w8O1NuU9Vinju6C09AriRMr4Ltiw2WuZ2gNlfBe4JmxzThpTzvguGDF7gluv
o7TABYEfTpy3sn/A+C5IVl3WRzDqIeO7oLfNmFEWpo8Y3wV91+e9mi+oYPz1
0KtuXxP/4zHjr8eEToGT58gqGX89VFrePx03/ynjK/xQU96l03PGX4+FQ1u8
fO5UzfjrUdHCapvDyBeMvx7uydfaLa2nq9djVk3790NELxnfFR1HuO+p7P+K
8RU2OnShk4SGK3ob3/3x9h3t5Iojr0MsxINrGN8V4n9N9t/N6SxXBJvNPuY+
my5yxc3eq6YNM6OrXWHZ5n3DIz1aZQM+Zd8e2NCJ1tmApn4/HuxvRWMDviQm
SDU6004bsCK42nP1JGX8DXj9y2pEoUgZfwPmr7ba8UL7NeNvQElhxEzzJ3T1
BkSXi271rnjD+BtxLXLP792atYy/EdscozID0+sYfyN2eLitNHZ9x/gb4fKp
d1XHyA+MvxHWQ05/fP3lE+NvxMLI5RUdHT8z/kZYJL9o/PntC+NvhG3FxNV6
JY2MvwnL52fbW1R9Z/xNcI/zn2U88Sfjb8KRyXljzet+M/4mWO2/X1/y6R/j
b8IO9QVxi4e2+O/v1qxNaDw2ND1QvdV/LtqEP4WeDed7t/7P1ZvwdU3MlfHL
2vLv3M3YpykvOXq93X/W2YzYp9aqd506/GdsRozK9282fTv/Z6fNuCJf4Db9
r8Z/FmzGbpNdfwr8ujL+ZtxrV6OT3KI7429G5M57CxaKezD+ZvxY8SZJPlST
8d0w+4b14j/FWozvhofiA2+6r+rF+G5wd9cc6favN+O7oXhy44p4WV/Gd8Ny
1+f5NcP6M74bHhRuWqi6VIfx3XAhOTtsRe8BjO+Gyiv2xzMe0Cru2GW+0kk3
duB/1nDHqaXnPPOMB/F53LHubI2lbSVt6I5+UcKR/v66fD53tA82NbzWTe8/
W7ujyzXLAv0c2skd/fseP1ViMvg/u7tjzrxTJV2u0QJ3mGoOO3LMZsh/Frrj
gcqEvB2v6Cx3LCr5N6j1Vv3/nOeOsPypLmadhjI/d8zUCnm7+zBd6g5X1z0G
W5cMY77uKNg4cddpDYP/3OCO7u8XNhk8pFU8YHS+o83Ug8OZvwdm67m8Gioa
wfw94PXSR/44ZiTz98CUx5p1nVJGMX8PtE69eM7A3pD5e2CLm19mbAPt5IH4
uPFXz4pHM38PvNiUZnJj8hjm74GWRRPKDzfSQg8sqT/otTR/LPP3wI9zKzcU
BRkxfw+cT27jf8/amPkr2h19cmNGjGP+HvjzaOLYt93GM38PnLF40v1bKxPm
74G13ufsi/7SKp442+/Mq6UtJjJ/T1w9YVj6tNMk5u+J5QdenFg22JT5e8L3
/J7h7yzMmL8nht7aPUi0ZTLz90SXYvOc6funMH9P7Hz6JH2zF5i/J96Yvk7t
oD2V+Xvi4tx/9bMu0UJPFPaI7PrWbRrz90Re64quaQOmM39PCEWBdeqP6CJP
DPa+JnqabM78PREQ6b1/r9UM5u+Jv43/+n5sN5P5e6Jy79x9BjdolS3IW/1u
8pV4C+a/BX/TXw/QmGfJ/LdAy2bEscUas5j/FnQqqZtYdY/GFkxOvX68QTSb
+W9B3yUXT3yab8X8tyAi28xtVvs5zH8LEtvd3hB6mRZswak9GZkGvnOZ/xZ0
uVmzp1Z/HvPfgrtFm1NXPaDztuDbu86wCprP/LegvXGz5kgNa+a/BWOj8i2H
r6Crt2DhpO26MQfphi1QX1SxfPQ3WsULlWXDFvU3XcD8vWC2JahgvoDW8cI7
z9lply7Shl6w/7ijeKvKQubvhT7TJ2qtM6WtvfDL5+qUWG/ayQvd+gyX3D5I
u3vB6cOlgP7PaYEX/J89LVzbeRHz98IhYYJjmCmd5YXjhV3rFjjTeV5o922d
zoEEusgLiyvnl9ofoUu90Ft/x9FBd+hqxfUTqmffqKUbvBBd4vG+XTOt4g2h
z7rEXRo2zN8bMxt7aC7tS+t4Y8wNk6WqerShNwZoLL7qP4SGN+JumS/bp0tb
e2P048HRgj60kzeaHo5t1b4z7e6Nv5nWjx3+ML7AG4/XOP5LqVHm740DszI+
1V1T5u+N+Gu7CzL2KvP3RsCwr0d+CZT5K+IdnTFzoZ0yf2/I9h7++WOoMn/F
9e0LBZN/8n03eMNJdYf21iu0ylbM0TN6+y6J1tiKx+EFPesX0zpbMaV3i5SC
XrThVvj4iTV2POX3gK0YYLzY6MUO2nor5s0KWXfdkXbaijaVfU/u6Eu7b8X2
vcFtcyr5/Qm24kpt6mD9NFq4FSvrr2k62NJZW/HAZ/KKzd3ovK1o7TW9T4+d
yu9/K4rUl/6W9KZLFc/f78uViFSOl+qtWGZ0bmeLrnTDVqhX3YNOEsebig/8
3i0Y/1Gd1vBBenKmhWcMx6eOD8rdI3bntqENfZD2xkAkj+T4hg/Wq2suNGxN
W/vA9WbTkS2RnA+cfFCxcNGrTW1odx9cqV622CSG84fAB0N2TMMvdVroA41V
fpGvkzj/ZPlgYBvd+2O603k+6DW764Z+2zlfFfnAKutgmzeD6FIftDvf9vC1
w5zfqn0wyr5dxxamyvnPB6l7lxXcucn5UcUXge3//HJ1pDV8Mf647awOjZxP
dXxxd2CH8a8SaENf9P/RIVF7KA1flORb1ZWVcD629sWv0av+jthIO/mitijN
amY32t0XW1u0Ehmf5/wu8EXb0gP+3TfRQl/ULejs/qu/cv73xemShMV/HnJ9
yPPFjrOthg4T00W+2Nx9x9b4BXSpL4oCh7bs3YOu9sXY3J5Jl6q4/jT4oiwk
u6V9Dq3ih9QWtR4ZPrSGHxwNxD7TZ9M6fvDW/Z39oT9t6IeADdppmxu4vsEP
E0V7pG57aGs/fPL+0dDeUbn++eHrs1313tq0u59ifh8lr3vI9VLgh7dB8ofH
pLTQD2OMd5caLaaz/PB86DX9r93pPD/o3za7v72c62+RHzakPbfoLKFL/XB0
uPmw1Yvoaj9YjXGYVt2VbvBD3OfdEb/KuJ6r+OPj7MzHMyW0hj98hn1p42FH
6/gjwe3opzF9leu/PwrP2f+d84b7A/hj8tyZ8uDjtLU/tn4/PSooknbyR+zZ
rla1y2h3f+TMTDacOJEW+CPMJvL2yb600B9rO09OW9aWzvLHmnM3zaq/c3+S
549RLsmbj7yji/zhv69+eHMNXeoPT0+HR1Uv6Gp/hN7oYWumdIM/yr7PtVN7
SasE4P6gpH/9Xyn3PwFobaNX46y0TgA63Cl+eFXZ3zAAubqR8ROf0giAb0FZ
SGU5bR2AWZc7an29RjsFQFu0KFf9JO0egJHlTqO+7aAFAXj5uyztVhgtDMDF
rPM3Xq+kswKw1L7g/HlTZf4B8FwwZ8SHbsr8A3Dbefk5jdoJzD8ABi0niq6f
pqsD8HrbbcGxWLohAOJnvWqW29Mqgfg9ufzyosG0RiBqJmfkaTRyf6gTiLyB
S8+rXqINA3Hx+pydYiGNQLjF5cd3cqKtAzF/Tuui84a0UyA0h963fNaSdg9E
aofQhKyH3J8KAjHsU277cbm0MBAzrr1ddC+czgqEvNPJioPL6bxA7NTtekp9
Il0UiCvdT7SYrk2X/u96y3nnfnM/XB2IfINQ0x8v6IZAlKkunRZ6i1YJwvW/
aZ++n6U1grC+1alFX/NonSC8HmYU1SqXNgzCuMbUt9sP0QjC5UlNFt1O0tZB
mBTRdHLXFdopCMu2LW5eV0W7B+FJ1g9Xl1+0IAiJT2+tFfdX5h+EG09aWZyz
UuYfhGvOBuv3BSvzD0K1sXH+11PK/IOQa+rno/9DmX8QZH2CTI9N4vuuVjzP
17iW7yOU+/8g5I1YKTIoU+7/g1FhP+nR7YHK+gdj+86oN1O20jrBKFNvf73l
LdowGFZHpwsPDlJ+/8HwthYGvghUfv/BWCIw1Vj2SPn9B8O4RZP3yzHK8R+M
ZdprIuYkK8d/MHxjSuoj3ivHfzDqbaWf42ZzvskKRr/S85Xu++m8YGxauzRh
cTvl/BeMdmEtji1xVc5/wUiqdF0quaWc/4JxbHjglvaGnD8bgtGrtnjQUQmt
EoIHDt1urvlFa4TgV3Gf0d+cOF/rhEBV2/bjgBLaMAQztgbl3tbkeoAQvLB9
OU1gRVuHILJ3ncPHYNopBJVZbVvcP6r8+ycEN0Rn2la/ogUhkOUajr7UXfn3
jyJ+9teLQ8zprBBM7D/f66qHcv0LQZefj9etyFCufyF4/8L+y4WryvUvBJ8O
dv934YNy/QuBW9Wx4VO6cj1tCMGO/IunBxjRKgJcOiKImruIVhNgUcbzq/uU
f39pCPB9fJa8WyytJYBou30Pz0xaR4Ap62I3ZR+j9QVwMPj4K/kSbSiA8dDU
zwPu0iYCNM2TJS6soCGAX0FYme4z2lKAzP6DzbOraWsBjE60vvPiOW0vwLec
QwM+V9JOAnxy8HN/W067CBB63ENYeYN2V1y/sm7X23O0ryJf9TW7DQ4r9x+K
/F5ua1+6nY4RIGfKTt220cr9iAAnN8Veau9OywV4nxjv29dOuT8RYJXedKcA
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
tWLCjM/29PsU9Gi7PKSFK92QArO2kaK+AXSjYvzt8eg6I4FuUry/NzvdfTLo
PylYc3zsx+OHaRUJPp8+l/PzAq0qgWzo4KMW92g1Cf55qutkvKQ7SFDtfmDE
z6+0hgSzqx3HLW29j+NfgrEBLYsu9aS1JJj8o9h/lD7dR4KEYa2m7pxA60gQ
XTVFU8uK1pVgVfEDA8kyWl+CZe9syntspodLkPbxWnRGCG0oQS+9uscGItpI
gjspR9wv7qJNFM874+l3x3zaVIK6Yt/ura/SkCDiY7VL/iPaXIIWXTIiN9XR
lhLsFV39YPibniOBx05Jl+YOORz/ErgE3Zld0Y+2kaAguNuTQkPaXoJZDceq
c6fRyyR4Mb/Vihwb2kkCv5GTjY8402sU8U53HH3Rl3aR4O3uoT2fxdEbJegU
uexQ6wzaXQL1Atu744/QXhJcez5+pddF2leCzTvO2p29TwdKkO9Un9fhDS2Q
YEr71PUuTXSE4vpjS/zvqO/n+Jdgk/32u5P70gkShI7qPvH0KFoowXdsX2E2
jZZIUKSTeeiGDS2XYGqgYJrTOjpdAt+5N1/+8aOzJLBcUtS8I4HOluDkiC/n
zTPpHAmW313b+v1ROlcCPZWeieJiOk8CTB1SZ/yIzpdg/u62iffr6AIJfC6Z
33H5QxdKcK+tad2XTgc4/hWW/27nNoAulkDapszxyVi6RIKXW8eNGzOTviVB
/Zg5+l72dKkE6zZIJu5wpcslGL63XdPhQLpCgq87HvnuSaKrFO/DvMYhNIuu
VoyfVxbHph2jaxT1Ni3/U3eZrpXgnc2vbr4P6PcSBPvM0P/4hm6Q4LpXt4K5
TXSjBJcbP4XJ2x3k+Fd8D1Khd2kv+o/i/Wm7RPwwoFWkOOUyMqyzGa0qhd7A
8h/a82g1KS5KGrprraA7SNE9Y2CuujutIcX67PfmXwR0dyl2rt406q6I1pJi
iGPrjJ276D5S3JTpnVh/nNaRYsGRhuwhxbSu4n5T0k5UltP6Urj827Eq6jU9
XArbTrGu+t9pQykcx05/fqlNLse/FHcm7tS306RNpFB1m/32zRDaVIp04c77
W0xoSJG27lRcsyVtLsWqVwtc4pfQllLMaHHQTcuVniNF+897zPb509aK+Av6
tjWJp22kGHyyKf3GdtpeCpPZ3/0dc+llUkiso+5/KaSdpMgutDgUdZteI8Vi
m14ttZ/RLlL83XrxQc5HeqMUb7e0sTJupt2l0NX5vO9c50Mc/1J0eqtmP1WH
9pXCLzOz5oIhHah434cnvTeZSgukuPam/6DcBXSEFDWzfBdpr6JjFPfrUbxE
4EknSHF8x5V+L8JooRRHU9YJJ6XQEimMfGZtS95Ny6V47/Ks19PjdLoUQcP0
3g8qprOkcMgrfb26nM6WIuT5vZr0GjpH8f5H/Lp1p5HOlWLm/tWJP1UPc/xL
8a1Nefe+Peh8KSZY1M2foEcXSOFp/GDIPGO6UPH9bpsbu3QGXSRFZ+Of7isX
08VSZK7+9G3FWrpEisahNQ523vQtKe5lyTUtI+lSKazmutweI6XLFd/3nQQj
rT10hRTR/5z+NuXTVYrv8aV/4YNiulqKokl1zw+X0zVS9DD9ezyihq6VYqjn
8Y12jfR7Kfb1KRsxRPUIx78UC7VNezR2oxul6HLW2Oz8ILpJqljfay9EjqX/
KN6v75YTs6fTKqnIHWVv3HERrZqKfXNt7W6votVS4a2bPibek+6QivSqimcz
w2iNVLTrucBLRUx3T8WK4Q/bFeyktVIReOx6/qajdJ9U9G8TFDPgIq2Tiv3H
98rvl9K6qdjV1uF3eDWtn4rIyD6XxjTQw1MxP3Lsv+fNtGEqul31qL7SNo/j
PxVzBv7rsL0zbZKKl47j4900adNU+I2evWp6fxqpMGjxdFvPIbS5Ir+ORRPr
RtKWqfCpmmBxdhw9JxUu4qqrCZNp61RkHBpTtHwmbZMK4+WN40fOo+1TsfzF
5TH/FtPLUjG6z8aTt5fTTqmYuNzvWvpaek0qus9rct2wiXZJRUq/PdkTvOmN
qTgUesS3bRDtnorXFU/qyyNor1TINlo270ygfVMxXORxZrOEDkzFkZEn+k1K
pwWK92vlPqptNh2Rihy9xk9lB+mYVGgsVFu94zidkIqLFb3j15+lhanQt/zs
anSZlqTizAfL1s03aLkiXrbzsutldHoq7pyY55nyhM5KRV5ZzuzlL+nsVHh8
6fJ2cD2dk4qKc2tnN3ymc1NxskTkffonnZeKOuFa17AWRzn+U/HmVJCBVTu6
IBVmacFnunWhC1PhYO6lXaVFF6Wix4NfVtk6dLGi3jaOCzbq0yWp+DtiiYGR
IX1LUd+jkU9+j6dLU+E2drfT5Sl0eSoG2/07H2dBVyjqMWbKjwXz6apU7Og/
TV3bjq5OxRKT2F/PHemaVJj3TCnZ60zXKuqR9c1r02b6fSpKr05XMdpKN6Ti
g+9v119BdKPifQyadbIokm5KhY3XxJqoRPpPKgRjQr7NkdIqMuw5tau+awat
KsOdaRHFFdm0mgzRt4LCd+TSHWQQryzVX5NPa8jg1MHlxNBCursMQUcmDvt0
mdaS4dXy3dH5N+k+MugNb3vH7z6tI8PdQZP/Tq6kdWVY2b+0h+orWl+GyRGa
2tfr6eEyzPAd2TbpC20og2pw95cLf9FGMow7bXxQs+Uxjn8ZPLe+WFXVjjaV
wSRscdudXWjIkBAYlrZWmzaXYXXyV+1hA2hLGWqvaMZ+1KfnyLD+nfnbY4a0
tQwNvj+MfUxoGxk227b3ngTaXoZ/80P2NFvQy2TYdP78tcvzaSeFP3WujLaj
1yjiay2utlpBu8gguZpc0XkdvVGGLuE6xfc30+6K50uv3SXbSnvJ0Ph3pPfS
YNpXhrcNGZP6R9GBMhTMvP7tZSItkGHNhFfZe6V0hAxT/k2b5ZpBxyieb4v+
yxF76AQZrp556/Y5lxbKUHzt4Nf8fFoig3ODyybfQloug3lSv6eTiul0GZLE
BtOab9JZMvTKrMq4dJ/OlqHP11MNkZV0jgxH/oyeOOsVnSuD/N8evw7v6DwZ
Smwdjtz9QucrvgdZbaX4F10gw+LAQc2LWx7n+Jdh/Hj1XtrqdJEMnb3mjqjq
QhfL0CZH0yRTmy6R4Xi/YRNXDaBvyTDm9lgjvaF0qQxzup8YXGtIlyvq//J4
l4MmdIUMIz4e/74JdJUMvb+LHxha0tUyDNI9d/jrfLpGhm0DxoedtKNrZbh9
s/t8vxX0exlGzt/cw3Qd3SDDC9dxD/5tphtl0ErfnnxxK92kqEef6eYRwfQf
GSw7bvsyM4pWkWPDzQ/b2iXRqnJ0zn9qdktKq8lhFT+xKimD7iBH/YpS7wV7
aA05OlTkte9+iO4ux4TxnTMe5tNacvh+zxuWVkj3kSPPOOz40mJaR46egzua
9LtF68rxeJZjQfV9Wl+OXud0jXdX0sPlaPna4fDaV7ShHL3djg/Sf0cbyRGg
NVpa/4U2kaNKs3PLQ79oUznUXFxc3Vrmc/zLcWzXyzuj1WlzxfUnDo5q7EJb
ymGzf3DCSW16jhxtD0ys8R1AW8sx7rbzhElDaRs5/OdI4/4a0vZymIpVH10w
oZfJMX7u8v5hoJ3kGDoldbW5Jb1GjrNRkt1trGkXOeZOyKwusaM3yvE32aFX
/AraXY74CZMXzF1He8nxr2tNeGc32leOlZY7j93bSgfKUfNK41lKMC2QY/SI
/m1so+gIRbyfewy0kugYOX5qPJ73REonyBGz87xbegYtlGPzmxFJjntoiRyG
u77s1zlEyxX1cpx1+WU+nS6H5clOj7ML6Sw5BFYB75yL6WzF+/UI+6N/i86R
o/WMf+3f3adz5Wjlmqt9qJLOk6PYaL+u2ys6X46rH92Hj35HFyjixXcZ8/UL
XSiH7Skr4xO/6CI5PK6sGufT8gTHvxyV8blGE9TpEjkixlcb/u5C35KjyebC
sHPadKkcPdx/DgwZQJfLET3ytubUoXSFHJ5+2u1ajaar5Jhi++BHsQldrXg/
k/e+igJdI8fM4/tvW1rStXLcsH53Qt2afq8YH3/q0m/Z0Q1yqMy7E5q0gm6U
I7lNx7XW6+gmOSbZBFh0daP/yDHrU6J++VZaJQ0FKtvUUoNp1TS0Erq/sYui
1dKg06LionYS3UHhgInplVJaIw2Tt2d4Z2TQ3dNg2/Ps3BV7aK00NB9+pTvg
EN0nDTXX1/5+mU/rpMHUaGVZdiGtm4Y2cp39zsUnpvwfxT4nYg==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
FK3N//jk/Wb+apy3G6cZ8+QP81dD+GuL2gdVhQv/8ldjjOIfzehjdMlqDM6v
Ulnh3O6fa1Yj+tfowfd6t/9nhTWY/MRmn1klrbMGCxUG//iVo/jPWAOngiU7
/dyU/tlpDdT8Rjh2QYd/FqxBpN/PXmMGdWT+Gvgavjq3QLUT89fg6dIJw160
U2b+GmwuTs23bq/C/LWobn2yX79rZ+avxY/HdiWvhnZh/loEO6UWt8xRZf5a
eCyaPqImVI35a7Fhb8wEndNdmb8Wl1/dT81qr878tZjeMGDuqSN0zVp0UDW9
MtS1O/Pd8LFiUqSyTg/mu+FV8zLvsNc03BCb3a1D6uGezHeDQu9+06dEaTDf
DVPmHHZMsO/FfDfsSFdsXDW5N/Pd0E9R3a1uWB/mu0E3433tCk1N5q9DYJtp
6bIefZm/Dvtu/L52pFc/5q+D2Oxb1bIh/Zm/Dge183cpmWkxfx1WDPBcUOKo
zfx1uPbyP/3Q1AHMl7tzT8esSwOZvw7NncZfNIrQYf563O8/Y8DL3oOYvx57
By3eq7+fxnp0fCbsGTJ6MPPX45Zrcdp/W2jBesw5/WRvSwOdux7VYoNgd+0h
zF+Poz23rz6rR9esR2q4S87oHrSCO16bf/0TUM15HXdsmXBzQC8ZDXcc2pZ3
cseM/8t3R9PfCIG0jtcncMeVhqEHrybTue6wjxmhNsWALnFHc7LKx6WP2LfG
HUqx1/PyBf/X3wOX/I6PeTeC1vFATHpL8vYtvF/wwPBpgz2Gl/F+OnlAI/6J
46ubvN8CD2y2uzG/XTD3keuBzz/crSbu5/5KPLBr/Sr3q/rcd40HZmqMX9r1
Dp8fhQ3YIT37NMeez6fOBtjOv/pH147vFzZAqVfR+COD+e9Hpw1ITE4acmXM
lyn/8jdgztpT3bfOUfv3uzV3A3pW6B/aUNX3n0s2wOP9vWyfoUP+uWYDpviM
q7n1fgR/53pi7aQbTaNEBv+s4wnLya57tZaN/2d4ompij7sPzIz/2ckTrfd3
SsZOMPtngSeWLox88p82mO+JDHF9tf+g6cz3ROTAKWbXhpoz3xPuU+YsbNSb
xXwvSCXDvshGWjDfC7dP7I6cO2ou872Q9TtzX7S+JfO9UFZ/fUi1wQLme2H7
kYOlAwdYMd8LA9tCvrwcsYj5Xpjysjjm8pTFzPfCNo2AR52cljDfG3WjjkXc
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
y/g1TnSeACkNC2KvS+gCAaq3WJ/Uu0EXCeCoY7Ys7jddIsAaO0gaNEv+uVR+
vVuLf2gY0uUCDPL/dWnSfLpKgOg1xxpWrKVrBMie53wkNoquEyAy6FxS4Wa6
SYDed/ZMbDhBtwqgmpQ4zbScVojCjekTV+36QCtHwehbl4pRHS5y/1Eo3dRc
8HggrRmFltwnzwtMaJ0o9Nda+v6YDa0XhW3L3xvXetMGUbhfl6czPYU2joLJ
96EfyvbRiEKtWt8r0ZdpiyhcPey926matorCz/erxrv8om2jEDLzXl1Un0vc
fxRm+49YddqQdovCrh39NNpb0d5RiNJd0WjjQQdHIS99++cjQloQhWOB/ZxV
99DCKBxaEHXR7SItikLoxXYll5/Tsih8aZrWQ/snnRuF3+s+bQjofZn7j8Jt
NTXpnXF0QRS+X7wTNGohXRSF4eFnpovc6ZIo1G12dGgvpEuj4D6xVV24my6P
wt/2ff4Mv0hXRUHHx3xl3XO6Jgo75mv73flJ10XhR+SSCS/6XOH+o7Az6pZl
PyO6NQqTI/21YxfTCtFYLV5Q39+bVo7Gyn3P39Sk0urRiNqm36sin9aMxoa3
x+e+v0HrROPUIw3loXW0XjTOmCaJNna8yv1Hw/pLoVmjLm0cjXlBDzW8Z9CI
Rte2xUk/nWmLaJyYldc9UUBbRWPVNCe/Pttp22hUDFhatfM87RQNJc+5BSOe
0W7ReNdBIM7/SXtHY/BSjfEj+l7j/qOx9HTntbsn0oJoVJ/oOk1nKS2MxrDt
IUY7/GlRNB6sTtYcLaZl0UgVZ9fcPErnRuN2t9je0eV0XjSGWPlrLG+kC6Ih
bVa0tut6nfuX9/nQ0i5uNF0SjbqFS6prLOnSaLRsmL3Ey4Muj0b4s9WJY1Po
qmiIDO9FDz9I10TjpYqom1UZXReNiPfRhXn1dFM01DeMihqtVsr9y69HuH/A
49G0Qgw6fH38bfcCWjkGSXaaNxO9aPUYXBpxz10gojVjUKW3yi/6KK0Tg/Dh
nfcn3aP1YhAVqjYs6wttEIPuGV9mbNe4wf3HICR/V8Q+IxoxsH781v7QUtoi
Bq0HNwQfDaKtYpD/0U96QkbbxuDF9vAr507TTjHYMPCV+60ntFsM9g0fOurd
L9o7BrF9u7r21r7J/cfgZMPONMcptCAGh84pJpU60sIYnF17S3dpFC2KwZzu
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
6VCfObH3VVfaLR3dUxuSTgfQ3unQ3Tol8nA8HZwOc8W8lbuyaUE6Dg04cDs7
jxamy/97ZcWu5NO0SN7ng9bbjTdpWTp6rx992+cpnZuOjj+PXHOtp/Pk35dg
H2n7my5Ix/t9e97M7/qB+0/HiPT7OrMG0iXpsD0qCJpuQJemY+S3ZyPNp9Hl
6dAwiLK2XExXpWPdkBH37FfRNen4FHcIfv50XTrczdcpiOPopnTsn3/Q9KyU
bk2HS8eNHz7uoxVEsEhMqNA9TSuJYGNyOnz1TVpZhKG5ccaHntKqIqhfcOz2
q55WF6Hs7Ob78//QGiKku+ZO2t3tI58XEcabjvvdpkNriaB3U1dp2ThaR4St
m275Hp1B64pQPlNS0MWG1hPhjV2Ny+o1tL4IyY7zVxcH0QYidHcvu9I7kR4v
Qtje4mLPTbSxCHv6Hb9yLZ82EyFSaVH0wPM0RMhTbakJuUObiyB536X9o2ra
QgS1AMEo42baUoSJ+o37trWv5/MpwpP2oj1dNGhrEeJ+lw8QDKVt5d/3dHpF
2wTaQYRbz09OibagneSfT5hRqL6cdhXhQpd55nnutJsIU02Ln1hE0B4itHsX
P/RzGu0twopx7jm7cml/EWJMYzY4FNLBIvS6or6z/xU6XATzC80aNQ9ogdxT
6nPz3tGxIuw+ZzPZ/wctFOHRqUM9pndp+OcUEZoSs6K6a9MiEeoPz9R59R8t
EUEpMfb4MdAyEYobxo6JX0xvEcG1JjjfzpXOFeHT+wqf/wLp3SL02BP4W0lI
54nQUtz493kOfVCEEU7TVpzJpwvk399k13/zefq4CKeXS2ZG3aWLRNi7/Njt
DS/pcyIkjj8d4PyFLhFh+mn76w4dPv3zFfn9q37cy6kPXSrCjBG3YtxH0GUi
bHn5o1OkKV0uQqjyYc9N8+lKEToPES8970hXyZ//Pc6j3vnQz0RY9eDNoD6x
dI0IKg8kppZSulaEo8d0l8Xl0XUibDswb/7FM3S9CPcce6j/LaObRBibYH5x
cjXdIn+f3z46E95Mt4ow5tTTlLOKjf/cJsIJq4pvP3rRChno/vzsy4l6tFIG
VhidXRFgQitn4FHhpl2FlrRqBmZND+rbtJJWz4D7n8xl//nQGhn4Nuz1cM8Y
WjMDtX6NoQVZtFYG3DpGWH3bR+tkIKln5SacoXUzUDJu4HBRGa2XgRlbH2W8
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
ZRCtK8Gqr+8qI0fRehIUWYgHbjOi9eXf97tq7fmptIEE5y20Ap/PocdL8GS7
puafJbSxBHMnzB06cCVtJoHaiQgB3GhIEBE/tI+LL20uga96dXVMOG0hgdfJ
iY/3xNOWEtQKbFRKRbSVBD0C/Td+2ERbS9C86D8rtT20rQT28/bkGhyhHSSQ
zry0xfo07STv17MsJOQy7SpB6/wA7+23aTcJ9r9ccfLaI9pDgk8p2iGNL2lv
Cd7ZfXnat572lyBSo+T7zG90sARJshHP/BRa+f5LYHZIKNrVmRZIMMFFU+OB
Bh0rwULTNSuUB9JCCe46vLKdPIJOkeDhM613foa0SIKXlxuf5k+mJRJY3r71
t3Y2LZPg2P1+GgMX01vkz4dR4mM7BzpXgvHPa3plraF3S3C6rXd2uTedJ9/3
niuGqmH0QQlaVN1uzo6jC+T3J3Q4YtLp4xKoXHwTWZxDF0nQXTow9Mcu+pwE
w2QJQ8cfpksk+Nm/KtKziL4ifx6WtqblXaJL5e+DyV+nV2V0mQSLA906az2i
yyV40O3UTpuXdKX8+UmqRvpHukqCQatet5Z+pZ9JIKhVe9pe4Qfff/nzUvX6
i1lnulaCMqcIyyANuk6CxrzNH44OoOslCOwxprxej26SP08XIn8ON6RbJGin
9Mpp1WS6VX7/55d/2TabbpM/b83/bX2yiFbIgpNi+vTeDrRSFhy7bytdtIZW
zsKWmyd7p3rTqlloib2jWRpKq2dhfjuVkvZxtEYWZmS5tp+cTmtm4cCTGU8C
c2gted5JrVkFu2idLGQ+llq8P0TrZkH3v/XvBxXRelm4eEs2YfklWj8Lt+ol
MzPLaIMsCI92Gn/zIT0+C4pDvg9r/5I2zsJQr0mzTT7SZln4ObLLed+vNLJw
1EIzP/8vbZ6F8BXpo96o/OT7n4Xy14MWDtSgLbPgckemtXwAbZUFD6U6UZYe
bZ2Fya+MtleMo22z8MDHdGzXybRDFtQedRkxbzbtlIUvT867ChfRrln47+CT
S1ftabcsXJ7Sd5jiGtojCwMXGgTBm/bOwuvG47sjQmn/LDSvmLLzTCwdnIXt
2aPWfk+jw7Mw5WVRg2EOLZBfz2CXcd676NgsTHq9z/DgIVoo//5tl5rfnaJT
5PudtdBzyCValAXjY6fyV5bREvn1HYw+mPOQlmXBKyTJt7KG3pKF7gfe/un6
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
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Field Difference [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {0, 0.0850280917080398}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"By_before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"By_after\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2HuYzPX///F32tgKTdmyRTUVtSQmkS3K5JB1qAZLmxyGNq1amYqsnIaW
1iEmxyUxFVqHGIVWpFFLK6eplCXVVMomaiqxIv2uz+txf/2u6zv+cd2u5+v5
er6O7/d79oZBw3o8Xs1xnM7VHed//+tfoq3zf/95/y9Tk+xKclqS05NcP8nu
JN+Y5AZJvjnJGUlunOQmSW6aZE+Sb09y8yTfkeQWSW6Z5DuT3CrJmUm+K8l3
J7l1ktsk+Z4k35vktkn2/l8Hk+zclxRPstMuKZ5kp31SPMlOh6R4kp2OSfEk
O/cnxZPsdEqKJ9nJSoon2emcFE+y0yUpnmSna1I8yU63pHiSnQeS4kl2HsTu
DxRPsvMQziRu7SXuwx1kr3UW7a27yVFrH/ndcQ/yrbPJt+5NvnUO+T1wH/Kt
+5Jv3Z986wHk95SDfvKtB5JvPYh868fIz8a55GNnMPnWT5BvPYT8XuQ/Sb51
PvnWT5OPvQHye+NnyMfBZ8nH0efIx84I8h8m/3nycXAk+TY+inzsjCY/h/Zj
yMfeceRjJ0i+9QTyH8ETycfuF8nH/kLyrSeR30cOTyYfx18iH3unkG/jU8l/
lPFPJx87M8jH8Znk40SI/L7EXyEfJ2aRj11zyMfeueT3o/488nF8PvnYu4B8
HF1Ifn/WYxH52L2YfBxfQj6uDJM/gPG+Tj52vUk+zlxKPg4sI9/PeJbLbuwu
oT9cvEL2Y88q+sfx1XIYR9ZQD2dF5Djuto76A+Xcd6iPp79LfVy+nvq4/kbq
48L3qI9TN1EfL3+f+ti/hfqD5Myt1MfXRKmPG22jPu76EfXxix9TH+8roz5u
sYP6eP0n1H9M9u2kPr50F/Xxz7upj3/aS308KUZ9Obj6M+rjY59Tn/b37ad+
rrzuS+rjew9QP5f8Curj0kPUp/2qw9TH27+lvuydFKc+/vB76j8u1/mR+rLz
4hHq48t/pr7sjx6lvhyf/Qv15eiMX6lP/oYT1KfeRQnqD1Z+5z+oj1f+SX3Z
detJ6suBPX9TX/bNPU19OTT5DPVlz7Kz1JedU/9S/wnj1LbOVtWXC16/QPbK
oYYXyn550d4UOSjnhqvLYTm2OFWOyuf2XCLH5SO315KdPOPMvZdRXy7rcTn1
5XaHr6C+3GBiGvXlq7xXUV9uWSud+vLJg1dTXy54uR71h2g81a6l/v8c3NW4
xnXUN/FohxzsN/a+vpz2QePg/mL6C6u/PrG61JeXnGA+cfnZBqyn86Sx79jB
e1Rf7uq47lV9+Y+/3bJf3nXoVjloHPxoSAs5LMf+bS1HjaOtctrJceV/3raT
7Dxl2s9e2012G7u/faA79Y2dvFHZ1Ff7XXsfpr6xd3nbR6mv9k0396e++vPX
HUh943iPjwdRP9+0H/dwLvWNvf0+fZz6xv6BdZ6gvnFw+K151DcOj6g1hPrq
b+VGHFV/V9/yJPXV3/aB2Blq+nsjH7uN46192GvsrV4X++Vxu+k/qPymY2x9
eYfH1lf7QX8x3rix02gXdp5W/APsNo6e2YO9xs7tDv35jYPNHrb1FW/xla2v
/vKDjDeq+KKcp6iv/j/w51N/mPGKBUOpb+yUVxtGffnbbgHqGwf/a/IM9Y39
Ta57lvrG4Yb1nqO+vL3+cOqrv2NXj6B+wOQvqvG87DJ2jzyI3QHNd+JI2WMc
dp/EXuP4JzcUyD7jaKvzxP3GzvSxOKD8wFz6Dyr/o3sYT0jtuzzD+MPy0KbM
NyI/9TvrF5W/e2uwHJN9rQYwX/mrhQ/JCTk89SLu/zPGy090l13GwfP7B/I8
ktvufFL2GHt//fIZnk+Kf9j4edmn/m73vcDzSg61GCcHjONnfwzy/DJ2Dx43
UQ6p/5QjL/I8U/8rXJPkiHH4yQsm83xT+5HrcUz1jmW8xPNOntcfJ1Tvm17Y
efZ/jr5yGXYZB3+ZTn9uxSfvo77HOLzgYCHzN3ZfsYbx+oydL33Mxy9X7GC+
AfV3ZxPWI6j4samsV0jx4lLWM2zs3Vj2LPPX+P4bO5T5K//Vpx9n/vIPf/dh
/nKTSzoxfzlY2ojz/5zx4mo8b13y+mX9OP/GwedG8nz0yF/04b571f7MUO6v
z9j7Xk97X+WXJnB+A8rf5uW+BhX/djYOKX7veHuf5ZSLccQ4eiqT/qLKH5RO
vZjG88NjjCeu/N038jxKKP7UZO6LM9zEz7zF+8A1XPlt7fzlny7uxfzlm1d3
Zv6y55o7mL9c2TGD/Sd+YUf2Xz49i/sWlP9plsP+y/8+2J/9l9ue5D5G5JtG
57L/8sBNg9l/2b86j/2Xd3bn/ibk6FtPcf5HGF/zdj7nX545kPPllj/ejj1y
l6+xV561FPvk9xtgv/zCAPoPyL/nUD8ov3Ql4wvJPy5g/GH5wDHmF5GfqcV5
j8onqj/G/OXVh/3MX3Zl9GP+8oxc1tt53jhjVE/mL2fHuzF/uW9JO+Yvl3zk
Yf5ycF0t9l+OfdOK80/+xo6cf7lBdZ7HQfnn/T05/3KXdXzfhOUX/urD+Zd/
eIbzGZXv/Y/vnZh8d759/suhKcQTcp/GfTn/I43Lbs7h/Mun+vfg/MvOGMbv
kf2f1uH8y3Pu6sD+y7XvfJj9l688OYj9l2s5dv/lMTHeJyHjYKKPff4p/ket
0ey/4v0OjGf/jb2de/C8jRlH26zj+RxX+8/O8zxPqL339insf4GJ/3rvNPbf
2Lv2upfZ/wL1Vz6D/Vf7ZteE2H/55TXYZxyPXfcK8zd2pw3BAcW/mYaDyq85
GYcU390bhzWe4n/pP2Lsb/0Cjip/74KZzF/jnXac8ceV3+h35pcwdkYvs/Mf
ZeJ70uz7zzj4Z3vWz614s9YTmL/intQxzF+O9RjB/I2dfl9z3/3y4U+4fwE5
PJffM0E5fcQjnH/5koT9nlT/8zL5HopQ74JRnH/5kVbjOP/KzxgwgfMvf3/v
i5x/edTaQs7/C2Z+W5ZP4vzLa+tN5vwbR5dWxx7j4JMDae+VX76F/nzGzobe
E7n/it/47XjuvzzjKOMPyhO+su8/5dcey++PsFw+n99TEXlxc55vUeV3nMf3
QUxeOm8s+6/xRwrYz4T8yz1T2f/RZr5Tq3GeXMbhv76exf4bu88tmcv+G0en
ty9m/5V/YvNC9l/xtP8Wsf+KV0tZwv6r/8KBYfZf7avVe53zr/YtV+OwcWBR
nTc4/8bOMB+OGvuLBuGY4o90wXHj2OFUnFB8/hL6d8aY/Nku7DL25vVnfG7j
+JB0xu8xdhq1fo35G0dr3PYq8zcOjjvF+viNw97wPOZv7L7kjjnMXy56z95/
1X87n+dNWP3VCXBfI6r//FT2Myp3WMjzMCbvncXzMy4X3Md9TMjR2Y8w/7HG
3o78vnfJWUe5j2656gDfSx55zcynOf/y1xdwfn3yiNncV79c8A8OyK/Y+xyU
v+/B91xInvwmv2/C8tIJfH9G5Pwt/D0gKrvTGjN/5rOE76e4HCx4mvnLGwIj
mf844++u4PvcZRzs+pp9/in+5/2sv0fxtP94vnrlKX3YP5983+rZ7L+84jj3
JyD/XYfzEZTXXcP9CaneD2c4T2E5YxXnLWIcrcjgPEaVX70V5zVm7H1gM44b
xydez/lOqH2rQfb8jzf9tZ9oz79xeOc47DaOt3kYe4y9z12KvYp/8Cr1fMqv
djH2j9f8Vyxm/qp3vhrzCaq/Mzcx35Dav1NnAfOXrzrE/YnIs8dzf6Lq71BN
nlcxY2fIlbwP42r/zYU87xLy26fYXydo2v9xnvuTKn8xgPvjkisH832aLpcN
78H6yFVOF53HDDkyyf5eknt15fdJprytDb/3vXLJv/z9IEvuWDCa+ySvXzhG
zpFrP4z9cvTNF+Q8+exo+/cGeXSc+1kgb4nYv9/I3nJ+3xQx/nhn9kMO3sL8
i+VHfuf+hOXSz/g+KJFbO0XsF36S51mpcTR9NPsVlTtu536Uy+eqs/8x5R+6
g/dJheLxtpz/uPzlZZzHSrXvnWuf94pvLn5TrjKOp65Yyv5P+J/ddWYtY/+N
nZndl7P/xtGLf8bpxt4DD77F/hv7z0zDGcbxGouxR/1fOxlnKn9XR+xV+yu/
o/8sxZ/Nxj7j4KcljC9H9UZ/x/j9imedY355xuH2F+KA2r9VxfoUKL4ubt+/
mm+t8axnkfq7pzn3M6TxTP2B51Ox2reez/MrrPaDHuZ+lih+phH3M6L1S1zJ
fpfKbW6036/Kn7RqOvsvj3ia521M/m8B3+8V6n/PXfb7Xu6cw/d/pdpPP8/z
PCE/1gJXyb0c7Ew0XvIETjV26j/NeXYpXvsq/r6TLscG8Pcgt9oP7cx5z1D8
1r18b3vwzzyPMuWr2rMeXuXH9rFeWYoHQ/PZf2OvZzTrn6P2VYXsj9847O7O
fuYZ+1/4kf0OGEcfeo7zUCA/8A/nJ2jsvuFZzluRvGg/5zOk8fxSbwX7r/yd
7Vay/6q3u8Mq9l/jGXndavZf8d57cKnyjz/0Nvuv+b22DJcrPm0vjql+4S5c
ofjR13Bc/S/uhCs1/it2US+h/m++FVepvyZPMV7nRTPe/TOYT6qxU2ch83UZ
B6u9UsL+G/s/GWnvv3G0oAfrl6F4WkPuq0fx0X+x/pnG3tHbeD55qT+L/cpS
vc5P2fep3Ok13p85cmCC/b5W/5umcj7y5Lej3M+A5jOmMeepQPGte3neBhXv
9C7nr0g+d5jvl5D86UO4WPmv1cZhzWdQPVwi//M8jmi8zW6g/1L191o69aNq
P6sPz49ytb/gR8YbU/vgat4HFWqfG+F7Ia7xXHSU+1Cp9ikNWL+E2nd/nPWt
Uv/H3mH9nULjdqnch1S5zM/+uYzjn79nn//Gzo5UzoPb2H/8Qc5LRqHmM4nz
5DEO1ynhvGWq/bl1nEev6t2xhPObpXjj/DXsv5xy1Vr2X/VXLcR+1dtXhfOM
PSfqRth/fD0uMI5tSMNB4+iKE+QXyQ1m4JDmf6gmLtZ8WtrxheWUtYy/ROMZ
UWHvv7G72nHmX6r+/CdYn6jyh8ZZv3KtxzU7Wd+Y5v/4Ku5bhdx9GvsRV38/
5rNflarXIJv9TKi/Kzva97/Gt7a93f9Jpv3unpyPVGPnslGcH5dxdMJQ3o/p
xsE+13Mf3cbeS2py/jLUfsmd3E+P4hVhzmum+r+7K/bKrVriLLXv2c/+nlTc
uw3nKH6yn73/qre1GfXzFH+ouf3eVn65n/EXyL/0se9/Y//hK5l/kXG407f2
97jaZ6xjvYpVb8w01jOs+INPst4lWs+1XdiPiLy5EftVqvxXUtjPqNYzuwKX
azyN3rD7bxxvP4DzUaH46Zqcn7j8eQmuVL33PZy3hOLV3sRVGm/Befv8n2za
92vHeU019vZ/GrsUf3EiTjcOXj8eu43j5bk4w9j/UAvsMY5u/s3ef+Nwt7nY
K49qhLPU/5+rmY9PXnwDzjF2Fk5hPfyK33aU9cpTve1tcED+ZTrrW6D8FofY
j6DiD95i3/+a/4nn2b+Q4uW72N9i5c/JwGG1/20m56FE7buk4IjG9/lLnJ9S
+f769u836u+njzhv5XLfMTim/j7JwhXy1ltwXPVz0+33v+Kjr7a/d+UJjezz
X/7wfvv79yVTb+Awe/+Ngy+9bn8Py49+jdPl6+oxfrd85wCcYexttRx7jKM/
/YYzVa9lJuvjVft7J+Astb9zJ/Yp/vhlrHeO4lf1tN//8quzcZ767xDDAeUP
TGU/C9T+gdY4qPYj83CR5vPETLv/yv9sLS5W+zk7cVjecRiXKP+dX+z9V35F
Apeq/Y9/4qjaL7XxcsVr/Ipjiqf8iCvU34KDOK72m/fZ57/m120HTih+xVZc
JS97DztFxvnv2t9/8sJ19v1v7PW8g9Pl6huwW96/CWcYB9tE7fef4l98gjON
ozfHsFftd1TgLLnL99in8fSx65kjb7Dr5Vf7O0/jPMUrzuGA6q26gPtdoPFU
XGTvv9rPvNjef/VXoxYOyQUuXCzXScNh9X9BOi5RfGB9HFH/3hvs85/1vRlH
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
3ELxj/JwpvqvOwy30XzWPo69Gl9RN9xB9f+6CWep/5nHqd9N8ey3sE/5k3rh
bNVfU8V8cxSfPgv31XiqN8R+za/eO6xfrnywNc5T+0fL2I98jWfHAzigePtD
7Odw7aeTjwvU/uaL8Bi1/+wtzkdQ9S7ojQs1/kmX4yLW92vO33TF39yIQ6r3
6ht4jua7PIyLle9bhxfJx/bjsPJnXkq9pYrf1AuXaL+6r8Or1f7F65lPRPHv
F+P1Gl+XpqxPqfp7ZDfeovk/NZL1jSq+6jb2o0zrcf0JXK7+17zL/u7W/jcZ
z/mIqb/eD2zl/mt8B+p9yP3XeNpX4sOqVzsnyv2Xh5biI8a+f+ps4/4bh0YN
wceNPdvfwwnjwFf/4pNa/713f8T9V/zsUHxO4/tyHnZm/c8RZwNOMY52Lsep
xp6lMVzT2HfrXuxSvME2nGaccFbidGNv7hRcX27gx27jYOdmuIFxKLWK+WQY
B97bjJsoPzoae4xjs+/CLYz94VOsZ6bceT1uo/wfn8Ne1Vt7J+6g+a87y35l
Kf/QHNzN2Hn7buyTl//G/mcr/+t1OEf1ThfivmqfmYf9xuHxj+JceVB/nCff
FcD5yveEcEDj832Ah6vejFO4QO132/GOUX8/FOGg8t/6Dhdqvc9cx3oUGbuy
u+Ppcv/JOKT1W/QBnqPztMSufzHn63b2Z5HOT/98HDZ255Tgpep/6hFcovV8
yc35WK3zcvBRHNH5OzMXr1e8uz2fpZpv25SPuf9qX7cVjmp9Gg3GZTpPn4Zw
ueIDNuLdWp8+X+GY1rtLAu/X/L66sIz7r3iZCx/Wep25CsdVb5z1Ea3HhMtw
pebfsxo+bhx/+nfqJTTfJw/gk6p36n1cpfXctxCfU/76kdiZbdbnsR44xTg2
81acauz8fCGuaeypddjef+PQivX2/ivfP8Pef2PfN0Ps/Tf2xjrZ+28c/TPD
3n/jYLXaOEP1Pzht779c8bO9//LZr+39V/+bDuBMeeYh3MbY/b09X17VP3MK
dzCOX3I59bOM/Y3vwN0U9/XDPtXvNRNnq79K+/zMUX7xxaxfX8V3+rBf49v2
Gs7V+Ers/uap3uyO7H++1mf6YhxQf6+cwcPV32u9tnP/Nb5l6/AY9f9qzR3c
f41v2OO4UP1dvhkXKX9EzU+4/8qfnYNDyh++GM/R+O74BhfrfF2YVs79J94O
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxd1HtYjOn/B/BnCSEMQvmGQUgss4SxwqClSAYtrZJBEsKwIYRBVs7jHMIg
ZIVZwjiPVivEDkJLGITsOozzIPyu+/28/fEb/7he1+f+nO57nuoPG99vRClJ
kkLKSpL4X/7n6Cz9/3+a/093Fytc7OliLxf7uFjp4gYu9nVxYxf7udjfxc1d
3MLFKhf/4OJWLm7t4gAXt3FxWxe3c7Haxe1d/KOLO7g40MUdXdzJxZ1drPn/
NrhY6uISd7HU1SXuYqmbS9zFUpBL3MXSTy5xF0vdXeIulnq4xF0sBbvEXSyF
uMRdLPV0ibtY6uUSd7EU6hJ3sdTbJe5iKYxWnpDjLpb60GrGv1nDuJYOkq35
5mCe/+ZQ2dZv1jK/L92P+d8czvxvHsD8b45gfj96EPO/OYr53xzN/G8ewvz+
sg065n/zUOZ/8zDmf/Nw5ofTMcynpVjmf/NI5n/zKOb/zPzRzP/meOZ/8zjm
0xo98wfQE5hPGyYyn7b+ynxamsT8gcyfzHzaMIX53+JTmU9L05kfwfNJzKc1
M5lPKw3M/+bZzP+FnsN8WjOX+bQhmfm0dR7zBzF/PvNpQwrzaWkh82nTIuZH
st8S5tP2pcyntUbm07rlzI+iVzCf1q9kPm1exXzavpr5g2Wr1jKfNqYyn5bW
M/9bfAPzozn/RubT0mbm03oT8795C/OHyE7Zynw6YxvzaXs682m/HczXMX+n
bCUt7WI92vi7bB2tzmT9b+f3yjbRxfvYj35jlm2n3fez/1DZqgPsT8dlsT99
6CD70z6H2Z9eb2F/OuAo+9P/HmN/+uQJ9h8me/8p9qcfWtmfdstmf1r9J/vT
c86wP12Uw/70kLPsT7/PZf/hsjPPsz89J4/96emX2J/ubWN/2Qb9ZfZnfPcV
9qc/X2V/evQ19o+R/fo6+8s2rC9gf8aH32R/xvsUsj89/A77y7Zq7ewvWzP/
Hvuz3o377D9Cdtci9petufCQ/WVbEx6zv2xl1yfsT7f9j/1lm8Kfsb9sw5YX
7C/bqHjJ/rGwKv4V+9OPXrO/bNPst+wv29blPfvzvP8H9pdt7/SJ/RlP/sz+
sjVfv7L/SNg86LuTcn/Z2uulZGtkF05yk62TbQ8sK9sgO6qlu2yT7IS+FWRb
ZRt2esi2yz7epopsKQ4uK1Vlf9mbkquxv2yPpp7sL/vpfzXYX/bd3FrsL7v4
kDf7y+6w43/sLzt9Rh32HwVfqlWP/YU1PZYqleyPuGpyJK2Tzy/2pA2yrR3r
sr/s0DW12V+2Ip/z22Ufb1ee/UfDyhX/8P1lB3xy7yT3lz3nbh3ZOtmNwpvK
NsCGqKxWsk2yXyxuL9sKawav0Mi2y/G0g0GypTHC1sZ+IbKVssfc683+sCFs
TF/2lz2npD/7y+eN6wewP6yJaf8L+8vxchci2V+Oj9REs3886jX5Scf+sBTS
eyj7w/btrYaxP6wp/ZI2yG7123D2h01PX9JWOb9Kmxj2h3UztLQ0Fv3bB9FK
2Nq5Cq2BpWf7WE8Ha7b40gbZI+I5j0k+v38+57fK9ZKmcj+73G+X8dv+4+DD
n3k/Slh6+TPvTyM7/TDvVye7dedw9pfzy7r1Y3/ZCbW07C+fv1ye72mXXW97
T/YfD38t/e39Ze+oH8z+squ+6sH+stXDGDfI/msA802yR2WwvlV2/zqh7C87
ZBjnkfRw93JhshWyh85hXCk7v10v2SrZs+Z253yytXM6ytbKVq2vzXllD9uj
lr83PWyIitLy+5XjbbwGyzbC1g6Bsfye5fiDjuNlm+X4UWsCv2/ZeQnTZNtg
3ZH+Bn7vcrzelrmyHXLcWXM+v/8JwprsXQtlK2Dlz2FL+fcIdjhLjLJVshtd
XsG/T7D90qZVsrWwftTQNfx7BRseeqZyf9h8++A67g9rr3TZwP3l/KjDadwf
NnWpuYn7y/nhQzZzfzjRu6eJ+8MR027RdnmftzFbuL9cP+sxLU3EPpdjtnJ/
2C/oNq2EdRf6buP+sPpONq2BIzaq0rk/rLq5ntbJ9Tp8t537w/opw2kDnGg8
TRvhgtf/28H9Zc/8lTbDcePP0VbYoq23k/vDzieTaTtsaHWFdsDK4NYZ3P9X
3O+INFoBq29U2cX9Yd2zZbQKtj6t+zv3hy0fT9Ja+bzbxN3cH85Nb5/J/WFD
1Vp7uD+cWqXiXu4P21/U2Mf9YXPO/8zcHy7eeJi2wimPBv/B/eGkg5X2c384
6HwO7YC1K5MPcP8E4VXdg7O4P5zmUeUg94dDVTdoFezosvkQ94fNjWIPc385
v2ozC/eHg+c+o/VwQMCeI9wfVihGH+X+cv73vse4P6w9d4s2w5Yuy49zfzjD
86cT3B+23XpP22Fd999Pcn/YWnnwKe4/CfNNdrdyf1gVNJxWwvb2p2gVnL/C
5zT3hz2SptNauLBqIa2DHZGdsrk/rO6xlTbAeZvL/cn94VWVx9EmuKTeNdoM
J4UHnuH+8rxtt9E2uGhU+RzuDx8/NI52yOfLXKWlycKhg9r+xf1h05VUWgl7
bf5Iq+AIt6iz3B/WR56gtbC7Z71c7g+nHppN6+G8hw9pA+w2OPQc95fr/XuQ
NsEZIxqe5/6wavtq2gqnT6p0gfvDSSsX0XbYb7sij/vDcQEbaWmKcFT6Dxe5
P5zse4lWwpqtEy9xfzjtRN2/uT8ceu4yrYWDxv5k4/7wlYnptB6uPK7MZe4v
x+0jaSO8YtAF2gTvTWx5hfvDd4pW0lb4ZH8nbYP9kqOucn/4TGcr7YDfRTXM
5/6J2Pf0PFoBSyMe00p4Wt/ga9wfvm7KoDVw0BT369wfnlwyktbBHgPO0nrY
Pb3xDe4Pr/gyjzbCwxIe0iZ4pvtPBdwf9tmXTltl93T7h/vDlXcOp+1w0exs
2gGvX6q8yf2nCnumzKAVcEmnf2glbN/a+hb3hwedWUxr4OQrRbQWfl4zsJD7
w81fraD1cPY/T2gDHDWwy23uDye4r6dNcv2Nb2gzrLnR9w73h/1n76dtcMCo
Wne5v+wBs2kHPOerg5amCWfNbW3n/vD3JRNoJXyofhatgmvW+0hr4NAqQfe4
P9z+43JaBw+wPaD18O+x7e9zf9h70graCIese06b4L7RvR9wf/h09720Va5/
TVHE/eX5VyTQdvgPj39oh9z/VseH3H+68MO0rbQCHvS27CPuD3ddMZpWwd2a
XaQ1cI95LR5zf7j7pKW0Di6895TWw0uzQ4q5P3zPZztthJtLX2kTfGL2wCfc
Hy59dC9thQuy3f7l/rD60C+0Hf6QuYd2wJ4npP+4f5Jwyvt+tAIeHZtOK+Ex
Hm9pFez9OOgp94d936yktXBxu/u0Dk7MbvmM+8Ob/0iiDfBM1TnaCNeaXOM5
94c9zwylzXDX2L20Fbbs/0Tb4BYVer7g/nD+jXW0Az607D9amiE86lo9B/eH
f9P2opVwvj6RVsFDYnfSGnj+wAJaC0foKr7k/vDTFRpaD398P4U2wNWX/UEb
4UZhz2gTHKJs9or7w22LRtNWOHpMJm2DpekvaDt89+/Wr7m/7IZTaWmm8LTW
p2gF3Pt0mTfcHx69NpRWwc3nr6Q18Ka4m7QWdnrXf8v94aOzRtJ6uNm8PbQB
7l/nNW2Ezd3U77g/rClJos1wnX6naSt8K7zMe+4Pd6gRQtvhwVsX0w64nruN
lmYJzwyr7uT+8IGpA2glPGrhOloFH5pRSGvgK6H1PnB/eNnTobQO7ts7ndbD
AVGPaANctazfR+4Pn+gwijbBT97uos2wut2/tBXu5uH/ifvDMQtH0Xa436UM
2gH7f3pMSwbhhj82KZHtDl84Gksr4MUHdtBecP7Qx7QS7lC+6WfZfrDPyzG0
Cj6nM9NqWL3hHa2B59zq9EV2MHy/3wJaC3/nd52OgB9ObvSV9wvv106h4+C8
oxdoPbxmQFXpFJwobKju3ok2IB5yewydgvhflvW0Ed4y6TydivPafz/SJtjz
abPvZGfAV/sOps3IP/l2KW2B7QettBXnayW8onMRf1vDt5RsG+K25J/pAsS9
9/5G2xF3Sz5MF8OBXx7TDnhYba/Ssp3Iv3arBy3NFvFdPafQ7sKGJxN20Ar4
+uBrtBfOL6vt5iZbiXjYgVa0H+LKVkNpFZyxeRmtxnl7qZO0Bl6le0oH4/yx
o7XLyNYifr9KCB2BePPIKbQO7rN6Ox2H878fukrr4cwj35Xl+8Mb01rSBuT3
GjaYToFzqy6ijTh/46CFTkU8MeoRbUI8p6ZnOb6/PN+HLrQZtv1PT1vkfdZv
oq2IT1hzkc6F9T98pm3wxWXfu/P94Ur50bQd9XzqLKeL4RfJZ2gH/LHeB9oJ
t/vcojzff45wl8axtPsczL95E61A/N2IAtoLXjGhegW+P87fNPeh/RD/Un4J
rUK8beQFWg1/SqpQke8Px/3Ukw6Gf120kNbC3k0v0BHwjyUVPfj+8IZHoXQc
vPPiElqPeYLXX6IT4frtq1Ti+8NNN/ShU+A1h5bRRtTLnv83nQrPr1qlMt8f
5/+ICqMzEI+cvIQ2I351bB5tgQ/2q1iF7w9va92TzkW+pc4C2gZ39MmlC4Q1
rdJKK/j+yB8a2JAuRryToyvtgBseHkY74btL5tDSXFG/aNxW2l3Y2qp/Nq2A
b7a+T3vBUyuWqsr3h5vdqE/7wX+v6UKrhA03Q4fSasSrfjHQGvSP/sNEB+P8
3+OttBbxnCA7HQH7dpKq8f1Rb0i8ko5DfoP7GloPxx4YSici3/vNHNoA7ziU
TqcIa25WOEsb4b6fn9Cp6DdwbaXqfH/kl777A52Bfh1uDKDNiK+elURb4H+v
bqWtOJ9/4Rydi/pdB72kbfDGsd6efH/Mc8nRhbajXp2Lo+linO/+dCXtQLza
jydoJ/pV2v6IlpJFfGNdRQ2+v7DGsr49rRA2bKkynPZC/MKkxbQS8TdnD9J+
qDeh9F1aBc/zc6/J90f+8h9/oDXC1mudB9HBOL9bM5fWIh7bPZOOSJbv5xqt
Q/+05C90HLw8r0ktvj98q11fOhE+dH4abcA8e+en0yly/fGXaCM8fpaTTsX5
sAMNvPj+sE/p3nQGXHHEFNqM/KuXttAW9De2y6Ot8A/r3tG5cN2XSm++P+6j
qaYXXYD6/gsn0XbU33JtM12MeFKz87QDrrL2De2EWzWuV5vvP0/k93oSQrsL
axSvE2iFsOH4QBPtBW9plkcrcX7KbCfth/iHuEb/4/ujfqXn/Wg1zqd5zaY1
8F9P99HByFePuUtrhSXt8io+fH/U+xqhoXWIz7JMoOPgf7dso/U43770dToR
/vyXex2+P86Xvt6BTkF8tvd42giXm7GVToUXvbhGm+BNw8vX5ftj/jp/B9Jm
+IS/nrbA2RO20VbkO7Zcp3MRP3asfD2+P7wiO5AuwLy1T4yn7fDHrK10Mc57
HrpGO4SVG2LdlHx/Yd3A0nVp6TfRf+OhdrS7sCk7uS+tENaUnjCG9hI2LJ4x
j1YKK2fs3kz7CUuXPh6hVcK6BqPzaTW85N1zWoP+kzaUr8/3F7Zf6OdLa9Ev
q0ZnOgLzLLz9C61D/Gp6Ah2H/rdHLqP1qG/3/Z1ORPzBrTO0AfGpS+/SKai3
qfNH2ojzpteeDfj+cGNzS9oE90jqSWeg3izdCNqMepNjDbQF88elbqCtcG/p
MJ2L884dV2gb4uNXPqcLUH/z+QoN+f7oP6pPE7oY+dYGQbRDvo9uQ2kn4j+Z
Z9LSfBHPGZ5Gu8PaiKO0Ai6ZV0B7CRu6PHhHK4U1mSNq+PL94aJSAbQKPvVH
P1qNei9HT6A1qBfU1EgH4/zEJ3tpLeKFuy7SEcjvPfoprYNvN6vYiO+P8+8d
TWk96k05EUwnCltPrxlJG2DL3N/oFDhy8XbaCPscOUOnol61akW0Cf37bird
mO8PrxrekDZjnpax3WgL6jXdNZy2Ih7WIpnORdz3XTptQ/yvrzl0Abw8+DFt
hx9dcG/C94e95/rTDvjGiFDaifnKjxlHSymi35MFRtpd2PDu6H5aIazROfNp
L9in03taifMnF3j78f1RT3uzA62CO6uiabWwNG6Jgdag3uC3W+lgxIeMzaG1
iG8ueUxHIH53d4WmfH/4bPL3dJw8v1FL6+Ha//xKJ8I/x6ylDZhPUh+jU1Bv
z8C7tBEOyCntz/fH+UMGP9qE+ZJSetMZsLlgIm3G+f+NSaUtqOfZ7iRtxfkb
PxTRuZhvZp8Kzfj+iHdPVtEFsCVnAG1H/ciKM+hi1L8fto12IF6y6BzthOtb
X9DSAtz3vzWa8/2FDeEVA2mFsLVfo2G0F+JLAlNoJeKdBu6l/RD/bUY+rYLv
Wj7SarhT9frf8/3R32dNDzoY8aMh42itsOZKwGo6Ap4RdZzW4fxPZx7QcYjX
H1exBd8fce2g1nQi5q01P5I2wKMdc+kUnLcuy6SN8v5R1+hUxJ29vtAmeFJ4
k5Z8f5w/Ha+lzYgXLJlKW7Dvy/1baSviA/65QOdi/trSW9omrHxevYqK7w8P
3NWQtqNela5quhjxnfZQ2iFsmpMylHYifqLjZFpaKOJFbotod2HlgvubaYWw
LvtmFu0lrLnuOEcrhQ2KJndpP+SfmfmGVglbo53lf+D7C0tTV9ajNcL2grA2
dDDyh/n1orXo98VnKB2B+FK/KbQO9ct1X0LHYZ+C8dtoPTzHdIRORL9uV/+m
Dai3yO0RnYJ4/VYltBHxupHVWvH9Ue/ELD/ahP2DtnSiM3Bfz06H02bM97xo
NG3B+YWVZ9NWnPcOWkvnot+7RXtoG86rnv1JF+A+So2/SdvhFl4v6WJ42vNy
rfn+qDfyXV3aCTdq3ZaWFol9tu3oTbsLa7b3HUEr4NOtZ9BewsrevVbTSuS3
Wb2H9hOW/vH4i1bhfKXMO7Ra2DB5zHtag/NtuykC+P7C1mPNmtJa1J9Qtysd
gXkq1YykdYivrZxAx6FfSJkltF5YN9y5nU5Efa/HJ2kDzi+6fINOge9YHLQR
5/tsLt+G7y9s75zSgDZhnwqJHegMnN/5azhtxrwNDWNpC/b13vobbcX5obc3
07mo/zrgCG3D+Se/X6ELUG+h5iltx/nwd2Xa8v0Rf3ahHu1A/Oup9rRTnsfW
n5YWC19xjqXdhXU72qTQCsTvzN5KewkrPf45Tivhfe1u0H7CdsOGl7QK8aTS
Hu34/sImy/jGtAbuek9DB+O8NCiS1iK+u3ASHSFstccbaR3mVVXZTcch3/dc
Dq3H+Zpb7HQi9rm08RNtQP1HOTXVfH/M/2O9VrQR+bP29qZTke8zZRRtwnnV
9Hl0Bs7vObaFNmO+oeqTtAXnX764SVsRP333PZ0rLOWWrtGe74/55g5oRRcI
Gxpe7kPbcb5y/Fi6GOd31ltEO3C+1sMM2on+Zw79RUtLhKcbi2h3Yc2A8aV+
5PsLm5b2VdJewtbItp1oJXy3ThTth3rNy0+jVcLSgI9raTU89c1BWoN+Oz5d
pYNRb4nnK1oLv++m6MD3xzwtl7agdaiX+i6UjpP3mTWG1iO/hv9COlFYufdd
Bm1AvUNFZ+kU5F979Yg2Im6vWzaQ749+uSMa0SacX/ZnEJ0hbJjYOoY2o18P
81zaAvu22UZb4dIns+lc2D/4Pm0T1mmufNeR74/78o+qT9vhK480dDH6v/9V
RztQr2ZZA+2EY0ybaWmpOH+v+ynaXdga8+UOrRCWVuR9ob2E7ZsO1+3E9xc2
3c7pRPvhfMvP0bQK9RcOm0WrhZXZHzbTGmHdlBwrHQy3OHuP1iI/+mupznx/
xBPG+tI6Yc3RKt3pOMzT4sFIWg9HPlhAJ2L+vhUyaQPqv9ReolNwfsk+B20U
1kYvK6/h+yPullebNmEfv4rN6Qxh1eOeHWkz7kNaGEZbMP+xs0NoK/oXlp5A
5yJ/Q6c5tE3YsT1xJV0gbGxyIJ22C5tzXhyki1F/oeos7UDcPKWAdgorhpx9
QkvLRP/Y+p9od2Gbz3yPLnx/YdXPH+rQXsKOMYktaaWwZqBbF9oP8QNp/WgV
6udqYmg16s98MYnWCFsH7ZxPB6NeYuw6Wits2uq/m45A/qKXx2mdsK7WkUt0
HOptmmWn9ejvGfSKTsR8Zcu6deX7C+uX5dSgU4S1neY2oY2oV1HTnk5Fv/DP
PWkT5r1zPIrOwLz3DeNos7C9WqiBtiC+oP4K2ipsTnNLp3NxfqXzIG3DvFFS
Ll0gLA2se5O2o16n8Kd0MeKtt32hHfCZilW78f2xb8mShrRkFPsNbdqWdhNW
FBcG0+7C0p0dkbSHsOp28jhagfz8X2fTnsjvrF9FewmbZkzeSfsIK9Vzj9JK
Yd3mlRdpX2HHnO122g/1Qg6/ppvj/M2zZYP4+8J8xuvedADm83/QnFaj3+Vn
nelAYVvd9/1oDewnxdJByJ9VYSodjP2qeS2mQzHfF//NtFZY3/2n/XQ4+m2M
y6EjMG/vNQV0FPLb/P0frRO2X6/+lY5B/yEx1X7i7xnns6yN6HhhTYJfe1qP
+o/Xh9IJwtrPNXV0orCh94Zf6SRhY5vG82kD8qseWk8n475nhOylUzDfnLun
6cXwrinXaKOw+VnVJ/QqzJu5t4ROxfl1YYrustNwP1mvGtImzNcrrR2djvnL
9+5FZ+B9PpYdQmdi/mV5E2kz7n+26Tc6C/tsmreetsDJM/fSx9F/5JJs2or+
Lw9cp8/g/ru+/pfOxe/3Xa+vdB72VZ+s3oPfJ34ff4b40fnw3WeBdAHq9dvV
ly7E/YROi6XtiI+Knk4XYT9rPyNdjH7NwrfTTzH/6iFHaYf8vU38m36D/g8X
FNFO5FvTP9AlyNefrhzM73+5iD++05B2E1ZEl6hpd2Fbd+8w2kPYHt5mOK0Q
1idrE2lPYYfvmCW0l7Du2ryttA/io7YcppXCxuMn82hf9J9x5x7tJ6yq9t17
urmwcmVjjxB+/4jbwurTAcLaYVPb0mrUP7S9Fx2I+T2v6mgN8jdJk+kg1O/x
/SI6GOevDzTRocIa58yDtFbYELvlPB0ubGp28i4dIWy9nv+GjkL+6ofle/L7
x3wtXtalYxB/7mxNx+F+F38JpuNxvo5bNK3H/Vbw+JVOQL7CO4VORP+gFhvp
JGGpRp/9tAH5bWadpZOxT0J2IZ2C84k+r+jFuJ8pxnK9+P3jfjzq16FX4T6b
2lrRqehfe3MwnYbzpqXRtAn9nZsS6HTE7/y9kM7Ae6Yot9CZOL9g2WHajHmy
a1+is3D/kaeKaAvOP5v6iT6O+zvXvVoov3/8vn9u0JQ+g/69ymvoXPxerzgH
0Hm4n2nPx9I29G9SnEznY94vDzbQBaj/i30/XYh5cm6do+14r3LX7HQR+rW6
8J4uxvsfPVG5N79/xMdnNqId6D92bSD9Bvf9eGZ/2ol9yw0fTZdgnr+7zaal
FSLfp34q7Qb//nEv7S5samTLoT2Eba22FNIKYWni2Ne0p7B5RkCFMH7/wppH
b5W0j7C99R/taCXiJSPCaF/0r+Q5gvYT1m88Np1uLqwbM3gFrcJ8Jz5m0AFw
79WnaLWwwr/ldToQ8bTzT2kN4jVHl+7D7x/71VfUpoOFVUNOqehQzDNjWg9a
i3iboGg6XNjatt4kOgL1ylReTEdh/3PVttE6YUOjlkfpGOzfMOYyHQf/uL+Y
jheOMHtIWn7/uA9jXkU6AfP0T61FJwrHDRvfkE7CPE5tS9ogXPC/wA50srB6
bcsedIqws5R/f3qxsPutpkNoI9576/dj6FU4XyZgCp0qHPxfh7l0Gt47IWgZ
bRL2ehO6gU4XdtwL30lnYL+LkQfoTNQbMPQUbRZOaTriAp2F+yo98gZtEU7M
in1AH8f7NI15QVsxb+yQT/QZeFpEub78/nF+bJ/qdJ5wceugerQN/TPbNqPz
4R2N29EF8JPq3ehC4YxOX8Jou7DflIeD6CLcz/hzsXQx3tvj94n0U/x+1PNn
0g68133dQvoN9v/adg3tFM7dXH4rXYLfw9eCPbS0UuQv3X6EdhNWOMbn0O7C
5tfqy7SHsG7Bd7dphbDxyPli2hP5ptVvaC/h3FHDpX78/oUjwtt40Ephk9nD
i/ZF/r1/G9J+qN/ncku6ubA08HQHWiXsaHK8Bx0gbNif3Z9WC2s2XRtCByIe
+nYMrUG9e/UT6SD0C4lMpoOFtV23GOlQYWv46zRaC9u0u+hw3E+25SAdgX7P
mmbTUcL6G1sv0Trs+7D+LTpG2D57+2M6DnFN8zd0PPw4S+rP7x/nJ3aqRCcI
KyvmetOJmMepbUwn4T3XF7SiDTg/IroznYx9bt/rRafA24ZF0IuFVYn2GNqI
+l0jJ9CrMJ/71Rl0Kurf7LGQTsN565E1tAnz7PHbRqfj/MxV++gMYdvnkmN0
Ju7z1dBc2ozfT8M/8+ksvPcw5T3agvqLpz6jj+M9l176QFvx/kPqlQ3n94/+
5eKr0bnol5lVl87Dfukf/Gkb+s/s0I7Ox/1UnN6NLsD5sCN96ELcZ8L7SNoO
n2sbRxchf3diAl2M/nNPGuin6Hem/BLagf0eRq6j32CfoYe2007cx77a++kS
zNNh4UlaWiX69Sp7gXYT1j1bdoN2F9Y/aVJEewhbT11y0Aphozn5M+0pbP8z
pMLP/P6FHbY6tWgfYe0syZdWCiuCXqpoX3jgi460H+bL+NCTbi4sFVaOoFWY
b9D3I+gA1B/ffyKtRr1xs2bRgah3Yd9iWiOsbPRgHR2EfI3XTjpY2PC5dxYd
ivvpM/c0rRU2tTp8iQ7HvruKb9ERuK/TNZ/QUTi/QfOO1gmbk0aUHsDvH/Wv
JyvoOLjLpjp0PM7H/+FP63HfHifb0Qm4n6t/BtGJ2Gdsdl86CV56JJo24H7e
Z4yhk3EfBmMinYL+DfTz6MXYx9ljBW3EPB29NtOr4KB7u+lU5E/bZqHT5HmG
5NAm1LtV4wqdDh87e4fOQD315P/oTNxvRgMnbcbvz3DJbSC/f9xv0PSqtAW/
j1n+denjuK/Dt/1pK/YdvaYdfQbzlR0QROfi9/KyTl86D57zYjBtw/n3F0bT
+Zh3aNYUugD9VuxKpgsxX43M5bQd/VXHN9FFwrZn/+ymi9GvaZkj9FO876qO
f9EO5B+Zc5V+g33fX7XTTvx+J6me0yWoX33tJ1paLeqNKVs+gt+/sP52Uk3a
XVhx1NmQ9sD56MQfaIWwKfhjJ9pTWFtvRijtJazb+fUX2gfnjxpG0kpha8ev
CbSvsNFr2hzaT9ge4FhGNxfWzNNtpFVw9fO/0wHCjqrNLbQa/Yrn5dCBmKf1
jSu0Bv0t9ex0EPaPGvKMDhY21FzzkQ4VVj3/s9wv/P6FzR+KPelw1Isq04CO
wD49vFvSUcK2N76BtA719/qF0DE4X+A7gI7DfX/yHk7HY58/3fW0Hvt8fZlE
J+A+VlxfQCfivP7wGjoJ8fWrt9EGxD0nmulk+EHvE3QK7rOU/3l6MX4PQ8rd
oI14b9ujB/QqzF/jnINORf7FvZ/pNNxPQmqFQfz+cT76t1p0Os4fTvSlM3Df
c8f/QGfivjeM7kSbUe/EqF50Fu5jZXwEbcG8pyaOoI/j93Rv+kTaiv4b58+i
zyB/xerFdC76RW1fR+cJK1ce2kHb8Hs5l3uAzsd9rL1lpQtQb+vzi3Qh6m37
7hZtx+9hlGcxXYT61xq/pYvxXlfVpSL5/eP3EtmzCu1AvdGRPvQbxL+Lb0o7
Ub9BUlu6BOevLOpGS2tEv5obtLSbsOrVrsG0OxxvGU17CGsW/DWFVsBh+cm0
J+pZ7y2nvYSND55von2E9cc/7aaVwtYw9yO0r7Bhk+dftJ+wYp/yKt1c2Dy3
uZ1WoX499TM6QNg0r9tHWo24JaxcFL9/1Dv2iyetQb9lMfXpIOyrHt+CDsa8
h6d2oEOxX5XkYFoLd1n6Mx0urO2TOoyOgDtsHU9HYf6ymUm0Tlg6cHABHYP7
6HJqDR2HebJyt9Hx2KfiFTOtR/+QWyfoBLzHuKLzdKKwbfqzG3SSsGPiuyLa
gP3Dv76kk1G/vvtXOgX3dUvhMZjfP+Kzvb1pI+av2aAxvQrzrvNvTafiPSq2
1tBp8nwdetMmxE93G0SnY56yoSPpDNxfx/AEOhP3Exs1mzaj3tyYpXQW7mNl
/AbaAq9NyKCP4/6XJR2krZh3RnI2fQb76hb/TefivHpVIZ2H/culPaFtuN+8
be/ofGF7yu7S0fz+UT/wgIIuxH09PlqHtmOfBdn+dBHuw/d8O7oY73X4chD9
FPMF/dOXdmC/c/Zo+o2wrkfxGNqJ/JMvEukS3Jfq/TxaWivud8OXFbSbsFEq
a6LdhZW6SntoD2HFUc+jtELYVNnnLO0pLEU3zKe9hA0Z/vdoH9R7/sNzWins
aNH+E+2L+mM07kP4/Qvbt/aoQTcX1l0Pa0CrhK1lBrSkA4Q1PwwOpNXCtoiY
EDoQ8ySNGUBrMH/axOF0EPofmaqng9HvimEGHSqsL56/kNYKqz4tXUuHY54K
a9LpCNxvrY1/0FGYR5l+ktZh3ia7L9AxuL9m+wvoONxX8yMP6Xi8j7/1Fa3H
/I3PfqUTkK8YWVbH7184cdG/HnSSfF/jqtMG3O/Ml950snDBuwQlnYLzY52N
6cXCqQ+mf08bcT8RX1vTq4TVeXN+pFOF3TuX7UKnoZ95QQ/ahH71K4XR6fBy
YzidgfzvPCPpTPQbv3Yobcb5wtpxdJZwSsimcbQF73Ww/iT6OO5PuX06bRUu
Xug3hz6D+JvdKXQu7m9wy2V0nnBGzv7VtA37ft82jc4X9lt1ZCtdgP4fA3fR
hfL3ZN1H2+GcbofoIszf9Oxxuhi/nyU9/6SfIu64eI52oH//vjb6jXDEwfzr
tFPYWTPiNl0i7JV46wEtpYr3LYj+l3YTtqvvO2h34dTUEe9pD2HH++LPtELY
MiDebSi/f2Gvgy8q0F7Ciuq/VqV9hI36d7VopbD54tS6tK9wov9nX9pP2Pab
oRndHOfvl25Fq4SDO81X0wHCcesqdKbVmOfNkp/oQMTDqobSGmFtxqp+dJBw
7ndev9DBwgWDNgyhQzH/gbqxtBb3VXFrPB2O88Mb/UpHCBuOZUylo1C/WnMD
rcP9j9r3Gx2D89ZWS+g47F/z0Eo6Hufj26+n9biv7OMmOgHna2l20omYL/7P
PXSSsOl09yzagPupef4onYz7GN37NJ0irDtpO0svFnavFn6JNuI+R9zIp1fh
fiyDbtGp2KfinXt0mrAmemgxbcI+5qLndLqws1TcWzoDDv/vE52J+90xrtQw
fv/o73zpTmchHjKpCm0R9tvgrEEfx35Pp/vQVuGIjl8b0Gcw39I5Telc9L9T
RkXn4b5bLmhL29BvlkdHOh/3aVvWjS4QVimr96QLMY9+jZa2I/+U90C6CPNV
2TiYLhbOiFbG0E/x+9mzbTTtwPdQ0ngC/Qb33+v3KbQT38f672fSJcgvNifT
0joxb7uARbSbsGre4eW0u7Di6o+ptIdwrvLkJlohnDiuy3baE+ePn9lNewln
lA/eT/ug38ALFloprEsPO0X74vzLyznDTv0fet6Gpw==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox["\"Field Difference [T]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-5.859315706402413*^-6, 
           1.6471850017296674`*^-7}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"Bz_before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Bz_after\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.8249037607739353`*^9, 3.8249037678995066`*^9}, 
   3.8249042571819344`*^9, 3.824904384915565*^9, 3.824904426463214*^9, 
   3.8249044982285595`*^9, 3.824904536196549*^9, 3.8249064098376217`*^9, 
   3.82491196391594*^9, 3.824912801399699*^9, 3.824913846791274*^9, 
   3.825149561549683*^9, 3.827245687807584*^9, 3.827247545212009*^9, 
   3.8273082866630564`*^9, {3.827308403253267*^9, 3.8273084484360895`*^9}, {
   3.8273084895450015`*^9, 3.827308499743394*^9}, {3.827308536326734*^9, 
   3.8273085473559027`*^9}, 3.8278432171004343`*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"fe6c046d-194b-4369-9749-d7e758799231"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Repeat Application", "Subsection",
 CellChangeTimes->{{3.827308583398509*^9, 
  3.8273086162621145`*^9}},ExpressionUUID->"b4ea1913-0aab-4746-9fef-\
dc68cce1680d"],

Cell[CellGroupData[{

Cell["Function-Plot Results", "Subsubsection",
 CellChangeTimes->{{3.827308757922244*^9, 3.8273087729475107`*^9}, {
  3.827310027549796*^9, 
  3.8273100320239325`*^9}},ExpressionUUID->"2f5937a7-667a-488e-9d97-\
1d5c96cccd99"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"plotresults", "[", 
    RowBox[{"deltaTraject_", ",", "deltaTraject2_"}], "]"}], ":=", 
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imsize", "=", "Medium"}], ";", "\[IndentingNewLine]", 
     RowBox[{"p11", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p12", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<After\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"p21", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}], "+", 
             "1"}], ",", 
            RowBox[{"2", "*", 
             RowBox[{
              RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p22", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}], "+", 
             "1"}], ",", 
            RowBox[{"2", "*", 
             RowBox[{
              RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}]}], 
           "}"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<After\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"p31", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
             "+", "1"}], ",", 
            RowBox[{"Length", "[", "deltaTraject2", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<Before\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p32", "=", 
      RowBox[{"ListLinePlot", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"deltaTraject2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"Length", "[", "deltaTraject2", "]"}], "/", "3"}]}], 
             "+", "1"}], ",", 
            RowBox[{"Length", "[", "deltaTraject2", "]"}]}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<Points\>\"", ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Trajectory Difference [mm]\>\"", ",", "12"}], 
            "]"}]}], "}"}]}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", 
         RowBox[{"Placed", "[", 
          RowBox[{
           RowBox[{"{", "\"\<After\>\"", "}"}], ",", "Above"}], "]"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "imsize"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"GraphicsRow", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"{", 
            RowBox[{"p12", ",", "p11"}], "}"}], "]"}], ",", 
          RowBox[{"Show", "[", 
           RowBox[{"{", 
            RowBox[{"p22", ",", "p21"}], "}"}], "]"}], ",", 
          RowBox[{"Show", "[", 
           RowBox[{"{", 
            RowBox[{"p32", ",", "p31"}], "}"}], "]"}]}], "}"}], ",", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"1100", ",", "300"}], "}"}]}], ",", 
        RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}], "]"}]}], 
    "\[IndentingNewLine]", ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8273087808846946`*^9, 3.8273088136036215`*^9}, {
  3.827308863256665*^9, 3.8273088651774545`*^9}, {3.827322562306777*^9, 
  3.827322668616934*^9}, {3.8273229386325455`*^9, 3.8273229473626156`*^9}},
 Background->RGBColor[0.87, 0.94, 1],
 CellLabel->
  "In[326]:=",ExpressionUUID->"fa2f29cb-8673-4a75-b874-402e25a586d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["Function-Apply Shim", "Subsubsection",
 CellChangeTimes->{{3.8273095201004324`*^9, 3.8273095326115384`*^9}, {
  3.8273100341516356`*^9, 
  3.8273100426740055`*^9}},ExpressionUUID->"684cf7d0-b34f-4bec-9f2e-\
08aa88cdd059"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyShim", "[", 
   RowBox[{
   "Minv_", ",", "deltaTraject_", ",", "deltaTraject2_", ",", 
    "magnetizations_", ",", "nCasseteBl_", ",", "device_", ",", "eEnergy_", 
    ",", "li_", ",", "lf_", ",", "lstep_", ",", "region_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "device2", ",", "listShim3", ",", "shimLimit", ",", "blockIdx", ",", 
        "cassetteID", ",", "trajectory4", ",", "deltaTraject3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"device2", "=", 
        RowBox[{"radObjDpl", "[", "device", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "Shim"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"listShim3", "=", 
        RowBox[{"Minv", ".", "deltaTraject2"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Limit", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"shimLimit", "=", "0.5"}], ";", "\[IndentingNewLine]", 
       RowBox[{"blockIdx", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"j", "=", "1"}], ",", 
           RowBox[{"j", "\[LessEqual]", 
            RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
           RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", " ", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], "]"}], ">", 
                  "shimLimit"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], ">", "0"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], "=", "shimLimit"}],
                     ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], "=", 
                    RowBox[{"-", "shimLimit"}]}]}], "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Control", " ", "Region"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"region", "\[Equal]", "\"\<front\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"1", "*", 
               RowBox[{
                RowBox[{"Length", "[", "listShim3", "]"}], "/", "3"}]}], "+", 
              "1"}]}], ",", 
            RowBox[{"i", "\[LessEqual]", 
             RowBox[{"Length", "[", "listShim3", "]"}]}], ",", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{
             RowBox[{"listShim3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"region", "\[Equal]", "\"\<middle\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", 
             RowBox[{
              RowBox[{"Length", "[", "listShim3", "]"}], "/", "3"}]}], ",", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{
             RowBox[{"listShim3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", 
             RowBox[{
              RowBox[{"2", "*", 
               RowBox[{
                RowBox[{"Length", "[", "listShim3", "]"}], "/", "3"}]}], "+", 
              "1"}]}], ",", 
            RowBox[{"i", "\[LessEqual]", 
             RowBox[{"Length", "[", "listShim3", "]"}]}], ",", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{
             RowBox[{"listShim3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"region", "\[Equal]", "\"\<exit\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", 
             RowBox[{"2", "*", 
              RowBox[{
               RowBox[{"Length", "[", "listShim3", "]"}], "/", "3"}]}]}], ",", 
            RowBox[{"i", "++"}], ",", " ", 
            RowBox[{
             RowBox[{"listShim3", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "=", "0"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"listShim3", "=", 
        RowBox[{
         RowBox[{"listShim3", "/", 
          RowBox[{"Max", "[", 
           RowBox[{"Abs", "[", "listShim3", "]"}], "]"}]}], "*", 
         "shimLimit"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Apply", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"blockIdx", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"cassetteID", "=", 
              RowBox[{
               RowBox[{"radObjCntStuf", "[", "device2", "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"radObjCntStuf", "[", "cassetteID", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", 
                  RowBox[{"listShim3", "[", 
                   RowBox[{"[", "blockIdx", "]"}], "]"}]}], "}"}], "]"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Solve", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"idSolve", "[", "device2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Trajectory", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"trajectory4", "=", 
        RowBox[{"idTrajectory", "[", 
         RowBox[{"device2", ",", " ", "eEnergy", ",", 
          RowBox[{"r0", "=", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "li", ",", "0", ",", "0", ",", "1"}], 
            "}"}]}], ",", "lf", ",", "lstep", ",", 
          RowBox[{"display", "=", "0"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "Delta_Field", " ", "needed", " ", "to",
          " ", "correct"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"deltaTraject3", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "Results", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"plotresults", "[", 
        RowBox[{"deltaTraject", ",", "deltaTraject3"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"device2", ",", "deltaTraject3"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQHX3Emoe55Y3jjMBeMRDNyPZbE0Qf6ajUAdFnDj03
BNGfbS7ag+hdlvwuIFpKe7U/iFbkuxEBou0+HswG0YlyK5tA9DyTk2Ba6frC
bhD9nTl7Joj2ucx+Aqy+uBVM+/ZLVrAC6R0BNWB6UtH9WhAd6+7eC6J1DtvP
BdEcqxUPgWivy39PgOhlDw+cBNG/nkT/AtHX+C78B9F5pUJcbEB61aSPYFpp
D/t0TiCdw5w6D0RnMdouAtFvolLWguhTue61vEBaLmI2mA5/uPQBiFbavglM
P/BYVcEHpFMTghtBtAfvhpkguptZZBaIDnML2MMPpKsY1h4E0Ukh206B6HvG
6y6CaACTYKJ1
  "],
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[327]:=",ExpressionUUID->"24f19aa5-dc5b-4ccd-b23b-92f1d28d8cad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Function-Apply Shim2", "Subsubsection",
 CellChangeTimes->{{3.8273095201004324`*^9, 3.8273095326115384`*^9}, {
   3.8273100341516356`*^9, 3.8273100426740055`*^9}, 
   3.8278433886561203`*^9},ExpressionUUID->"36ea4445-886a-4d60-a172-\
9e94f217a41e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"applyShim2", "[", 
   RowBox[{
   "Minv_", ",", "trajectory1_", ",", "deltaTraject_", ",", "deltaTraject2_", 
    ",", "magnetizations_", ",", "nCasseteBl_", ",", "device_", ",", 
    "eEnergy_", ",", "li_", ",", "lf_", ",", "lstep_"}], "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "device2", ",", "listShim3", ",", "shimLimit", ",", "blockIdx", ",", 
        "cassetteID", ",", "trajectory4", ",", "deltaTraject3"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"device2", "=", 
        RowBox[{"radObjDpl", "[", "device", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Calculate", " ", "Shim"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"listShim3", "=", 
        RowBox[{"Minv", ".", "deltaTraject2"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Limit", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"shimLimit", "=", "0.5"}], ";", "\[IndentingNewLine]", 
       RowBox[{"blockIdx", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", 
                 RowBox[{"listShim3", "[", 
                  RowBox[{"[", "blockIdx", "]"}], "]"}], "]"}], ">", 
                "shimLimit"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], ">", "0"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], "=", "shimLimit"}],
                    ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"listShim3", "[", 
                    RowBox[{"[", "blockIdx", "]"}], "]"}], "=", 
                   RowBox[{"-", "shimLimit"}]}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Apply", " ", "Shimming"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"blockIdx", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"j", "=", "1"}], ",", 
         RowBox[{"j", "\[LessEqual]", 
          RowBox[{"Length", "[", "magnetizations", "]"}]}], ",", 
         RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"i", " ", "=", "1"}], ",", 
            RowBox[{"i", "\[LessEqual]", "nCasseteBl"}], ",", 
            RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"blockIdx", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"cassetteID", "=", 
              RowBox[{
               RowBox[{"radObjCntStuf", "[", "device2", "]"}], "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"radTrfOrnt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"radObjCntStuf", "[", "cassetteID", "]"}], "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"radTrfTrsl", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0", ",", 
                  RowBox[{"listShim3", "[", 
                   RowBox[{"[", "blockIdx", "]"}], "]"}]}], "}"}], "]"}]}], 
              "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Solve", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"idSolve", "[", "device2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", "Trajectory", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"trajectory4", "=", 
        RowBox[{"idTrajectory", "[", 
         RowBox[{"device2", ",", " ", "eEnergy", ",", 
          RowBox[{"r0", "=", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "li", ",", "0", ",", "0", ",", "1"}], 
            "}"}]}], ",", "lf", ",", "lstep", ",", 
          RowBox[{"display", "=", "0"}]}], "]"}]}], ";", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "Calculate", " ", "the", " ", "Delta_Field", " ", "needed", " ", "to",
          " ", "correct"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"deltaTraject3", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"trajectory4", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}], "-", 
           RowBox[{"trajectory1", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "Results", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"plotresults", "[", 
        RowBox[{"deltaTraject", ",", "deltaTraject3"}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"device2", ",", "deltaTraject3"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   ")"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQHX3Emoe55Y3jjMBeMRDNyPZbE0Qf6ajUAdFnDj03
BNGfbS7ag+hdlvwuIFpKe7U/iFbkuxEBou0+HswG0YlyK5tA9DyTk2Ba6frC
bhD9nTl7Joj2ucx+Aqy+uBVM+/ZLVrAC6R0BNWB6UtH9WhAd6+7eC6J1DtvP
BdEcqxUPgWivy39PgOhlDw+cBNG/nkT/AtHX+C78B9F5pUJcbEB61aSPYFpp
D/t0TiCdw5w6D0RnMdouAtFvolLWguhTue61vEBaLmI2mA5/uPQBiFbavglM
P/BYVcEHpFMTghtBtAfvhpkguptZZBaIDnML2MMPpKsY1h4E0Ukh206B6HvG
6y6C6Cce69U5Wt84BjRN1wHRF3eZWYPoHV8LwTQA2F2xSw==
  "],
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[328]:=",ExpressionUUID->"a0a1b2c9-f9ce-4c00-9b43-5715da7fcca1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Apply Shim Repeatedly", "Subsubsection",
 CellChangeTimes->{{3.827310046499825*^9, 3.8273100622035403`*^9}, {
  3.8273143247120895`*^9, 
  3.8273143252870097`*^9}},ExpressionUUID->"0afb5ab9-4024-4412-8ead-\
36a45d21d195"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"device4", "=", 
   RowBox[{"radObjDpl", "[", "device3", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"device4", ",", "deltaTraject3"}], "}"}], "=", 
   RowBox[{"applyShim", "[", 
    RowBox[{
    "Minv", ",", "deltaTraject", ",", "deltaTraject2", ",", "magnetizations", 
     ",", "nCasseteBl", ",", "device4", ",", "eEnergy", ",", "li", ",", "lf", 
     ",", "lstep", ",", "\"\<front\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.827309464142957*^9, 3.827309509189625*^9}, {
  3.8273095822669516`*^9, 3.8273095827838764`*^9}, {3.8273096486404724`*^9, 
  3.827309656545618*^9}, {3.8273097644950666`*^9, 3.827309820485589*^9}, {
  3.8273100680029783`*^9, 3.827310069344172*^9}, {3.8273101653303432`*^9, 
  3.8273101726497216`*^9}, {3.827314359751914*^9, 3.8273143729119368`*^9}, {
  3.8278432697312517`*^9, 3.82784332634274*^9}},
 Background->RGBColor[
  0.94, 0.91, 0.88],ExpressionUUID->"3e1cd939-9f54-4675-be9f-e0ca07b6637d"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxV13lYjO/7N/CxtdmyRBKSJHsIIXpHiIqRLRSjTaUybVRapn3aZ6bZsiSE
JMmefRASEkJIspY9HyGE33wf5+U4Hv84Xsc1133Oeb+v8567gW7rnDzbcjic
ORoczv/+//uvyZrz//+Dh4fVqMHXNab9pRZ2H+lx3/iZKVkX/aYtn+18fxK5
J94GJ1bu7jKbrI9FB15JtPScyIZY5n1i0eJBy8lGsM84OHrJo9VkY2wMqdC6
6rOGbIK+2nk68875k02Ra7Svi+G6ILIZVCazPgR5rCcPg4bROd8nqgjyCOif
6me7KTGGPAo+aaHVTcviyOYwdHYIjTRNJI/Bw+U7/+sxVEgei7J7Vz1WuqWR
x8HypORChzuZZAvsnr6+66OpYvJ4/OoY6pg1Kps8AduXJP/XMkVGngjNh4KL
QV4KsiUOFrr1WlacQ56EFeG1R7V7biFPxn+9cxqeK3LJUxC52XSVydY8shXq
x52Mv/FrO3kq8rKnpw4I2EmeBulkrSTHD/lka3i+HxqfFr2bDJjfDV7eZUDB
XwuAnUfmPuxYtZfWbbAp+Ob1k+J9tG4DPZNd7Rd67Kf16bgwJG18Z7sDtD4d
Dp0PS8S5JbQ+A7ayAQ8bth+k9Rn41rzXf0jxIVq3ReZDt1sBFw/Tui00c516
PH56hNZnIv/1viqx9jFan4kq44h5+ycfp/VZOHz2xUJuaCmtz8KPpmVrtpw4
Qeuz8Sxtzp7DmqdofTaetpl6onTVaVq3Q5cAc42b58/Quh02WT/eZDDqHK3P
QcUzHUOek4rW52D8TM2i/7qfp/W5SCl9aFBTQxbMxefRr2oH5V+gdXssH7Sx
4nXIRVq3h0I/f8A0+zJad8Ci7VNjxg+5ROsOyDl84McLrcu07gjO8sTObk1k
gSPKP23fdeHxFVqfh2mvcvr3u1VO6/Oga6FpK6y4Suvz8fbdY9e+FRW0Ph/f
Pjwd+eHmNVrn4lC3mT/1a6//Nbg49tsw+ciHG/R5Lq5VjOjxUPPmX6u4mBcp
P36rRxXtXwDj9PowvT1kLIBlSum5S1Nv0f4FMIy559h0n6xagKnKAPOdobdp
vxNeF+ude9frDu13QruxY7Y9OkUWOOGRhevlaI9q2u+ELvO3JL7UvUv7FyKh
uUfsgPNkLMSPpR2PWoXeo/0L4fKxJcpx5H3avxDPvy3NdHtN5iyCycc5v9L3
1tD+RaiaHj+rzv8B7V+EpC3a9t4THtL+RQjrXbJoartHtH8xQpzTB/CryViM
dz33VPUorKX9i2FRfuP3lITHtH8xBDZ3T7W61dH+Jdh8cILId9YT2r8E7eZl
TXPsXU/7l+CrFa/drQyyagl85cs2X9N4SvuXwrRhxAK7ODKWojB22BEnzjPa
vxTCSM/crwKyailU8+vGoP1z2u+MuXMuP56SSoYzrg82cf/a/QXtd8Zyie+d
yFyyyhlTDMWS2hEvaf8yvHS56jroLBnL4DU8wH6V0yvavwyn/XbfyH1NVi3D
4ZdLjzXFN9D+5RhQfnKyx8BG2r8cHYuzmrUukAXLcTnZs/GD52vavxwhNg8S
TDu/of0rcHTp7r2q42SsQOfe0/dWer6l/SvwftQmR7fe72j/Cjww3fwo4zqZ
44KdO8/oeSS+p/0uGD5tz4wWmw+03wXGHwdMWNn2I+13weU/72YXXiZzXPF7
/s+DYbObaL8r3l09kpS/nyxwhcbv8SXP9T7Rflc8slySbiMgc1bC4caR61ff
kbESX3bohQlX/Ef7V8Ipi/ch5TpZtRKB+avfPLT+TPtXYd6P0UnCo2Sswubu
/lPzRjbT/lXw7SdqGl1AVq2CjlTvzczBX2g/D8Nyf9Q35ZONeBg60aXVeshX
uh4Plsd23Z9eRObxMPWoRrK2xTe6Pg8/R33alH+WnMeD4admk8EOLVRPvX+B
8NSWWnI9DzpLqmP68b9T/dV4caDtwJMaP6j+alz4NPBZYh4Zq9Fp4u086dSf
VH81eq6YXvPjMVmwGs17S/bciG2l+qsREGvwwHjoL6q/Gql1+i91q8n1q/Fw
7ogfxXG/qb4bQhRRbfXG/6H6brj8Ys6+FW/JcEPLQovxlU6cv+9FPDfMPim8
0HKQLHCDwG9/xyk92vx1nhvkvoGdd64nq9zA/ZEzwbqWXO+Ge9/G+PW3bUvv
We5otYntxC0mG7mDv9X083ODdn8Nd8w9fDTyTQqZ5453jo9TQ36SBe6oVpgl
Z69rT/XdURy9xGvZK7LKHc7zvYpqVnWg+u4oFH5bZ1JL5nggSUfflbtCg+p7
IOKq33H+YzI8sKXoo8smN02q74HG1rwrz96QBR7Q9+zVlbdei+qrP28+rdGs
gzbV90DZ5tj8RQpyvQfsZFfMf47QofqeKIma0238ZbKRJ6w8lrj0de9I9T2h
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
nZhcIEDRikt9Y2+TSwR45mPXTdUj8q9LBYh/tXvNq0Vklfp+1AWm1cjI5QJM
XOt7KvoeuUqA1m0X9C73ivrrGgEux+/pvGMJuV59P4yHTOgiJzcKsD9v27eu
d8lNAuz647TgeI/ov24RYEpc4el+TmROLGwrd7x3E5G1YnFl0ySngkqybizi
B+x726lzDOUfi+W3LXcX2pONYuE0Ycw8WSrZLBZb9g5NeHiVbB6LtArjVlV7
AeUfi01Ldhy+bEJGLPr9etyr1ZZsFwtfv53zVniSubEwO9v+5sNEsnMsvOIn
H/TfTebFwmRV8qv2V8jesVjRI2KcuIHMj8WF2QrnDlqxlL+6X1gULzUjC2Jx
8GdadZwdWRiLmAXZ4kRvsigWW2f2sXITkpWx2PAoSKt/ATkvFtP8PqxRXSEX
xEL0+V2yUwO5JBY/Lj16W6cRR/nHIlKvokegKVkVi2Kjs0Z6s8jlsahP+uF/
35NcFYvb0eb9yhLJNbHIDKjc/2oXuT4WiVcfHZxzmdwYC+NZnL1fX5GbYjGi
8XD7r5rxlH8snmz/NH3+UDInDjZvbutq25O14mAdMHr1UH+ybhyMhm33PppF
1o/DiNNP/Q4eIhvFQct6PM/oHtksDn35XRzb/SCbx0F4uMcx5/4JlH8cfA+J
RxnOICMO0b/mu87yJtvFYeLctutuZJC56nqbRqp2HSY7xyHx+KGICw/IvDhs
S9nxR4+TSPnHYUe1lr7ElMxX1//wo42ZIzksDh9vuQeVB5MFcWhnuajYfRNZ
GAfJw4AHr1VkURwc3pdl2DeQlXGQDx5fGNE5ifKPQ2q/TmZrx5EL4jDZOlLR
Yxm5JA5+AWcM/KPJpXG4n1vyK2gnWRUH+5BSI+NycnkcNhwNCAx7R65S9+9U
KwrRTab844A9/P16FuT6OJSd9spYsZTcGIc+praqWRHkJnU/h83e1Gwht8Sh
Ked1D71zZE48tjg7PvlTT9aKx2vD8vhtbYWUfzxmVljIfw4i68dj4/Dbmw1n
ko3i0bGq/46OXmSzeFw39397K4lsHo+KxOmnwvaQLeNxuuHZVO1yMuKhb9Um
Lr2RbKf2/osRHbVTKP94XPZKaps1lOwcj2jdvNsD5pJ58fjTa73bZV+ydzyM
HzXvSk0j8+Nx7PW1vcFF5LB4VI9qNz75BlkQD9ulY8KufiAL4zFowfhWK91U
yj8eUya8Pf1sDFkZj5/DPFaeXEjOi0fdFzvehVByQTx22LhMb1GQS+Ix9XjQ
JueT5NJ49Ju72vhJLVkVjx9mYyuT/pDL42G1yqv9XOM0yj8eGzwOcQbNJNfE
I/uTnXMnb3J9PCL6dwltk0ZujEf/gQfrf+8nN8UjsiHGuu0tcks8ngXv7qHT
TOYkQDYmdK1e73TKPwGrPo3LHjSZrJuAicaqmnGuZP0ElLstc54pIBslYLqq
7e0lO8lmCcirPxLmdZlsngDhpZazga/JlgkwHDNmRGinDMo/AZrP9jn6jSbb
JWD7s+vPFziRuQmY799qbRRKdk5AHwftslsKMi8BnkMjF60+SfZOwE3prMKK
WjI/Ac6iC+E6f8hh6n7fjY/uPzCT8k+AYPCToA4zyMIEKDNOdDjnQRapvz+P
d80+iaxMwOV5p8fv30POS4BD14WJL8vJBQkw7dml6NtrckkCust3d2/QyaL8
E5CV3GPG8eFklbpeypfUtQ7k8gREp1zer+FPrkpA86XzpakZ5JoE9A+40NKy
n1yvtvs3LadKcmMCdEQ/38o+kJsScMLlZw83TRHln4DMzxPf+fcmcxIxIfRt
jf8QslYiSgPPt/AmknUTUaRx3GjWbLJ+It7+eXa771KyUSLOXsywrfcimyUi
O3xrqHg92TwRmY8GLBiZRLZMhNmTt9cOyshIxDSbB98Nd5HtElHZLtLQ/wiZ
m4jzmxwL8y6SnRMx4kpb52O3ybxE5Ho8MN3/lOydiOYrPpEJTWR+Iub47ppu
9YcclogLlzro3O0spvwTsftlyCCuIVmYiN85uZsODCOLErH/Pr/LV0uyMhFP
W45Hmc4m5yWCnyvtYbuYXJAI7bszOE7u5JJEjOqwx2NhILk0EWVrdBztY8iq
RFy/XXTYKoNcnogvrpUJwzaTqxLRRvBkS++95JpE7K2OPaFxnFyfiKP9p6z6
UUZuVPvL+DPNt8lN6nyfTN/yrZ7ckohXvb+vbv+RzEnCTMsrIw1/kbWS8GRR
8i/rjhLKPwkVMs8qfh+yfhJuD1l3/sAQslESbppkd/s9nmyWBIuVm4xcbcnm
SWiY3G9+pRPZMglFgaVXnFaTkYTBfa+bv11HtkuCw+JHyxXRZG4SJvfd135J
Btk5Ccb9B1eZbCHzkrC5MN2fs4/snYRVR/bWvThB5ifh3RuXIzfKyWFJ0Gz9
NfrYfbIgCc9uvbXLeUUWJmH9o5DtgV/IoiTcNdAPn9Q+m/JPApfLK3zTnZyX
hKq5ny5GDyQXJCFikp/tx9HkkiQcL2n5NH4auTQJvTqFTHB0IKuS4NL8zdV8
Obk8CTuMz+94tIZclYS5Cyx6OoSSa5JwwDUkICaOXJ+E2ON5LcFZ5Eb1/Wr/
PtBsC7kpCSd/uHTdUkBuScJ9yamkyiNkTjJ2al80VanIWsn44HiiJfA6WTcZ
flY/Gl7eJ+snQ8M6vqH/c7JRMoo8d/82+kA2S0a6+4Phn1rI5skY9eyNsayd
lPJPxjQd6zfdu5CRjCPPwjby9cl2yXga2xh22JjMTYamyaY/9SPIzsnoF75d
9GsCmZcM0dp12p1tyN7JkNQf3trdnsxPxqnZZpW6i8lhyRhzOnmp9iqyIBlZ
ea96/PImC5MRu6n6ydsgsigZfWbeEVdHkpXJONC8ud/RJHJeMpy63KtJFZEL
kiFccP6u0yZySTKq3FdO0sknlyZjpU1oRPF+sioZ1kVfUqceJ5er13Ni3xxV
kauS8ajXw929Ksg1yQjxqliw6g65PhlpVac/ZNWSG5NhVdDlRcFLclMyWvMN
Pxd+ILcko25fv3GKb2SOEHMOhOus48gofyFyN7oMttAm6woR9PnAssZuZH0h
nsjHJ2cYkI2E+L5Ksn7wILKZEFen7z5xcDjZXAi9byezxlmQLYXodajn1X1W
ZAhhsKVwn8FMsp0QNue61Mc4krlCcIpS/R4uJjsLYfnJ+obZSjJPCLOZmoN9
vMje6vUFY6NzAsh8IS6l9NcqXU8OE8Kj/YfJF6PJAiHaWE16fiKJLBTiVc+L
gzZnkkVCNB9qF+wlJyuF+BBlmds3l5wnRPfo3dUnd5ELhLgyZsQR2/3kEiES
bDIdTh4hlwpRWTi6W7/TZJUQ/QtwMOAiuVyIy3UW90sqyFVCpMyc/v7FLXKN
EBf3X2nb6QG5Xogx9kZXTevJjUJ0tvQvHN9AbhLC3SizyfIDuUWI47tvvjX/
QuakwNuvqH//VpZ/CsyDBEFt2skp/xSYevD5tdpk/RS4hpWGH9QlG6Ug12Bj
U3xvslkK1o0xGeXcn2yegj97GyaPG0y2TEG1f+BigxFkpOC/cf4bu48j26Vg
VjfrPkaTydwUWK5w/TjLhuycAjxebJRqR+alwMNu9Zx388neKQjrMyZ13VIy
PwXbW76u01tFDkvBqe/fjtd5kQUpaO4jaa4IIAtT8KH5wbCa9WRRCi7MSM1u
G0NWpsBsbpcC22RyXgomXhqdrMgiF6RgQv4x8WcFuSQFwYKGH9w8cmkKLlsb
mBUUkFUpGPFC/+anEnJ5CvYOjHhleoJclYJhNUFxOE+uScH0nGf7J14l16dA
MF46v8MtcmMKplhtGrOjhtyk7u/cnLGa9eSWFDR8zNsxsoHMScXK9ZmlXT+Q
tVJx7bj/+4Jmln8qEtZlDPj6g+WfikOVj0K+cBSUfypMq7J0d2uQzVIxa9at
K5qdyOapmHj50SuDbmTLVFQs3Ne7Xo+MVNhdznF3NiDbpSLaabtjYn8yNxXD
Jk/46m1Mdk6FNP/JeA1TMi8Vrw9N3s4bSvZOhU7DfffIEWR+KhYkrv/lOpoc
lgqNV0++ao8lC1LBmeV2KMGCLExF/JUnC29PIItScWqD+bmvlmRlKho7X975
ZTI5LxWW5w8k37YiF6Ri8ZmGatE0ckkq3trwno8DuTQV+nNOtTtnQ1aloq6u
IHn8DHK5er/DnuubbMlVqVjO0Z/830xyjfp+2d60tJ5Nrk/FwEzbwYl25MZU
lGi+sr0yh9yUit1J389r2ZNbUuFxuVOpgwOZkwbR8vG2ckeyVhoaR3yXNM4j
66ah6w6PZ7O4ZP00RCzsH35kAcs/DfmijgkWC1n+abBafu7u1UUs/zRUKCYr
1y9h+adB91DXdlbOLP80BH+InWiwnOWfBlOdNY66Liz/NJQZTsg0XMnyT8P+
Jd5lVjyWfxq8z9hHBrix/NOw457/sAMeLP805MzTmNrqxfJPw5sUieFCH5Z/
Gsp1Tc0OrmX5q+/HO5/SHgEs/zQ8zBw1MYzP8k9DiLkFtzaI5a/e3yC0mRbK
8ldf3+uFydYNLP807LlfaPg9nOWfhk5nR85cGMnyT0OLzpzo/dEs/zQEab0y
1Yll+aehy+wfz9bGs/zT0PRz3oa7iSz/NFx+/OPMHCHLX53H0pS911JZ/mlI
Mn01Z2UGyz8NOiEdy9uLWP7pWHZwis0FCcs/HWMnaMblyFj+6XDbXlqYrmT5
p0P/0JVXWzaz/NOxsaHdkopcln86mm3rBvXcwfJPx6YZU06H7WL5p+NQ0IQO
XwtY/um4bdooSili+acj1cX3onkJyz8d2keimhsPs/zTofvVQnbgOMtf/f1n
HVkVd4rlnw4xeJmrzrH808HXKewy6yLLPx1pbWw2jb/C8k9HVYn1tlHXWP7p
6OXIbTv2Jss/HebH713DHZZ/OgZPmPhoxX2WfzoyH0bvi3/E8k/H47u3zUqf
sPzT4RGTImt5zvJPh/MIn6gZjSz/dHz8bV0sf8fyT4dl33Z2H5tY/umorvJ6
PucLyz8dBuOi7+z4zvJPx/P5qzd8/cXyT0fZIY0Em7ZKyj8dNmd7TonVILeo
76dmYNRhHTInAzvGZd++14WslYHfq10833Qn62agbeD7jh96kfUzcGJD++XP
DMhGGchcM/hseX+yWQY639i6c6cx2TwDBjcFqetNyZYZiI8K+D1zGBkZuPnn
hVPvUWS7DDiIwwc0jSFzM9A61nHL3fFk5wxUX1L1vT6JzMtA94kvKu5NJXtn
oHDgnaPfbMj8DKzvqWoePYscloHLR9JrY+aSBep+6oYNbJhHFmbg+YmTLz0W
kkUZ8M1qf+LbUrIyA1Wyws1bXch5GcjvN33gotXkggzolW1T6XuRSzKw9nf1
4te+5NIMhOy6UVi2jqxSf5+XjpWFIeTyDKzkLuu9NZxclYFDaUPrt0aTazLw
cn2bESXx5PoM9H04Zcl9IbkxA1buYx/1ymT5Z6Ao7eKUoGyWfwbSpt39/E7J
8s+E8OcJfmouyz8TmrIRvxzzWf6ZmLpq5ZbJhSz/TNzw8HnkVMLyz4TZcssD
ymMs/0w8O/YktPMZln8mZm7tMPjQRZZ/JuysTcXJFSz/TAyyMy7NvMXyz8TX
Kfc/l9ew/DMRbmDY1bKe5Z+JEVt0ptY1sPwzEZpe8uzMR5Z/Jpo9PKwffGP5
Z6K04cmHMZwcyj8TXQf4LC3XIgsyIfUwGbe5G1mYCZ+0Xsv3GJBFmei5Y+LT
hkFkZSbk1fPilowk52XiWkWI1rsJ5AL1/TMOP5AHckkmPm7OdfObSy7NBHd0
Wd2sRWRVJkoaB5QPWUkuz0TB5dJrGt7kqkzM6+1V9yiQXJOJsYdscrZtJNdn
ovFBQaF9IrkxE8Enjto9yiQ3ZaL6lvs6eyW5JRMJoRevbtpO5mRBIlu+5Goh
WSsLxXHDv9w/TNbNgn/L3h9XTpP1s3CP2/Jy0yWyURakfRzNnCrJZlko6dJV
4+M9snkWNj1rjQh6QrZU1/vkN/xxAxlZePZNZ+XoJrJdFk4PO9POp4XMzUJa
+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
r7L+jaR4f0bsu4LZRIoP+/rsrWX310z9/YK7tZ/HPEKK3OfbQ0tYPuZSTBxa
9197Zgspto60XOjA8rWUIt/+u0Uyy99KCs3jjz8eZecDUlg7zMuuYefHVoo1
N/3qP7DzZSfFtGyBfYuIzb8UOaK4b5/ZeeRK4Z8lPVafyeZfirCmxnZn2Pl1
luJA2tPfSels/qUouWwXZsXOO08Ked6dto/YPHhIET6mpBNPyOZfiuWCNh2u
JrH5l2L34yOJPdh88aXopbjOnxrP5l8K70ELf9rGsvmXov/V++fMYtj8S5Fp
2HKqIZLNvxSr+/itjGXzniBF6sIfqV/Y80AoRdduVbttQ9n8S9FkI5CvC2Lz
L8WoT+PLN6xj8y/FsPgxA1f5sfmXYv3EMY+H+LD5l8LzzrSIak82/1IcCfHL
WePG5l8KmwWZH56vZPMvRZV2/zEO7PlYJMUKzVf9di5l86/Oy/aT/9uFbP6l
0IkYWTOEPX9LpVAeHdZxBXs+n5YiLWxGYbIdm38pfN5aWJfYsvmX4nrN6ZH3
weZfikfLvHb9tmLzL8XGFXG5ZpPY/EthovP50ZLxbP6lmD+x24tU9ntTI4Xx
lzV/Lo1k8y/FS63+Y7SHsfmXomXE0omLTdn8q+fpcUVKIft9a5Ri4PDVPO0B
bP6liPx58khgXzb/Ulgts1r6vDebfym0N/n8ce3J5l8K080z3J/qsvlXz6+8
0yx/9vvLkSH/XFhEGx02/zJcaLrzcqsGm38Zau7+ipjejs2/DOZTdSd8/MN+
/2VoHNqon//v918Gu3Bjm9XfyfoyPD6wrdWUvS8YynDlWErtl//IRjJUnzGr
rfxINpEh2t476vA7spkMUxcMb9r1mjxCBvuPG8bufUU2l2Hf8gfdzj8nW8gg
HXmi+3/1ZEsZOj26PcCmjmwlw9GAYX0OPyJDBne99TwH9n5kq/4+m73idO+T
7dTf54+4Xdu7ZAcZ2tz0sTVm71dcGZJ8WwMCb5EXybD03RmfDzfJzur7M+5d
nbyS7CJDF2xds4a9r/FkUKbPrFpxnewhw6yd9yPWXWPv/zIM73LuwNYK9v4v
g8H+KxVPr7L3fxlCh951msgcIsNuYWWXTez9MEwGZ07FUA3mSBkwZSYv7Ap7
/5fhnFbYjA+X2fu/DF95w2O9mIXqfk+ttHp6ib3/y3CwrZYnj1kkQ3GOZWND
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
3ypnNspBjy/hD+OZTXIwtqb3Ub7a/wfhqfmm
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
2DTj0WlxTcbc/wOFR/oE
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.030860766573558067`, 
           0.0002375354223531339}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxV23lYTP/7P/BsFYoskQpJ0obsRfKMIoQkCqV9kfZ9b5q2aZ+tmaksUSii
7KWQPXu2dyFEJESRyP6d39V9Ptf188/7elyvec197nOf+/Q6Z17vSa4BNh79
ZWRkVsjKyPy///b961os8///g+m3v4Mvy7Qs6qM8PlubVk8ZJmPaZyUcV9xQ
NWriSPJoJOwTy2npapBVMJ43dcWxDbpkdVi8nBJitHoWWQOHlp7avf6vEVkT
oYX5IQHOIGvhY9f2MbdumpO1EZsx+OmuiyvIOrB9Om/Z6mVryXoQtT71mFxu
QzbAAsdPJ3p/byBPR2zC1pCtok1kQ7j7Ppo9PMqRPBMytf6jXt93Js/CzlbP
RcXD3MizofFu5pepgR7kORDc2Z5y/7sXeS6Wd3k1DNrvQ56H9QedJurE+JHn
o0p7q8OdhYFkI/A8jJa9uR1ENsYpm3gvxdAQ8gI0LCg4GjM9jLwQM3baXXL7
E042QbSJwrafLZHkRZgdG7U8/HE02RSjVw6/MuxtLHkx5G8YTPo1OIEMnF9h
8cZ4D6vPLKDR5GWLfX0ijZvhxdRbWRE/2TRuhhOibuPj85NpfAkKPgVW6bBS
aHwJ3rcPL+55kErjS6GRXBZjNJtD40sxekbZvuG70mncHIe6u+UKRmfSuDlM
jWV8v4myaNwCQeYnN5tPyaFxCxyz5D8pPp9L48swyWNvgupxLo0vw7ZRHlOz
sng0vhylXo8Xzffl0/hy7Ipy8TawEdC4JVZ+ObUr1lRI45bQK5583GhmHo2v
QMyWyfeD9EQ0vgKJQd1rjPXENL4S8w4NOVlkKKHxlRjpMnlP9aJ8Gl8F/SeZ
k0XrCmh8FbirGlItfQtp3AqlXV9evsreQeNWYK82vxBxaieNr5Zej5VPx7Xt
ovHVSBTk9vcfVkTja+BVOmuv92Eyaw1+tw2JlrXeQ+NrUaBc4bzuG5m1FvMW
zh21vmgvjVtj0cn6QOU1xX2GNSxmWCbs/UdmWYPFmuQ88GRJn+usceab/hoL
/300fx2S/97MDNDfT/PXoSbZzSW7g8xah5sDxwSXHT1A89dh1gCvNXeiS2m+
DdKfHN4pa1lG822Qs9FlkuO4gzTfBo9vhBxr/kSus8ES3h19bv0hmr8evZzn
xez95TR/PfYlf9c9zzlM89fD+cKUBuuAIzR/PS7ENXQu2VxB822x4eriqAat
Sppvi8I/wVo1u8gsW8xqC1zyVvUozbdFt+RTweZ8sswGbDKO+KCqeozmb4DC
6Tcjpu8kszZgyrbBH/I1j9P8DVj1+5yj+0GyzEZoz+63QTDnBM3fiPlb3l0z
uEBmbcR97ydV86xP0vyNSJBV0jj9kixjh1q3L5+Ph52i+XZg9/SbN1vhNM23
g+151XcL9pHr7NBvxAmle6ii+fZgFRw69es5GfZ4GLHndV1CNc23x774jSXa
k8/QfHuc00W/2dfJMptw1DD244egGpq/CZdV4WI3vpbmb0LwL1OHmJvkuk14
tiP9omPsWZq/Gdr2UZ4DDc/R/M34Ma5KO6yNzNoMx2W7Gk/uPk/zN+O/mK6R
bdPqaP4W+FvpNW/NJmMLVi8tULb8RGZtgXLHl4gS6ws0fwtM31seDT9BlnHA
yqHKgRfGXaT5DuAsMlyTxiKzHPDUdfWjG+3kOgfcvcBPyrG5RPMdobn23fmH
Z8lwRHf8tae79S7TfEeY3Dyv+kVCrnPE4+p1xbflr9D8rXBfdZA9J5qMrShP
mH1E5yOZtRXcERd6D7lcpflb8e6jt2pdI1nGCRPqHh7yXHuN5jvByd9x2p56
MssJb4yPdgUuraf5TkjhaWg1nifLOGNJR8nth4uu91nDGY+WOVf7nCXDGafb
FCT5pjf67OwMybDx71wukFnOSCxQ+3LJ4mafi5zhd962/vxNcp0zPqqxlm1Y
f6vPLc64ZjZ4eHIzWcYFJ7MdU1d53ab4LuAe2nvtYDcZLjh061VVUeIdiu+C
9gH6P/RH3KX4Lti4OvLNyr3kIhesrf5yMU61geK74FP14Ls73cktLuh492Nd
cgVZxhVNx/68nvGLrOGKgmF3vu5afo/iu+L9Re8rd4VkZ1dMXTM3su4VmeWK
4J4RgwJm3qf4roip6DR5zCLXueLDmRm3fzeQW1wx1ynOrHHSA4rvhtRx2gM9
Q8gabgiJ13Tbf4UMN3Q9aMjNU3lI8d3QYvb5oKEvmeWGharHLofWkYvccG/q
gI6tyo8ovhtir/6a2eFDbnHDrAkjq8ZdIMu4Q19P4+Lrsf9RfHfkZ6w8vzKA
DHesnrjQdcU1srM7TvTTP/V8YiPFd8dyrWQMjiIXuaNmndyE+vvkOnf01zDU
UZvWRPHdcW/zb+0BHLKMB7zT7QazW8kaHrja0zOpcPFjiu+BlOVVIet3kJ09
MCW1VvnYDzLLA2Zqj8V1dk8ovgdW2s1iZZ4i10m/r8LnveaYpxTfA49XhFsU
hpNlPDHS2Ux/WBNZwxNdEZ1+hQuaKb4nzLrOb/HZRXb2RGu4zepDA55RfE/8
KzNLy/chF3nCxrmVF/eAXOeJsmdXxlWaPqf4nlg2Tit1ZzlZxgsxF4pibox/
QfG9UK11hvuYT4YXjrFjF66QbaH4XtivIBD0WJBZXlC/UH5+cDq5yAtnYjbK
LWkg13nBfmXsJo76S4rvBXPZlTf++ZNlvKE19rbxyOtkDW/c3SofmmDwiuJ7
I6hkZ/L2QrKzNxwK9izyUmml+NLPL5n2a9t+cpE3lKpWr6iwfE3xvZF/YuSZ
7f3fUHxv9H/VONP+P7LMNqigeJ/W1TaKvw2Ziz8vnXz/LcXfhg/xyYtNf7RT
/G2of8a/rWf8nuJvg9M8YXFLzgeKvw2fRf5LX33roPjb4HPf08HM7xPF3wbh
v/gsr4+dFN8H/33eFv2+qovi+0AtvnqJQvRniu+D1gMPbh+c94Xi+2BeXHDm
ow9klg8al/z4aCHppvg+2NduMbZq0VeK74O4HR+T61+SW3xwuf1A4KHsHoq/
HTp3dusJrb5R/O0Ym5D80Ff3O8XfjtAnORf3GfRS/O0Y6b155JgtPyj+dljp
7nEbduonxd+OVRfT5v1d+Jvib4eNsfbH7e/+UPztGL3HZfn36n8U3xcPIn/H
nXgo0/fcp+GLDYUOYyOe9OszfMGPvTx6+af+fXb2xUuhntGmkQP7zPKFUk7+
5kOrBvW5yBczZDRuTt8r2+c6X/wdUnTGTkO+zy3Szx89X6R2fzA9Z/phzCQ1
t/2XhlJ8P9S8kj+lKzOM4vtB90yYWbKlEsX3w8ghR+sqzo2g+H7S9fn1cS/d
R1F8P4xz7f3R30SZ4vvBXCgWZSwdS/H90LH7e1Fo1DiK74+kgszo7U/UKL4/
Dk5YpabhOoHi+wN6SnefpmhQfH98M+OZqrybRPH9MbRUNnet/WSK7w/NYXn5
Y+9pUXx/ZB+XPfTLWpvi+0Npr2WIzaOpFD8AHwaOPNxviy7FD0DDzUDTGc/1
KH4Afofz3rzcZEDxA6DtnOuy89o0ih+Ak+xjbSoTZ1D8AJwtOhs6Sd+Q4gfg
Z5GG+ctKcksANgxMPPxbdSbFD0TO1unWqu5kpUCcU/X+cTuNrBGIQtVQz7ts
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
Dgtnk+VqBlaRuSxMDurn13WJLGFhwrENn3/cJRexcOXw9LZJzeRSFt7Xl+z1
aidXSn1HruL6V3IVC3mbbrgt6xdB9ZN+30m5/GZFcj0L/XQPeGSpkhtYSL1d
+s1uKrlJen4V9Dnmc8gtLCh3sdy3mJHbWdDflnfk4BpyFwunWZOyLBzIvSxk
bo9eudSHLJOI5O+hXmcjyfKJ6HdkhOztNLJSIq5m5PM4YrJKIrL3zNLoX0rW
SMQHzXuHl1WTdRLRPDzuleNNsmEi1v+4LLvyOdkoEYY9rE9yX8hIxAn2njM5
spFU/0SU1YfuuqtGtk7E39NOHSdnku0TYewrfDjVkuyciHcXeOryTmTvRETY
hkmMwsmBicjf5dmwI5scmYhn+qxh6vvIrETI2vzYvLeWzEmEqrNiusZDMjcR
dWVmlzI/kCWJKFnl1t3cP4rqn4jXHrmrlFTJpYkIX2YzYspMcmUizi25uGe8
JbkqERZFb7j/tpLrEnFpkHj/gzByfSLcRiwL3ZdFbkgEZskls4vJTYkwmudv
FXWG3JIIr6GdtpJ75PZEFC80bv3YTu5KhLvbXzWOTDTVPxEvEq44hKmQZdh4
X3w4/bIhWZ6Nnzuvq6SsICuxMbGnouaqK1mFjarHJWxJLFmDjUFL78XJick6
bPx9G6k4/hjZkA2FSZ12z26Tjdi4VyiXuOw9GWy8OnGz2VouhurPhnfD1ued
WmRrNtZqG68ctZRsz8aQkpUapS5kZzZqMtKV81lkbzY6Mt5U3tlNDmSja6im
8Yzz5Eg2zJQn7N31nMxiY9a3lBN//5A50vjfqktmjI+l+rOxz+f+qhEmZAkb
o8cOepe8mVzExtyErF/+keRSNjoLdh2uyiNXsmEx65mb9TFyFRuLDDiBunfI
dWwEekxyWPiOXM9GWF28duKAOKo/G3dqXl7pVSc3sZG5Rb5z71xyCxutS57p
Ja0mt7MRoDxKucid3MWGXkZD0YAYci8bs9Pdp9VwyTJJGLLivzmN+8jySbAf
OSnN5wxZSTrecnRq+h2yShJSuz9YLn9F1kjCs3GGUVU9ZJ0kPO6Zrt8pH0/1
T0Jc6/iY32pkoySYBMqM6ppORhKqeyYoN5mRLZPA9b74p86WbJ2E1cPHxJ70
Itsnwbh9otW5aLJzEvZ+XKf5KpvsnQQ3rTvVU/aQA5Pw22bKkKwT5MgkxCs8
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
gqyRhekdv79465F1sqB4Kv/1ouFkwyzwOHWmUd30fs0oC/MVnU4MaCQjC9vr
5AquVDPv/7Jwutv4+P5C5v1fFh4uPz8+J5Z5/5eFL3PlQ1wdmPd/WZgw6arV
kIXM+78s3PfdbuCnwrz/y4Jotd310K/0vjEyCw7912cOu0tmZUHG/cN9g1Iy
JwuPZjZdu5ZA5mZhT/s63rMNZEkWPq70GBOsRy7KQpX6vR05f5j3v1mQWAod
ze4y73+z0F6GOTt3M+9/s3BRxmx5tT/z/jcLM/5+Sqw0Yd7/ZkF7/Y8DRYOZ
979ZsF8z8U7pI3r/3JSF3fcezX1bRG6R+te5rvDt5PYsCNJHNvrNJXdlQcHp
85anf5n3/9J6Dh5iV3+Nef+fjciAYJf5XOb9fzay28w2TLFn3v9nw61V9VD6
ROb9fzbk/TdGbGxjfv/Jxj6OzZxI5vcTnWz0Tg5wexTE/P6TjaXT0sRr5jG/
/2Qjb1CU9fkfzO9n2XC6+8BcppZsmQ3Ff7/UPzC/v1lnQ9fH6vhWE7J9Nm41
bklb8pP5fTVb+mybv4FziuydjflWi9/rBzG/t2bjv63yH2fqkSOzcf36N9b+
l8zvz9lYOO+a8Q4xmZONsCv65fpWzO/R2Xg35OXckH/0+7gkG+ejY8+LjjK/
z2fj8U6Z5nOu5NJsqK1YmTFmFPN7fTYS5q8ovXaR9gNUZeOoS0HdtyBm/0I2
fn1WajivQa7PRs/zD4/n3KX9EA3S8xG8cdvWOHJTNq6aL9JbpE9uycaxqFcB
4qO036M9GyvnCR1kFMhd2fjZ/X1vgQftN+nNxtY7h68tO8fsf8nBwlkpp18q
k+Vz8Fz+lscyX9pPo5SD1f3wYu0F2p+jkoOl/+YVPh1N1siBXkrThZuetN9H
JwcKN6eskz/N7BfKwd2O9efiB5GNcjC3SeGGhg3tN0IOEu/t+/xqB+1PsszB
rSPnxta8of1M1jloDJb/ttuAbJ8DFe0PTulBtB/KOQf/jbwVGnSC9k9550B4
s2SkXQ+z3yoHaw7uGmw2hxyZA9m1+13Mgmi/FisHm1LYTRHltL+LkwNFG86t
EW20H4ybg2/bLY4sn0CW5ODcZfXtRw/S/rKiHFzucmlUGEv7z0ql+T1RMdNk
M/vVcqTrow0ft3fQ/raqHGSO5w902Ej73+pyYLdlQ8SWOto/Vy+dP89l+HU9
2l/XkIMf9X+ufsuj/XhNOXBV6p6s3Z/267XkIOPF/ItJAbTfrz0HLMsTb5fX
rqb65+Czr81u2R0rqf45yPGrVxkTT/sRZXLxDE0hhq60f1E+F4vfL7STtaT9
j0q56LQtLeRtpf2TKrlQfLxjheMM2o+pkYufx049/dCP9nfq5KJ77RgT7iHa
j2uYi9y66vPrbRWp/rlY0NLvskE/+v8HkCvNTzdq3Abav22Zi+hdf04fLqP9
4da50D8Xs3DUvzl9ts/FPB3nTCPdhX12zoXllaU8URn67J2LhydPh287t7TP
gbmYdr2hUf7Bsj5H5mLZ5Cda/m9X9JmVC4vfGsclv6z6zMlFzpUlM67JWfeZ
Kz2+n03nD/PW9VmSi6sa6/My1Nb3uSgXaV1vI/z32fa5NBc37Ca/DJ6xsc+V
uTid92pgbbVdn6ty8bnj66Qo8019rsvFv5FHYl7e3dzn+lysXPDSdLqDQ58b
cnFpZdUtwTvHPjflYpffUleTSKc+t+TC7PLhas1k5z6352J3WjP7hZVLn7ty
0Vq1wGTjGNc+9+bCumdiCruFLMOF7KCJ3ZsOufV5IBcrN878djPcvc/yXNQ0
cUouLPHoswIX41dHzp4w3LPPSlyETP1XXveUPJqLsRHdymmlXn1W4eKFj+86
mzDvPqtz0eVpcGnwkm191uBim5m51c5hPn3W4qLtwNA/g56SdbjQyk1zsjiw
vc8GXKRFr97nHuLbZ0Mubi+TqQ5Z7NfnOVw8OVFZwhnq32cjLh7/nKpzvpFs
wkX2gY/JRiUBdP1xIRz8ISrbKLDP5lzYPvJbb7mbbMlF8GrNgW6yQX224oLj
p3q8249szcX7VWdmD/+PbCs9H/ENH6+ZBtP1ykXDMP+F00rJDlx80gwavGpk
CF2/0nxuWlXrxpHduZh0YfvCO+1kby5+vEyYsmBDaJ99ufjYVPZ9+0VyoPR8
l6exnQzD+hzKxdDmrNJhu8mRXPDz9eyCh4X3OZaL5KVlp5PiySwurqw0G7Go
k5zMRaR1T2qBcwT1Axe8jSNMCu6Ts7gwjPzTs9AikvqDi9m+sddZVWSh9PiG
TKnwMYiifpEe/6sw7d9F5B1c7Hhz5cb8MdHUP1yMLBR+nJhFLuHCeXjTiFP9
Y6ifuCgdsF77ZxS5XHq+plvfeveZXCnNVznuSoJPbJ9PcHGYr3X1eCu5iosA
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV2WlYjO/bB/CxJ1sUyhqSsoYQwteWUKSiZGlRCaW0l5Zp32umpmYQipA9
hCQUSfbIkj2EIhQhhGf+x+87Lx5vHJ/jmmvO+7zPa+uaQQ7u5k6tBQLB/PYC
wf/+/+9fwwzB//+Hz74XYlbHP5/2H5UgttbqfyT7L62CC6Uv6uYad5/+n9Wg
uX/4QbM7A2h1OF5ptcpUW4fuhzG9tqs89RhLa6KrKKnnzduT6MF4K13mbjxu
Bq2FXTO0ppnfnE1rI2PMga5bo4xpHXwL76mid8mUHg4MUEvJubSEHomPoesu
JdZZ0qMxb52m+WcLa1oPPhvvqWxos5Iei2dbp9ZmNdvS4zBL63OGRh8HejyO
51b6rlnhSOtj59xZn0KLnekJeGo4Jq5k/jp6In70zJsR8mMDPQkTj7ut6nht
I22ABpUFT59We9CTEefbo4eXuyc9BWNPdpM1qnjTU3GzvPRR+GUf2hArBTmj
LJL86GkY1mGedopLAD0d92d8P+tgtZmegXgHu8jfy4NpwHzNXfUYj9D/LARa
bJef3HJTyPaZmLU71bX3xzC2z8SEtedn3+sVwfZZEPdX2vhuQSTbZ2HdVpmh
S1wU22fj8FSB68a70WyfjYuzx77orh3L9jloo20sXB8Zx/Y50H7XLBF9jGf7
XPS6MM050z6R7XNRNuvN473VSWw3Qu/uQyeVr09huxHSJi443lkoYvs8TEha
kLncTMz2eUh6932olXYq241h7zz6V/fWaWw3xsc1TXsyXtOC+Wi4uq+o8ZqE
7fPRxbpHV72CdLYvwO5FJctWH8xg+wK8f6a0MC5HyvaFeBYefu/cbhnbF0Kt
f58nSvu3sN0E9uKr7n75W9luAh2nKP9eZdvYbooS0auaL88y2W6KBVsj/TVa
trN9EYKWjp0u1dzJ9kVQd0vLKhqaxfbFuPUwer7zeVq4GAV9mzsttslmuxke
2DYvCv5Jwwza7ou3/di2i583Q2/XFSalM3f/52IzNO5ber7uPS1Ygnsex602
SnPYfwlmfB5pZT1vD/svwRpPNc0jv+jiJbj7q1rZ99he9jdHUt5Qm1Mb9rG/
OXStyrV9dHPZ3xzNIUWigvd0sTna3+4kiz66n/0t4Hw+ft4bvwPsb4Gy5uEJ
j2cfZH8LNO917e6qeoj9LSD+EZK+8y0tsMSekD65gecOs78lbB+fOttadoT9
LRE7uYfONN+j7G8J7ZKrab1H5rH/UsxQaXn9aQeNpegQPePDXtVj7L8UZ3oP
aTUrni5eijnKs9dfbH2c/Zch/ds+k+HBNJahw3q/Y5t/0sJlWJlnHl7gd4L9
l8Eze1fSqx+0wApDu2tv+B2Qz/5W+OMVntv2Ly20wsRDPbP/RZxkfyscL3OJ
+9jpFPtbQ63koOvtdBrWKD1vobV30Gn2t8bWi6pWnkfpYmsseWbgqz+jgP2X
Qyso4mx9BY3lsMmeorXN8Qz7L8fe4WM9Zvyii5ejU/vYno/Ehexvg7fuc6et
HXGW/W1w5OuVitoyWmiDr5HrN6x0LGJ/G+jaTDcqbnOO/Vdg6MkVs3vsobEC
p1sPrF1sfJ79V+Bor/gFvh/p4hWYfmPPqHDJBfZfifGRKz+fHlDM/iux1Hhf
Un9vWrgSegmjt7lfo4tXoo/zBuHBQSXsvwrDskasuBVAYxXmnbzV5v5dWrgK
Vf0i2hSNvMj+q7CsyxZRaAwtWI26S37ivq9prMaawMKEhBmX2H81hE97bb+W
SRevxtTee6Mqf9ECW3ycfTg9a3kp+9ti89cl+SPO0EJb7Oqzf8lGjcvsb4vG
5zdW2wfSAjtYnv646M8TWtMOn92WtJoyvYzfZ4dJ9+squmbTdnaYoSYL82x7
hd9vh4is0xNXuNBZdhioVbj+/A262A4ftOo/icaW/+dqO7RTOfu6LIMW2ONz
px8ZFi20pj36eU6P13W4yvj2aDH5FzulnLazR9TyqV5+o68xvj2ECWvNKiR0
lj0GLisar/+bLrbHm6pdE8X21xnfHt8Hq7rcu0ILHPDa1uZu3agbjO+AHpXX
3IrSaDjgfkNRu4k/aTsHNPcxwozVNxnfAQc65YouXKSzHNB1pMeg7dq3GF/e
f8Dvp0VxdLUD6neMtmpdTwvWILveoXKx6W3GXwPPyrLh0YdprMHM5XbrZrWv
YPw1OKxn8EVtAi1cg9LZ1q1119BZa+Dmtd7AVUQXr0GNad/Q60V09RrMXzZG
ZXwtLXDEtAdvI5N73GF8R6gUmlSWT6XhiO2PzOxurKHtHHHLz0MtIp4WOmLu
aR+XB0fpLEeUlvnHHq2ki+VeNt7nxze62hHxswePlPa6y/hOUJr+6o3fBFrT
CQHTfcwjzGk4wf5Mvy+73Wg7J1j2ehB0OZoWOuHq19CV97fTWU44NuKs8aXj
dLETRi0f0S78Ml3thN/pIcuVHijiO6NDxMFh5jWK+M7QEA6/b9+giO+MkwXL
VGf9UsR3xr7dp9opta5kfGes8lz5/X4HOssZZwaW3n7eiS52xgJLC+f1Xelq
Zxy5UP/lcTdasBZ5kUod81VozbW4hjKf3d1prIXlFJE4UZW2W4vtwSNuZfRW
xF+LimXu6hioiL8Wp75OHuo9UhF/LSZt0pmyf6Yi/lr8O5ia3tpBEd8FEz6X
X/EVK+K7IHtov6NN9xTxXbDkxN/gwHH3GN8Fbaeemt/+GC10wbDBgasnWd9n
fBesUxrou2HMA8Z3QcrhxtHjDB8yvgs+Ob6bOkVYxfjrsPlw3O6VPx4x/jr4
v561933GE8Zfh2Gxax58X/SM8deh4/WLh626vGD8dWjbz3iln101469Dw8nM
wrejXjL+Ogyo0bj1pI6uXgev2+ett4teMf56fPs19sLcga8Zfz0q34lj3NJo
rEdT2ykbp36g7dajw6UUt8dDaxh/PeKVJuqNn0NnrUdnNZexu+bTxevRekWy
o5khXS3/fulG9y9atGADlngknvzbhdbcgMoFf0yOtqaxAQ8a9nxV6UrbbcBA
R62Hq6co4m9At2tXU46LFPE3IHVKnqBS/Q3jb0BpaOejeo/o6g3I0jkxvc3D
t4zvCoM7wpDoXrWM74ou7rZ6NtvqGN8Vym16enVd94HxXaGe8UxSE/GR8eV+
+al3UeNnxnfFuOM2Bf6rGhnfFdPvzdvh+O0L47ti94IpVSlXmhjfDXY/T8uO
PfnO+G7YOSHVcufkn4zvhsonPZSO1P5mfDd4F2yNHPf5L+O7YdqT0wbKuq3+
+7s1yw0qr61GjFVu85+L3fBhzhRbr77t/nO1GyYffaJSv6ID/87diKlDiqud
rnb8z5obUfW+6/EIu87/GRuxsiX5s3L/bv/ZbiNcC7arDvyj8p+FG3Fm+4mF
6QE9GH8j6h+G93Vtpcb4G+HxbknzmNSejL8Rx+YPfumr25vx3XEtOtHiSak6
47ujk/cHUZN9H8Z3h/dT/8jFf/syvjvWpfVwcJX2Z3x3XKrwty8bPpDx3eEi
vhX8zUaT8d2RELJ+5pK+gxjfHVMvXVgiuk8LPJB8xvJV77jB/1nFA+e7HHuY
M2EIn8cD2rUlooVPaD0PXO/+ydojUIvP54H8/pOnnVcd+p/NPHD1T9U+zVza
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
aUEK7pdFbz30klZKwbN//oHZqrGsfwqSr4Z0iJhLq6dg2l8lmbkfrZkCzfdr
XnbfT+uk4PNZldaXHtN6KfjVNCnFpXMc65+CpfvvhbWbTiMF8cNq2m93p41T
0Kq//5hx2bRZCqyGLEy6cpe2TsFU3Z7fVreNZ/1TMNjoqP3PCbRLCkY9ru0h
XUt7pGD4V6WSSVto/xR0UHpQ+vgaLUzBiEWaI0Jb6NgURA4uPzZkdALrn4Km
+iuny2xpWQp0vZZMcBbTWfLntaq6/u8inZuC0vq7H0VNdF4KLju2jOytncj6
p+CgRUKqyIouTsHIF+Of/46ly1NwMnlKlHUhXSF/3nY6iXs/0FUpKKkq1Xvb
L4n1T8HzU3ezei+ia1MQOy3i2pRQukH+PrpcWrg4j25OwfhPVu6WL2mBCPOD
cibN75H8n9uKsOjSNu+Rs2klETTOxVe2eNGdRXCer9r+TA6tIsKYf4bfbe/T
aiLM+6DevrFdCseLCF9s1s90nUj3E2HP8TmSu860pggtcRsfD5XSWiKElTu+
cblC64iw+PdQz50/6JEiPL2t3eOdqojjS4Tzpt1n/BlB64ugPqKHZ885tIEI
Rol/5o9fSRuKsCZVvcLGm4YIHWclbxQl0nNE6LX6+92qHNpYBOmAjeUG52gT
EXz0FyidvE+bieAxN6ed+SfaUoTD/Q5cUO0g5ngVwfVhw74/A+mVIuhEKKX0
mEzbiRBxcX6mpTntKELfaYuWXd5Au4hgEWa03ymKdhXhQvTFxgk7aQ8RphVO
7zbxDO0tQuwik3CnStpfhEdPfsZd+kgHidBpWt3cxUqpHP8iNFY9u91hCB0p
Qrubqpb10+hYeT0PZQ1ssaYTRdiW5JU10ZsWiaBZ98NpWwotkb+/+Hf9hh+k
ZfJ8rWclvyqjM0VwiQuXlL6is+Tjw7K7asVfOkeE7PDj9W37pnE+ifDt9pvP
DpPoQyIcuOV9ps6CzpPXO79GJvOg80UwyQtZtzGJLhAhtbNV/LoDdJEIat9O
v465QheLkOR8S3Clhi6V5++8e4xWawnnowjLTsi2ZQ6kb4iQvm2l86hpdIUI
9YU1Rypt6HsiDGnxTUv0p6tE2O4TPm5pBv1UBLOu744Pz6erRXhX7zVf+S5d
I4L9unWLGj/TtSI4ti1b/axL+n+uF+H0HmvPGyPoBnm8sRX1RfPpJhGifPvu
OLyWbhZhy8BPR7ZH0S0iXNkzUZS4mxaIUSLeVRNQQrcV4+namE1OL2glMQ5c
ONh98R+6sxjnLqvnTuybwfkvRvg+iz79JtNqYow84rTw3zJaXQzLnfYa1d50
PzESlz5Ycz6V1hTj/fTu7bfm0VpixBd0ued5i9YR46zFlkTjenqkGNNmjL/V
R1nK+S9G6p2wdnXDaH0xYjLS7I/PpQ3E2KWXd91nDW0oRv9trd6PDaMhz686
cOSbHfQcMYr7m9clFdHGYrhsOx43/DFtIkZgidK5Mz9oMzFmqv7NmdJTxvkv
Rvf1hh8PjaOtxfBsaXtNxYxeKcbU2271zm60nRiF8/9558XTjvL3sftP/ad9
tIsYE9tYLNa6TLuKITXvrWHxivYQQ+lp0oqQf7S3GKKS4Kv7+23h/BfDd7py
waPJdJBYvt+1a6dqRQvl9StpvmPjTUeKcdfv/LhTYjpWjNUPPB7rHqUTxTj9
0ffFmRu0SIyBlr3z172nJWL8G1M9yVBpK+e/GL2/L30wXpvOFENze+Me8zl0
lhjVvcKDtzrQOWJ4rHr3vXMYnSsGLvl6HtxJH5K/n9PT2/idp/PE0DL9stzj
GZ0vhqA+7py0hS4Q4+MMm+4f+27j/JeP9xVXat2n0sViNI+szR64gi6Vj6+x
xr6/A+lyMW5s3RfQeht9Q4wF+ZPE48/SFWL07djaKekJfU8+f154zevaQleJ
sTS3g05+v0zOfzHmnM+PD5pGV4th6rUy2nE1XSOG+Yim+y6hdK0Yi3/9+xWV
RdeLcU3DalNBCd0gxs0p/Z+1vKKbxDikXTfcrO12zn8xtuaW7js6lG6Rfz7J
vFl9Hi1IRd/CF6rxLnTbVLxObD++VTytlIrhi8tLgg7SnVNxd/Y2y983aJVU
PNYQ7tv8iVZLxdkI8ZaWbjs4/1NRKDUbHzyW7peK70LV4y3mtGYq3lX9iA/0
prVSERoR6Po9ndZJxbPlVyZ4nKZHpmLIaI2ad1W0XioMbG5ErvpF66fioOlk
3Tt9d3L+p+Jf481Hs6bRhqlYsDoz7vhqGqnYvaBDR00hPScV1i2vf8dn08ap
0PUtv/nlIm2SCoHkw+5lNbRZKj7PebTvcesszv9ULJtZtjdalbZORZKlztrR
WvTKVJjZS99W6NN2qVB+PVbDbS7tmAqbwoyfrZbRLqlQO/FSkuxMu6Yi/+IP
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
46b+/tPrb9KO6UhcX/yj5Rntkg6p78JTiZ9o13SYPfVU1/hHe8jf36ynjtnd
DnP+p8PC9GfboZq0fzrGV08I3a1HB6XDcMQsn34zaWE6vpe1zUxZQkemI6J8
8JkWezo2HbmNR/ev8aQT0zHjq7d1aTgtSkefZ52OD0ijJenQHxSQ7bmblqXD
Oj5YqfgEnZmO7kv/XWhfSmelY6b+ie1G9+icdCzAutDQGjpXPt6ujTI91kQf
Sofbt7ivT9oe4fxPxzXzj3b/1Oj8dCTU/QzrO5QukI9vo/IZehPoonRcbJcS
M20uXZwO7cDPlrOX0qXy9s17z810osvTUZ21st1kH/qGvN1Ef5duFF2RjjZJ
FZPU0ul78ve/Uzv0Zw5dlY4peUeHP86nn6bjwu9p10+V0tXpyPq3+m7KPbom
Hc570uKdaujadJQdfzPMoImul78Ppy+3OrQ9yvmfjkmzvLbfU6Wb5O+n8/fD
O4bQzekYaper4TyebknHz+9uP4bPpgUZmDJroO1Hc7ptBjI0AjccdqCVMrC8
wnbcBk+6cwaGebtd1Q6nVTLw7J/t/GoxrZaBZReKy6XZtHoGCpXnrDQ9RvfL
wME5bTRaldCaGWjVVU31RAWtlYF7eqdXrammdTLwsX2Sco8GemQGvs20H3nh
H60nf/57SetPdsjj/M9AXNu0uPhutEEG3njZ/V7dmzbMQOLpP2XjBtLIwFPR
0a/thtFzMlAnGxxbNZo2zsCqMUnxBybSJhlQOrRREDSdNsvAubBrDSZGtGUG
Ort/s+2/iLaWv6/1+yw+LqVXytunbK8oWkXbyfPZt+BJghPtKH/+m15+Nm60
SwZWtlq8X8eHds1AvmmAz/cg2iMDx5X/Vl+KpL0zEK459rMokfbPQJm13e5V
EjooA68agwXDM2lhBi5tTVP+vpuOzICjap/SkoN0bAZkL0+OSTpBJ2ZgsM04
M+uztCgD9/O36wy5REsy0HbJjKKP12iZvH1dXeeCu3RmBmwvtx4Q/pjOksd/
7Ne48BWdIx8vwnOxPd/TuRlopzfs7fNG+lAGhKNyO+X+pPMy0OZXwC+PVsc4
/zOwa3J1/uSOdEEGZiW9MGzdnS7KgGjKP8k1dbpY/j56JpxL1aRLM+B8YtEZ
Gx26PANTv8niBuvRNzJwxm623vtJdEUGvg/QPnxsBn1Pnu/srFYB8+iqDPTe
YDcGi+mn8uddv8GggxVdnYGG7KoBt1bTNRmYLXZ7JXGmazPwyFM5csVGuj4D
NeIO7Qb70g0ZUNXo4FwbTDdlYITBudwjUXRzBr4mq9/0TqJbMnBe/XHllHRa
IEVPUcM5wXa6rRSazZ8Sy3JoJSlK++yemXiI7iyF+tf8p0vyaRUpAg0N7XoX
0WpSTJ74+vrTS7S6FC7+Es1d1+l+Umx5tNt2bSWtKcVgo2FxI5/QWlLMXtpx
e+MrWkeK8kkxmafe0yOlKNO+G7P5C60nxa2cSlv8ovWlGOR8Q6td6+Oc/1Ic
bzj28GpH2lCKrIpd/sndaUjxvMiyg4UGPUcKbaUVkb0H0cZShP4Y9uWJDm0i
xbItJmZZerSZFN30Tu1wNKAtpdhRZvpcB7S1FH8nDu32cR69UgrVh7KxxxbT
dvL4hWuMfKxoRylmClJMJ9vSLlKY/HAw+uNMu0oh8Bo+rmQj7SF/X8oF3aN8
aW8pzrX/WGMcQvtLETKs16HO0XSQvN6yMWsrkmihFE+6Pe8lSacj5d/X8+lZ
q+10rPx91tkt67uHTpTCsvbH2+eHaJEUJ1bOcNuVT0ukmNZYUOtURMuk+F6s
vFy3lM6UYnzq9Qv11+ksKczSJ/bPq6RzpCiJqPHwekLnSrGhLqdw4mv6kDye
36XfP9/TeVJYJMfon/tC50vRKjnKSfiLLpBi4r/8pNmtT3D+S9Ha/faR9sp0
sRRtB70rv9qdLpUieYjB40QNulyKFk2914sH0Tfk72drQE0PXbpCigsqps/v
69H3pIg+0vaOzICukiJpcmnRCtBPpSjOsM4eYExXS6Hi7h/6cjFdI0XO6btW
OVZ0rRQD7r3QXWtL10uxb673N921dIMU209YFdZvpJuk6LGoyf+oL90sxfyu
eeM8Q+gW+fu48eCtfjQtkGH8xT7pP5LotjJ8ykmaXphOK8lw41b310Hb6c4y
TLszPHzGHlpFBof8kf1aH6bVZOiiN/1YaT6tLsMQjeEzY4rofjJMn2d6Y34p
rSnDvMZN5p1v0FoynBK43btVSevI8KxYz1z8hB4pg92qsusWr2k9GS4NGzOz
1wdaX4YD391OVH2hDWQo0G4auO0XbShDYcGMmFWt8zn/Zci5XPp+oDI9R4Z7
Z+ctfNWdNpbhfMnJfTkatIkM7W/F/nMeRJvJYLpT00JXl7aUoefSpbs+6NHW
8nzN4j4eNqBXyjD8YKi+B2g7GRZUf/EfZ0w7yrCq07TCpsW0iwz9tz9vPmVF
u8ogdF+gH2BLe8iQvCzabepa2luGW54Ru/9spP1lOPMq6MEFXzpI/j5P3G4f
HkIL5fmHFevPiaYj5fkMvWjbPpmOlaHP3vax5el0ogynHbsfjt9Oi2ToJla7
bbKHlsjQ8VnVp66HaZkMT5y/K9/JpzNl0K87pZVWRGfJoDxgu+HSUjpHBpWY
B+a9b9C5MmiP27T2USV9SN5+/UPAtid0ngwuR0fEr3pN58vwfp7tloEf6AL5
+/x2fN/LL3SRDDfz9fJ3/6KLZXjQzfO8U+uTnP8ynHO6eXmYMl0uQ0V7m2t1
3ekb8vql6d04qEFXyMdfYq/rboPoe/9rb31ljC5dJYPa7fMXGvXopzK0sVt0
8oQBXS3DVdNJuT6ga2QIj9+wZZIxXSuDccvlmJ+L6Xr5eN4R63nWim6QIatV
tk2wLd0kw1grYMZaulkGX2GaVit3ukWGY2diOlzypQVb0Fv/S21kCN12C/5o
6l41iqaVtmDCxW65Ssl05y3wTNoYdS2dVtmCuPeP7BO302pboPboq+GiPbT6
FkhOHuypcpjutwWCA/b1d/JpzS3oUexfklZEa23BdWVIlpaenPF/Fh4QQQ==

              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.009058218049656848, 
           0.07654790485869378}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxd2nt8zfUfB/AvVobJIbRcckJMFkduo8UXk2F0MBomJ4ZhcTDMDF/30XBo
ajJ8Y2VyOy5p5HLK+M0lnRhOuXRiapXLCdVyqd+v9+v1+eN3+qfH8/H+vD/v
z/V7vjvH8yMm9h9VXtO0nk9q2r//x3+Bztr//6f/P0ODbAlyzSCHB7lekK1B
bhjkxkFuEuSIIL8Y5MggtwiyLcitgvxykFsHuU2Q2wa5XZDbBzkqyB2C3DHI
rwQ5OsivBrlTkDsHWf9/G0HWugTFg6x1DYoHWesWFA+yFhMUD7LWPSgeZO21
oHiQtR5B8SBrsUHxIGs9g+JB1noFxYOs9Q6KB1mLC4oHWesTFFe2HsL/+/6/
DWUb46/TOuPKMYzb6VhYV45je2U77FHuz/x+dDzzlQcxXzmB+cpDmN+fTmS+
8pvMVx7OfNpwMH8A/RbzlUcwX3kk85WTmB/P/kcznzbGMF85mfnK45g/kE5h
vvIE5tO6k/nKk5g/iJ7MfNqYwnxam8p81X4a89+gpzOf9qQxnzbSma/aZzA/
ge1nMZ825jBfxQ3m0+Zc5g9mfB7zaf985tPWhcynHYuYP4T9LWY+bV3CfBVf
ynxaz2L+UNZbxnzaXMF82uNiPu1dyfxEehXzaf+7zKctq5lPO95j/jDY/T7z
aesa5tPmB8ynbbnMf5P11jGf9mxgPu0zma/8IfOHw2UbmU9b85hPJ3zEfNr8
mPkOODQfttLGFvZHW7bCDtqzjf3TmTtgk45ysx7dZhfsp+N2s/5bcOoe1qfz
97I+XfYp69OOz1ifvlrA+nTaAdanWxxkfTrkMOuPgB8cYX260hesTzf7kvXp
xKOsT28uZH264nHWp+f+h/Xp8BOsPxI+dZL16Q2nWZ9efYb1YSPBy/p0+jes
T+8+y/p0uWLWp8edZ/0k9H/nAuvDxkof6zMe/x3r0x0vsz7bv3aV9Rnv5Gd9
WJ/4A+vDnoJrrD8K8folrE+vv8H6sNnpJ9ZnvNzPrA9rP//C+rDjr5usD3va
3mF92PZNgPVHi93P32V9WFtxj/Vhs+7vrA8bJ/9gfdi7voz1mZ/7gPXhwLFH
rM/21n9Yf4zY5dMOoz7se7U8rMOBLyvADjhj3BOwATvaV4RNODGyEuyBH/Wu
AvsZz6kKa8ni+EoW1oc7DqvO+vDs4zVYH77dpSbrw8UnarE+HDXwGdYXG79e
CGd9ODa6DuuPlfYPx9VlfbHnzVfrsb5YfziLdsCjS9jeEBsVarM/E/2Fb63N
+vC3bTkfP3zSxfXVxok9M3yvoj4c0qlaJ9SH1223wg547+LmsAG/pLeBTbb3
vQJ74IG9usJ+sWdXxx6wNl7G79kfB1vFZtPh/VhfrFfKjWd9OL5iAusj/4Jr
KOsjfrvxcNaH/zPoLdYXe45XGsn6KTI+i5nE+mJru2qjWV/sWNx3DOuLzb1v
JLO+2NOn6VjWR/sqh2iPWL9XdxzrI/+tXrT2trS/34+2iq09O9O6WF/xPO0Q
G/cr0YZY+6MybSL+QXvag/zMjao+fCNxPOtPkPGHTk1hfbFe5/e3WV9saNcm
sr7YOqv+JNYXm48zJrM+8u2VU1lf7N96eCrri7Uuq6az/kRpfzBjBuuL/V9M
ncn6YuuYqbNYX6ytT53D+mLL3n0G68Ndt89lfbG75dp5rC927c+Yz/pOWf8B
cQtgizjQtvxCjkfsHJ9N28T6K3/SOtoX1l8E28X2Tx4w7hB7jhm0E+3/2MR6
BvoLH8LxuOA6uRy/CetnZsNusZabzvXyoP/LvafAXsQ77+H59MPhlQbAAfjN
z3vx/k/610aX3DGwRaw/MTOVzyO4W7tZsA3+4Nd5fD6Jtd51FsN29Lekxjt8
XsG6ZznsFHvnhq7k80vsPp6+CnYhnr/rXT7P4JOfZMNu1CsevZrPN7H1mZ9p
L9rfbfcen3do3+ANOiB2PdmP1ib/a2fbSNoi9l+8w/6sYm+3jbRNbLpiaR35
fX/k+OxiLWMW7RBbvE/RTrGnxwecnyE2TjWgXfCODVwPE/UCdWg3xtfnXa6f
B/GWVWiv2LFyoYvzR/urT9AB1F/aYAXnP0Xqfd+H+2MR+2PWLeP8xWZ6Ddom
1qbvzOL8xdZdk2m72PFoEO0Q63cG0E7099GbtIH+1oyjXYhPVDbR32477cb4
5lhoDxy7nufNC68NLOX80d8djQ7Ar5zO5PxTZT0aDeD5tYj1DWsWcv5iM+rj
+Zy/2NFm7lzOH/mnx8zm/MXaWtcMzh/9XVvJ++QUG0srTOT80T76ThLnD9ex
DeL8YVuN5pw/nN+Dn5ceuPifYbz/8OVbo3j/4bMH+LwPwD2bOfn8myq2XOTz
3AJH/MznuVVsrBrN54sNHjeY1tE+4yu2tyOufc3+HPCCsaznRPtHffj5YsCT
n+PnpQte8zo/j004+Rzn54Y3/sz3Aw+sf9+a84cjj3bh/sOzp77B/Ydf6j6S
+z9NvP/WOO6/2Mh7bRL3H57xiPtng9+bm8b9R/6NwzO5//D29TwPDnj+YoP7
L/akzuP5MdDfnM58nrrg5UdpE/4nnOfPjfxdfWkP+t83jfYifi+P9ov1H2/R
AbSfPGoB5z9d2hfU53m3iLVvX1jE+Yv1rZm8Hzb4k95LOH943ATePzvyA7/w
eeEQ+ycP5fPHifbmNfX8FxvX5qvnHxwWxeerKbY2K+Pz2Y387EM5nD9cNvcD
zl/s0Dvncv6Y35I76zh/uOayDZx/2r+2PbfE5PzF2oHoDzl/sTXvKm0Te1ul
bOT8xeapa7Rd7P6t8ybOH/13nUs7xfZ5ebSB/rdupl3iwINM2hR7qvag3Wj/
yM96HrF/9iDai/jT+RyvX+x8+iLnFxDrGafU/GdI/7E7uD4WsfWpN9dy/ogP
vs71tokd6T24Hzra98nm/tnFRsNi7rcD+WMbqee/WO/m5vky4AOjeB9cYq3D
Pt4vE261fgLnDz9ZaSjnD9srNeP9h9cfSOTzD87YxvehAMb3oLl6/qVLfP8m
Pr8sYiPxMz7frPCNUer5Bx/bzeebjvwrvfg8s8MvreLzywHH7e7P5x/svK1z
/vB5TT3/4QnXJnP+8E+bMzh/seeXHHX/4YYteR+9cEwIP9/9YnPkPL4/BMSO
ast5v7SZ/1qf/gH31yI2N+Sq/RdrI5as5/6Lrac/4XnSxe7mD3ne7OhvrU2d
f7jva3ncf3EgJOojzh/5EeU/5vxR78qHtIn2FWpt5vzFnqghtEfsPO6kvWKb
mUD7UX9YDTogdkVvYP9ahvQfWY62iK3nO3J8VrFn9escv01szOjG+emI16ir
7j/c+xLXxyHWJ9bgfXOKTf8APp8M9Fdp4RrOH+1v7+T9MsXaoqu8X274dB31
/gevuML75WV/J/i89sOXqqjnP9qXn8z3eW2WePvRqZw/fDqe980KF6Tz89IG
e1vx/USHo8p15/xhR5eWnD+s7WrI+cPmknacP2xv1Jvzh6MvDub84dFVRnH+
sH6P4/PAa9tw/F54QA4/j/1wp258vgTERsXf1OffbHHZf/g+aBFrrs+5nlbE
n3PweWZDfN0o3iddrLcaq97/xZ6w0dw/B7zyDd4vJ/I7deDnlQHPf5LnwQUv
O8DnsQlrdp4ft9h8y8Hz5RE7Hpbn/fPCVbPU8x/1d/5JB5D/dxeeV22OxLuP
oS1iR9Mk2op4YVvaJjZufsv+dLS3v67uv9h/ZLU6/2hfkKjOP/pztOf8DLHe
5SjXw4V4/8pcLxOuEs7nlRveXqbOP/pPn8T3DS+cdIKfL354R3W+fwXE2pPH
+Hz935+m0u06nudQuM2z/PywwBm1+PwPh59N4N/jVnitnX/PR8CXrmXy84Lx
M1lwlFg/oLn4+YH4yrYr4Vix4fubtsNnBq2CE+B7UbQDbrSR7ZPR3+cu9u+E
t1daDqehfadyS2ED8Zjq/H4ik3Zxfi544BR+3uXA+q/8/s6E01qOxfrls34Y
ny9u1FtWjc+jAviTY/x88nD+3Xh/iuB31nD/vWh/vZj3wyf2dJ7C8+VH3Org
+SwVmxtf5PM6AFf+is/zMrF/SFd+HmhzJR63KJ/7LzY6rt7C+yB2VEv5BA4X
WzuGbuX9gHeMoSPE2q+ZtA39VRlPR6GevyqtwzUns/9YOGEN69vF+io1vgTU
e/gqx+9A//WOcX7JGO+ahurzVuw/N4zrkyb2LJjN9TOQfzKc9zET9e7XV59H
mM/fdXj/ctD+bH3ePxP2jeHf1/lwoJh/v7iRv6/DdO4/nJLEzxMPbLnYHeep
CA45yL9XvfC3S/l9oQ8etIbf//nhpvf4/V4px9OM5zmAePckfj9XBjtzaG2e
tL96mO1D4cNn+X2cRax1PsvvF8Ph+rPV95VwvYwJvP+wdob3wwZHDRvN/YfP
V+Pnk456MR35vIqFJ67g/bCLPVt2834kIP/cKe6PA47X+HxNRvvk57jfTti7
j+chTazP7MzzY8ArdvC8ZaL+lAc8ny7Ea9XZwf0XWzaUd3P/xYEp39H5YvPA
yl3cf7F/RJPd3H/09/T7tAf5ta/TRWJrr8p7eP+RH1qV9omdjW+yvR/jvZJP
l4rt12PoAObf/0uOpwze24jW5v9rx/3xHH+oWF8bvZP3Hx6XsZ33H05fr+6/
2Px7C9cvQuyp+zHX14b+v13D+xmFeJMs9f4otl6bz8/PWPR/qhr30w7X78T3
8QSxkWq+z/1Hf2NieD6SEW/anvfTKdZ6VubnYxo8Ygrfdwy0H3mI70OZiF8u
U3+Pwb+/zM/PHPjaL/x+w4T7LZvD/Ud/s5sx3w1HruP7ZwF8rx4/DzzwZxv4
/UER5nvuHb5veRGvuZ/vvz7En43j/P3wgvZcn1KMZ3MK1y+A9Q+5zfUtQ/yn
jrwP2gKJP8jm+3+o2Oxwn89bC+K5du53uFirvZHnwYr27/l5XiLE1rDyPF82
sWtYeZ7HKMQzbtG6OHDnCM93rNjinraX+496r1b7lPuP/J2LaYfY+dlVOhnj
Wf30Pu6/2BbWhE5DvQG1aQP5tW4wP1NsH/0u7RLrJxvSOViPdqs5PlNsWG5x
/Pmo3/Ql2i32bEpQ91/svz2Z6+PBfHLn8P4VoV5+CNfTi/6XPd7G/cd69PyN
n5d+9Nf+J+5XKert+pH7GUD/T/zJ/S5D+/ENeP+0hdL+7miej1B4Uz7Pj0Vs
TLrE949wuPkkvq9axfqZyXxfiRBr+k98/7ch/to5fn5Gof/1HdTvB2jfpC4d
i/4fT6Pt8MZe7C8BfrhS3X/k9+/Bz4NkxPuP5H1wws9c4ed7Guo3Hag+/xE/
9j3nnyl22NX3Ty44M5bPrxyxtVkdPt9M5Gt/cv3z4T983B835h96gPtXIDa7
ZvPzxIP2l21q/8Wurk/xfHjFzjHf0z7Y+aF6/ou9ef143kox3nnqPAbEtm8m
87yWof6u72ltkYxv08s836Fi1/xxtEVsXbKIDhd7OylbxU5jLB2B/jJstA35
By6xXhTyX0ihdbFZ77q6/2ItrSttFztWZHG+CWKjRSHXwyH2z7rJ9UtG/OdQ
2onxVOnI9U5D/38lcD8MxJ+Yxv3KFHvW53A/XYi/VMT7lAM/qMLzYKJ99fE8
L/nov+pNnic32p/L5nkrQHxvMb9P8mC8N/28X0WIrxzA8+ulW/K++eDPp/K8
+5Ff8QW6FPELHekA4k320GWIH8lkf9piiff8lPVCxdqUVur7UMRDfud4w8We
d2ZyPlbEm7/P+UaI9U1F6u9ltI+pwudPFPpfPITrpyP/qd1c31h4c1Wuvx39
dRjL94sE5Bd4uF8OxMMt3M9k5HcfwM8nJ9o3XKT2H+2z8/h8NeA+A3leMsX+
qJO0C/FhLXnecsRmv/m0ifbljtH5qLf3nnr/w3gqVlPPf6zHndrq/Q/tt1VR
73+If3FL3X/4z0Pq/qP9gFm0X2yt/RJdivEcOsPxB5D/YCRdhvzeVzh/LVPi
iT9wfULFRn0f188i1tOPcX3DEe+7Xb3/wSPf5X5EwNNmcr9s8KtjuZ9R6G+i
g89PXax9maT2H+2vzuD5sMM9N/H8JKB9lxL1/Sr6W61+b0hGfPFn6v0f8QN9
1N9/iLerQBuY/0Sfev4jPuwr2oX6836gc9D+n6eZb6L9+yPpfMR3n6HdqD9m
AMdXgHjaHdqD+Jsm51eEeM+RnL8X/bdty/XxYTz31Pe5frTv+hddCl8q4XoH
4DlnuR9lqFfuCPdLWyL9x27mfobCgzO53xaxZ8hw9f4Pr2vG82KF80roCOQ3
Wc7zZYNDavD8RYkdLfrTuti/bREdK7Zu20Hb0f/4E3QC+utygXYgvqZYPf/F
ZvlC9fyHW+TRaWKj/FTagD9up+4/+n/5HMfvQv+z69M5sK8v52vCu8ZxffLR
X92pXD+3WF81metbgPbHx3D9PXDaYO5PEfIT47h/XsSrdOf++hC/34PnwQ/3
HMzzUop6NzLU9z/Ib7yP560M8QMV1fvfUvGiKTyvoWJj3gOedwt8PJcOF2sb
B6vfBxH/sqV6/qO/IfXV74Vo39lKRyH+RDv1/anYUzNR/f0Hf75CfZ+K/Jgz
dALiFWtxvA448y06Gf3P36XuP+Jl5TnfNLhdvPr9EeMv3kRnIr4zoN7/0N+P
HbieOYifmU2biP92mM5Hf3//Rbsx/hMtuT8FiHdy0B7ER75DF8G9dqn7D9c4
S/vgK7doP/orCuF5KIVLa6v3f4xXb0yXYbxHI9XvP++I+9jU339i4+MW6vcg
8f/+oKbDxZ7pdWgr4taKdATyq6jx2dB/ySn19z/yjU3q8x/t/5pCx8K7X1XP
f3hwOToB/vYI19eB/vqk08kYz/1W6vs/tH++VO0/3Gm92n/44EC1/8h/yqL2
H/2vUc/zHLTfsko9/+FB6vvFfOTPaame/3BhJboA6/Geej/0wN3V508R2ldX
nz9euN0p2gffPat+30D9xSV0KdxRY70A2vdtQpdhPo/V7+ValrSfpOYTKvbs
8KnfQ8TagmZcj3B42gLaCheo9Y2Amw9UvxeK9TFF6v0P/Z/Q1f6j/ayDav/R
fkkHnic7fOVTOgHth7VU3/9i/Hc30cnof0N1Pj+dyHdNo9OQ3+Qb2kD8QQP1
/R/il9+iXYgfU9+H5yDuO0CbqJ/opfPR/vh52o3xHDpJF6B9i520B+3fmK+e
/2jv60F7Ue+Lxxyvj+vzMe1H+9AY9fc/4kN86vde+OAougztp9xW93+Z9P9Z
qrr/YmP9A+6HBfG68+hw+F6Y+n1Y7DmSy/2NgG+/rPYf/RV6eT6ikJ88XX3/
J9YDTelYxKdeV78no7+6W+kE+FlDPf+Rn6/ev5KR/6c6307UrztUvf8hXm6S
ev9DfNgaOhP+sJh2od7PDTm+HOTfmq/+fQra//aH+vsP4zmlnkdurkdV9fyH
392hnv9o/+0Qrn8R4tct6vd89H/jjPr8R/s676r9R/sDQ3leSjG+2034fhFA
/oG7dBnyHx3k+4i2XPLfnM/3lVCxPqSbev8Xax0fqPc/xJt+pN7/kN+pi/r+
D/Htp9T7H/KvW9X7n9i/1K7e/8Tmp1PU+x/iKUvU+x/8nUu9/6H/PirugKMm
q/c/jKdLb/X+h/771VTvf2jfa636+w/+8g7nkyk2OkbQLsSP9uD8c9B/q/5c
LxPx33tzPfPhQAf1/Q/m3+95df+Rn1aR++dBvau/qf1nfzfU5z9c6WeeJx/6
q6XRfuS7WvL8lcLdZ6rnP+rZflTf/6K/mZNpbYU463n1/Z9Ya3hf/XswsWfC
L3Q4bAtR73/IP6qr9z+44Qb1/gffrM/xRCE/4XP178fEhm2quv/wsVjOzw4/
fFl9/qO/wep9xYH+ItTvgcmIbxionv+I/zWV65+G+a3+gPtjwA+OcP8yUc9/
jfvrgltp6vcf9F+xFs+PiXh8NfX7j9jsvox2w00q8O/zAtg3UX3/i/p9ztJF
6H9uM34f4EX/c1JpH+YzfLf6/g/xPtfU7z9i/zsV1Pd/6G9WLbpMbN3+DK25
JP5dJToEfkL9vhQKzz5Mh4mtd+fSFrHf2Z6uKdaS/ZxPONqvmk3XE5tXn6at
YiNhI9erMfqrEUlHoP4ro7nekbA2hfthE3smzeP9bIP4nBzuXxRceT/3Nxr1
Sn7i/uvwlxF0DPprNofnJRb5Cbd5nuJg2wz1/RTymzWk4zH/Pr/yPCYg3vEC
nQjbStT7C/x0beYnof60FDoZ9XLU9/sp8NDFHJ8Tbteb409F/QYvc75p8PSO
XI8M+OFbXC8D9Y6p5/kC7E+LcurvYexHyX46C/t5MZ3750L9nV24/9nwH1V4
nnLQvu5FOhfzTTPV7yeolziK3xfnIV6zEX+fyUf+owv0NrEje/ZnvF/wB88U
wHvR/jmTLkDcVXs/fBDzLZpBe1Cvwgm6EPFLFQ7wPiLe9UX6NNZjRjTthau/
Qhej/U9NaB/Wu2k5+jL673OK9fyIN1tMl2D8X7ejSzH+lZc5n5uI30inA1i/
3jXp+3D0Vq5PGfqv3ZV+BFe/xPXUVkr/0Wl0CJxWlw6FU49zf8LEZn66+n0A
8dc70DXFxtAK6vcCsWfSt9zvesi//jltRftdn9CN4VUf0RFi7Z+tdCTqdTxE
28T+RB/dBvkJj9TvDaj/uCnHE438fwbTOvL/cNExyHeeomMx3ocVuR5x6K97
d9qOeJt5dDziDw/RCRh/ozI6EfE5Nu6HA248hk4S6/ZcOhn9D/XSKWi/pQL3
24nxr2lHpyJ/2lg6DfNJyqUzxNaBX9MG8h+U43lbgPU53ZrOxPhrJ9FZaG9Z
RbtQ7/FBOhv5bUroHOS3rsjznwuve4E2Yb0znYf+qsfT+RhviyR6G/q/NJF2
I3/+dHov8nfNpAvQvuos+iD6s2fQHsSj0ulCzG+e6q8I8R9S1f3Hfvw+Wd1/
9NdXuRjtR01R9x/xD6ep+w8PUPX9GO+BBXQJ9vcJF12K/XtjPX0T+Sd20gHU
cxbS99HfiMt0Geaz50/6EfrPqP057/8q6f9CFB0iNi+9SYeKPZsz6TC0H7iP
toitj3+iayJ/V/2DvP/i/02ArgdPWE1bxY6ZF+nGqPdh/UO8/2h/YQwdCT+5
j7ahXo3Qw7z/iJ8cRkehv6v76Gix31/jCO8/5tN2Eh2D8Tz1DR0rtuwJ9/D+
Y75GLG1H/+2n0/HiQM08OgH928/QiRjvS7/TDvRXIfwL3n/U19vRyWLnhNfp
FMyv5UjaifbRk+hUsTd5Bp0mtm2YSWeI9RvTaQPxYRPoBRh/7HA6E/MP601n
of/Il2kX5tO/Fp0tdndR88vB+pw7S+cifmcHbcJzl9J5mG/qaDof67O1G70N
+/ewIe3GeF58gt6L9T5xnvtXgPFN3UIfxPz1RbQH/Z1LoQtRb/MwugjtnxxM
n8Z8GgynvXCYky5Gf753aB+8cDd9Ga5cQvuxf80sHH8J4mta06VYn5cT6ZuY
z4EldAD7deVz+r7YHnmXLoPrRHJ/HvH+jKW1d2W9o/PpELHjn1I6VOxf8uKX
vP/iQI0U2iK2fLONrin2PvqVDhfbzkcc5f1Hf3kjaCtclEM3Fls/O0lHiM2Q
MjpSrCVbC3n/4f3d6DYY/8236CjkV5tJR4s93VbQuljfv56OQX/bt9CxGN9o
Nx2H/qP20HaMN2M3HQ+v3kEnoP87m+lE+JGq54BbZ9NJGF/VTDoZ/T2hxp8i
Nlxv0064kYNORX6LAXQa5v9cDzoD8xsWTRuYX9/W9ALUGxBJZ6K/Q03pLOSf
e4F2YT08TehstF/zIp2D+b3Ris5F3NeRNlG/9DU6D/13G0jno//3R9Hb0N+K
6bQb8/Mupfciv9wGugDxE2q/DmJ+V4poD/p7cIUuxHr+dpcuwvg+qniM9x/5
VerRXrihjS5G/fvdaB/qL3uDvgw/Hkf7kd9vNl2C+WavpEs5vzz6JuJhBXQA
7nmKvo/xLrxKl6H/Q7/Rj9D+55DjvP/Z/9pTMZwOEfvrNqdDxUarTnSY2JHY
j7ag/b4kuibijjQ6XGxNz6LroV7jD2kr8mftoxsjvu40HYH81dfpSDjlIW0T
a41q/of3X6zveYmOwngssXS02HxxJK1jfndm0zHor/daOhbjaVJAx2G8487T
dtR7fJeOR77HUsT7j/YrW9CJGE9cHO1A/aNj6STkFy6ik9F/rU10CsYz7TDt
RH+bfHQq8vv/Rqdhvu1DT/D+o33l+rSB8c1vSS9AvdGd6Uz0NyeOzsJ4tw2i
XfAPw+hs9N9sBJ2D/M0j6Vzup4qbcNfhdB4cNoTOx3yHDaC3Ybyf9Kbd8Nvd
6L3Ib/IKXYD5D2xNH0R/syNpD8b3fFO6EPmfNqKLML/8hvRprM+QxrQXfqYZ
XYz+w1vRPtRfGE1fRvspavx+1P9JrV8J1u/bKXQp3H4ZfRP9Xd9CB5D/2Qn6
PmzcpMvgCjVO8v7Df3WgtdUyXksSHSI2AivoULG1wyE6TKwt+ZW2iB2z65zi
/RebBT3pcNiXRtcT++dspq2oZz9PN4ZvlTvN+4/8B5F0JOLWQbQNfmoW3Qbt
539IR2G8A47S0ZjP2Gu0jvF//Tcdg/XYEv4V7z/av2yj49D/nu60HfOZN5iO
R/4f4+kE9D9iFp2I8VRbTjsw/g7r6ST0V20HnYz+9hyiU9D+la9op1jfe5lO
hRvfpNPg5Q/pDMznXuUzvP8Yz6A69ALEjzSjMzGeTh3oLLS/HUu7sB63Euhs
xEeMpXPgcel0LtajdhZtYnwj19N56K/DLjof45laSG/Dety+SLsRX/ArvRf9
1f2HLkB/G2t8zfvP9W1Ce7CewzrQhYhnxtFF6G/VcPo0PHMy7UX7HgvpYozv
4fu0D/G1n9CX4eaHaD/62/k1XYLxRFyjS7F+a+7TN8WWuRW8vP/I3x1G34f9
tegyrHeVBvQjsbt1BK29J+0Ht6JD4IyOdKjYzO1Gh4ndB+Joi9hxYSBdU+y5
8yYdLtYqJtP1xJZ6k2gr3DKdbiy26fPpCLHz9Sw6UuxNXE3bEE9eT7fBeCZv
pqMw3nQ3HY32c/fTOuKLvqRjxK6lp+hYjH9ZMR0nti6/QtvFgWU/0vHIz7pD
JyC+pIxOxPwWlfuG9x/jnVuZTkL+zKfpZIwvtR6dgvmnvEA7sX5JLehU9Dek
PZ2G9q/rdAbiMT1pQ2yP6k8vQLz5UDoT9esn0VloX+1t2oXzok2js8VGYDad
g/XyL6Zz4a9dtInzdWgNnYf8rRvpfLE/Zyu9DeuzcC/tRnzSIXov+ht2nC5A
PPZr+iDOZ2sf7cH6PfcDXYj9Dv2FLsJ4frtLn8Z6fPeQ9uI8HQ05y/uPelur
0j743dr0Ze5vA9qP+IgIugT71bMVXYr2to70TZyn2t3oAMb/uDd9H/O7Fk+X
YX+KhtGP0N/20bT2vsxv1UQ6RKxPT6NDxZ6hc+kwcaDzUtoi/t+f7XRNsbdi
Lh0udvyaR9dD/Mx22or83fvoxvDqI3SE2D+9iI4UO4d8Q9sQj/6ObiO2NLhO
R4mt5W7S0Yhfv0/rGE/hYzpGbP/4yXO8/4gvrkbHob+x4bQd69XreToe823+
Ip2AeFhrOhHzu/UK7RC7v4qhk8S2HX3oZLFr+SA6BfOdMJx2or/Xk+lUzK/l
JDoNrpZOZyD/9jzaQP9n3qEXYLw7sulM7P+ydXQWxvf2x7QL+XE76WysV/MC
OgfnpfIXdC7G88sJ2sT4T5yl89B+8yU6H/0tKqG34byOukW7MZ6YP+i9aN/w
H7oA+1kutJj3H/P53kJ7sJ+Hn6ULsX+5DekizC+9OX0a+5XQhvaiXrtX6WK4
5mu0D/Xu9qUvI9/7Bu3HfHY46BKMN2ssXYrxjZtM30T/PWbSAeS/sIC+j/YV
ltFlYtO/mn7E+a6ntRyJr91Mh4i1GW46VOwctJ8OE3tbf0lbxJbqp+iaYv32
OTpc7Dp1ma4nduffoK1iz8LbdGNxYMSfdATcWTvP+y/216tE2xD/qzrdBuO7
UIeOQr09jehojMcVSetix9tt6RixtVcnOhb9N+lBxyG/gp22Y77+BDoe4zv4
Fp0gNtaMoxOxvtOm0A6sf/8MOgnr2XIhnYx6VZbTKcgvfY92Yn8KN9CpqG/m
02kY36xddAbqDT5AG2jf9ii9AO1rnKYzMf7bxXQW1vPkFdqF8Wz+kc4W2+bf
oXPE9uFldC7m80q5C7z/6O+ZynQe9u9eDTof6/91XXob6m1rTLuxXpkv0Xux
f0nt6AJY70wfhOvF0h6Mt8xOF8LFg+ki9O8eQZ9G/azxtBdOTqWLsZ7dZtE+
zK/BIvoy1v/hctqP9b34Pl2C87jHpEuxHyu20DcxnvG76QDW67XP6fuo17CQ
LkP/f5+mH6G/787T2hrpb99VOkTsXfkTHSo23g7QYWJ7z79oi1h7ofxF3n+x
W6tCh4udl5+m64mtBfVoK+q9+wLdGPUmtrh4+L9NyKtH
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2Ht4TNf7NvBdgrSCKVFx7GipINVxzGiDXYI4tSOCOA+CIBgVxKFsaRCH
MghCg0GQkjIIok4bKUEwCIJgaBBt1LSUqNDf23Xf672u7/jH9bme9axnHffe
k7rDJoSPKKUoSpeyivLf//jnaaf87z/1f+nrZYOX/b0c4OVaXjZ6+SMv1/Py
J14O9HIjLwd5uYmXTV5u6uVmXm7u5RZebunlVl4O9rLZy629/LmXv/ByiJfb
eLmtl9t5Wf1fa15WvvSKe1lp7xX3stLBK+5lJdQr7mWlo1fcy0onr7iXlc5e
cS8rYV5xLytdvOJeVrp6xb2sdPOKe1np7hX3stLDK+5l5SvaeARxLytf02bG
pVXGLXQorEqHsb10d1iXtjC/Jx3OfOkI5kv3Yb50JPPD6f7Mlx7IfOnBzJce
wvxesGZlvvRQ5ksPY770cOZH0FHMp5WRzJcexXzp0czvzfwxzJeOYb70eObT
qo35feiJzKe1b5hP65OYTyuTmd+X+VOYT2tTmS/j05hPKzOYH8n2M5lPq7OY
Tysa86XnML8fHc982vgd82lrAvOl5zK/P+yYx3zaPZ/5tLqA+TK+kPkDOP7F
zKeVJcyn3UuZT3vszB/I+DLm057lzKcNScyn1ZXMH8T6q5hPu1czn1bXMJ/W
1zJ/MNcjhfm0cT3zafcG5tOFDuYP4Xg3Mp82bGY+bU5lPm3bwnwrx7MVNtLG
NPZHJ/8IW2nTDvZPu9NhB+3cyXp0mBN20913s/5QOGoP69OL97I+nZ3B+nSt
/axPJxxgfdr3IOvTW39mfdp6mPWHweajrE/X0Fmfbnic9eluJ1if/u4k69MX
s1ifbnGK9emM06w/HLacYX26/DnWpx/msD794ALr03NdrA9r6ZdYn/7tMuuz
/Ze5rB8F777K+nTb66wfxfw81qczb7I+2+/IZ336lzusD6tz3axPH7vH+iPg
Kr+yPqx8V8D69PsPWR+26o9YH3aveMz6sL7kd9Zn/r4nrM96ZTysPxL5Xf5k
fXr7X6wPGxo/Z33Ydv5v1octK1+yPmyf94r1YdOW16wPKy/esP4oYd92ylHU
h+M2vgOrsL1+adgKp1zwgTU4ylEWdsCu9b6wDpecfw92wwVNK8BKtLD5QiXW
h7PC32d9uEN+ZdaHP4n3Z304QP2A9eHgCgGsD7+4UZ314enf12T90f9Zf1iq
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
/CZ15fMf8YWf0DrinYLobMSbN6NdcAUznYfxzm8j3/+I92xPF2I8NTrRHrRf
F0YXw8ldaGWByL8k477CWhWZb4BbfSm//4T1up/TRsTvmOT3P5xWnzbBSnXa
jHqZ5WlVWH3yVu4/4m+fyf2HJxXJ/Uf9AnkerIg/fCL3H/Uev5L7DwdVkvuP
/A1N5P7DlyPl/mM8hd/L/YdXnpf7j/4+rcb3iQPx46PpNPTXOot2ov2k+nwf
ZcI9FtM6vP0lnY35jB/J95sL/U26Lt//aK91ke9/1G99SL7/Ea/WWL7/4WGr
5fsf/X36/9//C0U96yD5/odP7JHvf2HNUCLf/4gbgvm9axRWU4bSgYjvmUab
EJ/+LW2Ge42lVWH91pfy+x/1yii0BfGGW1g/Evl1m9JWuH8q5xON+gX/cj1s
yB/XkY6DW0/lemrI90nm+ifCf2yXv/8xnui9cv+R/7F8/jkQ98mQ33/Ir5Eh
3/+Irzgo3//Id2bzfaqj/a4H/B7Nxvh/8pd/z4Yr7+X3bB76S5jA71034oei
+D1ciPhPq/m97EHc7EcXI17nF/5eVhYJ+2fRvvCJd9neAB9aSQfAk0aynhEO
mia//4WVx2c4XhN8sCHnY2Z/5eTfz4XVqNfy97+wflmR73/ES/vL9z/6+90k
7z/iC3pxf6KRXyT/PmGDm67l/sbB2n65/xjPe2d4PhIR97vA82RH/3eO87wl
o77vRp5PB8cfzd+DaXDnqvy96ER/67bQmcJGxY+/P3Vhx82WdDbc00K74I0D
6Dzkd4yk3cLuok50IcY3PZD2oL7nNesXwy2X0cpiMf/RVWhfOGou52OAa/7G
+QYIq4mh8v4LK6tWy+9/tH//IdfPhPapzeT3v7B+aTbXW0V+yUXuRxjio+vT
FsS7xXP/IuEjhdxfK/o/25+OhofL73sb2oePls9/OFC+7zW48SH5/Yf6nTX5
/Yf+yveT339on9ZR3n+0L5FOgzfK9k60fz5bfv8hXidTfv+h/3ry+yQb8YJ+
8v2PeIPj8v2P/lJacr5urPeDfXQh/IPK9fKg/Ve5dDGcMIHrq3wv6v1skH//
E9YG76cNwuqpwdy/ALT/1Ff+/hNW9jrl/qN9eB/5/Ef731/I5z/672bn+VKR
bzby/IUhPjeVtiC+qgLPc6Swo/GXtFXYGhxDRyNecYn8+w/ccKv8+w/G81GG
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
JawMm0MbhdXxC+l6wrbpK/KO/h9z15ih
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-5.52687379240524*^-6, 
           2.7327371299179504`*^-7}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.827322228356373*^9, 3.8273227216362467`*^9, 
  3.8273233730676517`*^9, 3.827330039685708*^9, 3.827330919877229*^9, 
  3.8273321894150553`*^9, 3.8273324034235168`*^9, 3.827333981451068*^9, 
  3.827334896052581*^9},
 CellLabel->
  "During evaluation of \
In[311]:=",ExpressionUUID->"5b1be564-c4bf-40db-b25c-bc4514d98720"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out2", "=", 
   RowBox[{"applyShim", "[", 
    RowBox[{
    "Minv", ",", "deltaTraject", ",", "deltaTraject3", ",", "magnetizations", 
     ",", "nCasseteBl", ",", "device4", ",", "eEnergy", ",", "li", ",", "lf", 
     ",", "lstep", ",", "\"\<middle\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"device4", "=", 
   RowBox[{"out2", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"deltaTraject3", "=", 
   RowBox[{"out2", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.827309464142957*^9, 3.827309509189625*^9}, {
   3.8273095822669516`*^9, 3.8273095827838764`*^9}, {3.8273096486404724`*^9, 
   3.827309656545618*^9}, {3.8273097644950666`*^9, 3.827309820485589*^9}, {
   3.8273100680029783`*^9, 3.827310088409339*^9}, {3.827310222047557*^9, 
   3.827310222733749*^9}, {3.827322995452158*^9, 3.827322997692043*^9}, {
   3.8273236223017387`*^9, 3.8273236228265934`*^9}, {3.8273236595965905`*^9, 
   3.8273236600366335`*^9}, 3.8273301623667088`*^9, {3.827330301388051*^9, 
   3.827330312539476*^9}, 3.8273308417365394`*^9, {3.8273317537026205`*^9, 
   3.8273317543041925`*^9}, {3.8273324788517284`*^9, 3.827332479553631*^9}, {
   3.827332651953847*^9, 3.8273326683130007`*^9}, {3.8273327278340435`*^9, 
   3.8273327298237753`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[314]:=",ExpressionUUID->"bbc154df-6935-4795-99d2-9797bbf46750"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxV3HlcTF/4B/CxJyFEISQhFUIUhY+QEKIktIw2ad/3NO3TPlszE5UQQsge
iokQomwpQghJCKEv0W9+v577x88/Xu/X7cwzz33umXvvOffciU6+G1x7s1is
lf1ZrP/9v+df+2LW//+Hdaf3ZuRE91/UQwVc1VOw0hROISvjPHe+5pCd88kq
MLJ47PHxshlZDWqlN6WhdevJ6rgvXHmrrmozWQOjzQ/qhOVtI2vC0V736y61
7WQtxLBCToyw9SZPwb3Gcz6jZgaQtcG7n5iRNyqErIPTS4V695wjyHrI93km
fKYaQ54BcWLUiO7RcWR9VF510b3YmECehQsKcZWyR8nk2TjlXl9zrncaeQ6O
XFrounR7JtkAYXXlitxefPJcrN9/9aTLRwF5HgK0mu2yvorIhuAqS9W3qUjI
RtizL7fcwDqHPB8r+wd7up3cTV6A353TXlnp5ZONMb9Ea+VxpwKyCfYEar3z
u7yXvBCqNnE6+6ftJy/CriafpaGFheTF6D/9pavGzINkwMX6Fv/BrUM95gCp
HXUnrwYdpu1L8FNJLXuK/lHavgTC6a8nzu0qpu2m8JllaTil4ThtN4XmzIQt
Oc4ltH0pbCzs56xyPknbl+LYsJKp1zxP0fZlqB21ZIFm9Gnavgwft8zoTpSc
oe3LkX5+rWjwpbO0fTlalnScrH9/jrabYZJhWv6A8aW03Qxew8OXXrK/QNtX
QLY8QmfkoYu0fQWyfpp7Gf6+RNvNMcbuyYtlm8ppuzm4aaIf7MuXaftK1P2p
+/5EVUbbV+Jjl+26o4/JrFXYXK+zqVxaQdtXofWRtf7EbVdp+2pEBr7c1jrj
Gm1fjW9p/Hq93pW03QKjjPKau56SORbo79W6xPfCddq+BivW16jl5N2g7WvA
Ksjsykq+SdvXwm3HqtYdoVW0fS0y7/XeuND7Fm1fh42TRk+buOM2bV+H5D/K
VXqed2i7JUL8e6mEBVb3GJaQGT/wGRt3l/7eEhKzpZdnSu71WGaJF1454fdO
1VD79VD+WnqD61FL7dej1urmpYHdZM56qCxyKvolvk/t1+P9iBVs9uwH1H4D
0i5pK2y4T8YGvDbbp/ws8CG134D9/zSNFcc8ovYboONkt+/zNTLLCi3GA05I
/B9Teyss4M2YPHJSHbW3gtesy1qh9WSZFWKmvNa9x39C7a0hXZM3QnddPbW3
htqa9aP3KDdQe2s4fc58ZVxHllnDVON5xIiCp9R+I4bEP3Q08nlG7TfC4/HL
8HI0UvuN+KarPPmc6nNqvxFdSwP0530ns2yQWDf7zfqHL6i9Dbixq7rHlb6k
9jb47Tfg7RPLJmpvA982l6QhVWTWJuR//DDk8pJX1H4TZGObP38tJ3M24er+
jOdnTV5T+024/OBZ48jLZJYt4p+fXzDe9A21t4XOrxjpsyoyxxay9eL3WzY0
U3tbXIeR9+EXZNZmeA/uf/OR91tqvxlNfm8/tnaTOZuxzODujN+id9R+M14V
P1g2bPp7ar8FY8/NWr64iowtMBzws1jo1kLtt6Cd88B5vMIHar8Ffb3+XP5S
TGZtxdn+zfFqG1up/Vbcqj736TDrI7XfiiWvB544e4Is24q5GwJ/rnFqo/Z2
sJ//OShR7RO1t8MxhyPbfB+QOXaovtgdPYH3mdrbgff3ktqR9V+ovT06ag4p
Cga1U3t7HBywMmy9H5ljj3Rcdxr/hCyzx6XPatp98ZXaO8AjLzVyyFEyHLBd
MMtzpdo3au+A3LjnDhXJZJkDeq17Mjb+PzLLEcPXVN3a7f2d2jvizrPeP9Sa
yRxHjPo7Vqhg30HtHcHriB4QXk9msZH74cTUcJsfPdZgY86jWQvVnpDBhtLE
/xTdtvzsMZuNkbMqHgQ0kTls3H1dabtux68eF7Bhrf7gg9IPsoyN2z7zHcvj
O3vcxIaJbvXkwJH/UfxtOH5hhemSI2SNbahLVLExNv1N8bdB4cnIouDnZPY2
aJ1M0O4X9Yfib0N75b6w7nFdFH8b1h7+9i3iGlm2Daav605kev2l+NugMyAg
a8PofxTfCQbOexe/vEXWcILYMWb52p3dFN8J1hE7etuPZfVcF7GdsF4Y1Jwf
TuY4oc5j8vvfDeQCJ5Tdiz0QY9KrxzInFHk/NjHZS25yAnfHlfVQ6E3XWc4o
uZ4wMtefrOGMqBXnVrOfk+GM3JLd6/JX96H4zmjSHzjGvYzMcUaH516z2pl9
Kb4zRg0wHdt6gCyTb4/anHlrfD+K74xv7b8t4neRWS4wXXu5Qm90f4rvggee
jmMbd5HhAotluVZFEwZQfBeoTbo39/AhMscFJsHtbr9mK1B8FyBromdxBVnm
gqKD64pfWw2k+C5I/3iPc/YDmeWKR8739ZfEK1J8V9jeX/Vnn8Ygiu8Kro7+
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
/kn4kZLMOzmIXJIE8/QlM8UjyaVJKBz0a0TIBLIsCXMcmmosp5GrkjCt19zk
yXPItUnQOag+4LsJuT4Jt0ebdJ03IzclgfOobV6gJbklCWYx6m8nbSG3J6G2
wOnCLWdyZxIkJlE/XLzJrGS0Dhlt8zOErJCMyY2RjTs5ZOVkXAhpjuxOIasl
QzRgtCxMSNZIxl6t3VmtuWTtZAy/lTXV+iBZPxmvTRUtz5wgGyWj/5rneQMv
kJGMytU6ezZcJZsnY8Sd568y7pAtkxEQH/XswiOybTK+Lpp+89FzMjsZv1ec
S2l8R3aXxwvXPnzvC9kvGfuvT3Yp6iSHJeNv15p2t17ZVP9k1ATV1g5QJHOT
cTEzVTtlOJmXDNNSq1cfxpClydhxZKZ02iRyQTKiSy66muuSi5KhVHz/kNkc
ckkyDhyvf6NlTC5NRvXyNtkbU7IsGaydj4clrCJXJeN7Z92L/hvItcn44r/a
3XszuT4ZRbzU8RfY5KZk7JxSkv5xO7klGR5945b09yW3J8Oi+ka5Ygi5U76/
eeMCfkeRWVx0jlCrqosnK3DRf2DZ9L2pZGUu0ud8HrmVT1bjYnWGZ3s/KVmD
C9u8Xar788naXIx+niWbc4Csz8XN7KqW0qNkIy76Fr5dPecUGVzkng133F9K
Nufi5M0fmwdeIVty8fjI7WWu18m2XCy5vnvU+TtkNhcTc+xu/rtPduei+dk8
O5N6sh8XL2a8/+L7ghzGhWrB9eKcZqb+XKQ2hd640MrUn4uO+Bfhte1M/bmI
XC9UevGTqT8X4ncO9193MfXnQumfgf7L3mKqPxfaHh5HHyqQS7iYu1KhUTaE
XMrFZd0FrodUyDIuZk1d/TJ5DLmKizgzXrmTBrmWC8sG/hKjKeR6LsodbCIU
9MhNXFgLY00fziK3cNGik7dAakhu58JcICy1WUju5GJ2YOGBwUvJrBREFv5c
ccmcrJACZcvlXXZrycopSEoSvPpsRVZLQUvmM57nZrJGCjo6qwdXO5C1U2CQ
s01dwYWsn4LbXXuGqu4gG6Vg8BdhY7s3GSm4GiJWygogm6dgwes4o08hZMsU
RHl2qAyMJNumgL3vwLLXO8nsFFy8nKcZEUd2T4FV++09DxPJfinYf2u10Xcu
OSwFSyWXO16kkTkpMJkwZnN+JpmbAoUBUSoL+GReCpap5VhcEpKlKeg7bxJX
R0wuSIHezD3cTClT/xSc23Un8uMupv4pSL+x65ZpHlP/FDyZM91BuIepfwr+
7N096elepv4pePMWPsMLmfqnwM8v23zeQab+KZjZ2SxYVMTUPwUu5x+NnHSE
qX8K7vGW5j89ytQ/Ba6BFmZbjzH1T8HH6Kvdu44z9U9F9YPq9bwTTP1TIVC0
0ptTwtQ/FSEvHvhHM1ZLhbnBq2mejDVS0Ue/v/1vpr12KrZGaNzVYayfin/R
3iV/mfhGqTiwezovuJipfyqexp9YJma+v3kq8quU+7sy+VnK4/VO8245wNQ/
FaHShsXa+5n6p8Jiy/BmvQKm/qk49ceb9y+XqX8qPtzq3lGYw9Q/FaZxf9on
MfXjpCLIcuIzjoCpfyrSRNEoZ44HXiouKC5505DK1D8VQ08FuNclMfVPhWW/
Uu+TzPFXlIpRo4yi3Jnjs0Tevtuo7Vc4U395/Gbnui3BTP1TYXXeYkGaH1P/
VNyot46K82Tqnwqeq+u8BW5M/eX7878r44+xmfqnYs0r9oUnW5j6p8IrLT2r
1Jqpfyri7hizLJn+3JkKzqHtzXtWMPVPg9GNAQuPgql/Gs6k+fQOmc/UPw22
O/aO6TebqX8aJqyf7uegw9Q/DYvWBA1N0WTqn4aGS6unZjC/Z/ppcP22vDpw
OFP/NLy4oOpmpsjUPw2d6UsaBzO/n+ZpqBTMqL3/H/P7n4agM2rTpV+Z3/80
lEy7qOP6gfn9T4PCoQ97jV8xv/9psFrdP2VcA/P7n4a0p+ZhSsz5ISwNN8a/
naJ4i/n9T0NMzND3ahXM738aVgVNGW1ygfn9T8PlC5czwk4yv//y/RF869ij
w8zvfxq+ScTrbPcx5/80+IuVxyvtZs7/aSgT3LrWKWTO/2mIvGg+aUoGc/5P
w4N1mo92JTHn/zQ0f85o38phzv9pmHXfd6R3BHP+T8NCb+2A2iDm/J+GuBtb
HyUx5/uWNLBtQnZneTDnf/nnPz21u8WVOf+noS2RPTBzG3P+T8eqmcHxEfbM
+T8d7EmuToeY6w3ldCT8UrQabMOc/9OhY3JjxAHm+kQjHaP6fx3hvo45/6cj
dp12uaUFc/5Ph/7QQs8tK5nzfzomLm6dEWvGnP/TsWz6F7+Kpcz5Px0G8SY8
1SVM/dNRHGAWErOIqX86FNb1MuhgrqfY6RBl25zwnc/UPx2OYdqprfOY+qeD
p/fcxc6AqX86nqpMiSubxdRf3p79eW/vmUz903F91snyqXpM/dNRX9DLZco0
pv7pyFukdvr3ZKb+6bDeFKy6T5Opfzr6evwYMHYCU/90HNKaVecylql/OnpP
5hyJUWXqn46oUc/yvUYw9U+H/7m0L9OHMvWXf97F3eNvMten9em4OPBag0l/
pv7y/TXheLyIuZ5tSUeH9o24h13M9X86uHklWf9+Mdf/6Xi27YPl6O/M9X8G
Dk5hrZ3ymbn+z8CAppPjp35grv8z8PZm/Un1Zub6PwO6N7T4A14y1/8ZMBU4
q7Y0MNf/GXhRa8i7zFyv62dgSMvtZWk1zPV/BmY0q0Stvc1c/2cgd+koN4Xr
zPV/BhYYGCheuMJc/2egOsp1Afsic/2fAe2POvl/zzDX/xm4UcB+yGPuL9wz
UKrVxB99hLn+z0DY8/ZqSSFz/Z8B1/7+dwftIXMycP/dkcUhOWRuBlbz41HP
3N/wMmA8bLnbnEyyNAOtsbtvpnDJBRn4rBPV/TyOuf/LQLLWHZ050cz9XwZS
zuY8SQ9l7v8ycCJx4rvP/sz9nzyfSgUrey/m/i8DqjFKXc/cmPs/+f4cKN7m
s425/8vAxsnrA1TtmPu/DLzfrrajwYa5/5PvzzDpkbPrmfpn4Hjo80PFFkz9
M3BPevZq+Qqm/plIHaGr+96UqX8mFB2rH05exNQ/E6G1nqnB85n6Z+LMiR1r
7hsw9c+EWcrgF3P0mfpn4lGrn6NUl6l/Jt4ctWj6PYWpfyaCWnz222oy9c/E
Qekuw5JxTP3l8Ue+9Oo1mql/JobOjFm4RoWpfyamDBNfzB7K1D8T+iVTfj5X
ZOqfCXXOpdZp/Zn6Z+KigtKGncz9eVgmLp+9uaapi7n/z8TxooR31p3M/X8m
juXAs+k7c/+fidH98TzxC3P/n4k27715Zh+Z+/9M3LzlYK/5nlyUiQW3OctU
mfGDEvn+2xA4R/MluTQTJl8dWYufkWWZcDJ7e8D9CbkqE1oXRDtyHpJrM/G0
O7T7NjNeUZ+JLSe+n/l5h9yUiXgX/eKRVcz4TyZuHDKaPrGSGf/JRN6bLoUR
Mmb8JxMvdy3+9JYZH2FlYYF9iCT7PDP+kwWbiY9fjz/NjP9kQXTyWlHMcWb8
JwtRU612nzvMjP9kwedlruq1Qmb8JwtvGpf0P7CHGf/JgrtPzU27Xcz4TxYc
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
2DTj0WlxTcbc/wOFR/oE
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.02215763098931097, 
           0.013575758901364506`}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
yNqROFrzgPfhBRmReLhx6ZHeGVsp/0hESp9oW+NEto/EZbbmvndHyH6RuDjp
0cDP/8jMSET9YpTaadlQ/pE42XL70e9gckEknn9t2H/8Erk8EsGsr6rLh9lS
/pGIOLDSL3IzuTkSOtLrPunlkTsjMVQY933zK3JPJFT/lR5I1dxG+UfhmERK
yOVQslwUJOofKN2+QlaOwpTY1tn8kdsp/ygEmBn/7rciIwq/V8lLf9lHNovC
nm83TZ3ekO2jsKL0a/f6+XaUfxTe9+b35geTmVFQNb21wqqazIrC2fUPPjlL
7qD8o/Dta3N2jRG5PAqj3cbu35hJro3C9uqZsz/fJTdHwXfYi9lhY3dS/qLj
Gy3HO2lJ7onC7fiXozdwyYxoNPXFBvY2k+WicaHL6aCt7C7KPxppZ45XTjYk
a0dj9gvvld0RZERD0dc3KbKUbBYN2U2jNfI6yPbRCHu8vGO4lD3lH40fWory
7ZPIzGgoOGxKPqtBZkWDPeHrr/Rl5IJo9N/Zs9naiFweDadNLn6TLMm10Yg+
uLWk047cHI2uvO61d53JndEoW5cYJedJ7hE5hSV46ktmxKBd7/LFkECyXAzM
551vnxpCVo5BWmu90bgwsnYMnh/qtOWFkxGDUk9OY3sE2SwGl9ao31eJItvH
oF7dIvhQtDj/GKwb+ucnN1acv2g8Z8047Xhx/jHYd2ana0mSOP8YeN/vy1ya
Ls4/BotvGs/6kSPOPwbLogrO/8kV5x8DuyxBhPUBcf4xuLx397ohx8X5x8Cj
bpoBo0KcfyyKbh74Y1Arzj8WJa2bl9y4Lc4/FrFHresSO8T5x8LO7MIO3w/i
/GNxMCtVjvlXnH8sNn9oNisZ40D5x+LlDk3ztypkv1jwJtj1zlhKZsZi1KeC
ahNTMisWejYnZlg5kgtiEWpUYzQvnFweC385g44GFrk2FvsXpG2bepzcHAut
y8Nfzqojd8biyJ45vzvayT2xMLhY4IleMoOJCRwJMzN5x0FLM4GBz2ZjNMly
TPyzvvslfj1ZgYnd/N+HzriSlZn4z45vWpJIVmdigezsheGHydpMKD6eu3H2
VbIuE9satnZcekUGE3lWD7KNhjoN2piJK3Yr4xrVyGZMBH/+XrvWhGzDhP5k
7bdVvmR7JpIqowPm88luTBzf+/70votkPyZi5OVmDHtFDmOiZGOeruNIZzr/
TASpLJYvWkROZSIt1HRZ404yi4mysZsyS9PIQiYWnelzW3WWXMDEEqlimV0v
yEWizydrTfs+yoXqxYR3vdurruXkStHx2bjuV3Ij1zJRcbIjN4NPbmQi0bx+
tPpVcjMTKyLThZ97yG1M+PqN+t09zZXqy4RhcbfX7I3kbiaKNP8ebIgk9zCx
zHXOtt8nyH1M3Ds/z6nvCZkRB65rga+k7G6qfxz2/pT1tV1FlouDbvJQJd0A
skIc/lz7JrhzjKwch9vv3c3wnKweh6PtJW6HFdyo/nFQDkk5zbAi68YB/BdR
lmwy4pCnotif2kw2jsPV92m8WHl3qn8cwl8tbxpmRbaJQ1vlpy+dArJ9HALi
Rus1dJDd4iDYKqnop+JB9Y+DNWPZK74bOSwONe6f/vw5SWbGga1dbOT/g5wa
h6lbFBY2r/Ck+ouO53qJ5d84sjAO9qFqZ183kAvioLj7gHX0KC+qfxyWL8ta
edmCXB4HTel4lSIBuTIONgkNO9FBro1D8E7FZ2xlb6p/HEyK4nJKnMnNovmR
FZMLi8htovNrNwrZH8idovObsYgdp+1D9Y+DklXNLV4QuScO+TE1vc8qyX1x
UMvOagn9S2bEI0ZJWT9M35fqH4/NT64Y/k4hy8Uj3GtxjMIdskI8dI50BYTI
+FH942G5ZIW/0Xyyejxc5DojUi3I2vG48rHGcnUoWTde9Hvle7l3Phnx6D26
YZl8Hdk4Hj1jl3+Z2U02E9nf5V7+aH+qfzwuDjxY7reYbB8PLS01sOzIbvGA
VdSdDwlkv3ickl/eFFhMDovHoolv9OVbyMx4LPsx5WTZb3Kq6HiXxibqqgRQ
/ePx4dXbUfz1ZGE8rI7dcSzzIxfEw71uvXOggFwUj21L9F3vXiKXx0Odv96r
4hW5Mh7nZ26WmTgikOofj0tTc5XeaZIb43H25p0QdQtyczwS1ApP3Qwmt8Uj
Z/3OiU1Ccmc8ri/ZXaFxkdwdjylvOg++7CD3xOPkmsCtfX/JffHI19s+y3da
ENU/AUaS3/dsWkWWTsATyy9nDu4gyyVgVMm5/SFRZIUEbOpNXPBsD1k5ARZ5
PSrvK8nqCZAIP2Bx6iFZOwEhZUNMDL+TdRNw2qtfrlo+mOqfAMNaCZ25WmTj
BLwd9UTmuCnZLAGL72tN2OhBtknAimkr1LRTyfYJmJdntcbrKNktAY6aLuen
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
bJaGamnNn2cDyTZpMK6e+RSRZPs0uJdNS4pIILul4Xr7kXznTHH903BR4uuu
Ab64/mn4qXl76voCcf3T4JHl7LiyWFz/NNx50Nbbck5c/zTEnV86g3FVXP80
/G14mV9+V1z/NMwXREQ1d4jrn4btFUNKjN+J65+Gm8tMdkj0ieufhp1T5T+/
HJpM9U+DbPjWJQ/HkRvTMIw9z7h+Brk5DU3xvQN8LXJbGpYMeRCks5LcmYav
rc/4CRvI3Wk4ebN3jtdWck8azi4+GHXfidyXhvxel3P5vmRGOl75Lqg/E0GW
TsexCWdnDk0iy6Vj7UHdZwnZZIV01EqVHlEXkJXTkeaz2uTLfrJ6OlatvTPw
/AhZOx12X2urfxeTddNRVT/93YZTZKTjQNaMTU/Pko3TUXe9Q67uAtksHYlX
I/bLXiLbpCP9lfWklhqyfTq8jjQoaNaR3dKhotP5YUE92S8dlfOHFPZeI4el
Y2R5yv7MBjIzHc/V3PsYN8ip6UiK319kd5PMSofxNkFf4S2yMB3bN6/+2d5E
LkiHG/zOMu6Qi9IRyndYN+YuuTwd9h7mAtHfcap/Orb4jLG8KXZtOkr83Kbt
uieufzokz4TGlYndnA6dwxPTisVuS8eKj4ubDcTuTIeG25s5fuLv607Hv7I/
vrPF8XvSsXWWj6XzbXH9RfUYsaFWQ5wPIwPNvfXK4Y3i+mfg+tOYN1vE50su
A5/vZznduCKufwZmhZf1tonroZwB97UrbFjieqlnYN2rG1f7K8T1z0BITfRR
zXJx/TPwrp2TpCNeD8hAcNNx/WlHxfXPgEXfwMY/BeL6Z8Bg7jrv1r3i+meg
r/mHX1muuP6i+SMXHslmi+ufgWns+lz/THH9MyB1s+KbdYq4/hnY2yJrqxsv
rn8GbkiPHj8hWlz/DMjkHrvdHSqufwbap87QOBUgrn8GhsU9ne/tLa5/Bkw/
rtg11U1c/wxIlrF2X3UU11/0/W/WCR12iOufgc2tq3f+FvdnbQZSVjr151iI
658B7TnFkaobxfXPgKz3t8oLRuL6ZyBvw3Yvc31x/TNgbP5Y4qOeuP4ZeOhV
tiFrqbj+GRBMluxdsFBc/wz8SFva1TZPXP9MpKUYZkSrieufCenp4YcUVMT1
z8QTpTEmBUri+meCk191XHqSuP6i+b/6DxjIi+ufie2SrXbrRorrnwnFB8v4
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
SSFZOQ8OMgt9XpSQVfNgNXLi8syzp1f/D58KmSc=
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV2WlYjO/bB/CxJ1sUyhqSsoYQwteWUKSiZGlRCaW0l5Zp32umpmYQipA9
hCQUSfbIkj2EIhQhhGf+x+87Lx5vHJ/jmmvO+7zPa+uaQQ7u5k6tBQLB/PYC
wf/+/+9fwwzB//+Hz74XYlbHP5/2H5UgttbqfyT7L62CC6Uv6uYad5/+n9Wg
uX/4QbM7A2h1OF5ptcpUW4fuhzG9tqs89RhLa6KrKKnnzduT6MF4K13mbjxu
Bq2FXTO0ppnfnE1rI2PMga5bo4xpHXwL76mid8mUHg4MUEvJubSEHomPoesu
JdZZ0qMxb52m+WcLa1oPPhvvqWxos5Iei2dbp9ZmNdvS4zBL63OGRh8HejyO
51b6rlnhSOtj59xZn0KLnekJeGo4Jq5k/jp6In70zJsR8mMDPQkTj7ut6nht
I22ABpUFT59We9CTEefbo4eXuyc9BWNPdpM1qnjTU3GzvPRR+GUf2hArBTmj
LJL86GkY1mGedopLAD0d92d8P+tgtZmegXgHu8jfy4NpwHzNXfUYj9D/LARa
bJef3HJTyPaZmLU71bX3xzC2z8SEtedn3+sVwfZZEPdX2vhuQSTbZ2HdVpmh
S1wU22fj8FSB68a70WyfjYuzx77orh3L9jloo20sXB8Zx/Y50H7XLBF9jGf7
XPS6MM050z6R7XNRNuvN473VSWw3Qu/uQyeVr09huxHSJi443lkoYvs8TEha
kLncTMz2eUh6932olXYq241h7zz6V/fWaWw3xsc1TXsyXtOC+Wi4uq+o8ZqE
7fPRxbpHV72CdLYvwO5FJctWH8xg+wK8f6a0MC5HyvaFeBYefu/cbhnbF0Kt
f58nSvu3sN0E9uKr7n75W9luAh2nKP9eZdvYbooS0auaL88y2W6KBVsj/TVa
trN9EYKWjp0u1dzJ9kVQd0vLKhqaxfbFuPUwer7zeVq4GAV9mzsttslmuxke
2DYvCv5Jwwza7ou3/di2i583Q2/XFSalM3f/52IzNO5ber7uPS1Ygnsex602
SnPYfwlmfB5pZT1vD/svwRpPNc0jv+jiJbj7q1rZ99he9jdHUt5Qm1Mb9rG/
OXStyrV9dHPZ3xzNIUWigvd0sTna3+4kiz66n/0t4Hw+ft4bvwPsb4Gy5uEJ
j2cfZH8LNO917e6qeoj9LSD+EZK+8y0tsMSekD65gecOs78lbB+fOttadoT9
LRE7uYfONN+j7G8J7ZKrab1H5rH/UsxQaXn9aQeNpegQPePDXtVj7L8UZ3oP
aTUrni5eijnKs9dfbH2c/Zch/ds+k+HBNJahw3q/Y5t/0sJlWJlnHl7gd4L9
l8Eze1fSqx+0wApDu2tv+B2Qz/5W+OMVntv2Ly20wsRDPbP/RZxkfyscL3OJ
+9jpFPtbQ63koOvtdBrWKD1vobV30Gn2t8bWi6pWnkfpYmsseWbgqz+jgP2X
Qyso4mx9BY3lsMmeorXN8Qz7L8fe4WM9Zvyii5ejU/vYno/Ehexvg7fuc6et
HXGW/W1w5OuVitoyWmiDr5HrN6x0LGJ/G+jaTDcqbnOO/Vdg6MkVs3vsobEC
p1sPrF1sfJ79V+Bor/gFvh/p4hWYfmPPqHDJBfZfifGRKz+fHlDM/iux1Hhf
Un9vWrgSegmjt7lfo4tXoo/zBuHBQSXsvwrDskasuBVAYxXmnbzV5v5dWrgK
Vf0i2hSNvMj+q7CsyxZRaAwtWI26S37ivq9prMaawMKEhBmX2H81hE97bb+W
SRevxtTee6Mqf9ECW3ycfTg9a3kp+9ti89cl+SPO0EJb7Oqzf8lGjcvsb4vG
5zdW2wfSAjtYnv646M8TWtMOn92WtJoyvYzfZ4dJ9+squmbTdnaYoSYL82x7
hd9vh4is0xNXuNBZdhioVbj+/A262A4ftOo/icaW/+dqO7RTOfu6LIMW2ONz
px8ZFi20pj36eU6P13W4yvj2aDH5FzulnLazR9TyqV5+o68xvj2ECWvNKiR0
lj0GLisar/+bLrbHm6pdE8X21xnfHt8Hq7rcu0ILHPDa1uZu3agbjO+AHpXX
3IrSaDjgfkNRu4k/aTsHNPcxwozVNxnfAQc65YouXKSzHNB1pMeg7dq3GF/e
f8Dvp0VxdLUD6neMtmpdTwvWILveoXKx6W3GXwPPyrLh0YdprMHM5XbrZrWv
YPw1OKxn8EVtAi1cg9LZ1q1119BZa+Dmtd7AVUQXr0GNad/Q60V09RrMXzZG
ZXwtLXDEtAdvI5N73GF8R6gUmlSWT6XhiO2PzOxurKHtHHHLz0MtIp4WOmLu
aR+XB0fpLEeUlvnHHq2ki+VeNt7nxze62hHxswePlPa6y/hOUJr+6o3fBFrT
CQHTfcwjzGk4wf5Mvy+73Wg7J1j2ehB0OZoWOuHq19CV97fTWU44NuKs8aXj
dLETRi0f0S78Ml3thN/pIcuVHijiO6NDxMFh5jWK+M7QEA6/b9+giO+MkwXL
VGf9UsR3xr7dp9opta5kfGes8lz5/X4HOssZZwaW3n7eiS52xgJLC+f1Xelq
Zxy5UP/lcTdasBZ5kUod81VozbW4hjKf3d1prIXlFJE4UZW2W4vtwSNuZfRW
xF+LimXu6hioiL8Wp75OHuo9UhF/LSZt0pmyf6Yi/lr8O5ia3tpBEd8FEz6X
X/EVK+K7IHtov6NN9xTxXbDkxN/gwHH3GN8Fbaeemt/+GC10wbDBgasnWd9n
fBesUxrou2HMA8Z3QcrhxtHjDB8yvgs+Ob6bOkVYxfjrsPlw3O6VPx4x/jr4
v561933GE8Zfh2Gxax58X/SM8deh4/WLh626vGD8dWjbz3iln101469Dw8nM
wrejXjL+Ogyo0bj1pI6uXgev2+ett4teMf56fPs19sLcga8Zfz0q34lj3NJo
rEdT2ykbp36g7dajw6UUt8dDaxh/PeKVJuqNn0NnrUdnNZexu+bTxevRekWy
o5khXS3/fulG9y9atGADlngknvzbhdbcgMoFf0yOtqaxAQ8a9nxV6UrbbcBA
R62Hq6co4m9At2tXU46LFPE3IHVKnqBS/Q3jb0BpaOejeo/o6g3I0jkxvc3D
t4zvCoM7wpDoXrWM74ou7rZ6NtvqGN8Vym16enVd94HxXaGe8UxSE/GR8eV+
+al3UeNnxnfFuOM2Bf6rGhnfFdPvzdvh+O0L47ti94IpVSlXmhjfDXY/T8uO
PfnO+G7YOSHVcufkn4zvhsonPZSO1P5mfDd4F2yNHPf5L+O7YdqT0wbKuq3+
+7s1yw0qr61GjFVu85+L3fBhzhRbr77t/nO1GyYffaJSv6ID/87diKlDiqud
rnb8z5obUfW+6/EIu87/GRuxsiX5s3L/bv/ZbiNcC7arDvyj8p+FG3Fm+4mF
6QE9GH8j6h+G93Vtpcb4G+HxbknzmNSejL8Rx+YPfumr25vx3XEtOtHiSak6
47ujk/cHUZN9H8Z3h/dT/8jFf/syvjvWpfVwcJX2Z3x3XKrwty8bPpDx3eEi
vhX8zUaT8d2RELJ+5pK+gxjfHVMvXVgiuk8LPJB8xvJV77jB/1nFA+e7HHuY
M2EIn8cD2rUlooVPaD0PXO/+ydojUIvP54H8/pOnnVcd+p/NPHD1T9U+zVza
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
aUEK7pdFbz30klZKwbN//oHZqrGsfwqSr4Z0iJhLq6dg2l8lmbkfrZkCzfdr
XnbfT+uk4PNZldaXHtN6KfjVNCnFpXMc65+CpfvvhbWbTiMF8cNq2m93p41T
0Kq//5hx2bRZCqyGLEy6cpe2TsFU3Z7fVreNZ/1TMNjoqP3PCbRLCkY9ru0h
XUt7pGD4V6WSSVto/xR0UHpQ+vgaLUzBiEWaI0Jb6NgURA4uPzZkdALrn4Km
+iuny2xpWQp0vZZMcBbTWfLntaq6/u8inZuC0vq7H0VNdF4KLju2jOytncj6
p+CgRUKqyIouTsHIF+Of/46ly1NwMnlKlHUhXSF/3nY6iXs/0FUpKKkq1Xvb
L4n1T8HzU3ezei+ia1MQOy3i2pRQukH+PrpcWrg4j25OwfhPVu6WL2mBCPOD
cibN75H8n9uKsOjSNu+Rs2klETTOxVe2eNGdRXCer9r+TA6tIsKYf4bfbe/T
aiLM+6DevrFdCseLCF9s1s90nUj3E2HP8TmSu860pggtcRsfD5XSWiKElTu+
cblC64iw+PdQz50/6JEiPL2t3eOdqojjS4Tzpt1n/BlB64ugPqKHZ885tIEI
Rol/5o9fSRuKsCZVvcLGm4YIHWclbxQl0nNE6LX6+92qHNpYBOmAjeUG52gT
EXz0FyidvE+bieAxN6ed+SfaUoTD/Q5cUO0g5ngVwfVhw74/A+mVIuhEKKX0
mEzbiRBxcX6mpTntKELfaYuWXd5Au4hgEWa03ymKdhXhQvTFxgk7aQ8RphVO
7zbxDO0tQuwik3CnStpfhEdPfsZd+kgHidBpWt3cxUqpHP8iNFY9u91hCB0p
Qrubqpb10+hYeT0PZQ1ssaYTRdiW5JU10ZsWiaBZ98NpWwotkb+/+Hf9hh+k
ZfJ8rWclvyqjM0VwiQuXlL6is+Tjw7K7asVfOkeE7PDj9W37pnE+ifDt9pvP
DpPoQyIcuOV9ps6CzpPXO79GJvOg80UwyQtZtzGJLhAhtbNV/LoDdJEIat9O
v465QheLkOR8S3Clhi6V5++8e4xWawnnowjLTsi2ZQ6kb4iQvm2l86hpdIUI
9YU1Rypt6HsiDGnxTUv0p6tE2O4TPm5pBv1UBLOu744Pz6erRXhX7zVf+S5d
I4L9unWLGj/TtSI4ti1b/axL+n+uF+H0HmvPGyPoBnm8sRX1RfPpJhGifPvu
OLyWbhZhy8BPR7ZH0S0iXNkzUZS4mxaIUSLeVRNQQrcV4+namE1OL2glMQ5c
ONh98R+6sxjnLqvnTuybwfkvRvg+iz79JtNqYow84rTw3zJaXQzLnfYa1d50
PzESlz5Ycz6V1hTj/fTu7bfm0VpixBd0ued5i9YR46zFlkTjenqkGNNmjL/V
R1nK+S9G6p2wdnXDaH0xYjLS7I/PpQ3E2KWXd91nDW0oRv9trd6PDaMhz686
cOSbHfQcMYr7m9clFdHGYrhsOx43/DFtIkZgidK5Mz9oMzFmqv7NmdJTxvkv
Rvf1hh8PjaOtxfBsaXtNxYxeKcbU2271zm60nRiF8/9558XTjvL3sftP/ad9
tIsYE9tYLNa6TLuKITXvrWHxivYQQ+lp0oqQf7S3GKKS4Kv7+23h/BfDd7py
waPJdJBYvt+1a6dqRQvl9StpvmPjTUeKcdfv/LhTYjpWjNUPPB7rHqUTxTj9
0ffFmRu0SIyBlr3z172nJWL8G1M9yVBpK+e/GL2/L30wXpvOFENze+Me8zl0
lhjVvcKDtzrQOWJ4rHr3vXMYnSsGLvl6HtxJH5K/n9PT2/idp/PE0DL9stzj
GZ0vhqA+7py0hS4Q4+MMm+4f+27j/JeP9xVXat2n0sViNI+szR64gi6Vj6+x
xr6/A+lyMW5s3RfQeht9Q4wF+ZPE48/SFWL07djaKekJfU8+f154zevaQleJ
sTS3g05+v0zOfzHmnM+PD5pGV4th6rUy2nE1XSOG+Yim+y6hdK0Yi3/9+xWV
RdeLcU3DalNBCd0gxs0p/Z+1vKKbxDikXTfcrO12zn8xtuaW7js6lG6Rfz7J
vFl9Hi1IRd/CF6rxLnTbVLxObD++VTytlIrhi8tLgg7SnVNxd/Y2y983aJVU
PNYQ7tv8iVZLxdkI8ZaWbjs4/1NRKDUbHzyW7peK70LV4y3mtGYq3lX9iA/0
prVSERoR6Po9ndZJxbPlVyZ4nKZHpmLIaI2ad1W0XioMbG5ErvpF66fioOlk
3Tt9d3L+p+Jf481Hs6bRhqlYsDoz7vhqGqnYvaBDR00hPScV1i2vf8dn08ap
0PUtv/nlIm2SCoHkw+5lNbRZKj7PebTvcesszv9ULJtZtjdalbZORZKlztrR
WvTKVJjZS99W6NN2qVB+PVbDbS7tmAqbwoyfrZbRLqlQO/FSkuxMu6Yi/+IP
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
46b+/tPrb9KO6UhcX/yj5Rntkg6p78JTiZ9o13SYPfVU1/hHe8jf36ynjtnd
DnP+p8PC9GfboZq0fzrGV08I3a1HB6XDcMQsn34zaWE6vpe1zUxZQkemI6J8
8JkWezo2HbmNR/ev8aQT0zHjq7d1aTgtSkefZ52OD0ijJenQHxSQ7bmblqXD
Oj5YqfgEnZmO7kv/XWhfSmelY6b+ie1G9+icdCzAutDQGjpXPt6ujTI91kQf
Sofbt7ivT9oe4fxPxzXzj3b/1Oj8dCTU/QzrO5QukI9vo/IZehPoonRcbJcS
M20uXZwO7cDPlrOX0qXy9s17z810osvTUZ21st1kH/qGvN1Ef5duFF2RjjZJ
FZPU0ul78ve/Uzv0Zw5dlY4peUeHP86nn6bjwu9p10+V0tXpyPq3+m7KPbom
Hc570uKdaujadJQdfzPMoImul78Ppy+3OrQ9yvmfjkmzvLbfU6Wb5O+n8/fD
O4bQzekYaper4TyebknHz+9uP4bPpgUZmDJroO1Hc7ptBjI0AjccdqCVMrC8
wnbcBk+6cwaGebtd1Q6nVTLw7J/t/GoxrZaBZReKy6XZtHoGCpXnrDQ9RvfL
wME5bTRaldCaGWjVVU31RAWtlYF7eqdXrammdTLwsX2Sco8GemQGvs20H3nh
H60nf/57SetPdsjj/M9AXNu0uPhutEEG3njZ/V7dmzbMQOLpP2XjBtLIwFPR
0a/thtFzMlAnGxxbNZo2zsCqMUnxBybSJhlQOrRREDSdNsvAubBrDSZGtGUG
Ort/s+2/iLaWv6/1+yw+LqVXytunbK8oWkXbyfPZt+BJghPtKH/+m15+Nm60
SwZWtlq8X8eHds1AvmmAz/cg2iMDx5X/Vl+KpL0zEK459rMokfbPQJm13e5V
EjooA68agwXDM2lhBi5tTVP+vpuOzICjap/SkoN0bAZkL0+OSTpBJ2ZgsM04
M+uztCgD9/O36wy5REsy0HbJjKKP12iZvH1dXeeCu3RmBmwvtx4Q/pjOksd/
7Ne48BWdIx8vwnOxPd/TuRlopzfs7fNG+lAGhKNyO+X+pPMy0OZXwC+PVsc4
/zOwa3J1/uSOdEEGZiW9MGzdnS7KgGjKP8k1dbpY/j56JpxL1aRLM+B8YtEZ
Gx26PANTv8niBuvRNzJwxm623vtJdEUGvg/QPnxsBn1Pnu/srFYB8+iqDPTe
YDcGi+mn8uddv8GggxVdnYGG7KoBt1bTNRmYLXZ7JXGmazPwyFM5csVGuj4D
NeIO7Qb70g0ZUNXo4FwbTDdlYITBudwjUXRzBr4mq9/0TqJbMnBe/XHllHRa
IEVPUcM5wXa6rRSazZ8Sy3JoJSlK++yemXiI7iyF+tf8p0vyaRUpAg0N7XoX
0WpSTJ74+vrTS7S6FC7+Es1d1+l+Umx5tNt2bSWtKcVgo2FxI5/QWlLMXtpx
e+MrWkeK8kkxmafe0yOlKNO+G7P5C60nxa2cSlv8ovWlGOR8Q6td6+Oc/1Ic
bzj28GpH2lCKrIpd/sndaUjxvMiyg4UGPUcKbaUVkb0H0cZShP4Y9uWJDm0i
xbItJmZZerSZFN30Tu1wNKAtpdhRZvpcB7S1FH8nDu32cR69UgrVh7KxxxbT
dvL4hWuMfKxoRylmClJMJ9vSLlKY/HAw+uNMu0oh8Bo+rmQj7SF/X8oF3aN8
aW8pzrX/WGMcQvtLETKs16HO0XSQvN6yMWsrkmihFE+6Pe8lSacj5d/X8+lZ
q+10rPx91tkt67uHTpTCsvbH2+eHaJEUJ1bOcNuVT0ukmNZYUOtURMuk+F6s
vFy3lM6UYnzq9Qv11+ksKczSJ/bPq6RzpCiJqPHwekLnSrGhLqdw4mv6kDye
36XfP9/TeVJYJMfon/tC50vRKjnKSfiLLpBi4r/8pNmtT3D+S9Ha/faR9sp0
sRRtB70rv9qdLpUieYjB40QNulyKFk2914sH0Tfk72drQE0PXbpCigsqps/v
69H3pIg+0vaOzICukiJpcmnRCtBPpSjOsM4eYExXS6Hi7h/6cjFdI0XO6btW
OVZ0rRQD7r3QXWtL10uxb673N921dIMU209YFdZvpJuk6LGoyf+oL90sxfyu
eeM8Q+gW+fu48eCtfjQtkGH8xT7pP5LotjJ8ykmaXphOK8lw41b310Hb6c4y
TLszPHzGHlpFBof8kf1aH6bVZOiiN/1YaT6tLsMQjeEzY4rofjJMn2d6Y34p
rSnDvMZN5p1v0FoynBK43btVSevI8KxYz1z8hB4pg92qsusWr2k9GS4NGzOz
1wdaX4YD391OVH2hDWQo0G4auO0XbShDYcGMmFWt8zn/Zci5XPp+oDI9R4Z7
Z+ctfNWdNpbhfMnJfTkatIkM7W/F/nMeRJvJYLpT00JXl7aUoefSpbs+6NHW
8nzN4j4eNqBXyjD8YKi+B2g7GRZUf/EfZ0w7yrCq07TCpsW0iwz9tz9vPmVF
u8ogdF+gH2BLe8iQvCzabepa2luGW54Ru/9spP1lOPMq6MEFXzpI/j5P3G4f
HkIL5fmHFevPiaYj5fkMvWjbPpmOlaHP3vax5el0ogynHbsfjt9Oi2ToJla7
bbKHlsjQ8VnVp66HaZkMT5y/K9/JpzNl0K87pZVWRGfJoDxgu+HSUjpHBpWY
B+a9b9C5MmiP27T2USV9SN5+/UPAtid0ngwuR0fEr3pN58vwfp7tloEf6AL5
+/x2fN/LL3SRDDfz9fJ3/6KLZXjQzfO8U+uTnP8ynHO6eXmYMl0uQ0V7m2t1
3ekb8vql6d04qEFXyMdfYq/rboPoe/9rb31ljC5dJYPa7fMXGvXopzK0sVt0
8oQBXS3DVdNJuT6ga2QIj9+wZZIxXSuDccvlmJ+L6Xr5eN4R63nWim6QIatV
tk2wLd0kw1grYMZaulkGX2GaVit3ukWGY2diOlzypQVb0Fv/S21kCN12C/5o
6l41iqaVtmDCxW65Ssl05y3wTNoYdS2dVtmCuPeP7BO302pboPboq+GiPbT6
FkhOHuypcpjutwWCA/b1d/JpzS3oUexfklZEa23BdWVIlpaenPF/Fh4QQQ==

              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.011142130983864632`, 
           0.07308269899480752}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
9fyHdzo5P7/Y++cMzj+A+Owgz38BPMXD9VtiV5MY1qcQ8z1vZz2D2I+NddTz
H/sZ2Vg9/9Ml3/x23K9wsWNkL+6nTfz/7zvud6TYHp7C82AX60um8PxEi83/
TOT5coiD7frzPMaKA+5m+7j/8OLf6Xix88qa/dx/zKfo5QPcf7GvaCWti21z
iuhksfv7mge5/2if9wqdivh5dWkD/Z3FjM8QW6O30B7kb9GJzsJ6Gh3m/Lyo
3zsv0Tno/5+xXI8P65mZre4/vPIk62OKPT+p54cf9Qu/x/oGxK4dD1n/AvT/
rJj7Y2E93ifcv0KsZ9yzdBDtZ6txv4sxv2mx6vt3toz/dDjPS7hY25bD82QT
GzM0OlKs77iu/j4ktr/4J+9ftNg7vyPtgGv6eX5jMV5BOu3EeN+k0vFiZ/f1
tEtsBZ+q5z/y7ZnP8XX0r9WJ80lG/7oN1O9N5N9VhfNPFXs2blLvf/iZrlx/
BuIH/q7+HoV872xivbJQr4+HqN/niPfVZr1zkG/SddqHemZ5uV/5YseZJO6n
KXYfq8T99ottMUfV/sObk3k+ClC/+2E8PxbWfyqTLhQHmj6rnv+Y78RxdDHa
Gx+jtTnikSV5XsPh+U1om9jevRMdKXYfULaLtcav0NGIjw2nHYjfe1rdf7Hr
bBrtFHt+iKLjxd5ZW7gel9hY6KATxfqzOayHjvawKnSy2LktjfVzY35vXmO9
UzF+RBvaQHyPVer9Lzadj7h/HozXaCCdhfX0Oan2H/EPXqdzkK+++h71of9v
6vdjPtz4ivr9Co+ZRfuxvifqez6A8a+E0wUYf+dP6vtfbF3/Vj3/Md8ZP9BB
xA8oposxfo26HE/7SPrXGKzuv9hK307bxN5WL3D+kWj//gP1+1isH39ER4uN
0rNYD4fYnl6J9YvFeCXV7wkn4juo7694uPhH2iXWbqdzvxIx/tna3F8d88/Y
Sycj340Engc3fOoSnYr83fvwPBlYzw71PM6AZzbhefRg/LVz6CzM7/WvaS98
oxTPew48pJF6/mP+X8XR+Rh/cAJtYn7LVbsf/Us1pgOY75gydAHid6vvQQv1
CK5Q338Yr+tb6v5jvBf/Ud9/mN+lbPX9lyHrC4ujw8Vag2uslw3tgRQ6Ep5e
hraLjQ1rWP9osX1PU9ohtuqc4v7For3rMNopNheWouPFeq9ctf+Yz6V+dCLi
4yrSutj76Xmep2TMb++ntBvjN51Mp2I+7/dT3/+IP/IGnYH1NO6k7j/ybUpQ
9x9+qp4HXvjSDPX8x/i7ctTzH+t5dJXOR/9r1Tl/E/3HDKL9yL90Gx1Ae+2S
6v2P9ZzqT1sY//V9dCHWU/VF1j+I/pp6HhZjvMVXaW2utCe/rr7/4eeXq/2H
K95T+y+2P27L82IX6+9l0NHo/6K6Tw6xt6Gmnv9io0Ij9fwXOzf3UM9/tHdP
pl0Yb/lkOhEeMIPWxdqa6XQy8iVOot2Y38IRdCrGfyWRNhD/tAOdgfEXvKzu
v9jq9by6/xg/6z7X50V79lk6B/UJbFO//zD+IvV+zsd8Zier7z/MZ6i6f37E
a7XpAMZv/o96/yP+1g+0hfjrR+lC9C/cTAfRf24WXYz1VZhHa/Ok/mMMtf9i
87Vpav/F1nr1fR8p1pZOVfdf7D2Qpr7/Eb9lBu0Q239VjhXrVVV/J/JfVc+X
ePSvr753XBi/ztt0Ivr3VudVx/yWV1fvf+Sv+Zt6/4uNd4/TqZj/3YW0Ac/t
S2eg//0o2oP53rvK+5WF+SSspL3w92/TOeg/xUb74H9Oqe8/5Euao+4/4hd0
VPcf69nzjLr/qEcdP58fBYhvtYi2UI8lQ9T3P8Y710Z9/2O8T+rQxahPZ/U+
1uaLu76gfv+JndtrqL//ob1zS/X3P7HXGKr+/of+o9TzNlpsX/2z+v2P/v/p
oP7+h/F8G2kn+o+JVM9/sdVvEe2i1fdxIsZLWKHe/2KtRh21/5jPSXX+3cjX
rxnvUyp8Y496/yN/Sit1/9FeJ0/df7SXrcf3bxbyDZlPe+GlP6r3v1gf3JS/
B32Y7xM3nS82qq6jTazvyhHaj/lfv0QH0L/yNboA42/8lrbQ/uAUXYjxxuyk
g+iftYQuxnx+GkdrmbK+3Z3pcLH+enXaJjan/6K+/8XawH3q+x/x3nnq+19s
3Omrvv/hC/+hY8XeW3+r5z/G83ylnv8Yr9V69fwXO1+dop7/8O6e6vkvtu43
Vs9/tJeqoJ7/cLWg2n/kG3VR7T/W++5B9f2H8SZupj1o19fQWWi/uUQ9/7G+
U4vU8x/jf79cPf/R/4L63sqHXXvV8x/9TxSo5z/qk6LelwG4xyvq73/o/2ik
+v5DvU7mqu8/+NTv6vsP87+hvi+LMd71LFr7+F+bi4Lq95/YfqSr2n+x1fZz
OlJsXA7j30PsiE9MoqPFzvl5tEOsNy/Dv7fEIr52X9qJ9vqf0fEYr8lt2oX+
8bUPcf/F2ppetA5PT6OTEd93Fe2Gj2+jU9E/ZQ9twK/n0xnoH5lLe+CWS+ks
9H86kfaiXmFv0DmoV1Rl2if2Jn/L9eTDjuW0ififetB+5KtUig7AznzWswD5
746kLdTnw5p0IfJ3vaDuP5zysbr/qHf4m+r+fyL5fymv7r/Y+uGS+v0vds7/
XN1/sXfKdHX/xVp0krr/YvO5jur+Y/wFTdX9x/jVGqq//6G/pn4vxaN9Vizt
QvvRbnQi5rNnNK3DDZfSyei/4b+0W2ykaFxfKua/vj1twCXn0hlivdtF2oP5
R9dTf/9D/7cm016Mn3OKzkF7c/X3Rx/iG45X+496XTui9h/xByvyvPjhbjod
QP+IzXQBnPWAtsSel180uf9i93et6CDqWSqRLkZ8twm0tkDWGz+XDhe7Pl5N
28T2HZvpSLGv55e0XeysvJ+OFnu2KDsw3o3ddKzYvXAL7cR4u9bQ8eLAyAza
hfz3x9CJYm9ud1pH/toN6WSxUfQM7cb60naq+w9/3k/df4x36yn3IwO+sI72
iLW6negs5PPcUfuP9uuL1f5j/OsdaB/6u/5S73/M71S+ev+LzbyZ6v2P9UYn
qvc/2gtbqvc/2odHq/e/2Dqi/v5ciPw/NFT3H/2HOdX9x3zO6ur+e8TTMumS
Ymu1+h4JR/s7JbiecmJtT1faJjaPqb/HR6D/+/fpSLH9SDfWLwrje7fSdoxX
uhL3oy58awodLdYb3qBjxMFh9dT5Erv79aWbYfxRmeq8iQMRB+nWmO+5u+r8
iX31XzwMx4k9SzvR8Rhv42g6AfnuLKBdiP91K90b7nmSTkT/vdfoJNTj2j1a
F9sy/qKHIt/Kp3Qy1huhPBrzr1xMu9FuFdEpyHf9Kp0Kb/TTaWz30QbiXcvo
dLGxfwqdgfXcfJfOxP5MbkN7MF5ELXqJ2NsljM5C/49vsd6rMf7bJ2kv1vuc
j87G+iqtoHPQfjGdzkX7lxNpH85bteF0Hs9DEp2P+n7Vh96P87D7bdpEfG91
fo6JXYFBtB/r6TGOPoPzcfdDOoD2A2q+F8SOM+r5WID11/iWvor4LzTWx0I9
hjSib+F8RA+kCzHfE0vpIvR/GqCDaJ9gOwI/xPp39aKLMV77lfRj9J9yk9YW
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
w3F0XXHh7K7Wwf8Dh4ePAw==
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2Ht4TNf7NvBdgrSCKVFx7GipINVxzGiDXYI4tSOCOA+CIBgVxKFsaRCH
MghCg0GQkjIIok4bKUEwCIJgaBBt1LSUqNDf23Xf672u7/jH9bme9axnHffe
k7rDJoSPKKUoSpeyivLf//jnaaf87z/1f+nrZYOX/b0c4OVaXjZ6+SMv1/Py
J14O9HIjLwd5uYmXTV5u6uVmXm7u5RZebunlVl4O9rLZy629/LmXv/ByiJfb
eLmtl9t5Wf1fa15WvvSKe1lp7xX3stLBK+5lJdQr7mWlo1fcy0onr7iXlc5e
cS8rYV5xLytdvOJeVrp6xb2sdPOKe1np7hX3stLDK+5l5SvaeARxLytf02bG
pVXGLXQorEqHsb10d1iXtjC/Jx3OfOkI5kv3Yb50JPPD6f7Mlx7IfOnBzJce
wvxesGZlvvRQ5ksPY770cOZH0FHMp5WRzJcexXzp0czvzfwxzJeOYb70eObT
qo35feiJzKe1b5hP65OYTyuTmd+X+VOYT2tTmS/j05hPKzOYH8n2M5lPq7OY
Tysa86XnML8fHc982vgd82lrAvOl5zK/P+yYx3zaPZ/5tLqA+TK+kPkDOP7F
zKeVJcyn3UuZT3vszB/I+DLm057lzKcNScyn1ZXMH8T6q5hPu1czn1bXMJ/W
1zJ/MNcjhfm0cT3zafcG5tOFDuYP4Xg3Mp82bGY+bU5lPm3bwnwrx7MVNtLG
NPZHJ/8IW2nTDvZPu9NhB+3cyXp0mBN20913s/5QOGoP69OL97I+nZ3B+nSt
/axPJxxgfdr3IOvTW39mfdp6mPWHweajrE/X0Fmfbnic9eluJ1if/u4k69MX
s1ifbnGK9emM06w/HLacYX26/DnWpx/msD794ALr03NdrA9r6ZdYn/7tMuuz
/Ze5rB8F777K+nTb66wfxfw81qczb7I+2+/IZ336lzusD6tz3axPH7vH+iPg
Kr+yPqx8V8D69PsPWR+26o9YH3aveMz6sL7kd9Zn/r4nrM96ZTysPxL5Xf5k
fXr7X6wPGxo/Z33Ydv5v1octK1+yPmyf94r1YdOW16wPKy/esP4oYd92ylHU
h+M2vgOrsL1+adgKp1zwgTU4ylEWdsCu9b6wDpecfw92wwVNK8BKtLD5QiXW
h7PC32d9uEN+ZdaHP4n3Z304QP2A9eHgCgGsD7+4UZ314enf12T90f9Zf1iq
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
/CZ15fMf8YWf0DrinYLobMSbN6NdcAUznYfxzm8j3/+I92xPF2I8NTrRHrRf
F0YXw8ldaGWByL8k477CWhWZb4BbfSm//4T1up/TRsTvmOT3P5xWnzbBSnXa
jHqZ5WlVWH3yVu4/4m+fyf2HJxXJ/Uf9AnkerIg/fCL3H/Uev5L7DwdVkvuP
/A1N5P7DlyPl/mM8hd/L/YdXnpf7j/4+rcb3iQPx46PpNPTXOot2ov2k+nwf
ZcI9FtM6vP0lnY35jB/J95sL/U26Lt//aK91ke9/1G99SL7/Ea/WWL7/4WGr
5fsf/X36/9//C0U96yD5/odP7JHvf2HNUCLf/4gbgvm9axRWU4bSgYjvmUab
EJ/+LW2Ge42lVWH91pfy+x/1yii0BfGGW1g/Evl1m9JWuH8q5xON+gX/cj1s
yB/XkY6DW0/lemrI90nm+ifCf2yXv/8xnui9cv+R/7F8/jkQ98mQ33/Ir5Eh
3/+Irzgo3//Id2bzfaqj/a4H/B7Nxvh/8pd/z4Yr7+X3bB76S5jA71034oei
+D1ciPhPq/m97EHc7EcXI17nF/5eVhYJ+2fRvvCJd9neAB9aSQfAk0aynhEO
mia//4WVx2c4XhN8sCHnY2Z/5eTfz4XVqNfy97+wflmR73/ES/vL9z/6+90k
7z/iC3pxf6KRXyT/PmGDm67l/sbB2n65/xjPe2d4PhIR97vA82RH/3eO87wl
o77vRp5PB8cfzd+DaXDnqvy96ER/67bQmcJGxY+/P3Vhx82WdDbc00K74I0D
6Dzkd4yk3cLuok50IcY3PZD2oL7nNesXwy2X0cpiMf/RVWhfOGou52OAa/7G
+QYIq4mh8v4LK6tWy+9/tH//IdfPhPapzeT3v7B+aTbXW0V+yUXuRxjio+vT
FsS7xXP/IuEjhdxfK/o/25+OhofL73sb2oePls9/OFC+7zW48SH5/Yf6nTX5
/Yf+yveT339on9ZR3n+0L5FOgzfK9k60fz5bfv8hXidTfv+h/3ry+yQb8YJ+
8v2PeIPj8v2P/lJacr5urPeDfXQh/IPK9fKg/Ve5dDGcMIHrq3wv6v1skH//
E9YG76cNwuqpwdy/ALT/1Ff+/hNW9jrl/qN9eB/5/Ef731/I5z/672bn+VKR
bzby/IUhPjeVtiC+qgLPc6Swo/GXtFXYGhxDRyNecYn8+w/ccKv8+w/G81GG
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
JawMm0MbhdXxC+l6wrbpK/KO/h9z15ih
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-7.768204568492365*^-6, 
           6.675271890799195*^-8}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8273113180977745`*^9, 3.8273230018272743`*^9, 
  3.827323682361475*^9, 3.8273301813632407`*^9, 3.827330317066927*^9, 
  3.82733057628325*^9, 3.8273318669548893`*^9, 3.827332579027432*^9, 
  3.8273340536995926`*^9, 3.8273349684868975`*^9},
 CellLabel->
  "During evaluation of \
In[314]:=",ExpressionUUID->"6308529b-3739-439a-8061-e1fdbbb433b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"out3", "=", 
   RowBox[{"applyShim", "[", 
    RowBox[{
    "Minv", ",", "deltaTraject", ",", "deltaTraject3", ",", "magnetizations", 
     ",", "nCasseteBl", ",", "device4", ",", "eEnergy", ",", "li", ",", "lf", 
     ",", "lstep", ",", "\"\<middle\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"device4", "=", 
   RowBox[{"out3", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";", 
  RowBox[{"deltaTraject3", "=", 
   RowBox[{"out3", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.8273238222565827`*^9, {3.8273239957766514`*^9, 3.82732399629676*^9}, {
   3.8273247074833846`*^9, 3.8273247083283854`*^9}, {3.8273248631033325`*^9, 
   3.827324865668412*^9}, {3.827332719110963*^9, 3.8273327325307302`*^9}, 
   3.827332875233137*^9},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[316]:=",ExpressionUUID->"7b170a30-6963-418f-8f1f-f79297008b5f"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
9WGzwdi2+Un1B/o+cOQeO+dvSzd933hsYPolm6uViu+z3MG9LmyaQf1RKI8/
o8tBex31p0z++UzvPvhuR+ebWrm9Q19sj6PzebP8/fln63RS6XqoQ27X68zt
RV2VPfl7Af52mS9th1/qyd8LuQcK2ZkSjR4zvcCacuraw7dTeqzrBTXjaXk1
0dN7DC80H4z4F6E6p8fmXuCyYnKTTef2mOUF7bEVGNhrQY/ZXuC8Ofj5eP7C
HnO8UPvLknHcZHGPefJ4N6+3FjcY9jhL/vqDEWXdVst7XOgFFf5cpdQW9Fgm
/zzDxxTFqBj1uNYL5h3Da/YuXNnjZvn7n1i5b9vmVT3ukI8P/895rcfqHjO8
wV4UMVIrZA3l7w2OlvjblUhjyt8bPHFGQxvHhPL3hom9xXorv7WUvzdK/Hff
eeNgSvl7o0MwardszTrK3xvSDr/5KyebUf7ecPdyzNL7TuZ4w+7quDOJV9dT
/t7oOrtOyzdxA+XvjWtbNKZO2LiR8veGxtj5AU/6m1P+3mjtd1tt2W5yrTeO
hSZabKkiN3tDVnK29xMtC8rfG2HrtL3SY8mMfZCtdvkS/Iassg82gYMHJW3c
RPnvQ/2HzA9PS8m6++Ckwb+2b7ol5b8P18LUL4zPJJvvg2GVYLqzuhXlvw/S
XbF9kg6R2fvA/i9q135ta8p/H9qZO8LZpWTePnm/nYyvN99M+e9D1rfqF4Ef
yYX7kK2+rX8v/hbKfx+a4+qPf15sQ/nvg8H0OyvOtJOb90G789jw4P1bKX+5
mZCxNtpS/j5ozmn8ubXfNsrfB132d2WsSjLTB7k7Dk5I9bOj/H1wY3G9ud7s
7ZS/D+7MOfatupVs7oMiyzPv+u7fQfn74Mm2xckX19tT/j44XOPGa/hH5vjg
j+Alb4YNi/L3Qd9hs49mnSZn+aDQqlfK5n47KX8fqK0+v9LGjizzQVbK3X9n
z5BrfTAiquZvYD8Hyt8HV/y9lpfbkjt8cKRX8dXkU2SGLyotPNx79Xak/H3x
yCDuvLY1memLrkVr60bkknV9YRh3ctWdX2T4wvyT/p8d650of1/UOrQV1WWS
Wb5odZyza9YXMtsXQ80e/t63ypny94VsUvi7E2Iyzxf19nrtDe3kLF8ULIs2
/bN4F+Xvi4jBESs0k8kyX1wW5ldtek6u9YVepFEpT2835e+LlL66vq+jyB2+
+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
ruWgzKKlVTKb3MhB5JbVwVaryM0c3MpQWfFiK7mdAzP3NX9X7CV3cPDkyIyv
/tHkLg7+Btz1TkwnMyLAtv1wN+YUWTkCL+5fesi+SlaJwK0TR0TWjWS1CMTN
u7p3yQcyMwLXXwxom9abS/WPQGXSGdGEMWTdCCx5brVhkg7ZIAIH74xT0V1B
RgSyxoe3mWwmm0TA7oZn4e49ZPMIHMt07h/LIdtEYGjBee4BEZkVAdO4o+cP
nSC7RMDi1ditsZfI7AjYzPD6ZVpPDoiA/+Tif6/byZwItB5eqWH3h8yNwLPJ
BwzyhsdT/SNQPH7NsHotsjQC9WF9y14uImdF4HYVf0PLenJuBPpMXCN+uJNc
GIHOJaZ1db7kkgh8HBkb0hxPlkVg7C3rjqGHyNURKNQ3/+ReRK6NwASLtb0G
3CA3RiAl48nzjsfk5ggM7PV9lN5ncnsEjnTsb6rvl0D1j0C/Ln3NNg1yVwR2
qcreeMwjMyKxo6lto48pWTkSq7qs7jIcyCqRuBRbM2pcEFktEvpNseXX+WRm
JL5vqw7pX0DWlr9+/czFzdfJupFIuT7tt1kz2SASRVojLdf8JiMSc+eeSZSN
TqT6R2JW8ayYgrlkc/nrd49507WBbBMJs/chCwV7yCz5/Mutfi5cskskvs6Y
meScQ2ZHYsVlVwf/K+SASESdKlJNfE7mRKLibcnalG4yNxIOe4a17h2bRPWX
53c9o9ckfbI0El+Oew4SbyJnReLjNdXdNzzJuZHYNdnW9kwCuTAS89WmaVoe
I5dEIn6KQ+XJy2RZJNLLOoqvPCFXR2JBU5S14Ae5NhLamduWMkckU/0j4fLM
fo6rDrk5ErMxfoLHGnJ7JKasumI3g0XuiES//Ly/hwLJXZEo+9Xf+SafzIhC
++CFX3LzycpRsM/9cmHZNbJKFM4uU+pKfkJWi8LL6ePmZnSSmVG4OfDFM/bg
FKp/FJw0t/xR1STrRiF1uPgIfwnZIAqVOmcLOjeREYX9vH8H17iRTaKgjaJ0
YQTZPAqfrrS7v5OSbeSfp1Ip0aaQzIqCQ21S3ZsbZJcoaPCMugqek9lRyN52
LuPUD3JAFLr72uLnsFSqfxSaU8SJQm0yNwpJkh+jY1aQeXLfvJx/x5YsjcKo
jhVlbj7krCioDrxWbZdCzo2Ct/uukkO55MIoBOyb8nzGVXJJFGxa+vf79ZQs
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
zEjDlWqt0nozslIaCoTj7B59pf3Bymngl6+ob0knD06DzsgtSu3LyCppKN+Y
tvftC9qPrJoGtT3jfrXFkNXSsOHl+8OPp5E10mBwVbqjqpr2PzPTEPfJ5Vu2
C1kzDU7nsi/79Cdrp0F8vlbV2ZT2V+ukQXXNa15xlGI/dhpiMyy/3S2j/dzz
01BUqXs6+xPt/zZIQ/MU44/TJ5MN08DKOe2+fhPtH0cavr/zrP4XTvvPV6VB
A3Nc9fNp/7pJGsbdnznl833a/26Whun3dXrjF+2fN09DfZD+AOMJZKs03Ku5
tGIZaD++TRoOmevXerBoP79dGi5ZXno2LVzxfEAaPoa9/3olg54ncErDW+M+
THEpPZ/gkoY2l18N3x/Q8w3uclvu7m/whZ6PYKchufLylLyhZB/55++7X017
Cz1/EZCGJA2LP958en4jJA0uXJMTknv0/AdHfjxmXuiuG0rPh0SnIeBkYO48
c3q+hJsGK0v3UxkCej4lKQ3aTv9e1zTS8y48eT0N64f7T6TnY4RpMDGvYi9W
PI8jTYMuyzAszJ6e78lIA8S3Oh0+0/NDWWnoWHF/QXwUPX+UnYbalmOLXUbR
80u58voFKQcOW0/PPxWkQRYhbentYUD9n4bCybV7+yfoUf+ngXlij+ZGYy3q
/zRwlprvaLkzhPo/DYzludKrh+n5Y5l8fNVZx1Pr6PnNa/LP92jU0rnq9Hxa
tbwfXIxeGajS82935N8v4xfLX6gs73FtGtSHDn98QHllj+vTkHJu6vAzCWt6
3JiG+VPWHn461LTHT+T5HNj3hi1a3+PmNPDMnw73STXvcau8f5prPX9Zb+px
u7w+caPPVUyw6vH7NBQPDli94q11jzvk71+68dSg0i097kyDec4yXUni1h53
pYF9vaZslcO2HnenodHV87b10u09ZvBhMvLNnbca9j1W4kNaeuNJBIfVY2U+
ngTEuMt8dvZ4MB8aSb+HD9/j0GMVPozePPE2cnTssSofDk0hmSrbnXqsxofL
959VmjbOPdbgQ+3IoW9jrHb1mMnHnRXJfQPNd/dYkw8z5TF+D8xceqzNh0Ge
/ZIrJq491uGjdtXxny0r3Xqsy8eY7V8evF66p8fz+ag6yvGT6Lv32ICPU3Xz
o6/O8uixIR8xTip7zKZ49hh89LZUejVxzN4er+Lj6EL+fxlK7B6b8NE4yNKu
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV3HlYjN//P/BByJsSQkhGkhCiEMITIYRQpJJpXySj0r5M+7TP0kyTihBC
iEIIgySE7EmIQhIiS/bv/bt63Z/r+vnH9bjOnPt1v865z9z3feacRjpvWe3W
lcPhLOnB4fy//zv/tc3l/P//sETf4vetX93ndFIVpj1OLT6noU/WwJnxE3LE
LaZkTZinL2jkzlpE1sKcAJl3u+8qsjaWD7ncu2PKejIXFmeW3G2d5kTWhb2a
Xf4nsTtZD6f3CgSninzI+hB8v7jpTMVWsgH2FbnunCrbRh6HDbde53yuCiEb
ouvjgn1DnSLJEyEfd9HQ92g02QjWf55bnHCKI09G+k6O19/FieQp2JRzcXmz
czLZGJZv7s/SLEkjm2C8eN8dSa6IPBUfFjVHvwiVkKfBoPK3yo2ATPJ0aNyG
295kOdkUo6M/BlSVK8gz8P57+YC03jnkmei/adSR5UF55FlovhKhZczJJ5tB
fde7idvX7CLPxoYzOYd6n9xNnoMjEQNVy8YUkOdi8s+dx2oK95KB8j1vTyTO
2N9pAVC3Tru7Rl0hlc9DqDwkMS/5IJXPw663c7XdlhVR+Xwc3JEXn6t9hMrn
o9t0l8jQv0epfAEsuybZ53QUU/kCvN5o8i/u5zEqN4frwKM9BncvoXJzuPW8
XeurVUrlC6F6Y6vrQZMTVL4Q50+dM2xef5LKF2FG23qjxcJTVL4IS0v9dd9c
KKPyxegz9q5ZM+cMlS/GwMRXqzctO0vlFmia2fxMvLOcyi3AmbDtdcSfc1S+
BHdlteNWu12g8iUY37OpV/YmJZUvhYuH87P8sRepfCle37/VfreVzFmGgRZv
e84/cYnKl8HkW93ULrGXqdwSL/fU/Bm1toLKLXFyds788xOvUPly2OUEL2zq
U0nly5FeN+fEwTYyZwWujx94UL/uKpWvgPLV1t2br1VR+Uos+XovU3b+GpWv
xKFEZXPp6etUbgXegI6wl2dudBpW4F8z3Dn1UjV93gp7VZeOqrx9s9NKKwRE
dHMqarxF9VdhUPKuMV3+3qb6q3A1tfi1b0YN1V8Fk71Ph08cdYfqr4LOQYnf
sjNkzmoMuZXhdt/6LtVfjbs9R198+JksWI2eUV928DLvUf3VOFBf5y2YcZ/q
r4Fek7De/CUZaxArK/pXnv6A6q+BMlnfuGPOQ6q/Bj2TeZN7tJM51igqL1H/
fvAR1beGitPqGU/ca6m+NRblZcdd1n9M9a0h6Hth5MUWMscGX36oF706Xkf1
bfDwc+mYBVFPqL4NWmY3/nu3sp7q26AmzbN/u95Tqr8WR9WGH9z0l4y1aA2f
m+xV/4zqr8VTr5z3nAvPqf5aXJi91nzUmgaqvw47rLpeG3ONjHVYMVrZqJj3
guqvg8qqgJPR5WTlOuwGv/D9jJdU3xatcTbezafJsEWb6cfvEWaNVN8WsPiW
feYiWWmLwdut3hxc0kT11yNa2/ia/X0y1sO99+WIOqdXVH895hteU5h8JivX
I2JYQ6/g+NdU3w5/dowfXjLsDdW3w49KfuSXUrLADicNZ85etqqZ6tuhwKFL
dWUbmWOPnvu39wqSvqX69og4enGez4wWqs+Ub5g2+dRLstIek7/n9vLKeEf1
HRB/0HqbdG4r1XfABizPsWgnCxxgPXCSfs7B91TfAXNaTs3f4faB6m9Ar5D8
/W56H6n+BvQv7JnX/Q1ZsAHHhzZEXlvbRvU3YOt8/x39yskcRySs3DzNfdQn
qu+ICb2W77mbShY44ssOb5lzB1npiHnzTw7Udf9M9TdCcapEOPwhGRtxlfui
2MminepvhHf9hZJf5WTlRtx/1a79w/gL1efhc+nlFx6HyVwenuxtd1k79isd
j4elGwqD7u0n83g4Gn3e44PBNzo+D98nZXScLCLn8+BuOt53tvF3iseD7YJh
Ikk5uYGH9Mtzj1616KD4TnBY53rowyMy1wmDNjV8G+L9g+I7IXxR4w6Hf2Se
E4r/vV15PesnxXdC5lijDUHGvyi+E9IPvakMvktWOqFlke/cpoDfFN8JMUMG
T60Z+ofiO6O236ZHayrIXGd8uF0wMnHrX4rvjODm/i9idP9RfGccHH+znPeI
LHCG+X/r84dbcDqfm/Kd4Wn19LN8H1npDKvVfdLH9ezS6QZn6PeIHvfGi8xx
geOLjh71t8hcF/xNuvpea1rXTsMFc/LHzDqyk8xzgUhy/WVR726dFrggdYhK
oH4oOd8FkW+44ya8IytdUGVzoeGeowrFd8Etb87EiQ/IHFc4plvzrFZ0p/iu
iBnpLlx5nQxXVD+fFj1vSQ+Kz7j3yA6zG2SBK4q0uEHrrXpSfMZf4nyO1pKV
rigfW21i66pK8V2htPqr59tO5rjBoLBF2iehF8V3g0Ca82ql9n8U3w31leNk
NifJPDdY8e/BzLo3xXdDsfmXklHfyPluMI8c126Y24fiu8E6vuvi0EVqFN8N
qni8aNJXMscdVcmrmviF6hTfHQ0mqwLdeH0pvjuU+5N529U1KL47XN0u/Ivd
Qha4g3ul11eVe+R8pvzq4w3GM/pRfHdkio8P1d9NbnBH7W7jW1/U+lN8D5j3
mvzkVDiZ64G4gc484QcyPKB6a/gUgcsAiu8BDNlz9/QTssADDZyvm6zWaVJ8
DxQ+fHhr40Oy0gO2NoXxKusHUnwPVDmLezs8J3M80SFws433GkTxPVGVdF9t
93cyPKHYcfJabdJgiu8Jvqmr/3quFsX3hEbYcLHrWXI+c7zG3OC19kMovify
i+IOnuAMpfieqC0NHYsiMscLwp+87x8ch1F8L7S1r97+aog2xWfsOXTu0mdk
nhe0ehXsHHB4OMX3gkayTkF9gg7F90LN/mVOdzeNoPheMF+7/sbzCVyK7wVD
1WtrBhwic7yx+ua7G5MmjKT43hg+ffPx2hIyvGFU2Y1/fI4uxfcGd05am+dN
ssAbnic1jpZsHEXxvdFw13TMuq9kpTdqlvAvjkrXo/jeaH69Lvrz2NEUfxNq
pvdJ21lF5m6CxjOlWjdvfYq/CSJB471XamMo/iZgSrd730rIgk3gRk3sctne
gOIzfuP874jKWIq/CbyAkrSvh8kNjO2frzuwdhzF90G+4/SMsj9krg8EvYpu
te0aT/EZD10d33W+IcX3ASd+hH9cPVnAuL71a8eWCRTfB0oH29Lan2Ql453W
PgVhEyk+42taDn/ayJzNUD42v3xh/SSKvxmCYQYzh5wggyl32j1tWRcjir8Z
+dojrg4YSRYw5VNy/dVnkvM3g7u3i0G6JVm5Gbxh1eo915MbNqPm/C/Rv41k
ji+4Fut7/nYicxlXGmR7suXwRb5mfFehLRvfF6q660p9lrPxfcGLHDnz92w2
vi+MLE6+6RjLxvdF5t3bh3v3Y+P7wso0PVj2ivLjbAF+nF4cnMfmvwV8B9vs
gxZs/lvA2Wt55tMrai/eFvAeZIa3+JMFjHvUnu/ziW3/Lchf1GvmGXu2/Zn6
3hta1h+n/mrYgoaEnrKgdupfDh+c7ddNnw0nazD+YWWx14i9HvhQzqy+ajie
rh8jPtAn5kc/NbrewIfA+KS63kO6Xq2Y+uKlUxwT6HrmMfXVAvu9HU7XP5+p
X27WMCqPHT9M+UOnUSUqNN5ETP01ojzdQ+x4ZjzzyOypuvT9UMzEi7qzZYgf
fR8pmfJ+owNbd9D3YQ1j58uvPO3o+7uB8ZDF7osX0P2ojfFaXsGBbnR/52wF
R8jXfx1Oz4cajAMPjG4/c/N8Z/5bYat5seFC9ZdOG20FVk8aerKj64XO/LdC
UP3AqW9K705bbYVy7v26Ob37d5q3FbxJqz0Slw7qNJ8p3+hR0Tt6aKcFjI8F
d5t6WKfToq3IvzsjY6DHyE7nM/Ga9Sc/3zqq08XM+d15dn9U0OhOK5njP6jM
MA8a0+ka5nh7T9296Te20w3M52M3nfbzHt/pNuZ44wRRvTZO6DTHD7x9p/Pi
V03qtIYfBBOa1gXuMuo01w84O2eo7vbJnTbyg1VdnaqZdArl74eavGtKnTRj
yp85nk3F6j+JJpS/HxrG5Ax8FjuV8meOf6wHP18wjfL3g0XItG09I6dT/n4w
QeWjyjBTyt8Ptqf1dqeEzKD8/TA0yGHfv8CZlL8fCtp73K7yn0X5+6FsYsTC
hC1mlD9zfDydddNrNuXvB+524zf6znMof380ZPYa0c92LuXvD43rozZGjwbl
7w9RsV/ljDyykT/Kzo0/97n/PMrfH9y/h+TbEshW/sA3h62Z38k8f9T4L1Uz
cJ9P+ftD8NthY5+7ZAHzedWWzcNnLaD8meMpAtZM3UXO94cyIHjXeBVzyp85
nzl7Bz50ISuZ8438kfSfklzjD9uro3/t0lpI+fujSrPfovDN5DbmfLpvfhN7
nswJYPqz7W9x70WUfwA6hj9+0suGzA2A9m3LsXu2k40CULtgsNmOejICoHdK
a8WYYYsp/wBsUtbd819L5gWAP/+7ysV0Mj8AWglTtq2uIAsCoLKmdzz/O1nE
nE/gMp67gQXlHwDhqmXWUevIxQFQztAL7BZPVjKf7+nxx/gYuSYAzaKtjYvr
yQ0BEBQeO+DdYwnlHwCLwbJLZyeROdugaFK4WtmSNbYhOGTP8GkCMncbjFw/
lmzbTzbaxoxv87aBt8jYBtHODbo6X8hW28BZ9nOFYshSyn8bipde+iSZQ+Zv
QwPPn6vrQhZsQz52XtyYSBYx8drCFN6HyPmM9TihrrfJxdugeVI6mN9OVm6D
a4H6q6ODl1H+22Cxxvr4IjNywzaoP1VTW+9EbtuGZW/cjPomkjmBEHVMrJMf
JmsE4r+U2ha9B2RuIDzPXHv27Q/ZKBCZN7MWWhtYUv6BEOzpOUVkTbYKhIZy
r8t/sWReIHjjtsZPKiXzA1HTd4FvUDNZEAjVipi5TtzllH8gTDefvefjQM4P
RNuLzO/988jFzPkOu9By/iVZyXhkTsW1CSsof8aat14FRZIbmHjFlc++3ye3
BTLXT24358krKf8gcMoqRpVJyRqM74knvPpF5gahPicz7JmJFeUfhKaIoW6R
vmQEMc9LC2v3HSRbBcHa822i3lsyLwjl0qEvLoxdRfkHYXVpqdY8H7IgCPc6
TuT6F5NFQeiz383K4Bs5Pwir1l9zmjZ7NeUfBOnZiF+h8WRlEJJ+9TOuvUWu
CYIwZ2WO8ZA1lH8QvtW6PAhwJbcFocMyTh5XTOYEo3qx7V7LP2SNYFRlFo87
vdSa8g9GR+LB/84qyEbByDWx81r6hoxgFFmoLvGcZkP5B8MgfUihTgKZF4xa
6wupUQ/J/GA0H/pxdM+YtZR/MCw1IjceCCGLgqHYLL9ZUk3OD4bqNt2LLdx1
lD9zvIc2LqGBZGUwzOv2l0lukmuYz7esnuWub0v5B0NTdbbOmGhyWzBap2z2
7PaMzAnBaqVxHnf2eso/BHezoodm7yBzQ/C952W7sK52lH8ITARjN93wJCME
uetO7Y+/Q7YKwakrL57tMrOn/EOwrrTZftBBMj8ETpyIPXVDHCj/EBzs51n3
NoUsCoFefWCVOWcD5R+CqqZdC9oDycUhMNopOK/SRlaGoC1xXXHGJkfKPwQN
5/ZdOfqW3BACVTWhQ6z3Rso/BLby5P0GH8icUPxUpmVsmMmj/EPRtff1iwZR
ZG4oLGYZm0ZeIRuFQvQk55izmhPlH4oYK7tej9aSrULRYmvz69EuMi8UBfPe
cRw/kPlMfW7Fsg1mzpQ/E0/7dMuVFLKIOZ+1qX3i6sn5objTcrNYMNGF8g+F
89+HPXZHk5WheJnB61n9gFwTCp58UEvDOFfKPxSXG26FXxSQ20JRdmmuy/JH
ZE4YhrqFr3aZ6Eb5hyGzVzf3F/FkbhjGpdcX7H1KNgqD24CUyvSp7pR/GOZ7
HB4TkUa2CoO285YTa16ReWHQfROY3GHmQfmHIWBdzXfrTLIgDOYSwRqbd2RR
GLbvXlPQPM+T8g9D7bOfwRwFuZg5n4GHX4nek5VhqEqzSBbN96L8mfiejikd
cnJDGBL2995W0UJuC8OZ/f17fZ7tTfmHQ2f3st7RIrJGOPRm543wf0nmhqPs
77mmG8abKP9wDLW0hziOjHA4D9z+4cZ9slU4vC522ZGo50P5h2OFoP+qu/5k
fjiudx297uwlsiAcK09kta3qt5nyD0fHqQHdCjaS88OxOtOi77nD5OJwCIxu
8ff+IivDETL2WYvTEl/Kn6lvNC6oXU5uCIfszlm7dU3ktnB83js4OHHyFso/
AoX9At+ERpI1IjDhUOkN/RtkbgTMPt46eaE3n/KPwJApxyvKJ5MRgdH9Z9+N
X0e2ioBtlaNicASZF4EBy4Yd4O8m8yOQNHJQtvgqWRCBT7vRFt5KFjH14yY2
Tuu3lfKPQB+u+4OKqeTiCCg+njhsaEdWRsBvfqxGQCS5JgJbIp4W7dxNboiA
1f53F49XktsiYHdixNcjLWROJM4dP7kpU92P8o/EJFVeb+cpZG4karo9ujVw
LdkoEvMK34w5HEJGJHpM/bJldB7ZKpL5PkrfEq4k8yJRN1j7T3EjmR+Jt2at
xy738Kf8I2E7KrPg1FiyKBKhxuBILcn5kfC2P7h44xZycSRSBSXfDCRkZSTs
lyQe/FtKronEH7uh6m2PyA2RODXT4lCfX+S2SJxf/vyXs04A5R+FWxeWn/w3
j6wRhTo9U8v3bmRuFK4L66OMk8lGUUgTPOr96AgZUThkPZz3+B7ZKgqT1q2V
m/4g86JgcPBl5UedbZR/FNKvWz/+bk4WRGF9r4QSi01kURSqLTUS68Tk/CiM
dz16cV8ZuTgKyrH7cwqfk5VRKMmdvOJpj0DKPwpNbmv1zCeSG6IwK1qR+syG
3BaF+4+TTIojyBwBevTN1Luwl6zKeGXG1QG3yBoCdIwIPlP2jawlgCxpxbwz
I4KofQSYc+H5xtFLyAZMffNGZQ9/spEAOz0d93nlkU0F2O/32GZdFRkCHDSM
qnvYTrYQwLnxab/3I4KpPZn4UZ+u5VqSbRm3n3r0OoTME8BAvr7f9f1kTwGO
W/wdu+AhmS9AnVNaoGX3kE4HC9D/2rS8pyZkAXN+RgmL3rmShQL4CA6+c5eR
RUw8B9W3cyrJCgHMZ6R1OH4n5wtQ2IP/tdggtNOFApgun3FpuB25WADDMy81
01PIZUy+Dyp7vCsnK5n4p+29dD6Qq5jzn3XiV/8RYdSfAvC7uMhKV5JrBbi/
6qlvWxS5QYDzH/9mnDhKbhbA7bOb49dn5DYBJjk7GBSohXe6Q4C8W0+3nJ5F
5kTjb9CyqkleZNVoTLYPWKMiJ2tEY/zonGHTLpG1ojEtJVJ45T2ZG41bT3aq
lGpFUP9Ho+PznzvdFpCNonH90tPPp3zIptEILG8YcF9GRjRmNgg2O5wnW0Rj
6rolcpvXZKtohDysW1uhFkn9H40BYVelh03IvGjMmiwMGGRP9mTihfS9oRJN
5kej/UW//Kh95OBo9L8edijjBlkQjSDT9elz28jCaBwoVb2doxlF/c+0x9zP
hcdNyYpoaOV6VUkdyPnR0BFs/blSQC6MxuPpDQ869pCLo9F0WMcm/yq5LBrJ
u+x9bN+RldEYt5i/JrungPo/Gud+m7fvHEKuiUaLr+WQqvHk2mhU/nCxHTKH
3BCNlKczH263IjdH4+2iawvWuJDbopEVF1NvEUjuiMYR33Lv6CQyJwaCIx5r
uuaRVWPgGj1hb00xWSMG9VrHdD5VkLViYOm1eLjnYzI3BlM267nN+EA2iEF6
U9JJj27R1P8xCPjQPvuLFtmU+fyWbd2fTSQjBuovrQtGLiRbxOCESy/L0/Zk
qxi0bR89Ms+PbBsD7+X1Ry8nkXkxOJbnu0p3F9kzBs6Td/MPl5H5Mehe7nDE
toYcHIMxzvs6BjWTBTFYcTLrYN0/sjAGDqeu3JQNjqH+j8EzDzvRzElkRQzC
zwx/f3YROT8Gq3rMWafuSC6MQd2NYVMNtpGLY6B/zlilayq5LAaHjx/Vle8m
K2MwYuUo34YyclUMFu5a+uLpLXJNDOTzB69MbSLXMudTb7yw5Qe5IQbVNvM0
v6vHUv/H4P3jyB/HR5HbmPO1u7ZhhCm5IwaGT5b2m2tJ5sTClzfTexCPrBoL
6eQ9Uw75kzVi4e5y3UMlkawVy7zf/ro1djuZGwsb+7XZow6TDWLxzWaB1s8L
ZKNY9JrdnHriLtk0Fi1twf85viIjFhfDZrj8+k62iMXzhughsv/iqP9jYfTe
evmU4WTbWHhOW7jv8SQyLxbnvLnG4vlkz1goTqTMc7Qh82OxnH9t8kJPcnAs
woq3rVoSRhbEIuF6fJVPOlkYC1MPr53Fu8iiWMyZ3e+x5gmyIhaz/wyUKarI
+bHomHtn0sx6cmEsvk5YY//9I7k4FvfHHze52S2e+j8WayZzHMoGk5Wx+Hkz
dOiJ8eSqWLwufrT7wlxyTSx2NBZ6319DrmXaf9eNlDYPckMsDMNtu/QPJzfH
QrjqQel0EbktFnv88pc5FZA7YqG+YeHj9DIyJw6eW+dIldVk1TjcfVEr+tZA
1oiDz5w3uUZfyVpxeOvzoo9vrwTq/zj804nKOjycbBAHb9kn3feTyUZxuBUk
Sx+7iGwah6K1OcmOdmTE4cRv7vYEX7JFHJ780d+YE0O2ioPUbb2OXE62jUN3
rsEG/kEyLw5Rq9Tc9c6TPeMwMPB6/uE7ZH4cUiO1zqq+IgfH4dWMf8XGHWRB
HLR3/K6Y0DuR+j8O/F03Ar4PJ4viEPyg2lNiRFbEYXvFascuC8j5cRCNyv23
2IZcGIe6onM7vT3IxXF4mFh/Z3MIuSwO1Qc/fLJJISvj0O/SkPP6eeSqOFQE
Kfs0HiHXxCHmUP7RVCW5Ng6Vmt5BenfJDUx7v/dcfLCR3BwHw6yvhsO/ktvi
4BKR6B/WQ0j9H4f23F3HLg0mc+KxeYVZ9UcDsmo8Nm7X/PV3BlkjHjKv+Y/f
LSVrxePsEVPFMXsyNx6n145YssyHbBCPbcPaDUvDyUbxCMuf2a05lWwajyp3
ozmNuWTE47d4zIg9RWSLeEQ2c66NLidbxUPfdPpS7xtk23g8zwk6wK8j8+KR
mLbp04y3ZM94mJy+aVL1ncyPh5ZNZKROjyTq/3jYORwvgiZZEI+EPVPHGeuS
hfEw8uVu/zmJLIqHgZpzQs5ssiIew3N36gxdRs6PR9OHmeqhtuTCeCjuVzie
dyMXx+PFmlrXt37ksni8f8U58juKrGTcrP61I5VcFQ9+930Dn2WTa+IhOBPZ
99A+cm08RIt76DqWkBvioZLsrvb1Ark5Hqnvorw3V5Pb4uG4dbb6lVpyRzzA
jXT42UTmJGCR9V+fPp/Iqgm4/rhrv1+/yRoJiMp8dKlSNZn6PwHRGsMVfE0y
NwF3l86e8XME2SABAv2vDW7jyUYJ+FZ13P7kNLJpAtxG3OF8nEcGU390pGjA
crJFAnIH9vw4xpZslYBdd8LOTXIh2yZg9Og7nyf4knkJsNI5GqUXQvZMQPjV
tNGacWR+AoJCy/x+p5ODE6D/9PytJ9lkQQLyPLrGHy0gCxNQlSuo9j9KFiUA
s09XjTpDViTgoFZ02ukKcn4Civv+mDTxNrkwAedvNraEPCYXJ2B15NeNmY3k
sgRc+uH9MeA9WZmAfXYOgwZ8J1cloFqt6qY7J4X6n2nPJ28eefYi1ybgQ7fT
f/v3JzckIFVz32LeUHJzAmJ9dw1arktuS4DRyxvLH40ldySg/6rlLn+NyJxE
XBaPC7g8nayaiIRD1y3GziFrJCI2/9Y8E3OyViLUtq82bFlC5iaCv0f8cdVK
skEi5uxYO8LfmmyUCMMB6ek268mmiRisFfyE40hGIrgnhvQNdyZbJCJOpml9
051slQjXbuqVP7zJtonYuuCYdfctZF4iFk0bee6zH9kzETOtLqRdDiTzE1Ez
YcuM4FBycCIkOZWzNCLJgkTsWN5vRnI0Wcicv0OlTlMcWcTkF6o+eZiQrEgE
7rSNMUwh5ydC8+wX2wHp5MJERHm8/14tIhcnora0v7ONlFyWiFOXfjodkJGV
zPle13atzCJXJWLc7Ovig9ls/ydC5dGwR9Y5bP8nQnXuiOcVuWz/J8J80Kpe
v/LY/k/EFM+uvh072P5PxM5Gk4/nd7L9n4j8pMRlq/LZ/hdiittw3RLWqkJY
vJvT0MxaQwjvKy8F31lrCfHxmM/KJtZcIe4qjY6WsjYQwjf7bsdm1kZCeIT5
ew5kbSrEvqyhQ4vZ84EQPm/fd1vA2kKIvyu/tt5lz99KCIPqhDWurG2FmFzU
uOB/+fKEeFTuyM1h7SmE/xOjwEWs+UI0FxT9/Mu2V7AQK5r1sq+wFgiRZz5e
up21UIjakUMORLAWCWHnNcHEl7VCiC9TVeZuYp3PtFfOlGR/1oVCTL/tlBTP
uliIMsGhNTtZlwmhpT1JeJ61UgjHrsJ5DayrhEhYd02vC3v+NULof7dLGc66
Vgj3YwbnJrNuEKLn50Cdmf/rfyGGvjQ2NWbdJsS0f4/yhrDuEOKpyobDb9l4
nCQ8GVpp9r/zU03CSpXBC6ey1khCFlyke9nrTysJBieQ27yd7f8k/LehR85X
9no1SMKU0YNVLyvY/k9C9exlrovZ69s0CV2b3g8LZa9/JMH+8n+LrNnxYZGE
NMsePe6w48cqCbOfz9zxPo3t/yT00hyz/kAy2/9JWDxH17N7Itv/SZjPXXBF
JZbt/yRYWv3gFrHjPTgJKgFHK7uw3weCJCy8WO+uto3t/ySs1V629xH7/SJK
whqvDTwv9vtHwZzftK9l113Z/k/CvuWR+l03sv2fhLEWTQ8GsN93xUk4Ens0
tMsatv+TsGPIhPDrlmz/J0Gibmzns4jt/yR8yF7Zt3Eu2/9JOP1nxuaxM9j+
T8K2iW0eM6aw/Z+Eut/jbPuMZ/s/CclOfmY5o9j+T8LWX959nw9j+z8Jrp5T
xt0ZwPZ/Mnbc4Odu6s32fzJKPz0JO9CV7f9kxMQ3vkr4wd7/kzG/+XkTp429
/ycjzHSZycDX7P0/GQcTF/536Ql7/0+Gnv2Sd93vsPf/ZGi5lec+v8Le/5Nx
5KLYcAV7f7VIxuzA6QNXHWHv/8ko4070bd7F3v+ToRFoOmSgjL3/J4PfsP5t
bSJ7/0/Gf1Md908LZe//ybDUiv092Ye9/zOfH3HR4vYG9v6fjEjHYaEDVrL3
fyb/1qDGbmDv/8kYYnhh4D4j9v6fjKv5/S/+47L3/2R4lozIHNSPvf8nwzXp
nXYbh73/M+3xePohcRv7/JeMD4a6M5h+o/5PRtvKg+txm33+S0ZlwNWZa8+z
z3/JCHqvemLhYfb5Lxmtaofd++eyz3/JKFebf+9CMvv8l4wLp84LVoWwz3/J
ODvRX/WGB/v8lwzBJb+JRmvZ578UhB369j3OnH3+S0FMm9/pm1PY578UzNxk
MKzvSLJWCix37dJe0ZfMTYHsQ0xHxh/2+T8FDQ+Wvn/8jn3+T4Hjs5vvjNjn
ddMUTFL/Mz27in3+T0HbsTs6g06xz/8p0Jxz6f6BvezzfwpGXzmbapPJPv+n
oKR9wJkhsezzfwqqF0o2ftvKPv8z57fPaMM7Hvv8n4KikedKOlaSg1Ow28/x
gs5csiAFV6okvo4TycIUdEx0Czw9nCxKwZEl3PgpamRFCga0mvJu/mbf/1JQ
UJv9Kr2Vff9LQVC/dY/C69n3vxTkjVGE5lWz738pODBsyLDv5ez7XwqGuD7f
mXGYff9jzlfkP89nB/v+l4INKQUbxRns+18KarHDr2s0+/7HtPetbv9d8mPf
/1Jw9uTg23dc2fe/FOzIHhE0ZR25IwVXq6cpG5eQOal4cf60c5MZWTUVm/5N
VZ/Cvu9qpGLF+uboa6PIWqnQfdHl4r7BZG4qotvUHa+w788GqZggOXaRyyEb
pcJ3dHen0i/s+38qLr9eVhf2ln3/T8WHAw+6+z9j3/9Tcavk0B/ZPfb9PxWm
977ovahi3/9TEaPeZe4q9n2flwo9y/eyxhL2/T8V1u9k4+QH2Pf/VFx6dbrR
Yyf7/p8KTq8Bu2xl7Pt/KuK7Tx3hlUIWpmLpJJdD26PJolR4dzRf/hBEVqTi
evPiS+7sfEV+Ksbkz0vq5kYuTEVVhtuqK/bk4lRUrtIJObSaXJaKPWb2bqVL
yMpUaOwe7PoU5KpUdBxLydY1JdekYo2OPydqErk2FW5Pn0pb9ckNqRDEbM10
1SE3p2Ka59l3zweS25j2uBEqX6dG7kiF+6ugvxUqZE4agr/+nKb7m53/ScP5
uN2DvdvZ+Z803G0MgqKFnf9Jw4X6hwMOvCBz09ClIH9/di3ZIA1Hmj+d9rhN
NkrDl7dH9/SrJJsyn8+X28jLyUgD/47qoq/HyRZp8EpQ9Zx4gGyVBuPIPr3m
7yTbpmF73swqIxmZl4ZXcE/+lUz2TMPz7y+D9wjI/DR8LqvrMS6QHJyGxD+O
v0WbyII0VIxqj6/jkYVpMCv9u6rXWrIoDRoK3QPcZWRFGoz0jmbogZyfBo7I
5cOQqeTCNGg2jyjuMY5cnAbdM3cvf9Jh5//SIEh48OHlAHb+Lw0OY+D7UpWd
/0vD2Nt7Ijr+0PxhTRp+PCptMGwn16bh44BpwoRmckMaHHUue/d+Rm5Og7s7
x1d5j9yWhnsaer4HrpE70jB+6/BV1y6QOelwSagfqHuSrJqOPv3DGkuLyBrp
kHxdNjhmD1krHS8DcjYmbSdz06EvCfl4TUw2SIeypv3S/CSyUToE4kOq7QKy
aToWa34MqwsmIx1L7RIO/uCTLdJxtMtA7dVe7PxvOooFU21fO7Hzv+n4bp5U
edqOnf9Nx9CUiW41a9j533Qc2jnIdeJydv43Hd02f5Y8WsTO/6bjrjS75BbY
+d909Jdn39Wcxc7/psNi151nhVPZ+d90jD21IS7RiJ3/TUcQb7HDofHs/G86
vozNn602hp3/TccfQ73cAl12/jcdvKG+tz10yGXp0CxNs7EcSlamI6Hcq2PR
IHIVc35xy7tY9mf7Px35VfzYleps/6djpfGH8wvZ+fGGdFwb+q5gVA+2/9Mx
PX+g5/MubP+nY9e9Ez/4f9j5/3ToDNpjfreDnf/PwNL89KH/2tn5/wyk6836
8eUDO/+fgV5LBxQff8vO/2dAY/BJNdMmdv4/A7uTp2fFP2Pn/zPQ0bzHKreW
nf/PwKiZ2kkR/5v/z4DX09iz46rZ+X/meFab/fdeYef/M+Ds2N3043myVQb+
zDIM71VGts3Aw10Ldn0tJvMyUKLw/1J6gOyZAbfpU05a7CbzMzDnTMWo4+zv
FcEZWO22O+qzhCzIgP6s/0b3TiELmfg+CXv/xJBFGRggTG29EUpWZEC9d5pd
sB85PwPlR8c97+5NLsyA1eqF/wU7kYsz0HWwuMs9W3JZBpZsPcUbZkVWZmDg
QOU/m8Xkqgwc5MwsTpxDrsmAddn936VTybUZGP/r6dcXhuSGDCx7w/mvvx77
+08GZq3Ne794GPv7TwZ2+MZJ4/uz/Z8ByawobnUvtv9F6OC+/jasC1lFhMdL
tC4EdNDvS6oitFxcH/zgI7mPCGdXFO4xe0PWEOHgsU1ehc/ImiIUzG1+NOgh
WUsEa6XT0ISbZG0RxkuTj36pIHNFcLq4SuRUTtYTYf9DuwXVJWQDEQpnBT4w
OUQ2FCFpanJVDvv7mZEIDZ+SfnXZTjZhztepON1TTDYVwdF83u0aIdlMBPW1
r7XNBGQwxy9Z9v5QENlcBB/7yMqRW8gWIgjMY9fsdCdbirCy3+Bwffb3PisR
XhwaHnvahmwtwghuX3375WRbEU6oRp5WX0h2YPLtEres1ozME+FXuPuRchOy
qwiXR46NvmhI9hRhn5XhmPd6ZB8mn9DS7EXDyXym/dc5aD4YSA4Qofn9r/Sd
6uRgEbrotPQu6kkOF6HuatyLvxyyQITFyy5N3v6Tfv+ME+G8009lxBf291Am
36j9nP0fyKkiWIx3cOv3liwSIcIgsupkIzlTBO2rzFX+jKwQ4fOGsTekj8m5
ItgpG1+evk/OF+Ho0f+iO26TC0RwvbBs0qIb5EIR5uZ9as2uJBeJYHsmbte7
i+Ripr9rOHyTc+RSEYJ/ya74sr//lokQ/l+UjryEXM64PkGx7whZKcLmu7bS
3APkChGOdQTYBRSQq5jro0t7+9id5GoRBvwt+VqWTa4R4VVioZN2Jvm+CNXb
nOJWpJNrRYg8nPLSQkiuF8FtR7mJSgy5QYRBsbNigsPITSKkB2oE5AWQm0Ww
/6R223szuVWE1xP6v651I7cx7Svp/rdhA/mLCP2P3QmLsCF3iOC5zfPpAUvy
bxFSRbp7nBeQOWJ0DTw3Y+8MsooYO5+teLdlEllVjNstYQ8u6pH7iMFNHf1v
+xCyhhgrFN/8fquRNcVYJBhj2dyFrCXG8u8x+52+0voAbTH2HlOP8Glm1w+I
oZPweL3aE7KeGB02O7stucmuJxCjR9C85XoXyIZifGh++W8Puz7BSIx/3R4/
qt5FNhFjuGlS2h4J2VQMjb3j7hnGks3EcN6t7rDZnwwm/4YedV7seglzMSYM
6/FKfw3ZQoxHdd3aC+eTLcUwqXJe+WUy2UqMEyYJ/dVGkq2Z+CdDjb/3JduK
oegza8LmP7Tew0GMsop/3/PqyDwxBiqGv0k8RXYVQ5LnsG9yJtlTDMcjvPW7
+GQfMcqLZojqLcl8xtJ2NBuQA8SoMgi6XqVCDhYj6tLjp9ENtL4lXIwD9h8S
BpWz61/EKDDWHpyURY4Tw3rO/NFP/Nj1MGLsmj1xt9oKcqoYmdOW1nPHkkVM
fh+KcjVVyJliGB5K1m5+Rut3FEw+SZ4/sk+Tc8UYapFjZJBJzmfKs8ari3zJ
BWJ821Mx+pYFuVAMUaFyyTNdcpEYcsv9RWd/0/qjYjH6Hv/XwXtILhWjp8av
sKqj5DIxeGsOpLQKyeVihEarVlx1IivF6OKwfpXNTHKFGNOS7gwX9ydXifEs
pmu34BZaT1UthvEjn/qel9j1WWKUHAiRz80m3xdj1TX16SP47HotMZbu3te4
fxG5XozGmOVvn2iz67fE4Aj9is5/pvVfTWL4nJ162rqK3CzGtcteoj155Fam
vXev5h/zI7eJEf3EWi1+MfmLGHXWW9eP1iZ3iHF81nGX7DZar/abGV9Nt8c0
V5A5EsQ1lkVpZZNVJDDxWDZ58mayqgQH5n3uPWMeuY8EkUYzuNMHkjUkENw6
1Nv4La2305RAoykgYOo5spYEYZ9XlVmIydoSzDbbkBviRuZK8Flr4ZNHM8h6
Ery7at81UJ1sIMHyp3/feTbS+kBDCXx1ulVVlrHrCyUQ7tPuvy+dbCLBhvKi
Fm03dr2hBN6H/W/AjGwmwXmTk/76muz6QwmeHdtx+UUrrW80lyDYetv++Eqy
hQRjjNO2j9pFtpRgidqj+9fDyVYSXJzXzTFxPdmayffSVROn6WRbCVYm1r2y
H0R2kODIphM3A7/R+k2eBK3x++sOPyK7SpA8QbH/52mypwS2X/to2eSRfSQo
P1D2oCSaXU8qwZelKQF9PMgBjPVfmK9ZTg5mPp/b51eoCTlcgpPbB5sGaLPr
TyWo3mvbf0J3cpwEoYIpl0UfaP2qUILVltMPJtaSUyUYP2a9/PslsojpH3Pb
nRWHyZkS+Hu9nXlXQVZIIL2TMFYljpwrwfsV8QvmbiHnS9Cc39rd245cIMH6
43crfBaSCyXoGBx1c7IRuUgCw+ga2d6h5GIJWiK7tJ1UIZdKYOWSumTdB1rv
WyZBvMn1cWHseuByCYzMWm4NVbLrh5n4p7JSphSSKyQYfED861IGuUqC3R2S
gppAcjXTvqFvg1w2sOuNmevlULFJwgLyfaY9Cz63LmTXM9dKsKh1WOAxdXK9
BBVXiwY+bqf10A3MeFEfOPFWLblJgmkqOmd3nyM3S1Dzr0HguZvcKsHllJlN
kxLJbcz4yXGI7OFD/iJB1s2gO1+tyB0STDl707PrNPJvCXTKZ54bP4zMkaLr
BcdMHw5ZRYoljfyWs69ofbiqFCNWGpxUu0HuI0W3oNzLa4rJGlLsuNRiHikj
a0ox/Q/fPTyUrCXF48kffpttJGtLkdjnwbqjC8hcKXSdl26oGEPWkyLuT73v
lt5kAym2+f+du/8DrY83lMKb+7GX+x12Pb4UNYe3jz1QQjZhykPqPPgysqkU
pYe1Bp8LJJtJYevSYSVm1+tDigDVAds+TiebM+0hmf778WCyhRT8DrXcfR9o
P4ClFCo37ridLSJbSfE6qKH+mxfZWoqWA1HDHPXJtlIMWr+25tsL2n/gIEVw
9O3oq7lknhQPt+x2e7SW7CpFYZ9ot4kaZE8pmtf23HS/ivY7+EixOiF3+B0B
mS/F1a8xJuNNyQFS+HA1Lr75QPsrgqWw3jjkTq+95HAplv+wbxHbsfsvpLi+
u6tVRF9ynBTFpVHPrlym/RxCKTjdMMw5iJwqxVyRF2fROLJIitN7vRe61tN+
kUwp+ig3mxWnkRVM+3fsjBwxh5wrReaZ7S8Ovqf9KPlMPJMN2itzyQVSaHyX
iPosJRcy59fV/u7rb7TfpYjp79PHbzftZvfDSFFxTOW4xgpyKdOep6V5QR20
n6aMaT/Jmztjd5PLmfj7+s2auYysZK6vcYMLz7XTfp0KKS69vjztWg65Sope
4z6X8ReQq6XomBz+tKKF9gPVSJH87aLZXTH5vhShGlOa803JtVKo+pcnmDyn
/Ub1Uswcu/xwajy7P0mKMTvuLNo7ntwkBfgurYF3aD9TsxSuah39vweSW6X4
+aJxv5Y2uU0Ky2tLf91Q0n6pL1LMubrz9D9XcgeTvzzp7C5V8m8pRGu3O+Yf
ov1YnEyoNJtsfLecrJIJvaFaEQEfab+Xaiba1Of+nSQi98kEb6VOoqYRu18s
E/k1B8qm7qD9ZJqZUPQd9jq0jvafaWVCa8jf+jZNsnYmmotqLaTLaf8aNxMG
H3n6znG0/00vE793qv5xPk375QwY26U5726l/XWGmeBsuTJ2qg67Hy8TpbpO
OqYraL+eSSY6XvMX3Aqn/X2mmYhM4X/UPkj7A80yUfXv7E6Lh7S/EJkw9DZI
9utCNs/EAp3u00+Np/2KFsznpY+5E2xov6NlJsZPfr+1KYL2S1pl4u7TU4av
99L+S+tMTOnJTZ5yk/Zv2mbCXPj6/fl22g/qkAkHweyZAUPY/aGZMFUO9HAI
p/2prsz5F/vIQi7T/lhPJv4t8fQ7PWn/rU8muLvP/PtkQfuN+ZlQvhyT4pdA
+6cDMlHzcw335wXa3x3MHH9eXP+FX2k/eXgm+Of0z+rrs/vPmf5ZVKWRspr2
t8cx7ZvSrebjF9o/L8yEwMT+4RAz2n+fysTjLLbnhNF+fhFzPQTxRdOO098H
yGTqXzH+druC/t6AgvHp3zuTtfRo/DPXy8HaH48vatH4Z8ovWe+LDae/p1DA
uCE1PdmR/t5TIXO+V1Pr/v2hv1dTlAmj1q1+mY/p70cUM9ePeklJxRn6exWl
mShP2X7mldXkTpcxx3uIj18WTe10eSYKj2ipTJ47o9PKTKBXaM6MGbM7XZGJ
4u4lt623o9NVjOMMGpMU8ztdzVzfzm7Kf3LzTtdkQrjKIm+bbFGn7zPl/6nr
HpBadLo2E8HrZbPsxUs7Xc/ksyn3rXW6ZacbMtHw1CjHO3lFp5syoWHUrfj8
fKtONzP9KbxicW7uqk63ZqJ+xOUdE8xWd7otE5pTnA5rmK7p9JdMuNo6nPI2
tu50RybKIr6exESbTv/OxP0f9u5ZBms7zZFBf/Yl+6266zqtIsO3mqV7bw2z
7bSqDIfr9h8r0lzf6T4yxMc3rO+pZtdpDRm6/d4877GKfac1ZbB2/egy7DdZ
S4aCnmXHKj47dFpbBpWakdHXmjd0miuD0kn4dcgzx07ryeDjXHpp192NnTaQ
wfdw9O1RLrxOG8pQ+TDaO7CebCRDYE3Aouk2Tp02kYErvT98zU2yqQwdAzz/
nDB37rSZDLWTgmZYniVDBi07zdRuk106bS6D5Y/qAzf2ki2Y85kj1csa4tpp
SxnK93XI7FPJVjKYfpqt1f8v2VqGqk/h3cp83TptK0PRQvuvK56RHWRw5Zb+
rrd07zRPhnytvod9zpBdZSg+891KbYxHpz2Z44/Y3fuehOwjQ/PfVfMf/SHz
mfPt8Flg6unZ6QAZaq5M36V1lxwsw+4XXrK8WV6dDpfh0sXelu8LyAIZpmju
mDJB3bvTcTIk9Ha9IggiC5n2D75gpPqCnMq0p1VvjedLN3VaJMOegzPfDj1B
zpQh/OjaJ9dG+HRaIcN03feNn5PJuTKoj3t0S/aNnC8D3/iUb5Hz5k4XyLC0
cVbz+NvkQhlGfeeN7mHmS+NfhrpvLvvGHyAXM+29f0CXtEFbaPzLEHLkv0/D
4shlMpz5svTqjU/kchnutnlcqZrEp/Evw8O8sb+PuZMrZHjFF53PyyNXyTD6
UwY36T65WobBi9K7+vXeSuNfhhvZ+qPXzSffl6HwhPE20xByrQyXl1TdHFRM
rpfBZIVeUvtrcoMMM/lCl5rhfjT+ZYjo5TDjqDW5WYa8oD/F4hRyqwxnjzfr
hFwitzH97x4Z5P6D/EUGO0242xn50/iXIXK0D8/Gg/xbBv+eD3at20HmyBG5
z2q10wOyihxPtqlF+PUJoPEvx5kXBZopC8h95Mj05bUfDCVryPHn4f7nd46R
NeXY/vPc2X/NZC05IqYfX23C3UbjXw7djiXrt6wjc+XI+Jh9pDidrCdHcPbP
/h1XyAZyeHm8s174h2woxw6l1SSFSSCNfzmej5vl07aJbCJHk0riveV7yKZy
vOqxcm5xHdlMju5dqqMG9w+i8S/H7QvPl8cuIZvLsdf2RFy7gGwhR3LzsP88
y8iWcqydufRIw0eylRxhhcrZG8YE0/iX421iD+FTR7KtHCVH5vk4yckOTH7N
YVeab5J5clww6ivw7x5C41+Oh75p7l1mkz3lyBXwHCQBZB85FpTkL9YvIvPl
eOMvUT/XSA6Q48fk6Jy1w0Jp/MvR63dy6+fV5HA5motH3hEnkwVy3EgM1DW+
RI6T41lRzfOHP8hCOZStga/CJ4fR+JdjyOobw0d7kUVyzBImBtzOJ2fK0ZGY
fTeslqyQY8XQsmHjNMJp/Mvx1cVuXt1icr4cL0auG5MaRS6QI+nw+2tzT5EL
5XB8fXjC1w/kIjlqo4/OLNKPoPHPlPtza1wdyaVMviY5DTpycpkcYz9Otqu7
SS6XY35v/2lZ3SNp/MsRzZnhbTObXCFHy1PZB81t5Crmeu7fXPCgiFzNXK/C
7lFZTeQaOR6pLYq1046i8c9cL6VSkY41uZbJd7PH3sYUcr0crX1NTh64TG6Q
Y9rlyKv8X+QmOVRMj3jnDhHQ+JfjmP3o94Kp5FY5eG3GzW6ryG1yPNYdbbts
M/mLHId7j54yOYncIUfeGA/+4L3k33Lm+cx2wF8lmZMFo6oirVf1ZJUs6Khf
i6juIKtmobW9K0o1o2n8ZyGh+oFDrhFZIwtNi1Vvx1mSNbNQ0noye7MnWSsL
Qa0/y9bGkbWz4JjTZoB8MjcLXX0vvBpbTtbLwqbw1g8DaskGWbDJPjz7bzvZ
MAtpud0fNveNofHPHP9R24F748kmWZg7cPvJ84vJplkYNjj73wEXslkW/KsW
xsiiyMjCVvMrU6NzyOZZGN3r4fDNp8gWWQjU3jpj/T2yZRZWTi1JXfiRbJWF
I/ywflN6x9L4z4KJvLVSZwzZljm/sspjvReQHbLw7/bW2x2OZF4WKhzruK9D
ya5Z2LM9b/c9OdkzC/zAMpuLx8k+TPlE7qSjt8j8LKxYmDMur4UckIXbtzdY
pPSIo/GfBe+ojQkhuuTwLJguaH3tMYcsyMLwBqn3WjtyHHM9uPYZvDCQLMxC
n/NfWowl5NQs1Cwrfq57hCzKwrI+Xp/7XSdnZuGKOGdEl9dkRRYUnBe+bV3i
afxn4erB23XPh5Pzs6A+Jdz+9gxyQRbk97r/Pm9DLsyCqlNu6ZGt5KIs3K8Y
lbIjjVychQNLq2LSD5BLs/ByOE8eeYVcxlyv4zdV+r4gl2eh3XtWr41/yErm
elL547BySAKN/yx49JNUzp1KrsrChz/5c4xWkauz0P2R6nXuZnJNFoIN0r37
JZHvZ2GqwFKv615ybRb2BQV++qwk12chPFl0q7Ge3MCcT6Dp+fsd5KYsbJRL
lFc0E2n8M+1/3+7+SSNyK3O9pV34sd+S3JaFLWvPTc72JH9h2sffLjA5jtyR
BcGzvvfC8sm/mfFcN3fB5nIyRwFvI4uzjrVkFQXeu/OXWH0hqyrQ2E+lZZ6G
kMa/ApGG07KMDckaCvy2Mls52oKsqcCT7IkDBruStRQYMqLihaqArK1AumpB
2c8cMlcB/S/e2a2nyHoK2C5cKHl2j2ygwJ79Nbk1H8mGCjicEB691DuJxr8C
LyNdb5SOIZsocK3scfu+BWRTBcYo7fWzN5LNFLBZcMclJYwMBTSsLx+MyCKb
K+DW8vXvlhKyhQJtanvXO98mWypwXzfjovU7spUCTU0+Uxb3TKbxr0Clzf3D
M0aRbRU46j/W2HAu2UGB2GuzL+vYk3kKlN7SsO0XRHZVoP2B+YduUrKnAgUP
d8R/O0L2Ybz14ui318l8BbJ21d948pocoID63jL/W11TaPwrcK5371EXdcjh
CnBKrtwsmUkWKNCv+5Jt+9aS4xRwDw/Uz/YjCxVYffbby5R0cqoCundKjkQe
JIsUaJ4WH7W1kpypwOHLoTauL8kKBcStFqPW/SXnMu0hPfB+ydBUGv8KtHac
OG82jVygwHO+LGvSanKhAp/DNvvp+pKLmPb9sNBqYDK5mLnequyMVfeRSxW4
slOo+esiuUyB3flZf94/JZcrcGKU+HXDD7JSgYHVY+7fG5hG41+B2sbpNyon
k6sUKMrwuHJ6OblawXxfp1wq8iLXKMB1eXxxZzz5vgIuL19VSnaRaxV4MfrN
k/hz5HoFHnz92R78mNzAtH8ar7vPV3KTAnyHoVob+6XT+Ffgv4Tk8asnkFsV
OKLQN1u4hNymgOnE2rWmbuQvCqjl94gaH03uUMDg+OV9Onnk3wrMrvr2oN9p
Micb1od01Lo/IKtkw73nnDkdbWTVbLgOS3R+1yeDxn82fow9L3xmQNbIhplR
+ek75mTNbFzb6Pu+gkfWysYfq41Dy8LJ2tlw7jJp6SEFmZuNwJl+kTtKyXrZ
2DTj0WlxTcbc/wOFR/oE
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.020903816982853728`, 
           0.05830030626053613}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
uuvo+t+Xid3rk9tbR0ySOpSJvW5fPtXG0fUyk4n93o0VugINqVlMDJn/Q+NE
ubbUbCaOZw+UO/NjttRiJjSGx56arTZX6lwm7qtahVuazJc6n4mwuO3pWyMW
SF3ExMDOoM7+hYukLmViVfP2zYYti6WuZGKM9uIPqycbSF3DhEgp7AHbZrnU
9UzUWSTZBxpD6gYmZjgPsFiyY4XUTUyMzUtd3ZqwUuo2JnLEnrbDjqySuouJ
LVkLvkTeNJK6h4nGs76zzDpXS82IhY1N4d/S8Wullo9FVNg+le61xlIrxsLg
zbeIyTHrpFaOhaeq5rspV9ZLrRaLP32PXhQMNJVaKxYXYsNWzLTZILVuLM5P
O+DwuHCj1PqxuFHVobphiLnUiMX+zV+fKlWQjWMxfCK7+kfoJqnNY7FliOma
hIUWUtvGYlr4zZs6P8lOsRh6YaLppjJLyj8Wuvee2xnGWFH+sVjA6Zppvdqa
8o9FkshJQU7BhvKPxe3gIDQ8ILNisfFJ1dfQ7M2Ufyw+MlKv5jnaUv6xaL63
fMtsjS2UfyxyX5dxvrWT82MxIGxQU/MpO8o/FmGikJF9vlsp/1hUdJ99s3C+
PeUfC61/B1oLusk1sahTXpa869w2yj8W+qFuv/cGOVD+sVBrVQh2WuBI+cfC
uKIlsKmb3BaLhcN+LZ1m50T5x+L+4cFdzy+Se2LRHeB/uXCCM+Ufh7lXdQZc
CCPLx2HqLVVF+edkxTgwao4XlS1xofzjMHnJvtnv95LV4rA00brhwB+yVhx2
R2fa9Tpup/zj8FR57+J/V8n6cXi3ljO1VNOV8o/D89FTatTTyMZx4D05r4Uu
snkc8vRPyDNs3Cj/OIw3XLrDupzsFIcbD1kNs6bvoPzjsL7uVK9PKtk3Dvb7
JnYyvpJD45A1/b3S9S07Kf84fP4Y8HdvFZkVB2u7pTFu2u6Ufxx8PdI+9+OQ
xXFwzIG6ZQ85Nw426w1/Gjh6UP5x6Bz7n+WR6+SiOLSMaf4SMNOT8o+DIWwV
uGxyZRz66sJ0P3STa+Kwr9/Qae62uyj/OLhHpj3oKSM3xCGI7bgjVcWL8o/D
p+q5OxWiyG1xcBn+yti3kdwVB2OdCI/jS7wpf8l6O1JrzorIjHiMm7DdKP0b
WT4eq0bGXzDY6EP5x8PhcPTUhmNk5XgcaBG5RzB2U/7x6P+ts8bElqwVjzms
m+2BhWTdeOT3bSweM8CX8o9HgMLgKaY6ZEg8dW0hcwvZOB6ZoY0+9xPI5vGo
2b7G2qWIbBsPs19GL7c2kp3iJeeDOjUf5P0o/3gYmpbtWr6Q7BuPEWpnPRJd
yaHx2C23taCdR2bGo6Xk9430ajIrHuKxB82SfpDZku+zwOPsO21/yl8yvrd9
RYEDOTcet3xh+pBPzo/Hi9N3WmzqyEXx+OowYuy0gQGUfzziR8/YO8mQXBkP
dvXBi9PCyTXxuDDz8dGR58n18WgOKfQ695XcEI/ex4U+LXMCKf94CGefKg3w
JrfF43firWdLTpC7JNunSlw3uZ3cI/n8YUofBs8IovwTsDXJYN9HV7J8Am7X
PSquPERWTICevOnzuCaycgKO73Bn6aoGU/4JuFs2eOGtrWStBIjlVOs3ZZN1
EyDnkKF56wlZPwFljfOnLlQKofwTkKb46ZZoE9k4AenvPII/Z5LNE3A/tstj
aR3ZNgFvPfpZhA4JpfwTYLKsceOhNWT3BGTYeumejyf7Sj5/rWlscSU5NAFK
T+5oiv+QmQmwn9uS7LkkjPJPQDWuT5gTQmYn4Oa9yg0dZ8niBHx3GtN9rIuc
m4Dda+Zuc5sdTvknYI+F6uPpnuSiBFxZUz351VFyqcQbiiemvSNXJuD3u0DN
KWoRlH8CJq3/4JVhT65PQPDjtRU1YnJDAiausL5x7RG5KQEHC0uqfRUjKf8E
/NPoVqsyIXcl4NKwku68JHJPAgIVhv8aWkVmJILhPG7ymz6yfCIuPrx6baxe
FOWfCKblylvZXmTlRLA494Jc8shqifhu7R7n+YKslYjlfqPrz4yKpvwTYdWQ
+GfpWrJ+IhQUM7gjIslIxAJest2cIrJxIrQLdTcefkc2T4SRxcrpPuNiKP9E
7M2qO8A1JjslYpNGx4Ux4WT3RPz7GeT64zjZNxHVKlGtq16QQxPxYvLtV4kD
mZR/ItT/jJo6bzKZlQi5v/XXSvTI7ES0R1R5TTYlixOhGr9FPnI7OTcRC4v6
v3gdTs5PxM6mU1M2c8lFiRAcPTrqcwG5NBHvU9m6JVXkykS8snQNK35GrknE
N8Erl+9fyPWJGJewOiR5aCzln4g1cxOi/aaTmxKxL2+vx0UDclsiVlxO9Xe2
IXdJ8l2m9n2nL7lH8n20hBNrUsmMJNyb+lMh4ghZPgmDN17TDqskKybBwc/l
ddkLsnISri0Pn774J1ktCWWvDfd0jo6j/JPw4HB16gMdsm4SmL4NFW/Xk/WT
MG7A/h0TdpKRhPhw159+8WTjJKyZx1jQdoBsngSX//LXhJaTbZOwXf3vA9Vn
ZKckxFr5T3/2neyehK6ZYapHRsdT/knYWNJfP3YOOTQJllqZrl6mZGYSmgLX
T97hQWYlQY27LsEnicxOwoTGP/lJh8niJPgq+bwvqiTnJuGHOWPjl5fk/CSc
Sal9t+EXuUgyfnZp3F3lBMo/Cfp3pi6MXEiuTMIjJQ04WZFrkvA75IRKvD+5
Pglz1u3s/cgmNyTB0OD+8dxCclMSHu848ePIXXJbEoIa/r3410nukuTJnXP6
zPBEyj8JaROSnl2eTWYkY4H+7dUaG8nyyZi/T8vhvQ9ZMRkRzeO+/MoiKyfD
fNxIc/szZLVkBMi/+6/3AVkrGUsGXfCu7CbrJuOdsfO9feOSKP9kDD5QmxSp
T0YyVlk67DG2Ixsnw7srce/nCLJ5MmrH87857SPbJuNbYdK/jCtkp2R8b+z9
z/M12T0Z6i6Viz/+I/smYwuDd3uIWjLln4yxRluGXzUkM5ORd/C5q5IjmZWM
SSPvlwyMJrOT0dZv2rv9OWRxMkpOvsn/WEbOlXwfdf7Q3gZyfjLMNhz89PAH
uSgZqn2YylJiUf7J6D4y4uqUeeTKZPzT+TPwsBm5JhkanpaTlb3J9cmYHP1j
THwquSEZo601jrUcIzclI58TPNTwOrktGT8TF59Le0vuSkbsorag6//IPcnY
IXJ9/U4lhfJnwSwoYvzLxWR5FhizR1UdtSErspB27O/hhQFkZRZ+juS8jcsi
q7FwsfXm5dgTZC0Wjlgd/611k6zLgmuCxUTvt2R9Fh7867DBHzJYsLoZ/Jwz
PpXyZ6HJ5/aKDXPJ5iwwzcv77NaTbVkoWTe64qAL2YmFqY4tP+XDye4sVI5c
ZRzBJvuyEGF9zqrtCDmUBWXvTufVZWQmC08ufR2ZcYfMYuHu73GXrrwms1mI
XVbf71UXWczC2bqkg18ZaZQ/C7fOR1fJK5LzWRiiYxg7V5VcxIJueXh8/Exy
KQusZvycqE+uZCF3XB9X2Yhcw8LcRaU7D5iR61n4Hic39oEduYGFU/uiXOvd
yE0s9F5YrnDel9wmWb+g+/SeCHIXC4tL5lVxk8g9LLSyCluLOGRGCiZGM0WD
95HlUzDa1qnheD5ZMQW37JZOLC4hK6eg7+PfJ4uryGopuJlzxNX1LlkrBQdX
2ChvaSTrpuBvCNN0xUeyfgqaNT4uMvpFRgpcbnB3xSukU/4puD03aM2EKWTz
FGjwnphPmE+2TUFpR2cIx5jslIIGg2cGaY5k9xQkqp6HQijZNwUWRbWtY7nk
0BScH/pvYN4pMjMFObFdZ47fIrNSsOLvx+9j2snsFLj9WJ53RT6D8pesf3Xj
3hhtcm4Knm6oiNYwIeengOeQax/lTS6S1D/lAmzY5NIUTA0cXxN3llyZglGa
x343PCHXSLb3AnP1uX3k+hT0Dm3Xdp2cSfmnoPLWZ8X1IDdJvn94bm2pC7kt
BTN3qH2MTyB3pcDo8K5LUUfIPSmYM2jOlbDrZEYqUjO3rDNvJsungv/i/Ls3
/bIo/1SM/ONgNEGVrJyK61c+RnzUJ6ulYv4QwSMbC7JWKm4G52509iTrpsLV
65X3+FiyfirKbyYK04RkpOLNkslfHx8nG6eiorY+XukK2TwVAzUbezzrybap
uNo5ktXvLdlJ8n0SFEP6fyO7p+Ltb2f92/3YlH8qGPNvbOsaQg6VfF7MvI1/
R5GZqeg9vNv47wQyKxWf8m5Hfp9KZqeiw+v9yRZtsjgVl5KGlN+ZS85NxTPf
iAHHF5PzU3EnW+QSuIJclAo1v6E66uvIpamo4uXOOm1OrkzF6uWPOuVsyTWp
OHz2ddkER3J9Ku7vOKX1yo3ckAqv5ZtbV3uRm1Ixe521srE/uS0VhvZxVa9D
yF2pGPwlyntYFLknFdz8mIC6WDIjDVeXW67WTCLLp8GnWF1ONZWsmIY3Xz64
lWWQldPAe7v+xQAOWS0Nf9cMuSXHJ2ulwdz/9N5aIVk3DQfm77Vwyibrp+FL
y1b/p3vJSENkdaenwX6ycRpOBt6csCeXbJ6GjNyiTz8PkW3ToL6p7u2WI2Sn
NIj/+zOg6hjZPQ0vebd0Zh2X5Z+Gxmvt18QnZfmnAbAyGlAoyz8NDyz6v9h5
RpZ/GkYw/nt79aws/zR0JX1xH3Veln8a1p3nndhUKss/DVEXj9rFl8nyT0Ow
iqPgWLks/zSwh8/nVl6R5Z+GjTOdJt+vlOWfhloFPZ3Gq7L80/Cne+Gx5mpZ
/ml44nBJv/OGLP80BJW5WvTUyPJPw634jOHyt2X5p2HYY6/+qndk+adhvKlS
v6X3ZPmnoXvrlxKH+7L807Eie+fa5Iey/NOhHTlX98xjWf7pqLyquebpU1n+
6Shdukzp2zNZ/umo3Vm+5s8LWf7p2OZU+6/zpSz/dFwQHukufy3LPx1+fy0t
nN/I8k/Hic89fvffyvJPx77SKTv7N8vyT4eaeWRwq8y26Qh99y/Br0WWfzrG
7n51LlNm93QYOq+I/U9m33QU5DPEOrL5oel4aNc/J0G2HjMdPR4DDJWbZPmn
oys271dDoyz/dAjf3ntb1iDLPx3K8dqs87LtlZuO2B+fwmtk2zs/HWXcr2e7
ZHkVpcOhsttoXoUsf8n2HD3TkSfbnyrTseCtZd7kU7L80xG2yP3AK9n+Xp+O
RUt3/WsVyfJPx+Rd/800S5flnw7VwtaXM5my/NMRMydhiDBAln86dEM3XTm8
Q5Z/Om6IMu7u3CLLPwMHh790/mIiyz8De0NUVpgul+WfgQETROGxurL8M3BZ
tHi0eJos/wwMyRmSK1CS5S8Zjx9ZGT1Iln8GfKrmHDndJTv+Z2DVVvORqx/J
jv8ZsGss4l6/IDv+Z2CnT7HN/L2y438G7nU2tGRFy47/GbjibXH4hbPs+J8B
p9NmbuNWy47/kvX/Gy0HLbJvBn78sC60HUYOzYC9efFg50/0e8fMwMMpFcPs
7pNZGfgnfNluVEJmZ2D3SKuKaSKyOANuD90du8PIuRmIKdWYV2ZPzs/AsIUl
kwMNyUUZSOXu4UydRi7NgPYBN2aVHLkyAzY69p4WrbLf/wwcgJ3Vg1rZ738G
9NVwa/lJckMGZpz//ZSfSW7KwJLwMV/qfcltGegbl3HtkwW5KwPGL+o62/TI
PRkw9DgfVzqOzMiEYLdVoFUPne/IZyLMacyEM8/IipmQN9BQrCwjK2fi5wWV
F757yWqZGHP3IIojyFqZ2D1tw5DArWTdTNSlbg3KX0LWz4TqjI//jCaQkYkV
j7qyVv6k80HjTKziDNy87xHZPBMvNr88Z3WGbJuJW1mXjHdlkJ0yIf5cMbPV
neyeCWXFnZYPVpF9MzFcJ/vIEtn5eGgmWCtX+M/tkZ3/ZyLZIHzqrfuy8/9M
DBzoAeUTsvN/yffPfLF/doLs/D8TTxPv6EzYRs7NlPSj4dn3C8j5maiNTJA7
MIJclAlOeUeacStd75RK6inZca21glyZibdPfuyJEZNrMpF1Uq9+lB+5PhOB
rXwcWEduyMQ69lNbrWnkpkw8nPbq2Kk+2fVfJj6fdXHUfSi7/pPMrx1dVHxC
dv2Xie/y6cWLEsiMLNwysB1wzZ4sn4Uv201n2S4gK2ZB41i2Zt9wsnIWRBv3
DDrxnq5v1bLwMf/enV0VZK0sXK88sslATNbNQt5bzyWT/Mj6WTDqv0hn0Hoy
shBotGd83zSycRbWtOnu/fZLdv2fhXLW5dOfH8mu/7Pgdmf3pI5Tsuv/LEw+
c7aiNUl2/Z8F3YEOkW8dZdf/kvlNPz82yu43hEo+P754RMMoMjMLT1sv9nv8
ge5XsCTbI0an5NE1MjsLpzb8Ovo0hyzOgn/1rZSXQeTcLNyvkC9tlt0/yc9C
+vDBB9tnkIuyUHa22fo9g1yahZEWer4Pnsnu/2RhU4D20cPFsvs/WXhw0XWQ
WZrs/k8Wwh+Ocri1XXb/JwvrNVu3DjeQ3f/Jwnf12bNHK8nu/2ShrvXHiccf
6f5TVxbmtdus3XyN3JOFr2eVu8R7yAw2yre5Kh/wI8ux8aGeXeJrTJZnY5/Z
BYPxU8gKbEydUrZ5v+x+myIbRoOqukfXkZXY2Jv1tT32EFmZjWyLEpcfoWQV
NqxfFPNDzchqbDydrq08XJOszkYG58udkt90f1GLjTvBKuO9H5JnsaGzcNRA
3eNkXTY2vHzi1M0k67Ghucky7NRmsj4bFY33r63XIRtI6jHtE16QI4ONhZmT
1r14TvdbjdhI7KkctqeIbMzG7HfmJ58kkk3ZGMP+9zHQjmzORsC+fqVbdchW
bLSc9D4e3I9sy0Zn9LSl3sfo/rO9ZPvebd4wfb3s/jUbdoMfCwd+pPvdrmzM
LXvpNyaV7M7GutSVu61nkL0keS34YvfyKt1v92XDYPuaqTfsyYFsNP998WLe
d7qfH8rGhcBnTqbp5EjJ53u+XrpsGpnJRpabjs7sC/Q8IYGNJ/wQ82UmZBYb
x7lGmkmv6HlFOhtdl/Kfj/cjsyX1GIwX/upP5rOxpDZh5wK+7HkJG79NdMbf
UCfnsLH9QUz7yRJ6/pLLhovx9/Xtq8h5bKS2FEVGPqDnPfmS/eOVwppdTuST
bFQZ2NpVdNLzpCI2dn2NuZUcTi6R1GO8KqJhELmUjfcVLL0aLj2/Kmdj3K6f
Tj6q5ErJ9ntqPOBNAT0fq5bsH8etzOYvINewoZv+83VgJT1/q2PjirDL6oyJ
7PkcGx8Lh87oekLP+x6x0dRRWKDnQm5gw/VB16zoTnqe2MiGXH5BYE0ouYkN
5ipOp4IcuZkNZY15242y6PlmGxsnzdOuuU8kd7Ch1/+JSud6er7axYZp3J3o
5070fLZbsr+M/jNsf7Dsea9ke3t06CGdngf/ZuN5wcE5dQfpeTKDg+1FexXN
LtDzZzkOojN8Jz2to+fX8hy8sCtQCnhLz7sVOMgyGJc9t4eelytyYDtl4Isp
I8hKHHwLqxOsVafn7cocCEdZfT25hJ7Xq3AwrMHtgukmer6vxsGOu2kPJ7nT
+wHqHMzq67dIPkb2PgEH1r1/4voE9D7CLA4Mb486+PQkvc+gy8H8YHfhgGR6
/0GPg34n1NyLz9L7E/ocpISN1w57Te9fGHDQcrOncMxQej8DHEy0OF9tOJ/e
7zDiQCU5Z9s1O3ofxJiDc6V3hgYz6X0SUw5WLo3TMcmj90/MOdDJ+3tyyw16
f8WKA8G/KZ0X79D7L7YchHekPNumQO/L2HPQPTe+X/i6NdT/HCQlnJvyK5He
33HlYLFDnPq+xGXU/xycNzq341S/hdT/HCxZ8+to6gB6H8mXA4PPNaEzJtO/
7wnkoC3ltNX3mfTv9UI5mLR9xaExO6YY/s+RHLxrD+hvE03/XobJAdNEMNZ0
P71PliCpf3155Noeen+NxUHcR7528jF6HzGdg11X/c4GWND7k2wOnkdOrx7/
l97P5HPQ3GWymXeC3g8VS9abPTCn+xS9f5ojmf/444PfyfT+ay4H/40KWQ1X
ej83jwOL59svDl1F7wvnc/CM92qVQJ3eVz7JwUWWaOTAIfS+dBEHxZsMfDy7
6P3rEg56cnckVz2n971LOdig9qbx+01637ycg9ZUX/vuF7L35zkojTLrW/qY
3revluxPWYW9Vffo3wfUcCCKjPcJu71d6joOhsQuWb+lxlXqeg4aNp+w3nbD
TepHkn5ZPWla8vUdUjdItmdjxH9N13dK3ciB2nuN4sib7lI3cRBfXXUj+paH
1M0cHJoaraN8z1PqNg4aNTSbUh7vkrqDA7OS+Mgpr7yk7uLg35FZs2a0e0vd
zUHFNwPXth8+UvdwMM9HmX93gK/UvyXbvy1x/IUMMoOLJ7/uLlw8wU9qOS4G
vJ9bu/koWZ4Lqys+BsMX+EutwMW0NdPDTK6TFbno93GD6S+bAKmVuPDZd+LV
r3ayMhehrfM+TYsOlFqFi7hbt84sHxMktRoX3B26hycUkNW5+DA5OiXGMFhq
LS5cCnqmrXxCniVxce8EA+8QqXW5kEudx90kFyq1HhcaY1pm7t5L1ueiZX2D
PmtemNQGXIxXbn3NryWDC7ZDVSDbKVxqIy6CfhWrhf4kG3PhfCejal1mhNSm
ku3VGNTZXyNSanMuLp2ImpN7iWzFxeQON28ViyipbbnYkBJ3ybeNbC/Znsg9
zY+OltqJiwnH6z5EK8VI7crFyGXJrzWOk925ePXBRqNyClNqLy5WlDjWrPQk
+3Lxq/0UQ1RCDuTCr9gp6eJfcigXK+PNrhwzjqX+5yLwqeC1I5fM5GKTSeS4
Ny/ICVwcC+13aqZGHPW/5Ps9N9NY4UNO56L4gI+u+gUym4s87beBDf/IfC6O
9BfouhjHU/9z4VnZ23CdTc7hosBcrnbwM3IuF/+N2zpw1tQE6n8uXiYdnrTQ
g5zPhbHZ0N9aZ8gnuTCfH9I4qJdcxIW2/flp95FI/c/Fm1T91SwWuZQLm593
j86sJ5dL9r/sFObF8UnU/1zsLt7UouNIruaif5xfY/JRcg0X3S9V91d0kuu4
6On797peL5n6X7L9qlL/nIsgP+JiyvZgeY+r5AYuzETfX76TZ1H/c+Fo3k9X
zYzcxMXr5g3Z4wXkZi4+prz6fe05uY0L632vV6qppVD/c/Fg890gbTdyFxcO
m0YMbCogd3Nxz1pxn/Encg8XnRWHF3nNS6X+50K3N2HZ5mAyg4eExs4FymVk
OR7mxsYeuPKHLM/Df7Vfh9qtSKP+54FvyLrRm0BW5EGrsCfvZA1ZiYfXFv2b
mQrp1P88dC4uKIs3J6vwYNE2fm8ln6zGg8FfK3k8I6vz4MHYZz5INYP6n4c/
y95dGL2dPIuH72Wqpxzzybo8qNz4/OtdJ1mPB/0rB3fx52dS/0vq8e80dgsj
G/BwZc4/lkkFGTxoeOzevGxgFvU/T7J/D9k5z4RszEPUmXFK6hyyKQ+HNR9t
Gf6UbM6TXP882xo0gk39z8M/r3ly2+aSbXkYH1Q3apkV2Z6HsJkVa8aGkJ14
6Kd/Iaclm+zKwwjup6Wny8nuPKgWDg/b/ZrsxcPdRdcfa/fnUP/zcHrG/J8v
1cmBPKz9kJCYvpYcysNx787vCzzJkTzMeua37nk6mcnDVYHm5dBCcgIPrtcK
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
5uN7h47+TFbPhvxr4eC3P4sM/w+AHad+
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV2WlYjO/bB/CxJ1sUyhqSsoYQwteWUKSiZGlRCaW0l5Zp32umpmYQipA9
hCQUSfbIkj2EIhQhhGf+x+87Lx5vHJ/jmmvO+7zPa+uaQQ7u5k6tBQLB/PYC
wf/+/+9fwwzB//+Hz74XYlbHP5/2H5UgttbqfyT7L62CC6Uv6uYad5/+n9Wg
uX/4QbM7A2h1OF5ptcpUW4fuhzG9tqs89RhLa6KrKKnnzduT6MF4K13mbjxu
Bq2FXTO0ppnfnE1rI2PMga5bo4xpHXwL76mid8mUHg4MUEvJubSEHomPoesu
JdZZ0qMxb52m+WcLa1oPPhvvqWxos5Iei2dbp9ZmNdvS4zBL63OGRh8HejyO
51b6rlnhSOtj59xZn0KLnekJeGo4Jq5k/jp6In70zJsR8mMDPQkTj7ut6nht
I22ABpUFT59We9CTEefbo4eXuyc9BWNPdpM1qnjTU3GzvPRR+GUf2hArBTmj
LJL86GkY1mGedopLAD0d92d8P+tgtZmegXgHu8jfy4NpwHzNXfUYj9D/LARa
bJef3HJTyPaZmLU71bX3xzC2z8SEtedn3+sVwfZZEPdX2vhuQSTbZ2HdVpmh
S1wU22fj8FSB68a70WyfjYuzx77orh3L9jloo20sXB8Zx/Y50H7XLBF9jGf7
XPS6MM050z6R7XNRNuvN473VSWw3Qu/uQyeVr09huxHSJi443lkoYvs8TEha
kLncTMz2eUh6932olXYq241h7zz6V/fWaWw3xsc1TXsyXtOC+Wi4uq+o8ZqE
7fPRxbpHV72CdLYvwO5FJctWH8xg+wK8f6a0MC5HyvaFeBYefu/cbhnbF0Kt
f58nSvu3sN0E9uKr7n75W9luAh2nKP9eZdvYbooS0auaL88y2W6KBVsj/TVa
trN9EYKWjp0u1dzJ9kVQd0vLKhqaxfbFuPUwer7zeVq4GAV9mzsttslmuxke
2DYvCv5Jwwza7ou3/di2i583Q2/XFSalM3f/52IzNO5ber7uPS1Ygnsex602
SnPYfwlmfB5pZT1vD/svwRpPNc0jv+jiJbj7q1rZ99he9jdHUt5Qm1Mb9rG/
OXStyrV9dHPZ3xzNIUWigvd0sTna3+4kiz66n/0t4Hw+ft4bvwPsb4Gy5uEJ
j2cfZH8LNO917e6qeoj9LSD+EZK+8y0tsMSekD65gecOs78lbB+fOttadoT9
LRE7uYfONN+j7G8J7ZKrab1H5rH/UsxQaXn9aQeNpegQPePDXtVj7L8UZ3oP
aTUrni5eijnKs9dfbH2c/Zch/ds+k+HBNJahw3q/Y5t/0sJlWJlnHl7gd4L9
l8Eze1fSqx+0wApDu2tv+B2Qz/5W+OMVntv2Ly20wsRDPbP/RZxkfyscL3OJ
+9jpFPtbQ63koOvtdBrWKD1vobV30Gn2t8bWi6pWnkfpYmsseWbgqz+jgP2X
Qyso4mx9BY3lsMmeorXN8Qz7L8fe4WM9Zvyii5ejU/vYno/Ehexvg7fuc6et
HXGW/W1w5OuVitoyWmiDr5HrN6x0LGJ/G+jaTDcqbnOO/Vdg6MkVs3vsobEC
p1sPrF1sfJ79V+Bor/gFvh/p4hWYfmPPqHDJBfZfifGRKz+fHlDM/iux1Hhf
Un9vWrgSegmjt7lfo4tXoo/zBuHBQSXsvwrDskasuBVAYxXmnbzV5v5dWrgK
Vf0i2hSNvMj+q7CsyxZRaAwtWI26S37ivq9prMaawMKEhBmX2H81hE97bb+W
SRevxtTee6Mqf9ECW3ycfTg9a3kp+9ti89cl+SPO0EJb7Oqzf8lGjcvsb4vG
5zdW2wfSAjtYnv646M8TWtMOn92WtJoyvYzfZ4dJ9+squmbTdnaYoSYL82x7
hd9vh4is0xNXuNBZdhioVbj+/A262A4ftOo/icaW/+dqO7RTOfu6LIMW2ONz
px8ZFi20pj36eU6P13W4yvj2aDH5FzulnLazR9TyqV5+o68xvj2ECWvNKiR0
lj0GLisar/+bLrbHm6pdE8X21xnfHt8Hq7rcu0ILHPDa1uZu3agbjO+AHpXX
3IrSaDjgfkNRu4k/aTsHNPcxwozVNxnfAQc65YouXKSzHNB1pMeg7dq3GF/e
f8Dvp0VxdLUD6neMtmpdTwvWILveoXKx6W3GXwPPyrLh0YdprMHM5XbrZrWv
YPw1OKxn8EVtAi1cg9LZ1q1119BZa+Dmtd7AVUQXr0GNad/Q60V09RrMXzZG
ZXwtLXDEtAdvI5N73GF8R6gUmlSWT6XhiO2PzOxurKHtHHHLz0MtIp4WOmLu
aR+XB0fpLEeUlvnHHq2ki+VeNt7nxze62hHxswePlPa6y/hOUJr+6o3fBFrT
CQHTfcwjzGk4wf5Mvy+73Wg7J1j2ehB0OZoWOuHq19CV97fTWU44NuKs8aXj
dLETRi0f0S78Ml3thN/pIcuVHijiO6NDxMFh5jWK+M7QEA6/b9+giO+MkwXL
VGf9UsR3xr7dp9opta5kfGes8lz5/X4HOssZZwaW3n7eiS52xgJLC+f1Xelq
Zxy5UP/lcTdasBZ5kUod81VozbW4hjKf3d1prIXlFJE4UZW2W4vtwSNuZfRW
xF+LimXu6hioiL8Wp75OHuo9UhF/LSZt0pmyf6Yi/lr8O5ia3tpBEd8FEz6X
X/EVK+K7IHtov6NN9xTxXbDkxN/gwHH3GN8Fbaeemt/+GC10wbDBgasnWd9n
fBesUxrou2HMA8Z3QcrhxtHjDB8yvgs+Ob6bOkVYxfjrsPlw3O6VPx4x/jr4
v561933GE8Zfh2Gxax58X/SM8deh4/WLh626vGD8dWjbz3iln101469Dw8nM
wrejXjL+Ogyo0bj1pI6uXgev2+ett4teMf56fPs19sLcga8Zfz0q34lj3NJo
rEdT2ykbp36g7dajw6UUt8dDaxh/PeKVJuqNn0NnrUdnNZexu+bTxevRekWy
o5khXS3/fulG9y9atGADlngknvzbhdbcgMoFf0yOtqaxAQ8a9nxV6UrbbcBA
R62Hq6co4m9At2tXU46LFPE3IHVKnqBS/Q3jb0BpaOejeo/o6g3I0jkxvc3D
t4zvCoM7wpDoXrWM74ou7rZ6NtvqGN8Vym16enVd94HxXaGe8UxSE/GR8eV+
+al3UeNnxnfFuOM2Bf6rGhnfFdPvzdvh+O0L47ti94IpVSlXmhjfDXY/T8uO
PfnO+G7YOSHVcufkn4zvhsonPZSO1P5mfDd4F2yNHPf5L+O7YdqT0wbKuq3+
+7s1yw0qr61GjFVu85+L3fBhzhRbr77t/nO1GyYffaJSv6ID/87diKlDiqud
rnb8z5obUfW+6/EIu87/GRuxsiX5s3L/bv/ZbiNcC7arDvyj8p+FG3Fm+4mF
6QE9GH8j6h+G93Vtpcb4G+HxbknzmNSejL8Rx+YPfumr25vx3XEtOtHiSak6
47ujk/cHUZN9H8Z3h/dT/8jFf/syvjvWpfVwcJX2Z3x3XKrwty8bPpDx3eEi
vhX8zUaT8d2RELJ+5pK+gxjfHVMvXVgiuk8LPJB8xvJV77jB/1nFA+e7HHuY
M2EIn8cD2rUlooVPaD0PXO/+ydojUIvP54H8/pOnnVcd+p/NPHD1T9U+zVza
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
aUEK7pdFbz30klZKwbN//oHZqrGsfwqSr4Z0iJhLq6dg2l8lmbkfrZkCzfdr
XnbfT+uk4PNZldaXHtN6KfjVNCnFpXMc65+CpfvvhbWbTiMF8cNq2m93p41T
0Kq//5hx2bRZCqyGLEy6cpe2TsFU3Z7fVreNZ/1TMNjoqP3PCbRLCkY9ru0h
XUt7pGD4V6WSSVto/xR0UHpQ+vgaLUzBiEWaI0Jb6NgURA4uPzZkdALrn4Km
+iuny2xpWQp0vZZMcBbTWfLntaq6/u8inZuC0vq7H0VNdF4KLju2jOytncj6
p+CgRUKqyIouTsHIF+Of/46ly1NwMnlKlHUhXSF/3nY6iXs/0FUpKKkq1Xvb
L4n1T8HzU3ezei+ia1MQOy3i2pRQukH+PrpcWrg4j25OwfhPVu6WL2mBCPOD
cibN75H8n9uKsOjSNu+Rs2klETTOxVe2eNGdRXCer9r+TA6tIsKYf4bfbe/T
aiLM+6DevrFdCseLCF9s1s90nUj3E2HP8TmSu860pggtcRsfD5XSWiKElTu+
cblC64iw+PdQz50/6JEiPL2t3eOdqojjS4Tzpt1n/BlB64ugPqKHZ885tIEI
Rol/5o9fSRuKsCZVvcLGm4YIHWclbxQl0nNE6LX6+92qHNpYBOmAjeUG52gT
EXz0FyidvE+bieAxN6ed+SfaUoTD/Q5cUO0g5ngVwfVhw74/A+mVIuhEKKX0
mEzbiRBxcX6mpTntKELfaYuWXd5Au4hgEWa03ymKdhXhQvTFxgk7aQ8RphVO
7zbxDO0tQuwik3CnStpfhEdPfsZd+kgHidBpWt3cxUqpHP8iNFY9u91hCB0p
Qrubqpb10+hYeT0PZQ1ssaYTRdiW5JU10ZsWiaBZ98NpWwotkb+/+Hf9hh+k
ZfJ8rWclvyqjM0VwiQuXlL6is+Tjw7K7asVfOkeE7PDj9W37pnE+ifDt9pvP
DpPoQyIcuOV9ps6CzpPXO79GJvOg80UwyQtZtzGJLhAhtbNV/LoDdJEIat9O
v465QheLkOR8S3Clhi6V5++8e4xWawnnowjLTsi2ZQ6kb4iQvm2l86hpdIUI
9YU1Rypt6HsiDGnxTUv0p6tE2O4TPm5pBv1UBLOu744Pz6erRXhX7zVf+S5d
I4L9unWLGj/TtSI4ti1b/axL+n+uF+H0HmvPGyPoBnm8sRX1RfPpJhGifPvu
OLyWbhZhy8BPR7ZH0S0iXNkzUZS4mxaIUSLeVRNQQrcV4+namE1OL2glMQ5c
ONh98R+6sxjnLqvnTuybwfkvRvg+iz79JtNqYow84rTw3zJaXQzLnfYa1d50
PzESlz5Ycz6V1hTj/fTu7bfm0VpixBd0ued5i9YR46zFlkTjenqkGNNmjL/V
R1nK+S9G6p2wdnXDaH0xYjLS7I/PpQ3E2KWXd91nDW0oRv9trd6PDaMhz686
cOSbHfQcMYr7m9clFdHGYrhsOx43/DFtIkZgidK5Mz9oMzFmqv7NmdJTxvkv
Rvf1hh8PjaOtxfBsaXtNxYxeKcbU2271zm60nRiF8/9558XTjvL3sftP/ad9
tIsYE9tYLNa6TLuKITXvrWHxivYQQ+lp0oqQf7S3GKKS4Kv7+23h/BfDd7py
waPJdJBYvt+1a6dqRQvl9StpvmPjTUeKcdfv/LhTYjpWjNUPPB7rHqUTxTj9
0ffFmRu0SIyBlr3z172nJWL8G1M9yVBpK+e/GL2/L30wXpvOFENze+Me8zl0
lhjVvcKDtzrQOWJ4rHr3vXMYnSsGLvl6HtxJH5K/n9PT2/idp/PE0DL9stzj
GZ0vhqA+7py0hS4Q4+MMm+4f+27j/JeP9xVXat2n0sViNI+szR64gi6Vj6+x
xr6/A+lyMW5s3RfQeht9Q4wF+ZPE48/SFWL07djaKekJfU8+f154zevaQleJ
sTS3g05+v0zOfzHmnM+PD5pGV4th6rUy2nE1XSOG+Yim+y6hdK0Yi3/9+xWV
RdeLcU3DalNBCd0gxs0p/Z+1vKKbxDikXTfcrO12zn8xtuaW7js6lG6Rfz7J
vFl9Hi1IRd/CF6rxLnTbVLxObD++VTytlIrhi8tLgg7SnVNxd/Y2y983aJVU
PNYQ7tv8iVZLxdkI8ZaWbjs4/1NRKDUbHzyW7peK70LV4y3mtGYq3lX9iA/0
prVSERoR6Po9ndZJxbPlVyZ4nKZHpmLIaI2ad1W0XioMbG5ErvpF66fioOlk
3Tt9d3L+p+Jf481Hs6bRhqlYsDoz7vhqGqnYvaBDR00hPScV1i2vf8dn08ap
0PUtv/nlIm2SCoHkw+5lNbRZKj7PebTvcesszv9ULJtZtjdalbZORZKlztrR
WvTKVJjZS99W6NN2qVB+PVbDbS7tmAqbwoyfrZbRLqlQO/FSkuxMu6Yi/+IP
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
46b+/tPrb9KO6UhcX/yj5Rntkg6p78JTiZ9o13SYPfVU1/hHe8jf36ynjtnd
DnP+p8PC9GfboZq0fzrGV08I3a1HB6XDcMQsn34zaWE6vpe1zUxZQkemI6J8
8JkWezo2HbmNR/ev8aQT0zHjq7d1aTgtSkefZ52OD0ijJenQHxSQ7bmblqXD
Oj5YqfgEnZmO7kv/XWhfSmelY6b+ie1G9+icdCzAutDQGjpXPt6ujTI91kQf
Sofbt7ivT9oe4fxPxzXzj3b/1Oj8dCTU/QzrO5QukI9vo/IZehPoonRcbJcS
M20uXZwO7cDPlrOX0qXy9s17z810osvTUZ21st1kH/qGvN1Ef5duFF2RjjZJ
FZPU0ul78ve/Uzv0Zw5dlY4peUeHP86nn6bjwu9p10+V0tXpyPq3+m7KPbom
Hc570uKdaujadJQdfzPMoImul78Ppy+3OrQ9yvmfjkmzvLbfU6Wb5O+n8/fD
O4bQzekYaper4TyebknHz+9uP4bPpgUZmDJroO1Hc7ptBjI0AjccdqCVMrC8
wnbcBk+6cwaGebtd1Q6nVTLw7J/t/GoxrZaBZReKy6XZtHoGCpXnrDQ9RvfL
wME5bTRaldCaGWjVVU31RAWtlYF7eqdXrammdTLwsX2Sco8GemQGvs20H3nh
H60nf/57SetPdsjj/M9AXNu0uPhutEEG3njZ/V7dmzbMQOLpP2XjBtLIwFPR
0a/thtFzMlAnGxxbNZo2zsCqMUnxBybSJhlQOrRREDSdNsvAubBrDSZGtGUG
Ort/s+2/iLaWv6/1+yw+LqVXytunbK8oWkXbyfPZt+BJghPtKH/+m15+Nm60
SwZWtlq8X8eHds1AvmmAz/cg2iMDx5X/Vl+KpL0zEK459rMokfbPQJm13e5V
EjooA68agwXDM2lhBi5tTVP+vpuOzICjap/SkoN0bAZkL0+OSTpBJ2ZgsM04
M+uztCgD9/O36wy5REsy0HbJjKKP12iZvH1dXeeCu3RmBmwvtx4Q/pjOksd/
7Ne48BWdIx8vwnOxPd/TuRlopzfs7fNG+lAGhKNyO+X+pPMy0OZXwC+PVsc4
/zOwa3J1/uSOdEEGZiW9MGzdnS7KgGjKP8k1dbpY/j56JpxL1aRLM+B8YtEZ
Gx26PANTv8niBuvRNzJwxm623vtJdEUGvg/QPnxsBn1Pnu/srFYB8+iqDPTe
YDcGi+mn8uddv8GggxVdnYGG7KoBt1bTNRmYLXZ7JXGmazPwyFM5csVGuj4D
NeIO7Qb70g0ZUNXo4FwbTDdlYITBudwjUXRzBr4mq9/0TqJbMnBe/XHllHRa
IEVPUcM5wXa6rRSazZ8Sy3JoJSlK++yemXiI7iyF+tf8p0vyaRUpAg0N7XoX
0WpSTJ74+vrTS7S6FC7+Es1d1+l+Umx5tNt2bSWtKcVgo2FxI5/QWlLMXtpx
e+MrWkeK8kkxmafe0yOlKNO+G7P5C60nxa2cSlv8ovWlGOR8Q6td6+Oc/1Ic
bzj28GpH2lCKrIpd/sndaUjxvMiyg4UGPUcKbaUVkb0H0cZShP4Y9uWJDm0i
xbItJmZZerSZFN30Tu1wNKAtpdhRZvpcB7S1FH8nDu32cR69UgrVh7KxxxbT
dvL4hWuMfKxoRylmClJMJ9vSLlKY/HAw+uNMu0oh8Bo+rmQj7SF/X8oF3aN8
aW8pzrX/WGMcQvtLETKs16HO0XSQvN6yMWsrkmihFE+6Pe8lSacj5d/X8+lZ
q+10rPx91tkt67uHTpTCsvbH2+eHaJEUJ1bOcNuVT0ukmNZYUOtURMuk+F6s
vFy3lM6UYnzq9Qv11+ksKczSJ/bPq6RzpCiJqPHwekLnSrGhLqdw4mv6kDye
36XfP9/TeVJYJMfon/tC50vRKjnKSfiLLpBi4r/8pNmtT3D+S9Ha/faR9sp0
sRRtB70rv9qdLpUieYjB40QNulyKFk2914sH0Tfk72drQE0PXbpCigsqps/v
69H3pIg+0vaOzICukiJpcmnRCtBPpSjOsM4eYExXS6Hi7h/6cjFdI0XO6btW
OVZ0rRQD7r3QXWtL10uxb673N921dIMU209YFdZvpJuk6LGoyf+oL90sxfyu
eeM8Q+gW+fu48eCtfjQtkGH8xT7pP5LotjJ8ykmaXphOK8lw41b310Hb6c4y
TLszPHzGHlpFBof8kf1aH6bVZOiiN/1YaT6tLsMQjeEzY4rofjJMn2d6Y34p
rSnDvMZN5p1v0FoynBK43btVSevI8KxYz1z8hB4pg92qsusWr2k9GS4NGzOz
1wdaX4YD391OVH2hDWQo0G4auO0XbShDYcGMmFWt8zn/Zci5XPp+oDI9R4Z7
Z+ctfNWdNpbhfMnJfTkatIkM7W/F/nMeRJvJYLpT00JXl7aUoefSpbs+6NHW
8nzN4j4eNqBXyjD8YKi+B2g7GRZUf/EfZ0w7yrCq07TCpsW0iwz9tz9vPmVF
u8ogdF+gH2BLe8iQvCzabepa2luGW54Ru/9spP1lOPMq6MEFXzpI/j5P3G4f
HkIL5fmHFevPiaYj5fkMvWjbPpmOlaHP3vax5el0ogynHbsfjt9Oi2ToJla7
bbKHlsjQ8VnVp66HaZkMT5y/K9/JpzNl0K87pZVWRGfJoDxgu+HSUjpHBpWY
B+a9b9C5MmiP27T2USV9SN5+/UPAtid0ngwuR0fEr3pN58vwfp7tloEf6AL5
+/x2fN/LL3SRDDfz9fJ3/6KLZXjQzfO8U+uTnP8ynHO6eXmYMl0uQ0V7m2t1
3ekb8vql6d04qEFXyMdfYq/rboPoe/9rb31ljC5dJYPa7fMXGvXopzK0sVt0
8oQBXS3DVdNJuT6ga2QIj9+wZZIxXSuDccvlmJ+L6Xr5eN4R63nWim6QIatV
tk2wLd0kw1grYMZaulkGX2GaVit3ukWGY2diOlzypQVb0Fv/S21kCN12C/5o
6l41iqaVtmDCxW65Ssl05y3wTNoYdS2dVtmCuPeP7BO302pboPboq+GiPbT6
FkhOHuypcpjutwWCA/b1d/JpzS3oUexfklZEa23BdWVIlpaenPF/Fh4QQQ==

              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.016500692224879893`, 
           0.06628239331518782}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxd2HucjOX7B/AnLQ2tjG8Oq6ip0MSqyanBYtTGOI+IpcVgZbExTjW0MWmx
zuM8RRraWFoZbKzzYDFpMSHG+XHKOlTjVFut+r1cn8/9x2/80+v9up/7vu7r
uu77eWZ7YeDIdwaX0TStfTlNe/Rf/Iu21v7/P9v/pyHGxhhXiXFCjGvG2BTj
F2NcO8Z1Y2yOcb0YJ8b41RhbYvx6jBvGuFGMG8e4SYybxviNGFtj3CzGzWPc
IsZJMW4Z41Yxbh1j2/+3J8Zam5jxGGtvxozHWHsrZjzGWnLMeIy1t2PGY6y1
jRmPsdYuZjzGmj1mPMZa+5jxGGsdYsZjrHWMGY+x1ilmPMZa55jxGGtdaNNO
jMdY60pbOa5s47iDToZtynY+r9wJDio7OL8b/Q7nK/fgfOWenK+cwvnv0H04
XzmV85X7cb5yf87vDnucnK88gPOVB3K+8iDO70GncT6tvc/5ykM4X3ko57/L
+cM4XzmD85VHcD5tc3F+T3oU59Oe0ZxPB8dwPq2N4/xenP8h59OejzhfjY/n
fFr7mPNT+Hwm59O2iZxPmzycr/wp5/emJ3M+bfuM82lPFufTwSmc34fzp3E+
7cnmfFqbwfm0fybnv8d4szmf1udwPu3wcj7tnMf5qfR8zqddCzifDizkfFpf
xPl9YcsSzqe9Ps6ntS84X40v5fx+3P+XnE9rX3E+7fJzvvIKzu8PZ6/kfDr3
a86n9RzOp82rON/J+athE12Sy/XU+FrYSZvzuD5dvA7206H1jEfrAVinoxsY
fwBcZRPj0/Z8xqcXfs/49B+bGZ8eUcD4dJltjE9v3M74tGcn4w+EM3YzPh0M
Mj59dg/j00/uY3z6nULGp7/bz/h0nYOMT28JMf4gOP0Q49NvFDE+Xf8I49Mv
hhmffvMnxqfHH2N82HPwOONz3PIz46dhPP8k48Narwjjc/yZM4xPlznH+HTl
C4zP+XV0xoeDKZcYn89/c5nxB+P5p64yPmxbeI3xYb35dcaHnWVvMD7H/7jJ
+HDwf78yPmzq+zvjc/6vUcZ/X2y032V82LvnHuPDeuoDxodttf5kfNhZ7i/G
h101/2F8rp/2kPE5//J/jD8E87s8tgvx4XBRGdgGx7niYCe8sEU52APnNjLA
fnhsagU4CGdsi4d1ONKtEqylYz9PV2Z8eOKX/2N8+HS7KowPzzZWY3x4693q
jA9vulqD8eFLPz/L+GLPY3m1GH+oOMH2POM/cjB5UwMT48u4LacP7RQH+9/j
8x7MX67W84u1D0ao+PC9PcxHh+f3Z321YeLw77+2RHzYNqFKK8SHh2ytDTvh
XvsssEfseXuoFfZjvNUGGxzEeA39bViH7xzsCGvDsb8m3WCT2PTG1R6ML7Zd
vZ7C+GLP4UZ9GR/jr55xMj7mtzEPYnyxvmncYMYX+9/cNITxM7Cfn4Yyvliv
Xzic8cXOXRM/YHxxcMxfIxhfbJpf3cX44sDCOXRQbGlyidbFxgaVRjH+B/J8
QgJtEkdt//B5m1ibvoV2ip2jOtIesc0xbCTji4MDrnG/QcxPj8tgfLHnsf3M
Vxsh4xNfZj1MYltHSxrjw9eLWV+n2BPZ3Yfx4SmO7oyP9b7p347x4bQ3eF50
WK9cn+dvpDjzRDLP/0isF3bw/GP8eK+ePP8Y/zPYh+cf/udoX55/uGvP/jz/
8JA2tA6vXsPnNZesv+Qs1zPCmb16cT/w+FB32ALP+VPtD56b2RV2wOv/5rhT
7Hki613YhfGS5/px/+Lg71sGw16xLefBCOaD578bNQ4OwN9uz2R+mH/ePxkO
i/VjI6YxX7Fz8PpZcBTzd740j/mPemT/+IoLmb9Yu1RuCfMXexqX+YL5i721
7i5j/uLA/h++Yv5i38RWK5i/2Njas5L5i4vrfPM188f6xjU5zB/7uZb9DfMX
O1e/uYr5i0ODfqaDYnvFNquZP8Y7TaV1sbnvKjqK/d1bSWujH9nQdCJtFBds
bU6bxPbPzjKeRZz97yDaJnZfOcX9OsSeuBa0U+yvNI/5ucS2lPMqf7F154u0
V2zJG8R6+cVak5WsZwDrm3Q/88f448/TYXFgfnA58xdHp3f4kvlj/bEXljL/
MTJ+byL7axRrtV77nPmLvbfv8jxYxPquo4uZP+ZPKlrE/MUu1x2eJyeen9uO
domDv51awPzF4YRvaS/ifxui/WK/9gbnB8TGa3/TQbGpcXXuJ4z9DJzF/eqI
/3gK84ki3tixKv+xsv7fEdbHKDY0bsl6msQFlVex/hZxwiIT+2UTlwxaxf46
xC736zwfTrGv/g6eJ5fY2aDNGuYvTv9w+1rmj/hJdfOYv9h7K3Md88f817d/
x/zFngrn1zN/zHeNDDB/cUr4Ah0VW9NbbGD+42R/b2fRRrFhVwFtEvvTI7RF
bKxxhbbB59W4Q1xcupV2ikv+nUq7xKE8G+0RawnF3J9X7Fo2kfaLg+fK0gGM
j/pP5Y/9ZZ5jfcJYr+Fq1k8XO+LSvmX+2G9GddZb+/CRTaf35zJ/sf+7Mer+
i21t6qj7z+cvsN82eGMOz4MD/ncC769TrBUP5vlxYXzZUJ4vj1hfWYXvT6/Y
+YWP59GP8a1D+L4NiIPZM3h+g9hv5/J0GPHO3OJ91rH/bs04HsV6l/9U5/+j
R/aMTFTnH658hu8Pk9hy0MP9WsS6M8x8bHC13ip/cXhUNfX+gz8oo86/2PRT
VXX+4Tl29scLV5nPfvoR33OD5zsgDkZe5PkJiotzumxk/uJA9zGbmL/Y98fM
fOaP/Sxa8D3zdz+yd+CUzcxfnFu+7xbmLzZVq17A/MWGNhtom9g4u95W5i8u
eeUz2ikON91Bu8Shiadoj9jZWtkrDvy9k/ZjPcccOiB2n+1AB8W2uD+4nzDG
L86jdXHwfyY6Ko6cW8H8tPHyvC2BNopDtizWwyQOPn2d9bKIrUlv0jaxee4S
1teB5xvcYP2d4oLMZrRLbHx2JvvlEdsiOvvpFftXtaT9iDc1R91/sf5+Ah2E
DVb1/hM7pg/i+0EXh1tv4XmKik2NmtLaBIk34zLfF0axc9VO2iQOWEO0Rezo
XYbzbWLbvOG0A89fLMP4TnF46wHahecrfM/9esTeJYPV+w/rl5ZR+WP+iQAd
EAcfZrB+QbHr6Sasb1gccZdjP3Sxqf8Fdf7F1sNb1fn/WPazapE6/2JvYIQ6
/2L/8jbq/IsLaj7J82cTJ/xyUJ1/seXy2G3MXxxqW2k78xfnFiykPWLnwMd3
MH+4tDftR/yDS+iA2DdpBx0UGzuE6LDYlbud1jGeoeZHMf5dKq1lPrLnx3ja
KC5JXcP9mcQJTRrTFjzfcz3zs4kNN2vSDrG90SR1/8Xa1Ajr5xJ7W9WnPXh+
53jW2yv2v3+A/fDj+Zyn6YDYVTyI/QtiP99uZX/DYuOw6qr/Yv3zSTwfUTzv
u8/zo33yyKZFbtoodo2vSJvE3pP56vsvDp8dqb7/Yue7rdX3X+zf9JL6/ouN
VWup77842LW++v5j/K/O6v6LtWHq94gfz+8+rM4/nj9jVudfHO29UL3/MX/l
U+r9Lw6cW6TyF1sMZtZHmyjPx+2jjWLjV2msr0ms+yuw/hZx+OhG2ob59/qw
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
lb3iqOcG7RN7qkdpP/Ip/7f6/S82tX5Cff8xf0F19f0X2yL11PcfPmKjQ2JX
vd50GPMXjaEj2O+GubSOeNXW0cXIr8+PdBTrV7xJl6Cfmw2q/9Mln2N1Vf/F
gSNvqf6LdUN/1X9x+NhHtEns9cymzWJt8le0RezPWkdbxdG5W2gb4hl3qd9/
WO/oHvX7D8+f2ad+/2G94fvV7z/EKzqofv9hPVsR7RKb7h2n3WLbmYvq/iO/
lVF1/zG+tBx/H3oxf80LtA/7696G9mO+nkbn4vlPZtIBsfG9fLpAHNx/gQ7C
dSrsZ//FrodN6DB8eQAdETvHzaZ1xO9TQBeLLY0u01HsZ36FA+w//KeF1mY8
sudAD9ogDrcbRxvFxtx5dILYUWYNbRJrw7fRZrGptJC2iIOXDtJWse39vbQN
/ncTbRd7ey6jHXD/j+kUsaVnN9qJePueo9PF0ZFXmb8L+bzzNe3Gfsen0h48
f99IZ2P9n/eo/osDJpfqP+afqqn6j/E76v2ci/lDxqn3v9jZ4CX1/hfrrY+r
+4/9rZ6q7r/YP62Vuv9wnVL19z+e/z2ofv9hP+PmqN9/qHd39Xspiv3U6aB+
/4ldQ1uo338zZT8fKRvEltEd1e8/caBphvr9J9a6qf+/YBKHr19Sv//EprVN
1ftf7NqzVL3/8fxPldT9FxufnKfuvzjYvhbr6xA7kjbSKVjP05n9cmL8+9t0
OuZ/OpvnwYV48xscZP/xvO8Q7cHztoEh9l/sbX6X9or9rdw/sP+oT927tF9s
i+93iP1H/qO30QE4tdyP7L/Y+V4bOghPGU6HxNH+U+gw6vPDXDqCflycSevo
3+8T6GLk4+xHR/H812/QJVj/JQOtzZL41p+4X4M48MxC2ijWrnejE8Ter5+k
TXDHvayHWRw++SFtEUeT6tFWsX/sedbXJvaMnEfb8Xy1drRD7Gr7H/uVAoe2
0U6x3mMCnY79LGhFu7B+HYPqP+ZvOsXz4UG8v9bR2fDRmbQXfmE07UN9rg+g
/WJLtVQ6F/nPV+MBcbDOGLpAbByu3qdBPL9nBx0S26wP6DD6M6E59x9BPw7O
pHXk9+A6XYz9zezM+kXFjvPb6BKsV+9V9kObLfE3fUMbxKb9z6v+i/2bv1D9
FwduVeH5MYld4Vm0WWyMaEXsv9jzyUjaiufbnqJtYmeo6WH2H/tZN4t2YHz7
KTpF7D1e7Qj7j/X+stPpeL77B7QL6zX4jHbj+f+m0x6xPuJTOhv59hlKexHv
Shvah/w+epL24/nTB7i/XHH0lXF0QBw8W50uwPjqAPMPirVxbegQ6t+6SN1/
7P/x7ur+4/n8U+yHjvHEVLoY+TS6zH5GUY8Ph9Ml8PS/eB60OTL/5mzaILaU
qUcbxY7aR3m+EsSBxRNpk1hb0Iw2i/3tHqMtWO/4SfX9x3jL7er7Lza51qvv
P8YT89X3H/PLHlLff3G02x31/Rc7a9dT9x/j1rHq/ouNxUfU/Rd7n23G/DwY
77pBvf/Fwa+asF5erH9jn3r/Y/713qy3H+PvPFDvf8yPLmC/AmKXvxH7W4B6
9jqm+o9x0wiej5DYVqMsz1cY9XAtoiPIb0ito+y/2NNrKV2Mep4pF2b/xdYZ
zegSuMZgWpsr6/2RTRvExlU5tFHs37GFThAbru2hTWK7vpc2i3Ozt9EWrHcy
l7aKs6/Mpm0YfzCUtot9mS1ph9hdszydgv3aVb5OsaVqAp0udu6Zoe6/WF/w
gPV1i22/9KE94vCzO9mPbMz/8jnaC0c+ZT99YlerG6r/YlObXqr/Yk+HIzwv
AbHjOwddgHwX6zxvQcS/NYkO4Xm7hQ6j/jfuqve/WNsYUu9/caDBRvX+x/pL
19NRrH8nSJdgvzeu0ZpX8vurFuPFif2p6ep9INYqFtLxYk/ha8zHKHZoa+kq
YqPhdfW9EFv+3kvXFLtO91XfD7H++X90bcR/ZRXrb0b8j7qyX4li05i/aAv8
9Er2uzHid2vH82DF+g2u00lY70xrdf7E4U+m0cliq+8HdR7xfKeyP8GdxIai
ZrRDHO33Pt0D+Q6cQacgn07f0Kmo14bNtFOc3mYXnSaOHN1OpyPeu+vpDDx/
30e7MF5mPD0W8Z9w0G7E3/ccnSl2m39hfh5xqPNqOkucMmgQnY3xlc/Ss1Dv
7JWspxfr/16BXggfGq2+l2Jvz3Ps1zKen/a0H/Voqe5fDup52Urnon9Fu3g+
8vD8vw71fkV/et7h+cpH/z9ZQRcgfmQgvQP9ntyUDmK9jrXoQpzPndXpEPKp
W5cuwv6X2ekw7o82iT6B+P+F6Aief6ou93sO+QxdpH6/Y37Fasz3KvaTr85/
MdY7+zbrdRvzC+/QUczPymW97yPfsunsR4k4t0J19q8U/WyYqd7/8yS/dpfp
OLG9vJ3nxSA2JebR8WJHn4rHeP/FFuswuorYO3wPnSCOfFP5OO8/1lvfmzaJ
s0f66Npi84Mi2ozxD/+gE7HfblVO8P5jPxXq0o3Fxvb1aSvWO/sSnSSO5lei
bcj3j9+4frLYemcPbcf+LdPpTtj/pLdpB9a79ifz7SEuWbOCTsHztmQ6VVzc
+pK6/xjvNUHdf+zfVlndf+S3Xd3PDDw/U72/XGLbxXz2eyyef/O++r2L9ebZ
6EyxVrxMff+wXrV4OgvrZXvV9xDzWybSs8SBQp3n1wvb19ML4SU+9b3EeXjt
S3qZ2JO8k/Yj3r4SOgfnqUtXdf+x36ZBOk8cHNlB/b5GvjNv0/nY73c5zLcA
+S1xsT47sL+TdVm/oDh3xjK6EOfranXWPyQ29FxCF2G/HWuwn2Hs77Vl9Alx
QsZzPB8RccGI5fQ5zF/1DM+fjvOVPY++inifP/Yz7z/Ob8ZQ+jaeDxyko6hn
42dP8v5j/vWBdInYd+5LulTs6vojrc2X/ay4SceJTX3/oQ1iV4uHdDyefzlK
G8XGtifoKuKItpZOEBfEj6ZrirNHNqBNWO+T88yntthS9BltFptffJFOhJ3b
1P0Xp7u6qPuP9ZrrrLcV+SwdRSchn0FxtE2s9/iC/UvGfk1NaLu4OO2k+v5j
vdWT1Pdf7OzSUH3/xY5lv6vfq+Lw6gI6FfvtPYd2on7DRtFp2M+ggXS6OPT1
AHX/xYb3Rqr7L3bPnUmPFVuf2Uy7sf+vf6MzxYGvGnO/HqzfdhqdJdaWXKOz
kU+vLqzHLNTvpSDtRb8/bsZ6LhQn/FxA+1DPlUnszzL0L3Uf7cd4Zkf2Nwf1
8hync9HPS715XvIwXuk8HYDHvXeK9x/1/fA4XYD8Pnwrwvsvjt5aQwdR/4yy
p3n/MX93DzokDt5aTBeh3s1+pMPof8M79AnUa7nhDO8/zvukyvQ59LdSPK2L
S3aXcP5V1KNphC7Gfhzf0rdR72fG0FHs77CFvi/27r7G/Epwn3ovoEsRv0IL
WlvwyL7kC6xXnDh39ETaIDY/rEnHi/3tt6v7L07Y1Ufdf3FKYSn7lyA2Fa2k
a2J+xy60SWzcoan7j/nzt/N8mMXRhh46URy42lXdf4wXqu99Y3Fwt/p9YMXz
s59U33+xJd+ovv9i79TadLLY8XI72o75U910J7GzfwHtwP4bluP+e4hdbQbQ
KZjvDdGp2O8vzVkvp1g/tZlOE2s/NWe907F+3f10Bvb7bA/2z4V4v6p+j0W8
Y26eB7fY9rACz1sm6v/FF7QH4yfqnOX9R/2Or6WzxZ5DL5/j/Yf/+4L2whfL
nOf9x/4q9qN96P+Ib+llqH/9m7Qf+9lQ4wLvP/LPa0bnYr3S9nSeOLy1Ax3A
84lJdD7qceQ5ugDxHPcYbwf6u3gbHcT4tnF0IfIvW5cOod+3iphvEZ7/Zzgd
RrxIHH0C9bd8zvpFkP/mevQ57LfmdnX/0d9qneirOB8pF9X9R7zPP1T3H/Fm
PK3uP/Z7egv7fx/7fXmwuv+IV1pT3X/M36XzPGkLpZ5rN6j7L9aLvOr+i/0P
1fsgXuy6kkkbxaa7M+gqGB+2hk4Qe3tF6JpYb3p17sckdsx9n66N59cX0mbs
55p6vyWKg9fW0BbEr/Mq69cYz99W9bUiv6HdWP8krL/9Nm0Te0pnsn/JYmPb
Buy/HesHjtCd4K4jeL4cYkvDChd5/zF/kJ9OEWePq67z/otLfutNO8XO7xfT
aVi/pIhOFweeKKUzxOY+L13i/RfbZ71JjxWH+vWm3ajvxiF0JuZnfUB7UK9b
w+gs1OcZJ52N9fp0pmeJcys3or2o3+7K9EKsr93kfn2oz/Qd9DKMvzyD9qMe
Bd3pHHFxvWfoXNTz6g7WMw/9r/wWHUD80yF1/zFudaj7j/olnlX3H/mtG67u
P/LPfVzdf7FWksPzEBLbenZT9x/17FVB3X+cr/4/8TydwPn2r1b3H/2tOkfd
f3E0awqtY/1P1fhV9D99DV2M9Z0n6dvYf8+qjB9Ffe4Opu+jHnMP0iWIb23G
/ErhFVtpbZHk37Ad6xUnDj+j0wZ44GTWO17sLlON/TGKTZ98QFcRu1YcoBMw
f4yJ56OmOLd0PG0SW9sdo2uLLQPMl3n/sf57H9OJYkfHQ7RFbHunyhXef4yv
TKGt4ui0xXSSOGXUYdomjtwrpZOxv8O1r/L+i51Xk+lO2N+bfWmHOFB5BN0D
/vwjOgXPWyfQqWJf3w9pJ/afnUGnie1t1PrpqPez7ekMsZZvoV3i4MYq9FjE
/+EB83GjH5tO0Jli72sbaQ/W/28OnYV8Lw+ns8Uhb3t6FtbfYqa9iH+3PL0Q
4wd+ZX984oKlJ+hleH7rLtqPerTNo3MQr92XdK64ZPU8Ok9sbj2dDogNZz+j
83Ge3v6ULkC8tso7kH+uej6I/b6eTReKi3Pm0CE8v2sxXYTz0thPh8XZ29bS
J9CfuM10BPU8vIc+h/N14TCtiz0Vz9BXcX6TfqGLkX+vu/Rt5Pfuv3QU9Xi1
Aut/H/P1qnQJ+j/8BboU8cKJtLb4kU2VrXSc2PXaW7QBbtCFjhc7K/amjWLb
T4PoKmLt4xF0gtgTP56uKU6f9hltEjt+nU3XFgda+2izODJpJZ0oLvkuj7aI
rUc2q/u/GPUNqvuP/V06pO4/1jup7oNNbA9eUPcf+S0vpu3i0Ki7dCexuYV6
Xzjgf8qq+498NlZS9x/1HVBD3X/Y8JK6/+Lw6kR1/8VeW1N1/zF+rLW6/+Li
fup94BJbrr2j7r/Y+H4q7RYHLw2mM8XZKSNpD9Y/5KazxAXWyXQ2+rdyJj0L
58GwiPaiX8OW0wvF7h9W0z6chzob6GXo/yfbaD/yObaPzkH/6hymc7H/cSfp
PNR330U6gHo9dYPOh3vdpQsQb/k/9A70+0rcNd5/9K/uU3QhxodUp0PIb5WJ
LkJ+V1+hwxg3NaJPoD7vJdERnJ+Fb9PnUO+iLrSO/T6eQl8VJzQbQBej/h8M
o29jvn8MHUW/j2fS91GfuKl0idjXeC5dKjak+WhtySP756+g48TpwbW0QZzy
6yY6XuytsZM2ik1vH6CriDXXUTpBbPsiQtcU6/su0SZx8e2bdG2xs+p92oz4
LR/SieJQWrlfeP/FBTMr0Y3F5o0JtFVsibxAJ4kjD+vRNuz3pcZ0sjjcriVt
x/4z2tKdxA5vV9ohNuan0D3E2acG0Cni3L+H0alid62xtFNssH1Cp4ntA6fS
6YifNZfOwH5X+WiX2HNwBT0W9SheS7tRr/L5dKbYV28n7UF9Oh6gs7Df4Ufp
bNRrZoSehf59e4n2It6PN+mFOD+37tE+9LfCQ3oZ8qtX7jrvP+rVvhKdg/2l
J9C5GJ/2Ap2H87CqHh1APfY3ovNxPq8k0QUYL9OW3oH+mbrSQTzfKoUuRP6p
A+gQPGEYXYTnfWPoMM7r5kz6BM7DiSl0RBy4M4c+h35W8tE66pe4gr6K+R3W
0sWo55BN9G3c16wddBT9XbGfvo/+7DpCl6D+Z0/RpehniU5rvkcOVr1Jx4l9
De/RBrGzaykdLzZnlC3m/ReHs5+iq4jTv6lOJ4i1vSa6pjj7wiu0CeP/NKRr
i13Vk2izONLobToR8R1daIvYk9GLbox8sp20VVySM5ROwvw9o2mb2HH+YzoZ
+/8ri7Zjv1Xn0J1Qn9eX0A64s5/uIfYPXUOnYHzKRjoV+12xnXYi352FdBr2
c/ownY79PjhJZ6BelXXahXwTb9Bjsb79Lu0W29L+oTNRj0lxN3j/xblLK9JZ
4pQt1ehsxDv+PD0L+f1mpr1Yv0JDeiH6VacF7UM92yTTyxA/tTPtF7vdPekc
jC/oT+difH06nSeOHhpFB3A+f5lA54v1x7LoArG91mx6hzhgXUwHxQk9vqIL
EW9kLh3C+Z6xgS4SW1Zto8Ni75599AnEP1dER/B8yc/0OfTn6Yu0jvVfLaav
Yj8d7tDFyG/w3/Rt1N/z+E3ef3Hx0nj6Ps7Llqp0CeYfe44uxfxfX6a1zx85
YnidjhMbajenDWJL67foeHF6n060Uewd9y5dRRzw9qMTxPq3Q+iaYu2gizaJ
TZfH07XFtoeTb+76P4tZ5uo=
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2Ht4TNf7NvBdgrSCKVFx7GipINVxzGiDXYI4tSOCOA+CIBgVxKFsaRCH
MghCg0GQkjIIok4bKUEwCIJgaBBt1LSUqNDf23Xf672u7/jH9bme9axnHffe
k7rDJoSPKKUoSpeyivLf//jnaaf87z/1f+nrZYOX/b0c4OVaXjZ6+SMv1/Py
J14O9HIjLwd5uYmXTV5u6uVmXm7u5RZebunlVl4O9rLZy629/LmXv/ByiJfb
eLmtl9t5Wf1fa15WvvSKe1lp7xX3stLBK+5lJdQr7mWlo1fcy0onr7iXlc5e
cS8rYV5xLytdvOJeVrp6xb2sdPOKe1np7hX3stLDK+5l5SvaeARxLytf02bG
pVXGLXQorEqHsb10d1iXtjC/Jx3OfOkI5kv3Yb50JPPD6f7Mlx7IfOnBzJce
wvxesGZlvvRQ5ksPY770cOZH0FHMp5WRzJcexXzp0czvzfwxzJeOYb70eObT
qo35feiJzKe1b5hP65OYTyuTmd+X+VOYT2tTmS/j05hPKzOYH8n2M5lPq7OY
Tysa86XnML8fHc982vgd82lrAvOl5zK/P+yYx3zaPZ/5tLqA+TK+kPkDOP7F
zKeVJcyn3UuZT3vszB/I+DLm057lzKcNScyn1ZXMH8T6q5hPu1czn1bXMJ/W
1zJ/MNcjhfm0cT3zafcG5tOFDuYP4Xg3Mp82bGY+bU5lPm3bwnwrx7MVNtLG
NPZHJ/8IW2nTDvZPu9NhB+3cyXp0mBN20913s/5QOGoP69OL97I+nZ3B+nSt
/axPJxxgfdr3IOvTW39mfdp6mPWHweajrE/X0Fmfbnic9eluJ1if/u4k69MX
s1ifbnGK9emM06w/HLacYX26/DnWpx/msD794ALr03NdrA9r6ZdYn/7tMuuz
/Ze5rB8F777K+nTb66wfxfw81qczb7I+2+/IZ336lzusD6tz3axPH7vH+iPg
Kr+yPqx8V8D69PsPWR+26o9YH3aveMz6sL7kd9Zn/r4nrM96ZTysPxL5Xf5k
fXr7X6wPGxo/Z33Ydv5v1octK1+yPmyf94r1YdOW16wPKy/esP4oYd92ylHU
h+M2vgOrsL1+adgKp1zwgTU4ylEWdsCu9b6wDpecfw92wwVNK8BKtLD5QiXW
h7PC32d9uEN+ZdaHP4n3Z304QP2A9eHgCgGsD7+4UZ314enf12T90f9Zf1iq
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
/CZ15fMf8YWf0DrinYLobMSbN6NdcAUznYfxzm8j3/+I92xPF2I8NTrRHrRf
F0YXw8ldaGWByL8k477CWhWZb4BbfSm//4T1up/TRsTvmOT3P5xWnzbBSnXa
jHqZ5WlVWH3yVu4/4m+fyf2HJxXJ/Uf9AnkerIg/fCL3H/Uev5L7DwdVkvuP
/A1N5P7DlyPl/mM8hd/L/YdXnpf7j/4+rcb3iQPx46PpNPTXOot2ov2k+nwf
ZcI9FtM6vP0lnY35jB/J95sL/U26Lt//aK91ke9/1G99SL7/Ea/WWL7/4WGr
5fsf/X36/9//C0U96yD5/odP7JHvf2HNUCLf/4gbgvm9axRWU4bSgYjvmUab
EJ/+LW2Ge42lVWH91pfy+x/1yii0BfGGW1g/Evl1m9JWuH8q5xON+gX/cj1s
yB/XkY6DW0/lemrI90nm+ifCf2yXv/8xnui9cv+R/7F8/jkQ98mQ33/Ir5Eh
3/+Irzgo3//Id2bzfaqj/a4H/B7Nxvh/8pd/z4Yr7+X3bB76S5jA71034oei
+D1ciPhPq/m97EHc7EcXI17nF/5eVhYJ+2fRvvCJd9neAB9aSQfAk0aynhEO
mia//4WVx2c4XhN8sCHnY2Z/5eTfz4XVqNfy97+wflmR73/ES/vL9z/6+90k
7z/iC3pxf6KRXyT/PmGDm67l/sbB2n65/xjPe2d4PhIR97vA82RH/3eO87wl
o77vRp5PB8cfzd+DaXDnqvy96ER/67bQmcJGxY+/P3Vhx82WdDbc00K74I0D
6Dzkd4yk3cLuok50IcY3PZD2oL7nNesXwy2X0cpiMf/RVWhfOGou52OAa/7G
+QYIq4mh8v4LK6tWy+9/tH//IdfPhPapzeT3v7B+aTbXW0V+yUXuRxjio+vT
FsS7xXP/IuEjhdxfK/o/25+OhofL73sb2oePls9/OFC+7zW48SH5/Yf6nTX5
/Yf+yveT339on9ZR3n+0L5FOgzfK9k60fz5bfv8hXidTfv+h/3ry+yQb8YJ+
8v2PeIPj8v2P/lJacr5urPeDfXQh/IPK9fKg/Ve5dDGcMIHrq3wv6v1skH//
E9YG76cNwuqpwdy/ALT/1Ff+/hNW9jrl/qN9eB/5/Ef731/I5z/672bn+VKR
bzby/IUhPjeVtiC+qgLPc6Swo/GXtFXYGhxDRyNecYn8+w/ccKv8+w/G81GG
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
JawMm0MbhdXxC+l6wrbpK/KO/h9z15ih
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.000012641752618947066`, 
           6.368058436123647*^-8}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8273328152519236`*^9, 3.827334126403842*^9, 
  3.8273350404930596`*^9},
 CellLabel->
  "During evaluation of \
In[316]:=",ExpressionUUID->"f69346fe-2dde-4e09-b8eb-527459085f81"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"out4", "=", 
    RowBox[{"applyShim", "[", 
     RowBox[{
     "Minv", ",", "deltaTraject", ",", "deltaTraject3", ",", "magnetizations",
       ",", "nCasseteBl", ",", "device4", ",", "eEnergy", ",", "li", ",", 
      "lf", ",", "lstep", ",", "\"\<exit\>\""}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.8273238222565827`*^9, {3.8273239957766514`*^9, 3.82732399629676*^9}, {
   3.8273247074833846`*^9, 3.8273247083283854`*^9}, {3.8273248631033325`*^9, 
   3.827324865668412*^9}, {3.827332719110963*^9, 3.8273327325307302`*^9}, {
   3.827332875233137*^9, 3.827332919110759*^9}, {3.827333542349256*^9, 
   3.8273335431044893`*^9}, {3.8273342713255835`*^9, 
   3.8273342719805937`*^9}, {3.827334410136342*^9, 3.827334415750019*^9}, {
   3.827335563435475*^9, 3.8273355642532682`*^9}, {3.827335819553752*^9, 
   3.8273358262869186`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[320]:=",ExpressionUUID->"cb111e97-a5e7-459e-8219-e4f0e2bc9c03"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
ILPF44Oj92m4y1H9bcj5I1r6TnoE1d+GrlNV3kol5LZt0FrwMfOejTzVd4et
cvs8h99khjs6o/XdHh0dSfXd0TbnzIdkt1FU3x0lqk/6yxijqb47+jvyc2Ne
kfPcUZfruVR7vQLVd0djv5zn3FpymztEk8OFnOljqP52WM93HLxTQGZsBzvW
bHLfUEWqvx09Mh6iXWFk5nbYBqgdVflGZm9H49AVF0z9xlL97XDYccVjdh+5
bjuSHv75uyVSiepvR2f8syxD+XFU3wOMBfOcF+WRGR7ov9T+T22BMtX3QImz
dm76MzLTA3W9+2u2JI2n+mLvNOjxNVWh+h6Q1RYdLvlJrvNA41PbkdWXJlB9
D3j8amj+LZxI9XdAa2b3HuugSVR/B6RmvCh6xVSl+jvA+LGgOGrdZKq/A5aP
qrROr1Kj+jvQ42FSsXT1FKq/A/79BvOn6DCo/g7YrnFwyjpGbtuBMu1oge+8
qVR/J2Zxyp6ev0hm7ETE5LVH965Wp/o7MdtNZ8HM52TmTsT5rjqdz9Kg+jvh
1nFIc9IwTaq/Ez1TN40v3k+u2wnZLQ+NZppMo/o7xZ9vLiO4hSzlCdwz3DUv
ZDrV90TPmuFbVVRnUH1PMJRmTLxfR2Z6glmdWDtnuxbVF8+ftzhYdrQ21ReP
38iJVasm13mCrWjfb+CiQ/U9Uad9Zk6n/H9U3wvMmy1eTafJDC/UDeM9tXbR
pfpeYD+buOT0iJlU3wswUJo47ySZLR4/6HPiif0sqi+er6e8qqifXCceVzD9
clCgR/W9kJdlpcMbp0/1vdG2YPDl1i1khjekvr0JnV9Ihni8R/ba1zdkpjfw
ZbxDwXQDqu+NurMVk2a4k/PE46stxhYfJNd5g82aW+rdQW7zhq13s3ST9myq
74O2U7Vtd1lkhg8UZj7+Mb6WDB8wD3o3pI6YQ/V9IPKITAx2IrN94KHKeVp8
kpwntnf4Lt5wQ6rvg24mgy10Irf5QK5+2dVRx8lSu9AUPK3Y4R+ZsQusftc5
z5bPpfq7YKu56qRMMpm5C3njp0WbXySzd4E9p7Z/eDc5bxf0+cP6exWMqL54
XPm1zc9p5Dbx/iujq/bNJEuxwFhzMHKIFlmBhbxvjMyv48gMsTVjpTP7af/6
LNR17vSfdEdyfCywS9a6N+eRbcXbH97yodZDcrws8fmSq3xRm8wS22UUN7ud
+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
nRlonXF075dYck8Gfr5++X7KMXJ/BsLtz+UHPCFLZeL5nKqJUsMyKf9MJJZe
zLpmQFbIRNxpj8ePt5BVMrGnM1THKIXMyMSKW8aRL6vIWpn49PBkWetrsn4m
zg8+sYYvy6H8M+HwxGSJ0xQyMvEt7ES7tRHZMhPSl2wsHFeRbTNxzNN8aLIb
2SETBm6XDt4OIzMzcafzebcun+yRiabak3r7D5NZ4u1N2m2n1pODMzF3j/Pj
ysdkdiZepKY1238mJ2VCfvHbguHDuZR/JmR/24y6ziCLMsGMUZ24x5icl4ms
M72Tg2zJJeLPy3VWs5sHuSITVWNjrF3Z5OpM9Gof++0nItdlYoPcwy2iCnJj
JsZYpx6700huzkRklXc14yW5JRPoO1QR/4PclgnLQb/tpRR5lH8mFCY+nsjR
Ifdkot5HUd9wKbk/E6+SRWUfNpOlOEjYURB6yp8szYFJySRzTjpZlgP3GRnr
QovJ8hwMUTCL8L1AVuBAedZgA78WshIHts/aK8I/k1U4CCtt254qxx+wKgcZ
2a//y9UgMzj48PCwY4UpWZOD3aG1rZfWk7U44Ond+P7Qh6zLwTenL5bvEsn6
HMwL/Fv+M49syEH6DsflI2rIxhxkLrDymXSPbMpBfv2B8/91kcGB1/v3f0yH
CgZszkHSrDPStmpkSw5meZwXbZtHthYfv8/mxZG2ZFsOtO2mzdi7g2zHwRIP
9W/VMWQHDmwytp5+vI/syMHRr/6NPyvJTA5WSXdfmnCL7MZBa9WFuDlvyR4c
jAvV0jWXyhqwFwfv9m00WT6BzOLg8JMX9fNmk/05uD8irlHBihzMwWhzxTM3
XcnhHLyX4n7ZGU5mc6Chd2tah4Acx0FcnmWk2VFyEgfSSldz/C+T0zgovaPl
kfKMzOEgcsKIezHfyAIOzlrNP+A8MpvWC0d8P3VZ479p5Bzx5zG1ZGK7KTmP
A09R5xauHbmIg9gtnfnzvMglHATGxU57Gksu46DFUtc9ah+5goPZk5V+Tz9J
rhTn/3NI4b3r5GoOFEcpRSS8Itdy0Oy0IAg/yXUcxOyNOjBYUTjgBg5Gulkx
b2mTGznYlNJQcnAxuYmDGV2Bg1M3kpvF5+fl2oJoX/J9DioY4quMZHILB1hj
rHMyn9zKgVx3mXT/GXIbB7o1s2qd75LbObDYWaDQ957cyYGeWqBTzRDRgLvE
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
Fv5oPsl8oUZmZiHt8Gb7r3pktyxYal4u/wmyRxYaVxmb960he2XBvpOv+9aF
zMpCutSyV7f8yP7ifk28Zh2LIwdnYRjz7+CULHJ4FpRHV1g4F5PZWehepHHA
6DQ5Lgtb7DSXjWgkJ2UhTGpt04sWcloW6vSmdZ98R+Zk4d3TYZ4JP8mCLLy0
URy7fkQ5rf8slDweOmeyKjknC+NuBs5t1SXnZeFRXaArZyG5KAuHoxqc5q8m
l4g/r7uvtVucyGVZcDn9+pzPLnJFFvTjb4T9iyJXZmFh8ePSNA65OgtrxnK0
VPLJtVk44nlmU+Fxcp14+9v6DL16ckMW1C98bDt7l9woPl8de3krXpObsjA8
ZubtR1/JzVmoODq1b5v0MVr/WTiu3uf+VYnckoWjbfePRk0jt2bhvPtTkZwR
uS0Lk06/NxZYkNuz8Pnz37uq9uTOLMwbklFXtJ3cJT4/dz111A0m92ThoNrO
vpNJ5N4saHlr3lmwh9wvXn+eseoNpeTfWXAOlFVcVUOWysYxQ93ah9fJ0tlw
2Zo21/kpWTYbe9+WpnR9IMtnw9HmQ0Pwb7JCNmC2/GvMsApa/9nI0Hr7/doo
sko2zFa07xoznqyajc//xm3aOIXMyIbfgpbK/BlkzWw0bN8U/l6PrJWNlYPM
yucYk3WzIf+lcHkEyPrZ6J1sY3HVkmwoHv98u3jMGrJxNjwzh7s7biSbZuPT
ztXsQ85kZIu/z+I+f9lBNs+GhZbFabPdZMts/A76cysllGydje9Wr+c+iiHb
iv00ulMjlWyXjX0uxq9ZfLJDNtSme2ic30d2zIbe9IvFI4rIzGwEtmt4biwj
u2XD68U970OVZI9s2Hc/O/KtluyVDYenf9TNL5NZ2fCYe6uZd5Psnw2lP4zK
lw/Iwdl4HDPuhv5zcng2mnd1K7I7yOxsFL8rSb79iRyXjVEnFfWmfCcnZSN0
L3fQrn/ktGzsr2n5e17mOK3/bLx4+nbaaAWyIBuW6gL/rSpkUTbGp6/pPMYg
52TjbK4+W0qbnJeNfzPDTNYYkIuy4bNDV7lgPrkkG75Ppo79uphcJj6+D436
5ivJFdmomc7xylpLrszGYO32ho5N5Ops7LkfamzsSq7NRuSzRVeTPcl12eBX
Xdj11I/ckI2Ibl+DmeHkxmwIOyeNiIojN2XjXajRr+Y0cnM23jqFDtLIIt/P
Rv7MNaoBueSWbHxdrGN99SC5NRsntiziTCgnt4nzHsXr9Kwit2fDgLty3fnz
5M5sdJZJNytcJXeJ830qdHK9Te7JxobGrX9OPSL3ivcXN7pMto3cn42FS/x3
bu4k/85Gm9pw4/IespQQTjrDlAb9IEsL8Tlb7++6QSdo/QuxxLfjW/FwsrwQ
CZ3Cnz/GkBWEsEhMHrFqIllJiF8pRtp56mQVIe7/k1n3VYesKkTHvROJFnPI
DCF8N3Vc2bOArClEu+xahY9LyVpCvLQ/7wprsq4Q+/u+XOTbkfWF0Kndp/3W
kWwoxJqZL/eabCMbC6Fxxm1chjfZVIhg7TTRywAyhGgZF68xN5JsLoRfe8rp
pASypRAhLuZ2rRlk6/89/sAfekKyrRDbVp0sjj1AthOC1Vex+dEhsoMQ3LW7
x/9XQXYUguF593FkNZkprn+ztuBuHdlNiCsfQ3ZPv0b2ECIo77tl6B2ylxD5
NWrTbj0ms4RYZnNtmPorsr8QnoXNXQHvycFC7Ll95dG1L+RwIQYX7Wqc/IvM
FmJR59lzvkNO0voXoueHWvXlEeQkIQ4kRJ+eoEROE8JU80ittyqZI0RTgfKV
i5pkgRCXmmbfGzeTLBL3u0CmY8dcco4QY0vk/55bSM4Twqc0YYKiBblIiBV9
KvPdV5NLhJi00H9zzQZymRC24fnRo7aSK8T17H8ccdlOrhRi+v4tT6p2kavF
9Z9/lh8RTK4VYnao2pKtbHKdOK8Kk9CTSeQGIaQvFZ6S4ZIbhXj4PuDr5j3k
JnHexZcNK/LJzeLzT21piPRh8n0htJS76xxOkFvE60F714ijNeRWIRqc7RwG
XSK3CdE9a/mh9TfI7ULc4xX1l94jdwox18HS+u9TcpcQoyy+F6xtJ/cI0fki
8VdxF7lXiK1/+u1+9ZL7xevnduRxmz/k30KcC/6gUDS0kta/CHJLHP36R5Kl
Rbj5K+extTJZVoT0N9uX5KuR5UXwSt929Nt0soIIaxdlTVipR1YSYcSrzoT9
88gqIpROXfrtyyKyqggzX2huW25JZohwdNfyh/tsyZoinL/+xLLHgawlwvT4
K7XmzmRdEfhTvxvs2UHWF2HDz2WHPvqSDUWwXOmntiSUbCzC7ik3s7NjyKYi
XPvx35gPKWSI8OaGSvoiPtlchFfJ1nKCfWRLEYw6Y5M7C8nWInhL7x2xsIxs
KwLr26kMbiXZToS/HbWKHbVkBxGeMIRCk8tkRxEOLM2anHmTzBRh4wyZotcP
yG4i5PV56xo/J3uIcO+wV1VaB9lLhGNHtZa8/ERmiTBc5/Stud/J/iL8OfLY
MeUfOVgEk1UyXc9lTtH6F8F43NPQOQpktgjfl2bKJamQ48T9O3rsa2WQk0TQ
Up05y0CbnCbCHCPNS/EGZI4IjTGf7J/MJwtEmLRuxsdZS8giERjFz6JjV5Jz
RGjV6FRuWUvOE6GmdG2Z7mZykQhv464sjnYll4hw+n3gowee5DLx+Xp5sreO
P7lChPYpswZHhZMrxZ9/grrwXhy5WoQpNxt1tdLJteL59dX14VnkOhFsft11
uJNLbhBBe/OknmnF5EYRqoRfEkPLyU0iJN1sY9yuIjeLsNL26FmNC+T7IlQO
3moffJXcIsKi3+e/Nt0mt4qwZ6wmZ2oLuU2Ewsb5uoFt5HYRdrUtaLzeSe4U
n/+rNd2mfCZ3ifB+RuY/vx/kHhFuadfsaxxURetfnF/rmvmT5cj9IpyLT33o
q0j+LUKu0VC/KxPJUnvQPv7eqEkaZOk9ML1jVbrrP7LsHvjrBS1pmEOW34OQ
sNRWFVOywh40hcoHe5uTlfZg6JU7ivXWZJU9+L1p41Hl9WTVPUiU8bH03EJm
7MHVCRbtF7aRNfdgxmZ3tpJP1aL/AZ/QH2M=
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
2DTj0WlxTcbc/wOFR/oE
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.005198306589388753, 
           0.0876171887851852}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
iy793/1tcR86nS4XoJ/N7qyJ1nSFAEn2h96MmURXCjBn3tXiQZZ0tQCheqZr
+42h65T57816NXkkXS9AnOGQiwXD6EYBTg1L6+A2hFaLhcWk1zHbTGitWJxw
OjIuQ9WnbiwmtTq9ZMAAVf+xGLTX0C3DWNV/LEa3HmR1SmXjWAxMmKVeovp6
s1gMu7vpgHCQqv9YtJxR8sh0sKr/WHgO7aWTNVTVfywKrtne2TxC1X8sjh1Z
+2ahKp9TLH7ouU7ZMEHVfyyyl3cwnaF6nzxjYR14peu0Gar+Y/F936u30arn
HxaLDoMaoh7OV/UfC3/vgcYOS1T9K/NFNxXUuav6j8Wticm+8tWq/mNh2q44
dXmAqv9YtH2+JGTxGlX/seja5mpJokDVfyzmjX6teJOs6j8Wi4SfAxXZqv5j
sS39nnOuXNV/LLbslv1Qz1f1H4vu594k3y9U9R+LrRf2Xex1QNV/LNr3nh79
5oSq/1hMrHVdPPSiqn9lnvNL+36vUPUfi2W9t363eKTqPw5VkibFp1eq/uPw
MvalvPMXVf9xEN04OG27WhT7j8Pe+aJtWa1pozg01bZrd6YLbRyH2SnBY0yN
abM4nBxa6FIygraIg8NCbXO3yTTi4NawaqGaHW0TB0sTg7FJS2jbOESe6hRW
s5p2ikO0ibyq1RraJQ59H66K/55Ie8ah9fHMs5vEtF8cpnU12tt6Ix0Wh6uX
DB+N3UUL4uD+pWCa+VE6JQ61Vz4kNjtHC+NQN9Ly9/7rtCIOu9oVtnV6QOfH
Qf301ELtl3RhHHwnf2j+9BNdFIdzho9q63/TxXG4+fj8E8f/otl/HAatbN2q
Xye6PA6lN57a+/WhK+LgrXO5n9UwujIOUcKjs3aDro5DkLnBk31z6Lo4DBwc
1nzuUro+DlM/2p0T+dKNcVjTcWb5SgGtFo+Ss1K/ChGtFY+2l3OmFm+mdeOh
G3OyXvcIbRCPx6s2jCwvp43i8cuqVYsrD2njeDh0D23X8iNtFg8zjOm7XD2G
/cej7/q/epUdaMSjfW54pM0A2iYelXYa8zePo23j0Xjsvf/tObRTPPQe/W15
1o12Ud7/mO67HYNpz3jMXX63MTSZ9otHP3H9b521dFg8Vhp+mP13By2IR4xt
u7vjjtMp8bBbfu9J8SVaGI9HZUnTvCppRTxeSd7oO7yk8+Nx4czV28ENdGE8
ppwdYH33L10Uj/UthncuaSFg//EQOJgendCKLo1HblzJl2BdujweOOhl4t2B
rohHdMbujsO60JX/e74p9292p6uV91vZutqpN10Xjweb23+82Z+uj0d43Ia8
KSZ0YzzmG56NOG5GqyXAI69N8IgRtJbSJzM9jo+mdRPw13hDzkxL2iABupF/
Bn6cRBslwHBF9+CtU2njBOzdsH5s4EzaLAHrnpd9XGRHWyTgSKP6rRWONBLg
OquhYe1C2iYBLXoV//fThbZNQOz43HbZy2mnBBy0e3JlqRftkoAVzvZTAgJo
zwT8nLvf80oY7ZeA6c1NjvvE0GEJGGU8YPiSJFqQgKTMcaPWZdIpynwH+m3r
KaOFCTjWO1jjcy6tSMCYKTGnNbfS+QnwtKsULNlDFybgvc10+afDdFECSneO
tzp5WtV/AkRGo9WPl6n6T0Df5fE7X1ao+k/Awj3PYi0fqPpPgKLPhqGna1T9
J+DG1rNH3d6r+k/Ay6rOswZ8V/WfgEODtKe0bRbL/hOwyqfV63at6MYE6A19
OXVwB1otEQfqt6u79qC1EvFJu6zntgG0biLKt0ar/xhOGySivdb6lfaWtFEi
zl94cOqADW2ciKTUDwvbzKPNEmHf9+Br18W0RSIGnm2dV7iCRiIiXLzCnvjT
NomYce+Pq1okbZsIrW+JljpJtFMi9B60fK38vsz+E/Hw4fn2T9bSnoloafn9
7+bNtF8i/uw51XXeHjosEfvGX498e4QWJMIq3CbAq5ROScThkADHO5doYSJO
9RlwwOg2rUjE74YPCbMf0fmJaOewIHXBC7owEWcemSye+IEuSsSVlToJf7/R
xYlo/BAxW/SXLk3Ej2Fexz5rxrH/REzJjlnYQ5euSIQssWNwewO6MhG1XTuO
KutBVyfC/3q45ej+dF0iru/L6OoxmK5X5rXpvsdmBN2YCE2LzaY1Y2m1JIgv
Cl6ZT6K1kiCS15Vb2tC6SThTNktDfTZtkIT3/arvx8yjjZKwLrh/5DEn2jgJ
Y68Fjy5aTJslwe+g+kYPN9oiCdoH6m8/XE4jCV9OrqrvsJq2SYJsXuo4A1/a
Ngm6K2uH1QXQTklICtCYlBFCuyRh+60Ax1bhtGcSgvqeDPGKov2U12uITTwi
oMOSMPz2MNP6eFqQhGa5Ce97JNMpSbhsIDWZmUYLk7AqZs2YiExaobzfkpix
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
vk7b4fWITsnAuNBJH7J+0MIM9Ip+/PlCpwz2n4GhL/b00RtF52dA4/H4GUHz
6cIMtFq82q42jC7KQK7R02ML19PFGTB60Kuw4jRdmoEZTSV5I2vo8gzsiFvf
LVork/1nIGPPzaXSwXRlBs69Et9e5kBXK/tI7b3ibiRdp+xL8Dzz1ha6PgPD
n7QYMPUa3ah8vu+k63t9o9UyoX1l96/5PbLYfyYqtKdufGxD62aiaqeu2+4A
2iATPv+N+Ho6lzbKhHmt87h2ZbRxJu5+Nby28RNtlomuC8PlK7pls/9MnBty
oMRjKo1MDDl2XiwPoG0yka84Ev1zA22biadVVc0yLtFOmdheNDdn2lfaJRNn
TpdPV+gK2X8mrvoYddzYj/bLxI4/iQePjqPDMuH1Pmhr9VxakIkQh2nxBivp
lEzITUJaL4mhhZkYaFY7rUhGKzKxdL6arM1uOj8TtX977Ao7Sxcqr7+ge96H
SrooExdzd5z1+0gXZ2JnuzN5f1uI2H8mJpxzqVrfjS7PhHVyw2Dr4XSFcv6V
nOV/p9GVmcDNvVPKXejqTPh/yEwsCKXrMvFEFHg5PYuuz8Toioy85K10o/L5
3JBGyU7Saln4/mzC68O3aa0seO/bmvn6Da2bhbWbUz2HqovZfxbyzn2/n9WZ
NspC3PqzSc2H0sZZmPl0gIXIhjbLwra3dtmjXWiLLDx7d6bmdyiNLPQdN3nQ
02zaJgttgoPrH2+nbbOgcc1j2s8S2ikL42YtuTy8knbJgs/OxYGp9bRnFo7s
0c7/oSVh/1l41aqZTlxPOiwLe4cf/t5jDC3Iwrqqv14Vc+mULDQ3KF8rXE0L
lfmzz3VYkkArsvBOM79x5AY6PwuRB00vdj5CF2Yh4UyiY4sbdFEWDmi6lja+
oouzsGjBwRkNalL2n4Wy7+YrvnSmy7PgFZia+2sYXZGFpnVDQrVm0pVZ6G4s
WdDFg67OwibrVVPMoum6LJxJ19hhI6frs6AdlbnItYhuzIKt17iy0Eu0Wjaq
HDeOSn1Oa2UjpPU0C8kvWjcb0ywWVkr0Zew/G68bDt9ONaWNsvGkKm5XkDVt
nI2y3ud22y+lzbIx+a3g88Aw2iIbhvEy5x9CGtnY2vzAgrM7aJts+CXql6ac
pW2z0W1YrylzHtJO2RjvenCEwRfaJRtOq6b3e6GTw/6zEWsy+dGRvrRfNvrb
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
Pmth3n3cmkXHiyf8H4Y9uOc=
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV2WlYjO/bB/CxJ1sUyhqSsoYQwteWUKSiZGlRCaW0l5Zp32umpmYQipA9
hCQUSfbIkj2EIhQhhGf+x+87Lx5vHJ/jmmvO+7zPa+uaQQ7u5k6tBQLB/PYC
wf/+/+9fwwzB//+Hz74XYlbHP5/2H5UgttbqfyT7L62CC6Uv6uYad5/+n9Wg
uX/4QbM7A2h1OF5ptcpUW4fuhzG9tqs89RhLa6KrKKnnzduT6MF4K13mbjxu
Bq2FXTO0ppnfnE1rI2PMga5bo4xpHXwL76mid8mUHg4MUEvJubSEHomPoesu
JdZZ0qMxb52m+WcLa1oPPhvvqWxos5Iei2dbp9ZmNdvS4zBL63OGRh8HejyO
51b6rlnhSOtj59xZn0KLnekJeGo4Jq5k/jp6In70zJsR8mMDPQkTj7ut6nht
I22ABpUFT59We9CTEefbo4eXuyc9BWNPdpM1qnjTU3GzvPRR+GUf2hArBTmj
LJL86GkY1mGedopLAD0d92d8P+tgtZmegXgHu8jfy4NpwHzNXfUYj9D/LARa
bJef3HJTyPaZmLU71bX3xzC2z8SEtedn3+sVwfZZEPdX2vhuQSTbZ2HdVpmh
S1wU22fj8FSB68a70WyfjYuzx77orh3L9jloo20sXB8Zx/Y50H7XLBF9jGf7
XPS6MM050z6R7XNRNuvN473VSWw3Qu/uQyeVr09huxHSJi443lkoYvs8TEha
kLncTMz2eUh6932olXYq241h7zz6V/fWaWw3xsc1TXsyXtOC+Wi4uq+o8ZqE
7fPRxbpHV72CdLYvwO5FJctWH8xg+wK8f6a0MC5HyvaFeBYefu/cbhnbF0Kt
f58nSvu3sN0E9uKr7n75W9luAh2nKP9eZdvYbooS0auaL88y2W6KBVsj/TVa
trN9EYKWjp0u1dzJ9kVQd0vLKhqaxfbFuPUwer7zeVq4GAV9mzsttslmuxke
2DYvCv5Jwwza7ou3/di2i583Q2/XFSalM3f/52IzNO5ber7uPS1Ygnsex602
SnPYfwlmfB5pZT1vD/svwRpPNc0jv+jiJbj7q1rZ99he9jdHUt5Qm1Mb9rG/
OXStyrV9dHPZ3xzNIUWigvd0sTna3+4kiz66n/0t4Hw+ft4bvwPsb4Gy5uEJ
j2cfZH8LNO917e6qeoj9LSD+EZK+8y0tsMSekD65gecOs78lbB+fOttadoT9
LRE7uYfONN+j7G8J7ZKrab1H5rH/UsxQaXn9aQeNpegQPePDXtVj7L8UZ3oP
aTUrni5eijnKs9dfbH2c/Zch/ds+k+HBNJahw3q/Y5t/0sJlWJlnHl7gd4L9
l8Eze1fSqx+0wApDu2tv+B2Qz/5W+OMVntv2Ly20wsRDPbP/RZxkfyscL3OJ
+9jpFPtbQ63koOvtdBrWKD1vobV30Gn2t8bWi6pWnkfpYmsseWbgqz+jgP2X
Qyso4mx9BY3lsMmeorXN8Qz7L8fe4WM9Zvyii5ejU/vYno/Ehexvg7fuc6et
HXGW/W1w5OuVitoyWmiDr5HrN6x0LGJ/G+jaTDcqbnOO/Vdg6MkVs3vsobEC
p1sPrF1sfJ79V+Bor/gFvh/p4hWYfmPPqHDJBfZfifGRKz+fHlDM/iux1Hhf
Un9vWrgSegmjt7lfo4tXoo/zBuHBQSXsvwrDskasuBVAYxXmnbzV5v5dWrgK
Vf0i2hSNvMj+q7CsyxZRaAwtWI26S37ivq9prMaawMKEhBmX2H81hE97bb+W
SRevxtTee6Mqf9ECW3ycfTg9a3kp+9ti89cl+SPO0EJb7Oqzf8lGjcvsb4vG
5zdW2wfSAjtYnv646M8TWtMOn92WtJoyvYzfZ4dJ9+squmbTdnaYoSYL82x7
hd9vh4is0xNXuNBZdhioVbj+/A262A4ftOo/icaW/+dqO7RTOfu6LIMW2ONz
px8ZFi20pj36eU6P13W4yvj2aDH5FzulnLazR9TyqV5+o68xvj2ECWvNKiR0
lj0GLisar/+bLrbHm6pdE8X21xnfHt8Hq7rcu0ILHPDa1uZu3agbjO+AHpXX
3IrSaDjgfkNRu4k/aTsHNPcxwozVNxnfAQc65YouXKSzHNB1pMeg7dq3GF/e
f8Dvp0VxdLUD6neMtmpdTwvWILveoXKx6W3GXwPPyrLh0YdprMHM5XbrZrWv
YPw1OKxn8EVtAi1cg9LZ1q1119BZa+Dmtd7AVUQXr0GNad/Q60V09RrMXzZG
ZXwtLXDEtAdvI5N73GF8R6gUmlSWT6XhiO2PzOxurKHtHHHLz0MtIp4WOmLu
aR+XB0fpLEeUlvnHHq2ki+VeNt7nxze62hHxswePlPa6y/hOUJr+6o3fBFrT
CQHTfcwjzGk4wf5Mvy+73Wg7J1j2ehB0OZoWOuHq19CV97fTWU44NuKs8aXj
dLETRi0f0S78Ml3thN/pIcuVHijiO6NDxMFh5jWK+M7QEA6/b9+giO+MkwXL
VGf9UsR3xr7dp9opta5kfGes8lz5/X4HOssZZwaW3n7eiS52xgJLC+f1Xelq
Zxy5UP/lcTdasBZ5kUod81VozbW4hjKf3d1prIXlFJE4UZW2W4vtwSNuZfRW
xF+LimXu6hioiL8Wp75OHuo9UhF/LSZt0pmyf6Yi/lr8O5ia3tpBEd8FEz6X
X/EVK+K7IHtov6NN9xTxXbDkxN/gwHH3GN8Fbaeemt/+GC10wbDBgasnWd9n
fBesUxrou2HMA8Z3QcrhxtHjDB8yvgs+Ob6bOkVYxfjrsPlw3O6VPx4x/jr4
v561933GE8Zfh2Gxax58X/SM8deh4/WLh626vGD8dWjbz3iln101469Dw8nM
wrejXjL+Ogyo0bj1pI6uXgev2+ett4teMf56fPs19sLcga8Zfz0q34lj3NJo
rEdT2ykbp36g7dajw6UUt8dDaxh/PeKVJuqNn0NnrUdnNZexu+bTxevRekWy
o5khXS3/fulG9y9atGADlngknvzbhdbcgMoFf0yOtqaxAQ8a9nxV6UrbbcBA
R62Hq6co4m9At2tXU46LFPE3IHVKnqBS/Q3jb0BpaOejeo/o6g3I0jkxvc3D
t4zvCoM7wpDoXrWM74ou7rZ6NtvqGN8Vym16enVd94HxXaGe8UxSE/GR8eV+
+al3UeNnxnfFuOM2Bf6rGhnfFdPvzdvh+O0L47ti94IpVSlXmhjfDXY/T8uO
PfnO+G7YOSHVcufkn4zvhsonPZSO1P5mfDd4F2yNHPf5L+O7YdqT0wbKuq3+
+7s1yw0qr61GjFVu85+L3fBhzhRbr77t/nO1GyYffaJSv6ID/87diKlDiqud
rnb8z5obUfW+6/EIu87/GRuxsiX5s3L/bv/ZbiNcC7arDvyj8p+FG3Fm+4mF
6QE9GH8j6h+G93Vtpcb4G+HxbknzmNSejL8Rx+YPfumr25vx3XEtOtHiSak6
47ujk/cHUZN9H8Z3h/dT/8jFf/syvjvWpfVwcJX2Z3x3XKrwty8bPpDx3eEi
vhX8zUaT8d2RELJ+5pK+gxjfHVMvXVgiuk8LPJB8xvJV77jB/1nFA+e7HHuY
M2EIn8cD2rUlooVPaD0PXO/+ydojUIvP54H8/pOnnVcd+p/NPHD1T9U+zVza
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
aUEK7pdFbz30klZKwbN//oHZqrGsfwqSr4Z0iJhLq6dg2l8lmbkfrZkCzfdr
XnbfT+uk4PNZldaXHtN6KfjVNCnFpXMc65+CpfvvhbWbTiMF8cNq2m93p41T
0Kq//5hx2bRZCqyGLEy6cpe2TsFU3Z7fVreNZ/1TMNjoqP3PCbRLCkY9ru0h
XUt7pGD4V6WSSVto/xR0UHpQ+vgaLUzBiEWaI0Jb6NgURA4uPzZkdALrn4Km
+iuny2xpWQp0vZZMcBbTWfLntaq6/u8inZuC0vq7H0VNdF4KLju2jOytncj6
p+CgRUKqyIouTsHIF+Of/46ly1NwMnlKlHUhXSF/3nY6iXs/0FUpKKkq1Xvb
L4n1T8HzU3ezei+ia1MQOy3i2pRQukH+PrpcWrg4j25OwfhPVu6WL2mBCPOD
cibN75H8n9uKsOjSNu+Rs2klETTOxVe2eNGdRXCer9r+TA6tIsKYf4bfbe/T
aiLM+6DevrFdCseLCF9s1s90nUj3E2HP8TmSu860pggtcRsfD5XSWiKElTu+
cblC64iw+PdQz50/6JEiPL2t3eOdqojjS4Tzpt1n/BlB64ugPqKHZ885tIEI
Rol/5o9fSRuKsCZVvcLGm4YIHWclbxQl0nNE6LX6+92qHNpYBOmAjeUG52gT
EXz0FyidvE+bieAxN6ed+SfaUoTD/Q5cUO0g5ngVwfVhw74/A+mVIuhEKKX0
mEzbiRBxcX6mpTntKELfaYuWXd5Au4hgEWa03ymKdhXhQvTFxgk7aQ8RphVO
7zbxDO0tQuwik3CnStpfhEdPfsZd+kgHidBpWt3cxUqpHP8iNFY9u91hCB0p
Qrubqpb10+hYeT0PZQ1ssaYTRdiW5JU10ZsWiaBZ98NpWwotkb+/+Hf9hh+k
ZfJ8rWclvyqjM0VwiQuXlL6is+Tjw7K7asVfOkeE7PDj9W37pnE+ifDt9pvP
DpPoQyIcuOV9ps6CzpPXO79GJvOg80UwyQtZtzGJLhAhtbNV/LoDdJEIat9O
v465QheLkOR8S3Clhi6V5++8e4xWawnnowjLTsi2ZQ6kb4iQvm2l86hpdIUI
9YU1Rypt6HsiDGnxTUv0p6tE2O4TPm5pBv1UBLOu744Pz6erRXhX7zVf+S5d
I4L9unWLGj/TtSI4ti1b/axL+n+uF+H0HmvPGyPoBnm8sRX1RfPpJhGifPvu
OLyWbhZhy8BPR7ZH0S0iXNkzUZS4mxaIUSLeVRNQQrcV4+namE1OL2glMQ5c
ONh98R+6sxjnLqvnTuybwfkvRvg+iz79JtNqYow84rTw3zJaXQzLnfYa1d50
PzESlz5Ycz6V1hTj/fTu7bfm0VpixBd0ued5i9YR46zFlkTjenqkGNNmjL/V
R1nK+S9G6p2wdnXDaH0xYjLS7I/PpQ3E2KWXd91nDW0oRv9trd6PDaMhz686
cOSbHfQcMYr7m9clFdHGYrhsOx43/DFtIkZgidK5Mz9oMzFmqv7NmdJTxvkv
Rvf1hh8PjaOtxfBsaXtNxYxeKcbU2271zm60nRiF8/9558XTjvL3sftP/ad9
tIsYE9tYLNa6TLuKITXvrWHxivYQQ+lp0oqQf7S3GKKS4Kv7+23h/BfDd7py
waPJdJBYvt+1a6dqRQvl9StpvmPjTUeKcdfv/LhTYjpWjNUPPB7rHqUTxTj9
0ffFmRu0SIyBlr3z172nJWL8G1M9yVBpK+e/GL2/L30wXpvOFENze+Me8zl0
lhjVvcKDtzrQOWJ4rHr3vXMYnSsGLvl6HtxJH5K/n9PT2/idp/PE0DL9stzj
GZ0vhqA+7py0hS4Q4+MMm+4f+27j/JeP9xVXat2n0sViNI+szR64gi6Vj6+x
xr6/A+lyMW5s3RfQeht9Q4wF+ZPE48/SFWL07djaKekJfU8+f154zevaQleJ
sTS3g05+v0zOfzHmnM+PD5pGV4th6rUy2nE1XSOG+Yim+y6hdK0Yi3/9+xWV
RdeLcU3DalNBCd0gxs0p/Z+1vKKbxDikXTfcrO12zn8xtuaW7js6lG6Rfz7J
vFl9Hi1IRd/CF6rxLnTbVLxObD++VTytlIrhi8tLgg7SnVNxd/Y2y983aJVU
PNYQ7tv8iVZLxdkI8ZaWbjs4/1NRKDUbHzyW7peK70LV4y3mtGYq3lX9iA/0
prVSERoR6Po9ndZJxbPlVyZ4nKZHpmLIaI2ad1W0XioMbG5ErvpF66fioOlk
3Tt9d3L+p+Jf481Hs6bRhqlYsDoz7vhqGqnYvaBDR00hPScV1i2vf8dn08ap
0PUtv/nlIm2SCoHkw+5lNbRZKj7PebTvcesszv9ULJtZtjdalbZORZKlztrR
WvTKVJjZS99W6NN2qVB+PVbDbS7tmAqbwoyfrZbRLqlQO/FSkuxMu6Yi/+IP
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
46b+/tPrb9KO6UhcX/yj5Rntkg6p78JTiZ9o13SYPfVU1/hHe8jf36ynjtnd
DnP+p8PC9GfboZq0fzrGV08I3a1HB6XDcMQsn34zaWE6vpe1zUxZQkemI6J8
8JkWezo2HbmNR/ev8aQT0zHjq7d1aTgtSkefZ52OD0ijJenQHxSQ7bmblqXD
Oj5YqfgEnZmO7kv/XWhfSmelY6b+ie1G9+icdCzAutDQGjpXPt6ujTI91kQf
Sofbt7ivT9oe4fxPxzXzj3b/1Oj8dCTU/QzrO5QukI9vo/IZehPoonRcbJcS
M20uXZwO7cDPlrOX0qXy9s17z810osvTUZ21st1kH/qGvN1Ef5duFF2RjjZJ
FZPU0ul78ve/Uzv0Zw5dlY4peUeHP86nn6bjwu9p10+V0tXpyPq3+m7KPbom
Hc570uKdaujadJQdfzPMoImul78Ppy+3OrQ9yvmfjkmzvLbfU6Wb5O+n8/fD
O4bQzekYaper4TyebknHz+9uP4bPpgUZmDJroO1Hc7ptBjI0AjccdqCVMrC8
wnbcBk+6cwaGebtd1Q6nVTLw7J/t/GoxrZaBZReKy6XZtHoGCpXnrDQ9RvfL
wME5bTRaldCaGWjVVU31RAWtlYF7eqdXrammdTLwsX2Sco8GemQGvs20H3nh
H60nf/57SetPdsjj/M9AXNu0uPhutEEG3njZ/V7dmzbMQOLpP2XjBtLIwFPR
0a/thtFzMlAnGxxbNZo2zsCqMUnxBybSJhlQOrRREDSdNsvAubBrDSZGtGUG
Ort/s+2/iLaWv6/1+yw+LqVXytunbK8oWkXbyfPZt+BJghPtKH/+m15+Nm60
SwZWtlq8X8eHds1AvmmAz/cg2iMDx5X/Vl+KpL0zEK459rMokfbPQJm13e5V
EjooA68agwXDM2lhBi5tTVP+vpuOzICjap/SkoN0bAZkL0+OSTpBJ2ZgsM04
M+uztCgD9/O36wy5REsy0HbJjKKP12iZvH1dXeeCu3RmBmwvtx4Q/pjOksd/
7Ne48BWdIx8vwnOxPd/TuRlopzfs7fNG+lAGhKNyO+X+pPMy0OZXwC+PVsc4
/zOwa3J1/uSOdEEGZiW9MGzdnS7KgGjKP8k1dbpY/j56JpxL1aRLM+B8YtEZ
Gx26PANTv8niBuvRNzJwxm623vtJdEUGvg/QPnxsBn1Pnu/srFYB8+iqDPTe
YDcGi+mn8uddv8GggxVdnYGG7KoBt1bTNRmYLXZ7JXGmazPwyFM5csVGuj4D
NeIO7Qb70g0ZUNXo4FwbTDdlYITBudwjUXRzBr4mq9/0TqJbMnBe/XHllHRa
IEVPUcM5wXa6rRSazZ8Sy3JoJSlK++yemXiI7iyF+tf8p0vyaRUpAg0N7XoX
0WpSTJ74+vrTS7S6FC7+Es1d1+l+Umx5tNt2bSWtKcVgo2FxI5/QWlLMXtpx
e+MrWkeK8kkxmafe0yOlKNO+G7P5C60nxa2cSlv8ovWlGOR8Q6td6+Oc/1Ic
bzj28GpH2lCKrIpd/sndaUjxvMiyg4UGPUcKbaUVkb0H0cZShP4Y9uWJDm0i
xbItJmZZerSZFN30Tu1wNKAtpdhRZvpcB7S1FH8nDu32cR69UgrVh7KxxxbT
dvL4hWuMfKxoRylmClJMJ9vSLlKY/HAw+uNMu0oh8Bo+rmQj7SF/X8oF3aN8
aW8pzrX/WGMcQvtLETKs16HO0XSQvN6yMWsrkmihFE+6Pe8lSacj5d/X8+lZ
q+10rPx91tkt67uHTpTCsvbH2+eHaJEUJ1bOcNuVT0ukmNZYUOtURMuk+F6s
vFy3lM6UYnzq9Qv11+ksKczSJ/bPq6RzpCiJqPHwekLnSrGhLqdw4mv6kDye
36XfP9/TeVJYJMfon/tC50vRKjnKSfiLLpBi4r/8pNmtT3D+S9Ha/faR9sp0
sRRtB70rv9qdLpUieYjB40QNulyKFk2914sH0Tfk72drQE0PXbpCigsqps/v
69H3pIg+0vaOzICukiJpcmnRCtBPpSjOsM4eYExXS6Hi7h/6cjFdI0XO6btW
OVZ0rRQD7r3QXWtL10uxb673N921dIMU209YFdZvpJuk6LGoyf+oL90sxfyu
eeM8Q+gW+fu48eCtfjQtkGH8xT7pP5LotjJ8ykmaXphOK8lw41b310Hb6c4y
TLszPHzGHlpFBof8kf1aH6bVZOiiN/1YaT6tLsMQjeEzY4rofjJMn2d6Y34p
rSnDvMZN5p1v0FoynBK43btVSevI8KxYz1z8hB4pg92qsusWr2k9GS4NGzOz
1wdaX4YD391OVH2hDWQo0G4auO0XbShDYcGMmFWt8zn/Zci5XPp+oDI9R4Z7
Z+ctfNWdNpbhfMnJfTkatIkM7W/F/nMeRJvJYLpT00JXl7aUoefSpbs+6NHW
8nzN4j4eNqBXyjD8YKi+B2g7GRZUf/EfZ0w7yrCq07TCpsW0iwz9tz9vPmVF
u8ogdF+gH2BLe8iQvCzabepa2luGW54Ru/9spP1lOPMq6MEFXzpI/j5P3G4f
HkIL5fmHFevPiaYj5fkMvWjbPpmOlaHP3vax5el0ogynHbsfjt9Oi2ToJla7
bbKHlsjQ8VnVp66HaZkMT5y/K9/JpzNl0K87pZVWRGfJoDxgu+HSUjpHBpWY
B+a9b9C5MmiP27T2USV9SN5+/UPAtid0ngwuR0fEr3pN58vwfp7tloEf6AL5
+/x2fN/LL3SRDDfz9fJ3/6KLZXjQzfO8U+uTnP8ynHO6eXmYMl0uQ0V7m2t1
3ekb8vql6d04qEFXyMdfYq/rboPoe/9rb31ljC5dJYPa7fMXGvXopzK0sVt0
8oQBXS3DVdNJuT6ga2QIj9+wZZIxXSuDccvlmJ+L6Xr5eN4R63nWim6QIatV
tk2wLd0kw1grYMZaulkGX2GaVit3ukWGY2diOlzypQVb0Fv/S21kCN12C/5o
6l41iqaVtmDCxW65Ssl05y3wTNoYdS2dVtmCuPeP7BO302pboPboq+GiPbT6
FkhOHuypcpjutwWCA/b1d/JpzS3oUexfklZEa23BdWVIlpaenPF/Fh4QQQ==

              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.00004791378676399927, 
           0.0965936466201292}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
V2gf1vsn+WvWD184Qgcwf3aVjaxfbMR2p0NYb/Y4Wpsmts+iTWJjQSptgV8Y
S1vF2hy1ni727qtL28SOBne5HwfiFbfSLuSb4qQNuJWZ9sDaPlW/2DJugKof
8f4a7RcHv8rg+QUQdzSgg/CuH9T7h8t1U+/fEAfU9ydC7PeMU98DcfBpWdos
9v78NfttQfya+t7FYL3Sz3g/rGLj7nY6Tuxo7lb3R2zRO9MJmP9WPfU9xfhH
VWk74onV1fcF+Te+RTsRt3WnXdhv/TTajf1cP04b8PHXuP80jD+bRnvgTX/T
GTifjIk8Dy/8VQmeZzb2uy1dfa+xv1712I9cjK/5I+1H/eP7sZ95GL/rMR1A
/pbzeD8KUF/8q+p+I/76croQtpXbxH6LtVkpdBHWNx+htemy32blvmH/xRZT
W9okDl4aQJvF+j43bcH4iTPoGLG3dSpthd3T6TjkWzqF1jH/50l0AuLFptE2
sT9pDm3Heu9l0g6M75tLO8Va4gXahf22KLOZ/cd6t9+hDeQvNp5Og4u20x6s
9+F9OgP51jTZwv5jP46xdDbisVtpH3z8Jp0rDmkv+9h/nO/QN+g85Nvfmg6I
TfttdIHY2qEfHRQbnYbShch3fTQdQr09xtFFGF84ntZmyPhyyhFiT+cU2iTW
m7pos9jkHkZbxP68wXSM2BJMpq1ibYSDjhP7Sijr4mBZNT4B+fep9WzYX42R
tB2+q/brELvOz6SdmN9vMe0SG5fX0G7sb9dm2hBb39lDp6Gew0doD3ziNJ2B
ev4K0l74diGdjfGB27QP53fgHp2Leis/VP3Hft59pPovDuUpB8Te2Meq/xhf
vUj1H/kqPVX9Fwe++Uf1H+fVt8RW9h/rz32J1mb+a9/YSnSE2GuNpk3iwJZY
2gzndqQtmH8viY4RG7fG0laxFj2fjsP8shtoXeyvspdOQHzPadqG9Ubfpu1i
0+6S29h/cahJZdopts2sR7vE+tCWtBvr/5BAG9j/qO50mtg17iPag3wXHHQG
9pMzgPZivZcH0tliT2Qy7UP9e/rQudhfq160H/k2vE/nYf1K8XQA9W1/my7A
/I1v0EHka1qFLkR82Yt0COtXLlL9x/hy11X/U2V/B39R/RdbU/ep/ov9S7ao
/os99Var/otD0xeo/mO8f4rqv9hXZpTqP+KT+6v+ix2Ne6r+i4NdOqv+Y/4D
XfUf8wc3px3Y780mtBPzf7XSLsw3lN3I116NN8TGcLVemtjUvD3tEevHbXQG
3DCZ9mI/rcfT2Vjvh0W0D/vruZHOFbsW/0T7sZ9//qDzML52pOo/1lv4luo/
9leg7msQ6610q/4jPnGV6r84UGk/XYT+VbhOa59KvtIvbmf/xcEZb9ImsalE
Z9osdoUG0xaxbZVBx4gDHZfRVrGj5pd0HOYnbqN1sf50B50A98+hbWLt1Fe0
Hfn2q/UdyHd2Iu0UW573pF2wI4Z2i42x99T7F3vv5qj3L/b/6FLvH/X/U0e9
f7HnuwLVf3Go2mzVf8R7qvvlw/xZF9X3H+d9Yo76/qO+hGbq+4/9VTjCvxcC
OL8uDekC7M+5kn+PBHFeGyvShajXtZx//4QQb/wWXYT41DPq779Zsv7FdDpC
rB8aQpvElsl22iw2XhpAW8TBRvPoGMS7nKKtYm9cc/X3n1hr7ld//2H8wcHc
f4LYP7Qe67Vh/O8vqN9/5EuYoX7/sb/bEer9Y/9Zn6v3j/Vq1Vfff+SrdFD1
H/Ob9uH9SMP6cQ9pD+Zfm5PD/mP9lyp/y/7j/OZ56WysP6jGDvYf+z/koXMx
PuoR7cf5/J34HfuP/XycTgewnwlH6QLsJ/UuHcR+tFK57D88N4IOwbeLOL4I
+eqfobXZsl7aejpCrKX3pU3iYJMXabPYsTaL+7cgntSYjsF61XJ4HlbEd9Wj
48TeOit5nrrY6F2SThBbeg1R7x+ueYz9smN/uQ3V7z9c/zPVf+Sb/7f6+w9+
PET9/Yf9WffxfhnIn3BA/f2P+NqLvJ8exKe/SmeI9bOjeb+9cPRd/vsrG+6e
QfswP28InQvbP6b9cOcldB7q6XGTDiA+ZwzzFWB/79flfoKIt45Q7x/zq1Zk
fSGMH1Bb/f2P88g+pv7+T/vXjtKz1O+/WA924fmaxF5HVfX9R3zJXfX9FxvO
o+xfDOKHN6j+i7VZU3g/4sT+lK68T7rYMsDM+5ogDjb4lbZhfMGMnew/1t9c
Yxf7j/wDvqCd2K/V/D37D58bQ7sxf9O3tIH1BwXpNOy33n3ag/2NvU1nIP7f
U7QX+Y+tpbOxXtUk2od43xJ0Ls47bjn360e9KTXpPOTTMlhvAPODJekCxBs5
eT5BuNpBnmch6suvQocQXziS51+E/U/cx/5oc2T93a/QEWK/cwT7aRJ7Jx5R
/YfPNFT9Fzt6Z/K+xIgtf0XRVnjLCvX3n1irqP4e07He1TPq339ivclS9e8/
7K+e+vemnesnqe8/1hs4Qv37D/uvrf6958L6zR+o94946ZHq7z+4eFn1+4/8
qQH1+4/1s9XfJxnwh7t5Pl7UP/WC+v6Lg2Ne4fn7EH+nH/uVC5//lv30I58j
ivcjD/HQJ7vZf+Q79Ose9h9xy1s/sP9ij7e1n/1H/h0X6JDYOn3MPvZf7Mp7
SmtzJZ6asp/9F3tuXaBNYiO16QH2X6xXnUhb5mK9r+kYsffaIdqK+WVO0HFi
x0t+Wsf4vzPpBOynySDahv30rEzbkd++i/tziAOpnWin2PRJHutzYb0Xm9Nu
xD9axfMxsL9+d3ieaWL/mfS97D/yRVl5/hnwG4fU+0c97ZL4frPhzMfst09s
mbqK9yFXrDXsrn7/kf9Kdd6fPKz/TXHerwD24yjF+1cgDo5toP7+x/xrk3if
C5G/jvrvCyGed6b6/mP+4THq+z9P9nNnovrvP2J99Lfqv/+IHUtrq3//Yfyf
6t+HFrGl4RL1/sVG88Xq73/E//ye9cSJg3XKsX4d/mcGzydB7P0tiu/Dhnje
Hp6vHXHveL4PB/bXqBX75RSHNhRnf12Yn3yddqO+lod4HwysV2UN708a9hsa
wfvmEZu+f+sg+y92rb1MezG//PQf2X/Ez710iP0X++0GnYvzGXGB9mN/02sf
Zv/hT7rSAbFv4UC6AB6UTAex/vlOdCHmR1WjQ2Kr8xzzFcEDZ9HafNnvwVp0
hDg4bDPrMYmNvg1pM8bvWs/6LWLHVhMdI/YZ49X7x/yh53i+cVjf15LWxdqS
VexHgtjfoThtg58PY//sYv3gTr5XB9Yrtln1H87O5Xt1YbzjAu+LG/ExNWkD
+fdNV7//iH9bSv3+oz7dx/uXgXpOTaO9mJ88Tr1/xIel0z6x9+5ZOhdxdweu
7xdbnhao7z/qPbNIff8RP+5U33/4toP1BrFebgrPoxDx6jb1/Ud8zR26CP3b
vUx9/xf861Bie/X9FxsN76vvv1hrn6W+/2LLyB6q/2LXkmK8HzHi4KKvaCvm
v9uZ9ysO+T67TOtix7ARvK8JYtOpm7RNHLjfO4/9F/vq76QdmG964Sf2H+NH
vkO7EO/Vn3Zjf1VctCH224bQaYhfSKQ92O9/q9AZWL97PvN7xZ4/J9DZOJ/2
ZWkf1uvkYT252M+7L9B+rPf9SJ5HHs6r10meXwD7O/oGXYDxPxk8/yDWv3ea
/SnEfk83pENi/f5c9rMI+9v2l+r/Qsk35D90hNjoHuB9MSG+oAdtFjvKBnjf
LGLvMzMdg/F/zeL9tIr9jmp0nDj4wW+8z7rY0uxHOkGsPzxH27B+SM23I/+T
ubQD+dpHM78T63e/Qbuw/hOn+v6LTQtC6vdfHDDSWH+a2LOyIc/Lg/WcQTpD
bO25kufrxf5+TGI/spEvpjb75UP9TwvpXHHo2Gb1/Re73hmtvv9Yv6gB708A
+9txhS5AvvYLeB+DWG96vSPsP9Zzf0+HkP+jlkfZf9Sz9CtaWyTzj5Q8xv6L
A2e70Caxfn4Kbcb4Oitoi9ia6KVjxBaLh7aKDf8QOk7sXd2A1sXa3PPcTwLW
/248bRN7Dmq0XRz8agLrc4hN31xV7x/7SYhX7x/7iVrJ83Ojnp3q+2JgP9fj
6DTU/96n7I8H+1n3C/uXIbZl1qG9yHdHvcds5Ot8jffDh/EJH9K5iCef5n3y
o/7fPqbzxK6tkXQA9aWrv1cK4PPq+x3E+SyYSheivt7KIayfpcYXod6ph9X7
94g3mZivpNhYPlr9Hoj1bn/QkWLLhHGsx4T4e6+y/ijMz/6JNotdlebxvKqJ
g3/aeb4Wsam3lecfjfXmlmO/YsS21SG6vji06xf21wqX+pb3IRb5Ny3mfYnD
fs8N5n1rhf3kNTrO+4d8B+/Q8WJf69UneB/FnmCLk3Ci2JF5gLZh/32rBuAe
4pixnWi7OLBwGJ0kLuw7nXaIC76fSw+Es2fTTnFRDzc9XGyu0Yd2wenN6BSc
78QXaDfqW7KU+50Mx5enDZzvsomsNxX1tzzH80jDeRVZ6fk47wXTeZ4ejPed
4Hmn4z69UJXOgF8bwv5kIn/G9+yfF/NvRtFZiK8dr35Pcb5NrvN+bML5lxpA
+xD/T4j3KQfn3cCj/t7GfWgRT+9GPZfKqu8v5te5zft5UGw9fI3Ow/k0ekgf
Q3xRNc4PYP0jH9H5WH/eNroA9cRauN/zuE+/rVd/v6NfHVqx3qvY/40bdCHO
51IWz+cW8kWMVt93zC/Wmef9APHW6vtahPnlzOzfM7yHL0qz39piGV/jCV1S
HBr/B+9HhNh+fCjvU6TY3eACbRLr7Tr/zPcvdo7z0WaxrUO5U3z/GP9eMm0R
+2wb6WhxQYdCOgbj7eZf+P7FeRda0FZxdp+udKzYPKcnHYf1W75HtxLHTGlG
69jvpy/T8eKi/ReZPwH1X15NJ8InPqBtYv+uv1lvD6wXtZK2ix2TGtNJ4oic
A+r9i+NW2NT7F5ve2sHzd4otLY6wP8PRn3cus58usVbrOfudIvbsrku7xYGj
fXk/JiN+6kveHwPraaXoVLHXPFn9PYz99Imk56Ofi3J5Pz2IP5pOp6PeoUPo
DHjgKDoT65dMV38/oz7zGTpLbH01jvmycT9r7qA3Yf6trtyvD/sJlGB9Oei3
7ySdC5fbyvPYjXyVNvD8/Kh/WzbP96A4+GUuzz8P/TzpZH+O4byrFNEBjJ+c
xv7m4360MvN+FOD8P99An0e/jzTkfQvCZbfRV1Gvt0E+3z/uY/4a+pY4rWrp
X/n+cZ8qJtMPcD5LttBFeC/f3KafYX/ba5zm+18i499sQ5cUe052pSPgxTY6
Ulz4WVvaJNYbvUZHiXOfP2Q+s9h6ehddTWw/MYa2iIPtatLRYtvhfaw3Ruys
mkTXF+dVDan3Lw5tn6beP/b7S6R6/+Kij5fz/FuJ3fa6tC42p+ayf/Fi1973
6QRx2pGb7Hci6uu2mLaJC07r6vdfHLA95v2xo56vPqWTxI4ODWmH2PTmPd6/
gTiP/J9pp9jy4XH1/jG+z1XahfU7VOJ6KWKtTjLtRj3HDqnff7FvYC3u18D8
Zur7norzu7qbTsP5JZl5HvOx3rhJtAfjH1+l08Vxq7rzfDPE2TUP0ZnoX2xL
9seLuGcrnYX9XK3LfmfjfH/LpDchf/XyvC8+nHenKXQO+vv8Gp0rTrjckfdz
N/q3Zi3tF0eUvEcfFPufvH2G71+csXQMfQz1VV5LB5Dv/n46H+/Df4YuwHl3
uUSfR/8XnKWDqH/rIfoq6qnyJV2IfIMm0bdw353xdAj5mpagH+A+v7ST9RTh
vXX6mH6G+geWV+//M+lHwTaeV0mxuVZ3OkJc+O1dnn+kOCLSQ5vEucveoqPE
wZ9+Zj/NYltVN10N44tF0xZxQui0+v0Xu95fon7/xd7hvej6Yr9bvV8r8qWU
oGORr/Et3sc4sbXbFbqV2NTuOq2LQx2L1PvH/Anq+52A+T90UL//YsepGer3
H/tpdozuIba8XZv12VHP7zPpJLGvgvp+OcTG0EE8v4HYz9ArtBPrTRzEfgwX
a3du0S7EzePZzxTsp01x3gc3zmfTfHoy8mVFFfD9Iz40g07F/jpWOsv3j3oX
zKfnc/4T2oP+mJPO8f1j/IZtdAbWf+cZnYn9m+J+4/vHejMG0VlYr1EqnY34
zc/oTVh/SzrtE3u+mUXnIN55KJ0L19Lp3WI94kXaj3rLHuL+DuL8Utx0HuJf
16KPoZ8tDrD+AOzvS+dj/csPeZ4FqL/9XPo8+ruwOh3E+s6t6v3j/rk7qveP
8xp8mf29hXznDDqE9SfWpR9g/cun1e8/9rPUo37/cb5PetJaupxvQox6/2Lr
nAj1/sWuhY/V+xcHHz1U718caliS46PE2pja6vdf7PnJpn7/xaYyi9TvP9Y/
fl79/ostI5qznhix99l6uj7yJ1Tl+Vix3sVVdKzYV/FNnm8c9lNtL91K7K9g
Z7901B/xiI7H+BeXsd8JYkeNZrwviZjfLZ+2Yf6mkef5/nEeLUpc4PvH/ip6
6CTU07fiRb5/1DNkHj1QbNv6iHYi/63ul/j+4ZfX0S6cX48gnSLOfrl0kO8f
+/O8Qk8W5y6uShvigsqV6VScX0I5Og39+O4R15+PuGMf7cF5LZxCp6O+GfXp
DHjvSdaTifH3nbQX9+3+E55PFvJlp9LZqK/US/Qm1B+xiOftw3obK9A5uG9/
fa7eP8YHLOr9oz8fbGF//eLAyHfV+0d95a7xPuRh/eIe+hjWu9NRvX/0r0M5
9f4xv/lV9f6x/x1H1PtHP4buV+8f8w8epa9if0+v04XIXyaK69/C+B0f0CHc
r3nr6AfId7I46ykS62lj6Gfox9gQrS2V8eUm8XxKih1rTTzPCHHQtoWOFJsa
9mQ/TOJQO439jEJ85WbaLPZ26Mv7UE2c8U0p3i+LOOJpEh0t9lTeSsdgvdrF
L/P9i41GXWkr1h/zOR0r1l87R8eJ41ZUusL3L05LTKR11BeYSMeLs4Nr6QTs
t9c+OhFufJa2iQsX/EH3QD3r79F2cdGPD+gkjO8foh2o7+E1eiDikadpp9jS
XuUfjvVaZtMunEfWPDoF/bAOp91i34rO9GR4VV3aQP0PS9CpqD8pyPNLQ72f
7qHn4/yqZNIesXvHZDod613qR2fg/It3oDOxP+dbtBf7b1WNzhKbUyPpbJxn
PY3eJC548THvhw/7uR2ic8TW9X/Rudjf3Vv0bsxfd5v2Y/1p9+iD4phORXQe
+rP3OX0M+0uP4H4CmD+1Ap2PuLU6XYD44Bj6vNh+owkdRH/ntKGvip0NutCF
6If/Q/oW7vfbyXQI688bQT/Aee9000Wof99M+hneV9ZCWlsm/RiwnC4p9hbL
oiPgaZvpSHFEMJc2iQPRB+gocWHX47QZ4wecoashX7/LtEVsSrhJRyNe7SEd
I8679F/1/uHFEbyvVrEltgIdKy44XJWOw/7ee129f+zvUEP1/sVabJx6/5i/
tK16/9jfX+r9JIqdLXqo9y92TO2j3j/Oa+dg9f7hW6PU+8d+Xp2g3r/Y33KG
ev+I29V7diLfqHT1/sXBaavU+xd75n6h3j/ii7ao94/6PLnq/Ytt89T3xBCb
ZxxR7x/rpfxCp+G8ks/T88Wu99T3yoP1Ym/T6ajn1cd0BuY/fk5nYj+/RvzO
9y+2bnmZzhJnzKpCZ+N8P3qN3oTzbFCf9mG//8TSOeKEo+/Quejnsg70brHb
0ZX24/7E2OmD2N9tB52H+LYh9DGxL2UMHRBnN51E56OehzPpApzP9vn0eZy3
aykdRD31VtNXxUXXvqALxTFrttC3UF+vXDoktpfbRz/AfTn4E10kNiacop/h
/TT4jdY+l/Uv/06XFOd+douOEBvvPqQjxWmP/qFN4sIvSl3l+xd7PixPm8Xe
F8x0NbE5x0JbML//G3S02Fq+MR0jDn3fgq6P/Trb01bMr5hIxyL+Qw86TqwN
7UO3EruiBtO62Ll3JB0vjnCOpxPE+ssGnSi27EqjbTiv5MV0D3FRmRW0XRzc
to5Ownn23kg7EC+WQw9EPdm7aafY1/VHejj28+g47UI/Mk/TKeKMdpdoN+ot
vEFPFpsWhmhD7G7yhE5FPQXFrvH9i/1TytDzsX7tirRHnHC4Kp0uDgyLpjNw
XqYGdKbYntOU9uL87a3pLLHtWQc6G/fF25XehP21t9M+cdwNB50jzp47hM7F
eTYYQ+9Gf3+eSPuxfspM+iDir86n88QFO9PpY7jfSavoAPI/30Dn47zWbqYL
cJ/jv6PP4/yu/0AHsb+0PPoq9lPvZ7oQ/T5+lr6F8x51hQ7BL9+kH2A/2+/T
RViv5zP6Ge7bo5LX+f4z5LwyytIlxbYWlegIcei3GnSkOG1KXdokjqhppaPE
bn8cbRYX9m9LVxMnlOhMW8QZWR/Q0Rj/7kd0jNhyYwBdH/tLG05bke+NT+hY
sefIFDpO7B02i24l9kUuonVx7jef0/E4j/e9dAL2dyebThQbnq20TexotIvu
IdZP7aftOJ+xR+kkcaBiPu3A/nLO0wPF9p7XaCfmP/qLHi72L3tEu5D/7ed0
CsYXlL7B94963CZ6MvZXuTJtiPN21qJTsV7vN+k0cfBpY3o+4itb0h7EW8bT
6dj/+UQ6A/ud3JPOFMdV70t7Uf+ewXSWuKjPKDob+f47nt6Efq02aB/qbTOH
zsH4S4vpXPR72gp6N9avuZ724z76N9IHcX8cOXQezkfbQx9DvrU/0gHcx7Yn
6Hy8j8un6QLsd/ol+jzeU61COoj7vT9EX8V+kp/QhbjfxYsX8v3jPq4rQ4ew
fruK9AP040pVukiszYymn4nNrzWgteXSjwNN6ZJifUBrOkJsK9GRjhQ713el
TWJ3ezsdJTZ+d9BmsWfmELqaOOO1MbQFPjCRjhZ7B8ws3Pt/AIGW0Q==
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2Ht4TNf7NvBdgrSCKVFx7GipINVxzGiDXYI4tSOCOA+CIBgVxKFsaRCH
MghCg0GQkjIIok4bKUEwCIJgaBBt1LSUqNDf23Xf672u7/jH9bme9axnHffe
k7rDJoSPKKUoSpeyivLf//jnaaf87z/1f+nrZYOX/b0c4OVaXjZ6+SMv1/Py
J14O9HIjLwd5uYmXTV5u6uVmXm7u5RZebunlVl4O9rLZy629/LmXv/ByiJfb
eLmtl9t5Wf1fa15WvvSKe1lp7xX3stLBK+5lJdQr7mWlo1fcy0onr7iXlc5e
cS8rYV5xLytdvOJeVrp6xb2sdPOKe1np7hX3stLDK+5l5SvaeARxLytf02bG
pVXGLXQorEqHsb10d1iXtjC/Jx3OfOkI5kv3Yb50JPPD6f7Mlx7IfOnBzJce
wvxesGZlvvRQ5ksPY770cOZH0FHMp5WRzJcexXzp0czvzfwxzJeOYb70eObT
qo35feiJzKe1b5hP65OYTyuTmd+X+VOYT2tTmS/j05hPKzOYH8n2M5lPq7OY
Tysa86XnML8fHc982vgd82lrAvOl5zK/P+yYx3zaPZ/5tLqA+TK+kPkDOP7F
zKeVJcyn3UuZT3vszB/I+DLm057lzKcNScyn1ZXMH8T6q5hPu1czn1bXMJ/W
1zJ/MNcjhfm0cT3zafcG5tOFDuYP4Xg3Mp82bGY+bU5lPm3bwnwrx7MVNtLG
NPZHJ/8IW2nTDvZPu9NhB+3cyXp0mBN20913s/5QOGoP69OL97I+nZ3B+nSt
/axPJxxgfdr3IOvTW39mfdp6mPWHweajrE/X0Fmfbnic9eluJ1if/u4k69MX
s1ifbnGK9emM06w/HLacYX26/DnWpx/msD794ALr03NdrA9r6ZdYn/7tMuuz
/Ze5rB8F777K+nTb66wfxfw81qczb7I+2+/IZ336lzusD6tz3axPH7vH+iPg
Kr+yPqx8V8D69PsPWR+26o9YH3aveMz6sL7kd9Zn/r4nrM96ZTysPxL5Xf5k
fXr7X6wPGxo/Z33Ydv5v1octK1+yPmyf94r1YdOW16wPKy/esP4oYd92ylHU
h+M2vgOrsL1+adgKp1zwgTU4ylEWdsCu9b6wDpecfw92wwVNK8BKtLD5QiXW
h7PC32d9uEN+ZdaHP4n3Z304QP2A9eHgCgGsD7+4UZ314enf12T90f9Zf1iq
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
/CZ15fMf8YWf0DrinYLobMSbN6NdcAUznYfxzm8j3/+I92xPF2I8NTrRHrRf
F0YXw8ldaGWByL8k477CWhWZb4BbfSm//4T1up/TRsTvmOT3P5xWnzbBSnXa
jHqZ5WlVWH3yVu4/4m+fyf2HJxXJ/Uf9AnkerIg/fCL3H/Uev5L7DwdVkvuP
/A1N5P7DlyPl/mM8hd/L/YdXnpf7j/4+rcb3iQPx46PpNPTXOot2ov2k+nwf
ZcI9FtM6vP0lnY35jB/J95sL/U26Lt//aK91ke9/1G99SL7/Ea/WWL7/4WGr
5fsf/X36/9//C0U96yD5/odP7JHvf2HNUCLf/4gbgvm9axRWU4bSgYjvmUab
EJ/+LW2Ge42lVWH91pfy+x/1yii0BfGGW1g/Evl1m9JWuH8q5xON+gX/cj1s
yB/XkY6DW0/lemrI90nm+ifCf2yXv/8xnui9cv+R/7F8/jkQ98mQ33/Ir5Eh
3/+Irzgo3//Id2bzfaqj/a4H/B7Nxvh/8pd/z4Yr7+X3bB76S5jA71034oei
+D1ciPhPq/m97EHc7EcXI17nF/5eVhYJ+2fRvvCJd9neAB9aSQfAk0aynhEO
mia//4WVx2c4XhN8sCHnY2Z/5eTfz4XVqNfy97+wflmR73/ES/vL9z/6+90k
7z/iC3pxf6KRXyT/PmGDm67l/sbB2n65/xjPe2d4PhIR97vA82RH/3eO87wl
o77vRp5PB8cfzd+DaXDnqvy96ER/67bQmcJGxY+/P3Vhx82WdDbc00K74I0D
6Dzkd4yk3cLuok50IcY3PZD2oL7nNesXwy2X0cpiMf/RVWhfOGou52OAa/7G
+QYIq4mh8v4LK6tWy+9/tH//IdfPhPapzeT3v7B+aTbXW0V+yUXuRxjio+vT
FsS7xXP/IuEjhdxfK/o/25+OhofL73sb2oePls9/OFC+7zW48SH5/Yf6nTX5
/Yf+yveT339on9ZR3n+0L5FOgzfK9k60fz5bfv8hXidTfv+h/3ry+yQb8YJ+
8v2PeIPj8v2P/lJacr5urPeDfXQh/IPK9fKg/Ve5dDGcMIHrq3wv6v1skH//
E9YG76cNwuqpwdy/ALT/1Ff+/hNW9jrl/qN9eB/5/Ef731/I5z/672bn+VKR
bzby/IUhPjeVtiC+qgLPc6Swo/GXtFXYGhxDRyNecYn8+w/ccKv8+w/G81GG
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
JawMm0MbhdXxC+l6wrbpK/KO/h9z15ih
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.000011688823178701568`, 
           2.1969611907479702`*^-7}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.827335901358319*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"daaaa6dd-ce07-4880-b758-84dc85c810c3"]
}, Open  ]],

Cell["aplicado (1 + 3) vezes a partir do inicial", "Text",
 CellChangeTimes->{{3.8278437712046595`*^9, 3.8278438110844564`*^9}, {
  3.8278440817741795`*^9, 3.827844095871195*^9}, {3.827844203716612*^9, 
  3.8278442039374847`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"e0b7606e-a423-4b8f-af0b-0bf13c73965d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"device4", "=", 
   RowBox[{"radObjDpl", "[", "device3", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.827309464142957*^9, 3.827309509189625*^9}, {
  3.8273095822669516`*^9, 3.8273095827838764`*^9}, {3.8273096486404724`*^9, 
  3.827309656545618*^9}, {3.8273097644950666`*^9, 3.827309820485589*^9}, {
  3.8273100680029783`*^9, 3.827310069344172*^9}, {3.8273101653303432`*^9, 
  3.8273101726497216`*^9}, {3.827314359751914*^9, 3.8273143729119368`*^9}, {
  3.8278432697312517`*^9, 3.827843374375833*^9}, {3.8278435864604816`*^9, 
  3.827843593545328*^9}, {3.827844058170579*^9, 3.8278440624744873`*^9}},
 Background->RGBColor[
  1, 0.9, 0.8],ExpressionUUID->"b891c696-d424-48d3-a141-c30fb6d8e39a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"device4", ",", "deltaTraject2"}], "}"}], "=", 
    RowBox[{"applyShim2", "[", 
     RowBox[{
     "MinvT", ",", "trajectory1", ",", "deltaTraject", ",", "deltaTraject2", 
      ",", "magnetizations", ",", "nCasseteBl", ",", "device4", ",", 
      "eEnergy", ",", "li", ",", "lf", ",", "lstep"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.827309464142957*^9, 3.827309509189625*^9}, {
  3.8273095822669516`*^9, 3.8273095827838764`*^9}, {3.8273096486404724`*^9, 
  3.827309656545618*^9}, {3.8273097644950666`*^9, 3.827309820485589*^9}, {
  3.8273100680029783`*^9, 3.827310069344172*^9}, {3.8273101653303432`*^9, 
  3.8273101726497216`*^9}, {3.827314359751914*^9, 3.8273143729119368`*^9}, {
  3.8278432697312517`*^9, 3.827843374375833*^9}, {3.8278435864604816`*^9, 
  3.827843593545328*^9}, {3.827844058170579*^9, 3.8278440624744873`*^9}},
 Background->RGBColor[1, 0.9, 0.8],
 CellLabel->
  "In[336]:=",ExpressionUUID->"f05bf206-aebe-41d6-adca-f3829c34c920"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
kwCDjG0tPe+SuQkIndSg8esZmZcAtaCyiwXtZGkCckwTott6plD9E/C98Gnb
pZHkogT0fCrupalPLkuA60NdhxGryRUJuOfwtF+xD1mWgG0G3lOfp5FrE3Bp
5S/DAyXk+gTF/e/JtNK75IYEXHesEcf/JMsVHro3LmMCl+qfAH5d/Q/TleT2
BNz/0mVtGkTuTIDpn+jidXlkViLma1p82XSFrJKIdT9eV9h+JKsmYuBDjy6r
EalU/0T88jSTmoOskYhaL8HGqZvJWolYMTtuwfkcsm4ihqzxKCmpJBslQl2Q
KQ+Qk5GIvn8/qvn1SqP6J2JMsPfuEVpky0RkcY5HqpmTbRMh2axsAQ8yOxEB
3osW7Ywleyfi5K1iXQMJ2V8x36UoS/0IOTwRc/WO9ra4QOYkQvn23wc1N8nc
RDx3tTWLaCTzElG863WqQwtZmoi8HZbRUe/J+YnwL/M+MKKdXJSIL7uN5+z/
Qi5LxDgDC+XKr+SKRPzM/7G2nbEsEfVnIx6fY1ybiDb+5rnujOsVxxd6rVVi
3JAIgd+IjHzm8+WJCNU1SZzFuDUR98/l1hz8TG5PRPm/nbf7M+5MxJZ/a39H
MefLSsLO8S9dFzJWScK7GemzLjNWTcJfd9PNO5jPV0+CsukLp1XfyRpJeNV4
xFn3N1krCS8cU/ptUUqn+ifh16yyY18Hko2S4J5yLfjYaDKSwO/1Z1XmdLK5
Iv7jmxlR88mWSbCcF2+auIZsmwQDaxWLU25kdhJ8rvgsnBpJ9k6CkvIe3hMh
2T8JhyRvVY6WkcOTcMTXf7XZLTInCdVVvEeDPpC5SSgL3ceK6Z9B9U+CndR4
5EgdsjQJfe9YROWuIucnIdhi8KLnPuSiJNQ4LO3xKZVcpjh/w4uVt4vIFYrj
fVoTc66SZUlwaG47a/iaXJsE/4iKHweVMqn+ivWfajC6cCK5IQlWJRXZlxaR
5Un4uHDMps325NYkbDB1290zhNyehLoLWqKJGeROxXp5HlYW5pNZyThlnz19
43GySjI+9G11Sagiqybj29J+nvq3yOrJ2D1zFTuogayRjEzTkzeWyslayQjd
2VG04xVZNxkhcr8Mh1ayUTLiu5ylHMZIhk9Lw8Xxr8nmyVj73Nol8znZMhkG
k14nrX9Ctk1G2Yhnt0feJ7OTYcUvv+deR/ZOxpaheTE51WT/ZPx8XvT9+jly
eDJWnvo2fuRJMicZxr+8jm8rIXOTMSPw+JpzB8i8ZOQozf77dRdZmgzlu+ME
E8Tk/GT4Z+/aG5xFLkqGr5bBl1Up5LJksCsax+rGkSsU62e/6lR5FFmWjLaJ
FzxWRZBrFet3seOtFuP6ZNTctdayYI5vSMaZXjpjpBym/snomC5Z2ZbM1D8Z
ageWf5mdzdQ/GbNYuy745jL1T8b19U7fC5n8WCkwj/426d8Jpv4p6HV6zqxs
Zv1UU8DdOa5r/SOm/ikINR41YmwbU/8UHLnibhzQI4vqn4J34feczo8k66bg
sky6PFyPbJQCAScvfMkKMlLw43Tfle1ssnkKCov3TwsJJ1umYKV+Brc5m2yb
gkE7rifhIJmdgtb6/lsPXSB7K+LfXRUw9CHZPwVq46O7bD6Qw1PwcJHf4yFK
2VT/FGxdx2u+MJLMTcGXDaKMshlkXgqUKj+uXb+ILE1B6tqtPWzXkPNTUDvf
MGW/HbkoBZ+2Lbqwwp1cloLd36q8vbaQK1Iw7u7GFYP9ybIU7OGENawMJNcq
1tf56gglxvUp+J54487YbeSGFLRN37MudDNZnoI1fTVW/+dCbk1B1O1qlTfr
ye0p8Kkp6BCbkztTwLbvk1w+j8ziokH/z7+WaWQVLhZqx14pYNZDlYuP1hWO
xn3I6lxYp04yvdhJ66nBxajBQV9mtTL15+Jdrc+LyEdM/bmoGbZSS1jD1J+L
x0t+5UacZOrPRR/jdTlWBUz9uRCbu2kGCJj6c6F2bcpktwSm/lzMzR4/53Ew
U38uRnMzN4d6M/XnwmCP1sE9Tkz9uTC1G9Llv5GpPxdTLihPeWhF5nCxcuF+
brElmcvFfX02/zZjHhdHPoxZaWRNlnLhd2XV5zbm8/IV8bfPX63iTC7i4r/d
lt+PMOdTxoWZxS7HT8z5VnDRxHFadZLJR8ZF6nL7RTuF5FouotTLff8Ukuu5
YBfLfaadITdw0aU+34B/kyzn4ucPp6xXcnIrF6ceTB2t3EFu5yJn5JnDXcpM
/bkIczR51cTUl5WKu3dGJF/TYeqfCvWt467VM9e7aio65z5vaLFi6p+KMzW8
6hoPskYqSjfP8voZRtZKhcB+bfANLlk3Fb+r/SySJWSjVLy3LzE5vJ+MVOSr
78gfUEI2T8UVnX3TL5wgW6ZiV/Vej9enybapcB3Xu29JJZmdiol/ti6eythb
kc/t7PnWp8j+qTB9f27dyGPk8FToLn5SYXOI6f9UXDSsE7zZzfR/Kgbf2RfV
lMP0fypuXdh4nxvP9H8qkkedf5YZwPR/KvZ9f/S+0Jnp/1SYhFb/9VnN9L/i
fFNOZsyaz/R/Krx35/UfwPSbLBUTjjy0/zyc6f9U7M7Z9+g48/1Un4pxf71/
a3xh6p+Kxiu2SmrPmPqn4tTt+rUxN5j6p6L9+X8unNNM/VPx+XPvhRH7yZ2p
SCq9uqEvj8xKw3evjDevo8kqaehKjq3L20pWTYNcP2OTF3N9q6dh05Kl/iZM
P2ik4XyB+rPP5kz/p0HbW2WcI5j+T8PEnxamHvOY/k9Dzqyp2X0NmP5Pwyjz
frO8dJn+T4POoqbPRTOZ/k9DKO/eEtYspv/TMDtp4utY5u8JWxHv4LtRHXOY
/k/Dx56SqXfmM/2fhuZl+6WbTJn+T0Ph5islL5nz5aTBK2y+Za+1TP+nIWqz
rEpiw/R/GgxzR4gLNzH9n4bV46cvsme+X/LT8Gzomo53rkz/KzxRyTjZi+l/
xfnOZg9e7sv0fxr+S13xeHQA0/9p8M76UHUshOn/NMhO9O3w3c70fxo4jzUX
pUQy9U/DFrc1WbaM5WnQTzpygc/8vWxNw7WeYSqLgpj6p0HD+/42wRam/mno
9Wfci+suTP3ToTPOWGPgBqb+6cgbObhyM7M+qulwOWbcecOIqX86blXv5vWZ
ytQ/HYZebPe2IUz90/Eyz+mT1W/m/i8d+jL3P04vmfu/dBhrh84Q1zL3f+lo
OpGlfOUIc/+Xjkqptugoj7n/U5zf4ZBVD4OZ+790jL2lFOq7ibn/S4facg22
z0Lm/i8dH4bd9yuYxNz/pcPo0IGxz1SY+790RAe7W8o/0P02Jx3fnXvPjLtL
5qbj7+TKosunmPv/dFiNWv/83Q7m/l9x/IfA+emxzP1/OoqLjHaGeTD3/+mo
V16bGrGauf9PR1Z8WLyKEXP/n47kt0PG601m7v/TMcTggUmtGnP/n45BEUci
hMrk+nS8dh6t5NtF/z5pSAdvXkDj4nayPB120/wHTG8lt6bDZ7E8euMLcns6
Ml6vi1B9Ru5Mx+Ne1/sKmsmsDGxvGpTQIierZGBjlLbZ3ldk1QzsnsAao9RG
Vs9A4oiIRXO+kjUyIA0OkUqZ89PKgOfPhn2v/qPz182AVtY5oXofslEG5ui0
bN+kSkYGLmxfc//VCLJ5Bk6JSi7/GU+2zIB6SJPvHS2ybQYuOo985aNPZmfA
Lrz2usCE7J2BMJ+FEy4uI/tnQPXdDMlgS3J4BiT1Qb8LNjL1z1D8fXI9+9qB
qX8GUt9u+FTpzNQ/A/kX0r3Xspn6Z+DA4MCtH52Y+mfg71KVU/X2TP0z8NJz
Wchg5vPLMjCuIt7hIBO/QpEvN1nfw5ypfwYGxyZ79VjI1D8DlntMH+vrMfVX
fH7a4pcPJpAbMvDrnqe3HrN+8gyYBCyMYv1h6p+B9/zxadPfMvXPgM2SN15u
D5j6Z2Cpplt+z0tM/TOxY+Zox6FHmfpnYm+cywiPPKb+mWgdmBtfmsrUPxPj
akNv54Uy9c9E3bY01zeuTP0zcfXJyZUezL/XdTNxRn7399R5zL//M3Hk0fTZ
4knMv/8z0di1McyfeT5gnom4ua9rdnQxz38yEWV3cOCpVub5Tya2BoiHvGlg
nv9k4vTavZ7frzPPfzJh3OrgkcU83/HPxNTJC4WeJ5jnP4p4e/ZE2R5inv9k
IvRnhbtXPvP8JxNa/zrXV0mZ5z+ZkN/57VXJZ57/ZMJs8b2n5VnM859MBL1s
W8jKZJ7/ZIJ7ZJNdJuOyTJQ2f753PZt5/pOJ97ml7Y+Zz5NlYuCFggO/RMzz
n0xsGF2td5OJX684/nLasKU7mec/mTDsPJUs2cU8/8mE1aszd0cx59+aCacr
iwz19jPPfxT1Ed11nnOQef6TiebZHRXuzPMwVhamBMfsvXycef6ThXSbVPc/
lczznyzI9MwWW1Uxz3+ykPdjUPKFq8zznyxsfu+wfEsd8/wnCw4VlY59b5N1
sxCrMeRADWOjLOjpJkb/uUVGFn7nm/RQYZ6/mWeh+tm/hvFMPS2zcM72GMem
hql/FjY97OHGZc6HnQVfe9H+oLNM/bPg45P2/RhTb/8s9A937tfK1Ds8C4Pr
5rf12c3UPwtyrcILu3lM/bNw03qOSkE8U/8shFY8LxgYwtQ/C11+Djd9vZn6
Z+HwZfOYJgem/lmw+Waxa5oVU/8siKV9/T8tZ+qfhVe7X645sYCpfxbqRuwo
6NJn6p+FiCrXMpepTP0V6xO71KRiFFP/LLjvFidrDmDqnwWtfSEzF/yj56mt
WUhuXfr142dyexbu1noGD3xN7sxC/tbpfd8+IbOyIZu4qWLZPbJKNvplXJp7
6gZZNRteoyuP1VUzz3+z8dp616SlF5jnv9lgHfzxoV8F8/w3G22V9g2LjzPP
f7Nhq3tsknEJ8/w3Gy6HxZP9DzHPf7NxbJWapfdBsnk2+v42/7qVsWU2Bi9b
6r6QOd42Gx/tZ5b+OUxmZ0OZbapbXEr2Vpzf6vvx4jKyfzaqC8/MTz1GDs/G
/k9fH+5nzMnGsgHH6hYx5irOT01N5S4zn5eN8U7li+8zlmZDQ/mvvJQ5Pj8b
a9YU/8w7QS7KhmqdenLyKXJZNu6ui5jYwDz/rshGzUnnT7HnyLJsHB89SWp9
nlybDeGnddLys+T6bKBrzqpzp8kN2Yh5OuXpKya+PBslfnennipm6p+Ny6u0
7bP2MfXPxt/SkBM7cpn6Z6Pz3cLxN7OZ+vOQVr9D/WkiWYmHgBR/4Zpw5nrg
gXfR6X4683y/Pw8281UkU22Z64OH3Ye+n1tpRlbjoaRh0+d3M5nrhQfD4OQR
liPJY3j4y80z9FZirh8ePBxz5ue00+8NmjzY+i8cc+opWYsHhx8XN0fcIOvw
EGZ175lDJVmXhxN71fvfKSQb8JC/+ZPZBgHZiIcDP0JXCGLIJjzUqg99HulN
Bg/+4ZpzoteRzXhov61/KduYbM7DknFRpS2aZAse3B+XxswZTLbkwVKsdDz4
H/0eY8ODgUD1/NhPZFse3vmwV+x4RnbgQXni86fh9WQ2Dw8HJUvjqsjuPNy3
sss/d5zszcMaTj/XoAKyLw8q6m3VOhKyPw93zhl935FODuaBfz+Y5xFPDufB
qGV53PlIchQPwve/tv4KJXN42OPRa0JrIDmRh02Xz7hF+ZG5PGyt+twfm8kZ
ivX8utXO2I3M46Fce+vEKw5kIQ/3eorDPDeQpTwc3lqVVW5JzuPhbo3/lwUW
zO9nPARmDo3xW0Eu4EEteZh8sznzexoPa82LVBsZH+FBZ1Vm81Xm+DIeSo0u
FdYxLufhw5RtdveXM7+38TDkkc6pY0vI53i45XQrSr6A+f2Nh0t500t6zyVX
84Deen+PzmJ+j+Ph4PGAwKla5DoeIt88Oxquwfw+x0PXxMOl3urk+zx8enfJ
KHwQ83sdD3rrypa3K5GbFOuzdantgE7m91semrfPDPduJbfwMDVxvTz2IfN7
Lg9BRV6j9l4mtynWb36idb9jzO+7PLS80p/kuIfcwUMut6U8N4v5vZeHB7HV
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
7VvV2b93JUnI3+nxtPdqtv+TMNchp/CuBdv/zPkN/23tvYTt/yTM6vHvwRsT
tv+Z+skchalz2P5PwmitHveM9Nn+T4JMYYlo0GS2/5Ogl29iumsc2/9JMMme
+ebFSLb/k/B63fo7tf+x/Z+MhoUrVDz7s/2fDPXvSZeO9GT7PxlOhQ6/BL/Y
+38yivy/X+vZxt7/k7FwhXLz0Dfs/T8Zu6w5gqtP2ft/Mi4UrJvd5x57/0+G
rPF2aVMle/9PxlfJLJWV7P3VLBnlW2srVx1l7//J2L0+7lNLAXv/T0byzY/u
Q7LY+38yhio87P84kb3/J0OZ/zJvVih7/09Gs0X2teke7P0/Gb1ex7y5a8/e
/5NR8LvPR9WV7P0/GXg9a0ovsPf/ZPjvMJy5X4+9/yfjP5OR5/6yzzv5zPnX
H3IZMpi9/ydjyqRDVZ847P0/Ge+4wdOFbezzXzJOul3L+fucff5LRlPtqyzj
avb5Lxklg9+ttrnIPv8l403LtsOLitnnv2TM5+nPUclln/+ScXpiUMyFZPb5
Lxkm7U/7rQxhn/+SIbgo3V7lyj7/JWPki0feU23Z578UqAk0R8SYss9/Kdil
Ou3cTX32+S8FS38N7uw/lqyegvKZK5qWDSJzU1CodnBXahf7/J+C4z8GBz78
wD7/pyA8fNy6qezzumEKdry6mppVxT7/p+CoWN1e9Qz7/J8Ct9Pczv372ef/
FMT4vd+1KpN9/k9B2CX300Ni2ef/FLzLcV781Yd9/k/BRNM+U9/y2Of/FBRv
uOHRvpIcnAKRb4XjCBMyn8lnoOqfddPIghQcHvT9U+kosjAFJyYObZk6gCxL
wVjHo0VVnez7XwoyV0SMTG5l3/9S0L6y5ntQA/v+l4In38WRstvs+18K4hZO
6/m1nH3/S8Gsf5vckovZ978UaKS3v3XZxb7/pcDiveRFSgb7/peCt/6ZNZ18
9v0vBSZr7i0q92Xf/1JQV5n28pYT+/6XgteqWs5T1pI7UqBZNTv5mTmZk4pD
dbeUGo3ISqlQn9I7bTL7vquSikuORx9eGUdWT0VdU8KH3cPIXObzBwZsusi+
P+uk4uLoV5nDOWS9VPSdy+tT3M6+/6eiJLLFxv8d+/6finWtM223NbLv/0x9
3VVa6bXs+38qlM/M0Hxcxb7/p+LugTBVc/Z9n5eKxrP7TZ6eZN//U+F4+/fh
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
HUx+/fYk2yuROyXgHE2t2niE9mNxMuF0tta90JKskIka4RUz/c+030uJ8VTz
XZ8yyMqMFZZ11uqy+8UyoVQzYM7pPNpPppYJeUfM487HtP9MPRP8X1vG+KuR
NTKh05Hwepgl7V/jZsJGfLd/Syztf9PKhEfLz1/vymi/nE4mTHWnxE1qpf11
UzKhAQPbi6PY/XiM9fI8r1jSfj0D5nhXK6vXhdP+PsNM3I/yv3noEO0PNMpE
pkFN1cMHtL8QmRhwSzS4Zw+yaSbEiz04ZpNpv6JZJgS1yhsu2dB+R4tMKO8a
Ny44gvZLWmXC9ub00LD9tP/SJhMIn7X7xm3av2mXibJvgW/WfqP9oBszUfg5
on3gcHZ/KGOVt68yw2h/qlMmDE0azpdeof2xbplouaH7bmAf2n/rkQm7/mbT
9M1ov7F3JoJPla87FU/7p/2Z/pnmetvkEu3vDmbaX2N7z/R22k8enok2nYBT
fuPZ/eeZ8H6sndSwiva3xzH1J/hycr/R/nlBJvSMs/67O5f236dmwqph34jy
ENrPL2TyPdWv7VcJ/T5AJhPvlMjU5Qr93oAsE02meSG6Q7Vo/DOf72c+wPiC
Oo1/5nr5nPMnzo9+T2EfU//cnob+3vR7T4WM+ySmGvek36MpYtrTXz654Cn9
fkRJJnKfZ2SVl9PvVZRmomLM7rWPVk3vdhmTn8HSjQ1LZ3a7nLn+6o5YDMSc
bsszkT+2YcmAufO7XcF8Plhj0bkd6HZVJtTPuLx/L1vY7dtM+WcXk41S027X
MOdnEjb8TtaSbtdlwm1q68Y/ErNu1zPjI9pUo1C0rNsNTPsXXqrKTbfodhNz
/J+/bhYnr+h2cyZ4uhFvny206nYLU3+XxfgnJqu63cqMV5+n95caWXe7jam/
c/p0HcPV3W7PRNGzC55RM2y63ZGJVlP+Putpa7rdyfSfhuLCAzq23eZkwcxu
wYAIzbXdVsgCL/hTy8ORdt1WykL8Fespx9XWdVs5CxudTjT3GbC+2ypZ4ASk
VT1Q2NBttSy4xc/49l8nWT0L8kquz9mvG7utkQVt7QiLcy323eZmwdNM+kCx
cVO3tbJQevDM4eT7Dt3WyUL67+opQ7fwuj0lC/te3ShzaSDrZWGWqrr7+DWO
3TbIQkNnrILJHbJhFqy6cvN2m27uthFT7tA7Y8Z5MrLAd0+LaNHb0m3TLOBQ
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.015490867489361185`, 
           0.0266602589021216}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxV2mlUje3/NvAUyVjmEEIIIXOGOBBFIYkG06ZSiHbzrN081x5rG0rmEIWQ
IULInAqZk5DhJnOo/PezOn4vHm/u9Vnn9b2O8zjPq7tlLf3XeNi4qKupqc3V
VFP7f/9t/lM3Xe3//4PRS1/9dTjX/3wztXDEdN6rp+UzaB1Evr+9qONQW7or
DkXWWUo11tC6mPS4VOxs6U7rwXLsj1WFQT60Pu5++mx7sVUIPQAr3WI3PXSJ
oA0QscSq1zW3WHowrpkXKmZ0TKYNYbsw75VXjoQehsPl21rmDVLQRli5uWb2
+O9KeiQ6L51s6dozgzbGlW2NvR1uZtGjUbF21pXiCbvpMZi5tdol/+5eeiys
B/sde5eWTY/DLdnMacOSD9HjseFE37Lpx4/QE/Dy8qZ5DS2P0hMxqf/srV2u
H6NNsH5R3MJF+/LpSRCr6y0YmHGSngzbGTYPfx8uoKfgPy33NPNHZ+ipyBnq
dzq8XyFtCsF4l9/9wi/Q0xA0p2TZgn9F9HREB/0WTba6RANe2ccc5fsvN1sE
nP1Wh4xOV7g+A5LO89srE65yfQaKt7fWud65hOsz8Xlb03C/g9e5PhNLnUrL
3iy6yfVZMFr9Qtu5zW2uz8Ixh9wck3t3uG6GhD1FkkrbUq6bYc4K8ePkufe4
Phuz5B2n1swp4/psKK+G5LacX871OchcINbvubyC63Owwr4o2MrnPtfN4bH1
Z+4NxQOum+PkIpuTRUUPuW6BMQMLMpb/qOS6BUz1r6XeHvuY63NxeuTuJ7NC
nnB9LiJN5Q11d55yfR6uVWrubG30nOvz0CX52NGzshdct0R10euR/SOruG6J
+rvPu72b8ZLrVjig8V/wIs1qrltBNHynun8prTYfx07WqPtnveL6fJzQCpZ6
+NVwfQGyxu9JDLN5zfUFmDd+bOrVcW+4vhCJp2M7uPR5y/WFcP2ZsTCkfS3X
rXFprVngSPV3zYY19Ja5iTObaJE1FnwKj6xr8aHZRdaQ/v09Zm77j5xfhOJS
9aA7ff7j/CJkGxeO2T/hE+cXwd9x0fS/Sz9zfhFe3u97I3B6HedtcKB2UL8V
D2nYwDF85QRT7y+ct0FQ/8ppxl2+ct4GAV9iWsw/Rastxt8zjW8PrvrG+cX4
YpCktqb9d84vxpYH9zQSC+mixag/W7tsuvcPztsibuQYwy0jfnLeFpZ9v8w6
/pEW2eJg/fH5B/J+cd4WXp9LctID6zm/BDuHzUnfZv6b80sw4FZuz/Jefzi/
BHdSSvut+EYXLcHwZbWBDvf+cn4pnF5Vva7Nb+D8UgRt8dEdkdnI+aWIWnfv
skVyE+eXIn7wkKxVEf84b4dLtiZTbk5Tu9A8bwejkjny+Au0yA5pJ7us2jyr
RbOL7BD76ld+4Q1azR5tbvazWr5EnfP2+JW3LMTjFS2yx2OrtbM7+Gpw3h7P
j4faWrVtyXkHaPfc2tZsNw0HtHl1LqI9WnHeAUcXWG45X0UXOWDmr8yv3tGa
nHeEx8UQdfORrTnviBGdhnZd/IQWOWLMBetF+UlanHfEnp+mN2NntuH8MmTd
8o/40EBjGardE4VNZ9tyfhnKOhaKq8LacX4ZspcEvztm0Z7zy9E0LTA9vXsH
zi9H6P0XD46+o0XLMVLsqD34UkfOL8dGg83Pe2Zpc34FTEIOdXo8Q4fzKyA6
ei465SQtWoHzI5Ta00d24vwKqHdyGtLiAK22Ela/+qt9GNyZ8ysx8FFTSpds
WrQS/2y9pFKjLpxfidZRq7aK8mm1VehubKP9a3pXzq+CnfquKTp3adEqtPQ/
ufjt6m6cX4Udn6eFKetpNQH0hk6ohqx7s/UFyI7dt69pdA++T4D+22WaXypo
gQC7LZYvNQnR5fsFiH8erP1zSM9mZwmwZ/z3J1aVdJEA4ke+OwXJvZpdJUDf
iabJS817M381/hz21l+iqcf81Zh/4+PUqBs0VqPrq7ujO8j7MH81cqpHXe/l
1Jf5q1EYtmXJo4n9mL8ar19bC6a00Wf+arjYS60kgXTVasxcp9mp9X+02hoE
/4k0PunUn/lr8FN7YY/Tz2iswd4N6wcMXzaA+WvwbtH2/YZPadEaOLaybLwj
GMj8NRg40Tdi6ju6aA2OdxbuE/saMH8NDjsW1n1oNYj5TrgXdkpLuJXWd0J8
nOzc9LGDme8E795pWmGltMAJw1sd7bPYawjznTDwg9y1WteQ+U7w3akhtS2m
i5xQUaSTXOYzlPlOcDvkKo4ZNoz5zvA/EN9n+2ta3xmHdlT8m75vOPOdUdy2
h2WWuxHznfHhgb/dR5MRzHdG0m+nM7btRjLfGX3yA6e2q6GLnHEv+fKNmZdH
Md8ZD90qj6bbGjPfBRHrcpvUb9L6LnAeLh/TZDaa+S7odXJ24p5LtMAFXXo+
juxkNob5Lnh6sSBfcJ3OcsECvV+HDtuMZb4LNgtWn+tSRVe5wDzO6OJhz3HM
XwvZzwvlitbjmb8W+vdt62p20liLfBPt6GOYwPy1eK7t+aZLDS1aC7M5E3b1
TprI/LX4rf5qf6WJCfPXYsrz61OWvKer1mLlpOi9iqxJzHdF9vDusWnLJjPf
FZ0ezSye13sK812REOb1RPmCFrjiiadegl32VOa74nT+JvFcX1Pmu+J+6YK1
unOmMd8Vu35cvDC/13Tmu6L18LS3ll9oNTccepF1bIALmO+GYFPRvl5lNNyw
fGrv4/9Nm8F8NwwtvTXq5UFa5Abni31Gjeg2k/luCD9pE9UrlC5yg/+mwNTx
1XSVG6ZkYX2K2Szmr4PVstbG7/fQ+uuw7bLdwtMtzZi/DqUr1W8fd6EF67Bz
psGa4ddp0Tp8rrqnt3DUbOavw7k262duTaOL1sHIyOd54F+6ah0kjst7aNrP
Yf56hNp5pe3fTeuvx619b/4cLKOxHt3sK8M6PKAF6/Hyr8X63ttp0Xq0Pu+0
e3NnOms9NJaPu5Yz9H/56yHo9eOesJL9qtajNK+u+HYfnofaBrzXWv8qWO1/
578Bp7sJdub0/N/9b8DD3SM7j97L71GwAaWz3EvmJPHnSbQBq1+d/tt2+v/+
/7MBIfXTf9kr+PuvSPW+DS2uju2kNb05fwNyBJa3XeIHNFvNHUtSJhhrFI1s
tr47dOwjS1LnjG823KGVcT6k9MfkZgvckSTpenG8KZotcof3dHldye+Zzc5y
x/5Ci7HZ12c3u0i1fq9MbfZtC+a7o/r9mN4hhlbM34jhcZ0cHzcuZP5GLFsq
/M9zvA3zN+J6rFl1/8u2zN+I3GP5TWdz7Zi/EbK177uL/jkyfyNMFnaOHHF8
JfM34s0b0eb3TquZvxGzhBH7HbY5MX8TXnTuEFX4x4X5m9Cxq/x8drAb8zch
9WHWWoMeG5i/CcUpuvudr25k/ibMSz5ju3OGkPmbYCvrcHbyHk/mb8KslRfG
39HyZv4mWDq/L9+y0Yf5Hrg4cnBrs3u+zPdA5t8F9c/G+DPfAz28Joi/SwKY
74HDc1amH/8UyHwPvMH7Vj3mBTPfA8MnHz/dY18I8z1QVHnPPa/VZuZ7IEyr
XpHhHsZ8IWKO+x7w8hA1W0eId1M76I4yDud+hKq/ED7ZN/oPbSyEr93zF8/u
RHB/Quy4ou5tnRvZbGshQvxjtq7dHsX9CrFlWLsvF9Oimy0U4suFmzrFmTHc
vxC9bj7KC8uPbbZYiCmBrbdnPYxjHyGS+3bVXNw6odl5QsQP2uI8ZWYi+wkx
sZ3/gNSYpGaXCrGhy8GLlmXJ7CtEoc+b4T4DU5tdJ4T9ieI/faaK2d8TxvPn
dUl+S+t4oupoUqCLTML+nvB4P2PToOlS9vdEYcTAvHXvaXiiac8Dy89yGft7
wnFpWujWaXL290Tolr7bI97SQk801j7K+JeqYH9P9PQt/pVnksb+ntDqcGWW
TzWd5YlT8+fYzEtJZ39PRDmtbDXBVMn+nkDfXgYD6+hSTwTk+4Q93r+F/T2x
KK13fzWXreyvWj90pLCb4Tb294Ka2YyKkC+0jhe+tbKU+17czv5eUE9q801X
mcH+quffpP+d75vJ/l6YnCATFdrvYH8vfM2+cP+1fhb7e+GLThu90nRa6IWZ
r2YH7dDZyf5eWFP02aE8gRZ74UFh3f3vrXaxvxc2HPJ9uj2czvOC7qSEAN9G
usgL656femASuJv9vbD2w3KTvO90lWo/mpOW5HvsYX8v5F9q7KX6hcP+3vj6
+JnWYOe97O+NnScufT/5jNb3xob+oUcH2+1jf28Mfey081EpDW/U3VjcZ67l
fvb3hp+r6e+vV2mBN16q6YRZmmWzvzdC2l0uPXGZFnmjQHj4UfjsA+zvjePf
rrT87zqd5Y0npnlzBi46yP7eGGb04cu0J3SRN97u8Uyd43aI/b0RUzLvqmE9
XeUNr1Lzo6cScthf1Xe6dvm+fofZ3wcbS7qGpZ6kdXxgGlSW0rDgCPv74IIy
8WdALW3sA2fbf523ReSyvw82FVloRnfMY38fnN3WwfrCMlrgg/51v75UZdNC
H6zwXNDxwQ9a5IOyw9m+0plH2d8Hd2ZXXumcSmf5oODste0rn9B5PhCFTrNL
HHKM/VXPX9auLvSmS30w7bd+2NAiukq1P0tn/7YdjrO/D9QOeUVnOtJqvhjo
P3tt3wO0ji/yq9fGnqmn9X0xIl5/09a5+ezviwvhHp7PttHwRVjXy6nbPtPW
vhgX+H3ba7MT7O+L2k5vFhRvo4W+WB+7s8uE77TIF3E+sz4OX3CS/X3xs0P0
tZgDdJYvOg3QieyheYr9fdHhy/Khu53oIl8EzUye+f4iXeqLYfP16nL1C9jf
F61uRq08H0bX+WJbK6tltc9pNT+Ep78c3Wbaafb3g0myT4eWGbS+H6bfbXPt
8l/a2A8+g46fnOJ4hv39cCPx0oN1BbS1H564H2jl2P0s+/she8tH46E+tNAP
c3GkrWYZLfKDRdphoxHG59jfD6O6ay58mUJn+eHDtvI+Tp/oPD+cNvjw+MOC
Qvb3g3XDDodDeXSpH/KSMnuVdDnP/n54dyGwmyCArvODZrnv0PjntJo/4lat
TbOec4H9/dF0VWfU6Vxa3x+mw75MXN6hiP398W/616tbZtHwh7BszeKwINra
X/X7cXeHuqO0wB+n2lo+vPmOFvrj7EcDg2/9L7K/P4ae2L1/riMt9ke95nzh
KSmdpXpe7foXw5t0nj8u2lw+kKJxif39gbsR1U+n0KX+iGi/v7adD13lj7a1
bm90c+g6f7y0E69pXUOrBeBoRfDX6t6X2T8Av/NStYsW0/oB2HvYv/xMIm0c
gM8jwn2/XaYRgHlWL9okNNDWquc/fbbdNr6Y/QOwQcfCbroHLQzA5iU9escf
oEUBCFnRRSO2hhYH4Ngn5zaz9K+wfwAsW5luubSczgvAz7/fn7XaShcFIEMj
NUOzki4NgOGd+bqnul9l/wBUP+v0rMVSui4Ad05UB91U0GqBuC6OrP1xn9YJ
xJ/UySOdu19j/0AcNhA9a1hKGwfi0rkG9UPpNAIhn5XZe2UlbR2IQQ3LT7bp
WcL+gXBYmDBprwMtDESUmmUno620KBCTlQHrMh/T4kAUj73sqt77OvsHwnTl
owiXZXReIGpHf+n+bBtdpHp/fJxx9FO6NBC3XiasDu1zg/0DUdVly9ualXRd
IHZNjLn7MItWC8Kmd0vPbHxF6wRh3qXQ+6cH32T/INwaedLq5nraOAjb5lpl
H86lEQQfl6MX3X7Q1kHom+Kppzb1FvsHwdT+jNIzkhYGwe7szqvHb9KiIBhD
Jye/6232D8JXr49GjivprCBYSzIORGXTeUGolv163fkbXRQE2x/ewa9N77B/
EN7usL5TFUdXBeFVyaSd/5XTdUFwjD/4rr7vXfYPxuHygaJv62idYNQmfdQt
y6f1g+GSnXYz+R9tHIxnn4/s6TyolP2DURPd13LhPNo6GBmtD5tFedCCYBhn
aq8rlNPCYCyd53+nzRlaFAwMW1AU+IIWB2PQswvX9VrdY/9gHP0yJEJtOJ0X
jLr9lgOMF9FFwfj4flFyvj9dqsr7ctRPnklXBWPw5ZT1FVfoumDIUsPT/f6j
1UJg4B9uHdStjP1D4N77iNMTU1o/BHXDtu2QrKWNQ/Cl0bOjJJVGCE72mDvm
ZgFtHYK0mMcvjKtpQQgEs53eHG9Xzv4huF0+oYXFeFoUgh2aw/u+WkmLQ7DX
zN88NI7OCkHEpYhgnWN0niq/ZNBe5RO6KATdHd3Lu7SqYP8QOL2vL4wYSVeF
oE9SdMQ7O7ouBKc/t7G0DqfVQrGyw6D5lw/SOqH4pxh5fFEFrR+KoKqyvHZN
tHEotMK19qoZ3mf/UJxRVvw2taGtQ9FxT8qtOyG0IBTDt55qc24/LQzFWEeH
ve3LaVEoihsDTlxposWhcArSt3w/7AH7h+KC5tZfQXZ0XigSXj9o7RtFF4Vi
o1GLM/eO0qWhcP2V/zv6BV0ViuqX9cMjOzxk/1DU9F71s2AKrbYZrdrOGd9j
Pa2zGRg+yyFVSetvRvARqz9dr9HGm6E2/0tVxg8am9EUdPFJf4NK9t+M7zu9
d221oQWb0aOu11eNcFq4GaZ9djUsy6VFm+GQFG605xktVs0HOWpWt3vE/pvx
dUvSjn6T6bzNqCpf3WqDG120Ga8m/QyuSKNLN+PDKxMH9yt01WboddvjPuM7
XbcZsgxTc8HAx+wfhvu1LweX29A6YUgd18tgVwStH4Ykc7F9+THaOAyGCwaU
rn9FI0z19xefYeu7PmH/MByWHvtwdzYtCEPXpqacNH9aGAa9Z6nZ+QdoURgm
tfs1We8pLQ5Dq96uwYUdn7J/GJINqqfHzaDzwjDL4NThjT50URgq89/9Feyn
S8Nw5VmFwu4xXRUG3bblPyw6PGP/MMhbvQ4bCVpNhGV7hEka3rSWCDN6Ky5e
2UvriJC0cW+xbyWtK1Kd185+uu2e83xE6HH/7psTprShCPcOv/RaLqSNRUi5
PbOq927aRIRri+tft3xAQ4SFX1u1GtLmRbMtRLg5rGNa6lTaWoSuDjNlc4W0
vQivbD0LV+yhBSIE/ld7vaySdhNhZ/nwYw80q3jeIhx6UPfVvz8doNr/18lP
rabSIhH6qL2dtdiOjhPh+K/jFTFetFiEj90GG71MppUiHKtUj3c8QGeJ8K90
9c33xXS2CGmDxtkkVNF5Ihinj/Qd00AXqPZvk733WY+XvD8Rqp5+EsSOpUtE
OFv+oZfRQrpUhPNzC6dcX09XqvrWB81YEUNXifBh87yOtTvpWhG8R+vZbyik
60TQm5jY9kMlXS/CposX52z8TquFI2SB1pXf2tW8/3CkFEiuKofTOuGYP7ml
ro05rRuOE5VvQoycaP1whP78Ez4ijDYMh/vzqliHbbRxONbc3//o+CnaJBxD
ly8/Nq2CRjja+Pv3/1tHW4TDZ0rg9doOr3j/4ZjnPTm21XDaPhx13cOM51vQ
gnD82Vx19LQL7RaOxwlL8mdF0sJwtOymLnuVRQeEI84oylh6nhaFY+HFW+vn
PqXjwrHLst6k5R9aHI4wR8+M8z1qeP/hmDZvlMR3PJ2lOo/3o9SGLKazwyGV
/nx9T0jnhWNLzGqxXwpdEI6qjWb/uufQReHQfpZicuo6XRKOd93MLVa8pUvD
8Sizy3GdVq95/+Hwqr4b+mgAXRWOBzNfTrsAujYc769bSUpW0nXhCDDZ8OFP
CF0fjrJrwYcdt9FqEbjmGWz64TStFYEnNuiaW0nrRKDkUdbB/b9o3Qi4Dptu
er/7G95/BASxu9dPmEAbRgB7nt+8toQ2joDdML87kb60SQRWffHu6aSgEYE1
omrfFSdoiwisrW+4u/4+bR0B6e8BtZE/aPsIaDp83rqr21vefwQ2ZfV9dXE8
7RaBBU9fXny2hBZGIOhtwchvvnRABE4fOG6glkaLIrC/uNcTjZN0XAT66FcP
/3efFkfgblDnjj9+0MoI/Puy7cn7brW8/wj0/jG6Ze14OjsCk8b/6PVjCZ0X
gU9x74/08qMLIjB/0kNfQRpdFAGr3KKvt07SJarz6iHxdHlIl0age9i3ASPr
6UrV+X0KGTOs5zvefwT+69StaNlkujYCC6X9ci8vo+siENLbb+7qULo+Aven
v7o9egetFomclGdGxhdprUi8O7zbcskrWicSg/JjqpWt3vP+I7Gs5oL06xBa
PxI3Ko+ecJxHG0bCeVT+mRvutHEkAlYkjTFNpU0icb18VsHhozQi0WPOlSe6
FbRFJDyjnw4K+UlbR6IquNHsge4H3n8kogeNWjdkCi2IhPjhvfOeK2i3SPi9
a3PrdBgtjMSOp5bWmrvogEjk/ajzXVVMiyIReqjlodtv6LhI/Dj7+Jh9m4+8
/0gsmfFvTGsjWhmJ3c8uZT1fQGdFItg11+GVJ50diXFHZIW6CjovEo5LLhqH
F9AFkThm2PlXn6d0USQut1S8/PSPLolE5c22z74M/I/3Hwnpw5PpAyzoykh4
pMYog9zpKtXzswN/fxHTtZF4lpUXIjpB10Wiq2KXT9/HdH0kDj9KnnKliVaL
wtnDifM9Bn7i/Ufhg8Oe8boWtE4U/vw+63vOndaNQsre2ZEOElo/Cpn6L979
d4I2jEKkv31G4GPaOAprEod4NzXRJlFYuspbJhr4mfcfhRXTtkdoWtAWUVDf
b+uvdKeto2Ca03v0dAltH4Vrk3vXqp+kBVGIKTUoeP+YdovCYvM/wQ3/aGEU
Tr4sFWZ25r9rDIhCVINjsd0gWhSFZz1vxgw3oeOisGvLD/9elrQ4Cq4GF/ca
rKSVUfh4d/r4uZ50VhRKxn4ZERNFZ0fhbmZf78p0Oi8KNwc66Ew9RBdEQaDf
oTjnPF0UhcIOuhGDy+iSKCy8n3J+72u6NAouTXcjhvymK6Nw6tV6lwPtv/D+
oxA4YF7wUH26Ngo+Jces942l66JQezPrW19zuj4K294d7yZzpNWiEdEUP1tj
E60VrTofp5Ge4bRONJbrXzv6Qk7rRqNfg+MBm2xaPxq1TUPt75ylDaNxsOzZ
g6V3aeNo6P6qOPO5mjaJhvukM3+3/aQRjfsF9/6uaPuV9x+NdQe1t0zsS1tH
4+i+mgnDxtD20ah6YnxqwhxaEA1BUdDyFY60WzTaTLJTZGyihdFoXGpR9COC
DohG+Z7nOk7ptCgaN+b1uPryEB0XjVH+FUc2FtHiaPzWVJ5Sv08ro/FLL2dW
xjs6Kxp/u7W0nNxEZ0cjzL39koedv/H+o5H694Gb1xC6IBqBpsfV206li6Ih
17fpmWFNl0TD41TOpOEudGk0fuqsPJcfSFdGo+6pvM2UFLoqGvM0Jl8p2kXX
qs4z1frg3FN0nWr/0kbNxzfp+mhMN2jTx6+KVotB5KSRJ/v/oLViMDM9ufFF
m++8/xgID9RFHu9L68YgV/JpUeZYWj8GcbP2/thpQRvGYPJzy/ALK2jjGJwz
z/X+5UWbxODEkbOxc+NoxGCxbU+f/AzaIgb/Ml0Kxx+nrWNw/NT7e9dLaPsY
eOu3j3B/TgtiMHH0hS09v9NuMQjce2v+7TY/eP+qfgecXaP60QExUKsZaDZ1
PC2KwbtRlVe+zqPjYrB3WqLZPgEtjsGYry1TlvjRyhj8XL/7z79EOisG4rLF
2/fupLNj0NHjdIT5KTovBp+y83++vUUXxOBF14HeCdV0UQxuB58dP7aeLonB
Pu/9yjcdfvL+Y/BQozE1eyBdGYMCgzvCkEl0VQwez1r9n/NCujYGTrrbBju7
0HUxKPv+/lxwMF0fA4/dmRU5ElotFubDhmrW76e1YhE2acyEFedpnVgkvFBz
fFJB68Zi16u3M4UfaP1YeLgv36ur/ov3HwtNF9nmUl3aOBYjBrY4IhtFm8Si
3jHZY+UcGqp559XSEStoi1jYDA8ObfKmrWNhOaBPv7sJtH0sMhsLnmTspAWx
kCV5xK0roN1iYbfUNnD0XVoYi61HXA78eE0HxOLx1Ny/JxtoUSwC/laH+Xep
5/3HYlv9qIjJw2hxLP7u7WLccgatjEWntOrPlXZ0VizuHTl359wmOjsWRiOn
TT0eTefF4uvCSo0L2+mCWMy7ZCaoPk4XxSJpzWadfjfpkli0flEj8KumS2PR
74pI/91vujIWdUcWhfh3+s37j0W878Ai/aF0bSwaTmRrvwJdF4u7FhVWZ+3p
+lhUWb1x3iuk1eJQHnqqbnscrRWHP1eH3MjIonXisKP3G4c9BbRuHH733rnv
cCmtH4f+r83nnKqlDeOgHGk+74LaH95/HHR1240v1qVN4nBus5b6FWMacTCf
ftH8ogVtEQdDj33+pwW0dRx6lPwcmRtA28ehrsMLl71iWhCHI76CcVnZtFsc
pt6YO2xPES2MQ+fHxTtOVNIBcWi892txZR0tisPdaTfstNv85f3HIbn3nz4r
+tPiONhfNpNenkQr41C2OXyImQ2dFYcnxgHlL9bT2XG4vyj5S1oknReHOw+L
tdZtpwvikFgwV2R7gi6Kw163ROHSO3RJHM68eXp//Vu6NA7+uX+HJ6s18P7j
IAkI6n66J10Vh7ntmy69H0PXxkG8WKjez4qui4PJ0etTFrvQ9XEYcNV3SfRm
Wi0e49Kr9x5Pp7Xi8dxJ7cfTPFonHiHVs9LVbtC68bg2Q+tA31e0fjx2v852
MWmgDeNxYraa0LpbI+8/HjMupZ5aP5I2iYeuccCDRHMa8XhWfGRegYC2iEe2
xu7Gb4G0dTxm2ZoOnimj7ePRQTLPYW8OLYjHAYHfnn5XaTfV+3rH7zz2ghbG
4++ouQGrftMB8djUPfva4C5NvP94DN7bQag1go6LR9m5KzM1zGlxPCrr2hV2
XU0r46GVuqzvpGA6Kx5X9RKbNijo7Hhkap9vcyCXzovHQ01T34/X6YJ4xMw7
1W9sDV0UD9PUTlFBTXRJPPqVTcsq0v3H+1ftv+HrS42xdGU8vOzLB8yaT1fF
o+PWxrOhrnRtPDzunyg4Hk7Xqc57q/7QN9vo+ng0dljo3+MkrZaA6RbbNlqW
0loJ+KnYdTjmPa2TgH4Zxz6vVVdD8/0nQP1TbqpUm9ZPgNd/82qv6dGGCYhK
sbXVGkYbJ2Dnwb5vbCfSJgno9EHf+4gZjQR8eXg3vZsNbZGAw+Z/cxNW0dYJ
aNz850KHjbR9AmYM2TI/M4gWJOB1733jp8TRbglYU2u3p1pBCxNweecvG+lu
OiABcy2rPpofpUUJqF+p79jiAh2XAO3MVo/P3aLFCVBc2/Iv4DGtTIDjk8l7
xtXSWQn4Lot78ukHnZ2ATeXTPu3TaNHsvARMcB0nWN6JLkhAQeUITe1+dFEC
Xr6cNeqCEV2SgH2j8h5tnEyXJkD3e9hNPQu6MgG9t6xedmcJXZUA3x6GDVFO
dG0C6r6sfjHTk65LgEW3QRVtwuj6BNTuU7d6kkSrJaJ2buqGgq20ViImLhnU
c1c2rZOIRj+dlltO0rqJ+HZDlpVRTOsnosWApK55ZbRhIrSS9DuVVtHGqvcf
Cs1q+ESbJGKs38D24xppJGKmd0ZHn3bqzbZIxM6X92ec6UlbJ+LWdcOgloa0
fSKOJTfVWk+gBYkYscugV6YZ7ZaIbidTa97b0MJEJIfeXjZhNR2QiE7rfl8L
86BFibCpHp59NZSOS4TbzM+X2ybR4kQ8XN5pkdVWWpmIfWGLhidl01mJeL7g
X+PNk3R2IvoV3ujf8Qqdl4hf/4qHLCmnCxLxWaq3bvdLuigRb2cMqfzzmS5J
xFa/py1WNNGlibg0tLjfzfYaza5MxKoo/6FzetNViag8MPHFnaF0bSKe/ul2
w8WErktEL6edI9qZ0/WJWKH89Pr8ElotCcc7nhsjcqa1knCr06nE+d60ThLy
tbudMYigdZNw7Mz02RoSWj8JrS3yXr7ZQRsm4Yd0xe7bR2jjJFTqFP47UUib
JCFc5liYeYtGEtb+mFEd84S2SILhpknZG9/T1kno0WV9kM1v2j4JNQNr1MZr
tWy2IAlLwuajWw/aLQk9F8Xc+zaIFiahU1KGXtk4OiAJGzoIlhybRYuS8DXc
XCfdho5LwizPAecjVtPiJEzQmLnOX0grk5CTZ5vnF0ZnJeFDeW1leAqdnYRv
gsBXWzLovCTUW3bfciGHLkjCwuQRqd/O0kVJWDbrTJ8JN+mSJPz7Wj8j9jFd
qjpf70fr3ryjK5OwP2bZZJvfdFUSBgnNUku0WjW7Ngk7BH1fzNGl65LwrLPw
7I0hdL1q/7mHutpMpNWS4XV/4cwnc2itZKhvdPjqvJTWScaDSXHdPrnQusmw
tawp9fWl9ZNxG20C/kbRhsk4m68t3yynjZMhnbu7sWk3bZKMPffndQo9TiMZ
o/oP/v77Em2RjNYeH3L8y2jrZKSuz7lZ/5K2T8b844cehH2hBckYYGXypWML
zWa7JeOo977b+3VoYTLuZ56+YKlPBySj5Mik8r+jaFEyrrXOelownY5Lxs7U
AFHkQlqcjGXtLEYuX0Urk+GTNbrNLA86KxkHFTg1MYzOTkb+qwd9J6XSecnY
aHNn7uwddEEyvn+8mu+QSxcl44h71VPvC3RJMsRXhm2V3KVLk5GR4jL66Au6
MhnGlddm3ftMVyUjc+aZgrp/dG0yxv2cmdNRp3Wz65LRruszl2H6dH0y8rw1
ls0yptVScKFb3iwH0FopyO15f567Na2TgocmTstCBbRuClybNOxThLR+Cl5Z
2DzdKaINU3DvcoPyjJg2TsHppgdPH2fRJimwm5gf3PIojRRs6ru02uQibZGC
fEOD0YH3aOsUdFp02/rqS9o+BWu/bW3U/0oLUnBN+edqvLpWs91ScLC8vFGt
Cy1MQc+zRbExA+kA1fvTdst6jqNFKRjXts6xwIyOS0Fk4GIbwRJanIIePq7X
Oq6llSmwzP274qIfnZUC+bas0X6xdHYKzrR5cWW4ks5LwSh1tY9V2XRBCvZv
nntYfpouUr1fKDWdc4MuSUGDe0r998d0aQqysn5uyvpAV6agxMYgxaKBrkqB
lc7ND/+1b9PsWtV5Xn+oK+1D16Vgw4e/kokj6foUHO62uf/LabRaKop/Ns2U
LKS1UmEisqubK6B1UnF4hSSvvSetm4qb93afeBxO66fC5ojZj3wpbZiKc90W
mmzfTRunYmhui36SfNokFccm7u8mv0IjFcnDJxnvfUBbpGKez8JXl9/S1qlw
DxAf+1RP26fixAfziQPbtm22IBXav9YcW9mbdlPtJyRvX6YRLUzFoTGnOr00
pQNSsXfWytUGC2lRKgafLLRzFdBxqajDzS/ZnrRYdT4hzktrI2hlKq7GH7hr
IKezUrH1bN/yFXvp7FQcrHg5UHaSzkuF5rzR+leu0QWpWFrS3/hHJV2Uiq+L
n70c9J4uSUWRxZyZjn/p0lSMTj7TUdG+XbMrU7H2c5+NlX3oKlX+DLt/g0bR
tanwMe/YJgx0XSo8Rtin1Cyi61PRclG4q50TrSZGz+rsuZU+dEsxlp5/VuQa
Q2uJMW5fYidNJd1ejAz5+8/HDtA6YrxuvNRp41m6qxhnr3q2GnOb1hVjjW7w
9abntJ4YQyvDt5bW0fpiyJe0mr1XvX2zDcR4/Lxzz+CutKEYWe6FV60H00Zi
fNv1eNogE9pYjD3FyzJ+zaXHifH34O0+15bRJmJc887Uk22kp4phkJI0clkY
DTH6ty5c3U9Cm4nxdknS8apdtIUYO7TDXXfm01ZirNtwQO58lbYWo+jxt/Ej
KmlbMf6NDM1tfEfbi/Gy2q/s4V96uRg/5p1oWdihQ7MFYsz4oO18pB/tLIbw
ferznNG0mxhd76RMPz2LdhdD50f1qIoltFDVf9GE/k2utI8Y3pcTOk8MogPE
WNW7vP/mJDpEDKejk8fdy6RFYuQ1LHYYcZSOEiOg7fnDqZfpODF+W8U9/HGf
ThKjovXsNitrabHqPkvGPr/6h5aLUe+zd+KoDh2brRTjUcYQg7R+9HYxxu+8
V/pnNJ0lhsXIjjHLzeg9qv65zqfOLKWzxTAMOzSp2zo6R4zZ82cUuAfTeWI4
S9ZPuJxM56v63h17p3cWXaC638+3dwUeo8+JkSBSn/CimC4SY3E7pdOCh3Sx
GNMiH6aWvKNLxOhVGHxvQQN9S4w2BSM7VnfUbnapGC3uj24X2Z+uEAPvhniN
GUdXinH8+avLdXPop2KknE4bct6BrhIjaVrfxi3udI0Y+T/jHSLC6FoxJq5x
HOcjpT+KYTc42c19L10nRoRQttatgP4uxoQlb2euvUnXi7Fhw90E5+d0gxh+
3Z/3XPOFVpNg7tXLjSPVdZrdUoJVk+oPHWpHa0kQ71xwYnA3ur0Evea0v7aj
L60jweTEVUe6G9JdJbiyLV2WOJrWVb3fXLbg32RaTwKrJ/M8vc1ofQn6O109
9W4+bSBB7fWcBCc72lCCRKdNX14KaCMJDM89PeyynjaWoEWp1tLP3vQ4CRpG
3XQJC6VNJMhpFTS3eyw9VYKvQ++syRfTkCDQsb2m41baTILq1ptcW++hLSQ4
ElTmeu4wbSUBfBqmBZyirSWwa1jvOukibat6f48XBk03aHsJRp482OpKBb1c
gp/BveuTntMCCb7fVh+zpJZ2luCS66Pufb7SbhLoVywaVPOXdpdgsbbXhwOt
OjVbKEFTYgu1Tdq0jwS/tI6qG/ekAySY5ys6+HkAHSKB3nz7nzlGtEgC158/
pW4T6CgJOr5p0DUAHSdB5qHUkJdz6SQJRl8Iddi1mBZL8O6J8X3XFbRcla8X
dHGMK62UYO9Cs0INT3q76r6tDec9CaKzVPvfdfLR6Sh6jwRFh95X7EihsyVw
P2iekaykcyR45T0vPHIXnSeB8PRVSXgOnS+BoM0VxJ6kCyQYVLeyh6yIPieB
vcavMbtv0EUS9Glb8+dEBV2sum/XcXNvPKdLVPsNXWH1opa+JcGTNvFrv3+l
SyWwKWnXo00jXSHBb3HTB73WnZtdKcHb/ssCR3Win0rQVnvjEvSmqyRIuOrX
b+EgukaCAg+jXctG0bWq8zy/ZtzaSfRHCVZ/vztKOIuuk8D58C5l8Hz6uwS5
U/PHJ9jR9RJMH21vnrGabpCgU8zrgyc20GpSHDGoUa/wpVtKsXbCzHv1YbSW
FNc+Low1SKDbq56/aZhqJ6d1pNg2M26hNJPuKsXlLUcG3c+mdaVY1uXQbP3j
tJ4U34a3FHgX0vpSICNq2O1rtIEU2q9r9w8vow2leCxyb5P8lDaSot+O7BZ1
b2hjKXbdv71/8Rd6nBSz9Tdbn/pLm0jx1S7Xq5dml2ZPlWLLO6+0EB0aUqyq
ujf3WS/aTPX+7LW9pg6iLaTo2lCQphxFW0lh9S/X5esk2lqK2OD52+ea0bZS
/Du3aeWOBbS9FDcP7bnzw55eLsWKARrfFjjRAineTh86Nmcj7SxFXePzzR0D
aDcpUlpYiPwiaHcptrfeerYmiRZKEfKvdKdDOu0jRZ7LnW33d9IBUjR+G67j
kEOHqPI1W62uOUmLVO/z2lbhf5GOksKpzy6zLrfoOCmCWpgmnHhAJ0nx+vRl
+fKXtFgKwRpnH82PtFyK4rLsO0d/0kopDFusO7uiRddmb1ed/wWLtDbt6Swp
hN7VL/K703uk0HrSeviq/nS2FBceV+hoGdE5UiheLB2aO4HOk2LjZPO2tjPo
fCna7vdb+tOSLpBifvyXFmlL6XNS/Df/Sv3Y1XSRFE22vivKNtDFUugcvbrW
248ukcJfPiZDN5y+JcWQL+FNlxLpUinCJOMne6fRFap+ZnoPh+6kK6W49+GH
xdtD9FMp5mZ+bjx0kq6SYpzBUteAi3SN6vtaGt5odYuulaKzbcOEYQ/pj1IY
rfaz0amm66R4fnNbbtNH+rsU8mkfZ3/7Rder9mfhcPCDerdmN0ixc7Verzcd
aDUZLj1Y5PVSl24pgyDn9H9PB9JaMizyW13/cCTdXobrHU90K5tE68hQmbmq
9IYZ3VWGTuueHbm4kNaVob7T+uEnHWk9GfZ4v83f70Lry6Atef5AIaQNVH5u
VScKpg1lKHCwn7QhhjaSYWtV5jY7CW2syuvSuZfFdnqcDDXDN34w3U+byNDb
+N2jScfoqTKEV+QETi2kIcPVz1dnzymhzWRIdKjPsyunLWR4azJitOdz2kqG
72PMzWXvaGsZEhZUbz7/nbaVIaSnh9W3f7S9DEnX368b3a57s5erzkM96Ypf
d1ogg0HSSa+i/rSzDFo9hEvbj6DdZHiY+GqogwntLsPpHwG9982ihaq+Az7K
vy6gfVT9Fj/qPc2RDpDht+GS6XEudIgMO6vHJZYKaZEMM/uUhHYPoaNksHLe
GOEQS8epzj+2r8YWKZ0kw5/igE8VGbRYBg3Pg4O0D9ByGUYvfaNhmU8rZXjS
7qVG4gV6uwxntMukpTfoLBk07+tJ9R7Qe2Q4GJ+xw+MlnS1De4/KSTc+0jky
LH6/s9yons5Tnee0uqp0jR7Nzld9H1Odqtpp0wWqvKTSVfG96HMyHJgY+EFn
MF0kQ46oS9qu0XSxDF8v7dk71ZQukSGu65nqJxb0LRnufVtbFmpLl8qwT66v
3l9AV8iQkv05tXgDXSnDgpFjq1z96acydP9X7N82kq6S4WfusTeHUugaGexe
9z5juZWulaFF2Ujhu730Rxme7c/eGHWUrpNhYQfHf70L6e8yjBUl5+aW0PWq
79Xq7QdU0A0ydBY8Cit/QavJ8Z9B/Zr1H+iWcow1WGfY+hetJceODorTB9V1
m91ejjVda48v6UjryBFUtV2m1YvuKseuktY3Lg+ideX4mHPvZuxoWk+O6922
6i0xpfXl+L1kloPRXNpADtEya5OOS2hDOXbf9zL7K6CN5JhxLn7RV3faWI6t
xVaHPgfQ4+Qo6Jk5qi6KNpHj+4tGw69ieqoc1X27Z3zfTkOOERjy9mc2bSaH
Rs/iuPp82kKO4pr3Or+LaCs53gya3b7+Fm0tR+s16359r6Rt5ahatsn4cw1t
L8fQ7qM/vK6jl8tx1+L+gsoGWiDH/SrHt1e1ejbbWY7nq/ZVnuhKu8nxdu3W
Pgf0aXc5cjY1Hd1lRAvlaBc7JXu3Ce0jx8ClX3NzzOgAOabuvz3/vDUdIoeW
//iflctpkRy1Pab1aXSjo1T9z++dNdyXjpPjXbWXunM4nSSHncPdLtnJtFiO
FjOejKvfQsvlkLfVL1+8j1bKEdFq0ceTx+jtctzqmCDvc4HOksO+r9Ht6Jv0
HtX5DTsc8+khnS1Hr5AsXbsaOkf1/JAXmhfq6Dw5zORarwc10vlyPN15enZi
m17NLlD5qU/Op270OTkyntWFLhxAF8mxQqP+Y85IulgOn/bnfraaQpfIcbq+
i7WjOX1LjrYn3g4+spguVZ1fxHiJpoCukGOlRYcyF3e6Ug6Fg36r2wH0U1U/
jRf3p0bTVarvV1vv8gkJXaPaX/K4qSaZdK0cDt2WHS0+SH+UY+KMTVnLTtF1
qp9HB/muxsv0dzku3y4IOlRK18ux9+zV7muf0Q2q5/dbHxvxnlZToPHoh3ZN
P+mWCswabNW9TKN3s7UUEAR9Td6vQ7dXYKvGIcfQPrSOAufqnZ7aDKO7KpCU
3XLPkIm0rgIDN7xb/HcWradA/MrM5NvWtL4CX9pMepOxgjZQIOLqxPIN62lD
Beb/uJ06wZ82UmCY/7VPDZG0sQLuvVaPLxTT4xQI2WVq559BmyggrpxWNeYg
PVXVL27ztp8naShgmVbjXHyZNlPg3d0T2hmltIUCSzu1Ghz+jLZSva/36d6e
72lrBY4NubFy4y/aVoGz2846+rXUa7a9AsGt/rNJ6kQvV0C35b2vh/vSAgUM
vs0YXzGcdlagSn3DyAYT2k2BS5/dFw6ZQ7srEFPytGbpYlqogN3sVYHxAtpH
AfzZs7hwIx2gwIOUHu5fgugQBRJ9rToNiqNFCpTm1+bYKegoBU54mW2P20XH
KXDSxKT1qVw6SYGie53lL8/RYtX5GH7voHmDlivwevvTFwMf0koFAqKXl06r
obcrMH1T1YzVX+gsBaImp7SXNNF7FEjddiX0Trs+zc5WYF9rl7Gde9I5CrTa
mr94yWA6T4EOu0fbpI+l8xXY8EQ4pxJ0gQL+U6OcdBfQ5xQY3qvrK7tldJEC
b+yGt013o4sVcJ0nMHngS5cosCDz5KtukfQtBUZo9G29VEyXKtCnqcNLRQZd
oUD3FYMSKw7SlQqUXFyf2KmAfqqA9dnvI+dfoasUUOvnVBtbRtcoMEAw8e/F
F3StAt3GHEv++5H+qPp5SM47Ne4PXadA6+CO8Rtb9232d9X5Rvh12NeVrleg
zcd985/3pxsUyBh7y7r7KFotDR1Pz+2zYCrdMg2aCZsKoufSWml4Hrp2cOFS
un0a3iS9W//didZJw+Ipl+KHe9Jd09BpZaeYNZtpXdXz3mFrtiTSemn4fPab
fqmS1k+DpYZ+seY+2iAN8z1XLjA9ThumYUXk8oveRbRRGub2+dH34G3aWLW/
utNuVY/pcWloZ786q3stbZKGKMWxq1Y/6KlpKOpy/GmEer9mIw2D4m+9KtCm
zdLw9Jbhs096tEUahnVSXjcYRlul4d25ygOOE2nrNAi7fN0sNqNt07DGPmDu
1UW0varvsSVtG1bSy9Nwf1SXS6PdaUEaDkav9HQNpJ3TkLSqRDcjhnZLg9/t
hoIyGe2uso6bjdZOWpiGih1rX5seoX1U55cV4+V9lg5Ig1Ro/ie7hA5Jw6r3
X0Oe36dFaXg9+tmfLq/oqDToT1noM7eOjkvDWqvr7zY30klp2Ljv+AjHVvrN
FqfBumFfzfd2tFx1Pk0NW1I708o03M6+OX9YT3p7GuzP9la70o/OSoPX4bZH
Vw2m96ShoPGQ4I8RnZ2Gw2f0tRVj6Zw0XK0OODdqMp2XhieS0243QOen4fHH
P11czOkC1fetsDn/bz59Lg2Z3mWuW23pojScKFPojF9GF6ehlWRfwd3VdEka
ikt6CNa70bfSMLL2g2YrD7pU9X1ZGh/e4UtXpOH9wi82k0PoStX33zCsviKC
fpqG9uM/bveIp6vS8CHIdEZbMV2ThqxLQ1/vSaNrVfuzPBM3PYP+qPo+0xuH
P95N16XB/8a3Oz4H6e9p8Li53VP7KF2fhv37/3Y5eIpuSMP0M0NOmp2n1dLR
GKdv/6KYbpmObWGffgfepLXSsWmlfFvXMrp9Or54dzLNraR10qE+b8PzuS/o
rulYFpcVVvOa1k2Hx/QC/bCPtF46zB3OXez5jdZPR03bw2vyf9MG6bAsSdJY
qNa/2YbpaOG9Ys87TdooHX0n9pod1YE2TsciReXrvl3pceloe08ac7oXbZKO
3UFmQ2z701PTsab9r2ufhtBIx5Y2h93iR9Jm6YhYt7aNwXjaIh3fNAYdPD+F
tkrHqk218xxm0tbpaL8098M3C9o2HVgYlJSykLZPh5Z0wYihS+nl6VAMM75z
eTktSIeda3+PlU60czp6vu6v83sd7ZYO18/jjsqEtHs6lnsvtxnpTwvTsXPq
1m8lobRPOpI/vZI7RdEB6Ti/13RCUwIdkg6jVzkPlRJalI5Du4wDxyrpqHSs
XXe9151MOi4d4jNB59z20knpuLBk2kqNHFqcjvEb26tlHqPl6ejsXLfT5DSt
TEdAds2s8gv09nR0sXzzeuNVOisdv/c1xmrdpvek4/Uao2G7y+nsdMSX+98y
fUznpGP/kUebKqvovHT4Zy7u5P2Wzk/H0S6vj3f4RBeovmfL9KXZ3+lz6RiS
5fp75l+6KB0+wyy2P2sxoNnFqvPTmTI9QIsuSceTiDnVnbXpW6rvZY1r9OFu
dGk6jozdZWihR1eko0+L+pvVA+jKdFTmunqEDqWfpuNsxrfOusZ0lernq2zL
yWMT6Jp0VN1Y7TjflK5VPT/TsuntLPpjOj7r2uyKmEfXpeOMn9ecPovo7+mQ
qR99f8qOrk/HgH/tUm1W0g2q85sQNvY/Z1pNiTSxVmXsBrqlEtumHAoZ4EVr
KRHd171/YQDdXomk8tlX7cJoHSUWLJ+84Ws03VWJQTHmOslJtK4S7RYJTwyR
0XpKbLY75XhpC62vRL+2vdVWZNEGShwxVO79tY82VEJ9+VhL6WHaSIkWoz/W
GeXTxkq0v3wh7doZepwSU7Szp665SJsoMfW/A9UN1+ipStz9URSXfoeGEscV
dSPH3KfNlMCICfdvPaEtVO9/qQh2raatVPvX6DxA/R1trcRO7z0l2z/Ttkro
ly/wmPiTtlftN0mne1kDvVwJs/FvzrlrDGy2QIlzY8udWrelnZXYfaai7S4d
2k2Jo2Efjk7tQbsrET+xp8PDPrRQ1WeJQM3LgPZRolL73P72w+kAJUZMHb1w
/2g6RAmPzRd/zjChRUqMtHXNfDqNjlKi+7CBc/xn03FKWIz89l8nKzpJiZaG
jxU5NrRYidO/ykzNHWi5EhomVa9frqKVShw71CYlZC29XfV9fbSY0GMjnaVE
ZMdtz49603uUmB/RMtYqiM5WYu+lqFFvRXSO6nz26lWGx9J5qu/v2F2RXgqd
r0Th4q1DT8npAiW+6AeULdpGn1Mix3Rj8MeddJESiT+8DGKz6WIlMpskt/vn
0iWq7y/upt+5E/QtJToP66tvd44uVeKSbeT1L5foCiXMQ355JV2nK5UotgvV
G1JKP1Vi5ZLOVy8+oKuU+N7+rMfyZ3SNErtu+fT89YquVcKlbvplyXv6oxJr
3PttNPpC1ylhN1i7x7Vf9HfV9z9c++LqJrpeib+NAzY0tDRodoMS3YzMu6W3
o9W2wKtn6IXRnemWWzDR69K6W7q01ha0DNHt6tqPbr8Fi9fEnG8xmNbZgpie
muu2G9Fdt0C3w7YuE8fSuluwvXHG+XuTaL0tENU1ubmD1t+C3a3vd2ltThts
geO6C+d3zjfA/wEVBzAf
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Q1aTQWetxZ5as1Nlx+iitRCM+HZAdIWuXosXbTPHaz1UxndG6k1/rKpRxnfG
kzxLA88GZXxndPv7M3vhL2V8Z0z2ibur1fI+4zujaURW45u2dJYzPItatmho
Txc5o076oiSgE13tDMN/DtHvO9Mq69CqUO3OFQ1aZx1+NCxyOdGFxjps83x3
akc32mkdbhvbDtuvqYy/Dm77V+9f2F8Zfx1cW0R9iBqujL8O8cUFkwqnKuOv
w8O1NuU9Vinju6C09AriRMr4Ltiw2WuZ2gNlfBe4JmxzThpTzvguGDF7gluv
o7TABYEfTpy3sn/A+C5IVl3WRzDqIeO7oLfNmFEWpo8Y3wV91+e9mi+oYPz1
0KtuXxP/4zHjr8eEToGT58gqGX89VFrePx03/ynjK/xQU96l03PGX4+FQ1u8
fO5UzfjrUdHCapvDyBeMvx7uydfaLa2nq9djVk3790NELxnfFR1HuO+p7P+K
8RU2OnShk4SGK3ob3/3x9h3t5Iojr0MsxINrGN8V4n9N9t/N6SxXBJvNPuY+
my5yxc3eq6YNM6OrXWHZ5n3DIz1aZQM+Zd8e2NCJ1tmApn4/HuxvRWMDviQm
SDU6004bsCK42nP1JGX8DXj9y2pEoUgZfwPmr7ba8UL7NeNvQElhxEzzJ3T1
BkSXi271rnjD+BtxLXLP792atYy/EdscozID0+sYfyN2eLitNHZ9x/gb4fKp
d1XHyA+MvxHWQ05/fP3lE+NvxMLI5RUdHT8z/kZYJL9o/PntC+NvhG3FxNV6
JY2MvwnL52fbW1R9Z/xNcI/zn2U88Sfjb8KRyXljzet+M/4mWO2/X1/y6R/j
b8IO9QVxi4e2+O/v1qxNaDw2ND1QvdV/LtqEP4WeDed7t/7P1ZvwdU3MlfHL
2vLv3M3YpykvOXq93X/W2YzYp9aqd506/GdsRozK9282fTv/Z6fNuCJf4Db9
r8Z/FmzGbpNdfwr8ujL+ZtxrV6OT3KI7429G5M57CxaKezD+ZvxY8SZJPlST
8d0w+4b14j/FWozvhofiA2+6r+rF+G5wd9cc6favN+O7oXhy44p4WV/Gd8Ny
1+f5NcP6M74bHhRuWqi6VIfx3XAhOTtsRe8BjO+Gyiv2xzMe0Cru2GW+0kk3
duB/1nDHqaXnPPOMB/F53LHubI2lbSVt6I5+UcKR/v66fD53tA82NbzWTe8/
W7ujyzXLAv0c2skd/fseP1ViMvg/u7tjzrxTJV2u0QJ3mGoOO3LMZsh/Frrj
gcqEvB2v6Cx3LCr5N6j1Vv3/nOeOsPypLmadhjI/d8zUCnm7+zBd6g5X1z0G
W5cMY77uKNg4cddpDYP/3OCO7u8XNhk8pFU8YHS+o83Ug8OZvwdm67m8Gioa
wfw94PXSR/44ZiTz98CUx5p1nVJGMX8PtE69eM7A3pD5e2CLm19mbAPt5IH4
uPFXz4pHM38PvNiUZnJj8hjm74GWRRPKDzfSQg8sqT/otTR/LPP3wI9zKzcU
BRkxfw+cT27jf8/amPkr2h19cmNGjGP+HvjzaOLYt93GM38PnLF40v1bKxPm
74G13ufsi/7SKp442+/Mq6UtJjJ/T1w9YVj6tNMk5u+J5QdenFg22JT5e8L3
/J7h7yzMmL8nht7aPUi0ZTLz90SXYvOc6funMH9P7Hz6JH2zF5i/J96Yvk7t
oD2V+Xvi4tx/9bMu0UJPFPaI7PrWbRrz90Re64quaQOmM39PCEWBdeqP6CJP
DPa+JnqabM78PREQ6b1/r9UM5u+Jv43/+n5sN5P5e6Jy79x9BjdolS3IW/1u
8pV4C+a/BX/TXw/QmGfJ/LdAy2bEscUas5j/FnQqqZtYdY/GFkxOvX68QTSb
+W9B3yUXT3yab8X8tyAi28xtVvs5zH8LEtvd3hB6mRZswak9GZkGvnOZ/xZ0
uVmzp1Z/HvPfgrtFm1NXPaDztuDbu86wCprP/LegvXGz5kgNa+a/BWOj8i2H
r6Crt2DhpO26MQfphi1QX1SxfPQ3WsULlWXDFvU3XcD8vWC2JahgvoDW8cI7
z9lply7Shl6w/7ijeKvKQubvhT7TJ2qtM6WtvfDL5+qUWG/ayQvd+gyX3D5I
u3vB6cOlgP7PaYEX/J89LVzbeRHz98IhYYJjmCmd5YXjhV3rFjjTeV5o922d
zoEEusgLiyvnl9ofoUu90Ft/x9FBd+hqxfUTqmffqKUbvBBd4vG+XTOt4g2h
z7rEXRo2zN8bMxt7aC7tS+t4Y8wNk6WqerShNwZoLL7qP4SGN+JumS/bp0tb
e2P048HRgj60kzeaHo5t1b4z7e6Nv5nWjx3+ML7AG4/XOP5LqVHm740DszI+
1V1T5u+N+Gu7CzL2KvP3RsCwr0d+CZT5K+IdnTFzoZ0yf2/I9h7++WOoMn/F
9e0LBZN/8n03eMNJdYf21iu0ylbM0TN6+y6J1tiKx+EFPesX0zpbMaV3i5SC
XrThVvj4iTV2POX3gK0YYLzY6MUO2nor5s0KWXfdkXbaijaVfU/u6Eu7b8X2
vcFtcyr5/Qm24kpt6mD9NFq4FSvrr2k62NJZW/HAZ/KKzd3ovK1o7TW9T4+d
yu9/K4rUl/6W9KZLFc/f78uViFSOl+qtWGZ0bmeLrnTDVqhX3YNOEsebig/8
3i0Y/1Gd1vBBenKmhWcMx6eOD8rdI3bntqENfZD2xkAkj+T4hg/Wq2suNGxN
W/vA9WbTkS2RnA+cfFCxcNGrTW1odx9cqV622CSG84fAB0N2TMMvdVroA41V
fpGvkzj/ZPlgYBvd+2O603k+6DW764Z+2zlfFfnAKutgmzeD6FIftDvf9vC1
w5zfqn0wyr5dxxamyvnPB6l7lxXcucn5UcUXge3//HJ1pDV8Mf647awOjZxP
dXxxd2CH8a8SaENf9P/RIVF7KA1flORb1ZWVcD629sWv0av+jthIO/mitijN
amY32t0XW1u0Ehmf5/wu8EXb0gP+3TfRQl/ULejs/qu/cv73xemShMV/HnJ9
yPPFjrOthg4T00W+2Nx9x9b4BXSpL4oCh7bs3YOu9sXY3J5Jl6q4/jT4oiwk
u6V9Dq3ih9QWtR4ZPrSGHxwNxD7TZ9M6fvDW/Z39oT9t6IeADdppmxu4vsEP
E0V7pG57aGs/fPL+0dDeUbn++eHrs1313tq0u59ifh8lr3vI9VLgh7dB8ofH
pLTQD2OMd5caLaaz/PB86DX9r93pPD/o3za7v72c62+RHzakPbfoLKFL/XB0
uPmw1Yvoaj9YjXGYVt2VbvBD3OfdEb/KuJ6r+OPj7MzHMyW0hj98hn1p42FH
6/gjwe3opzF9leu/PwrP2f+d84b7A/hj8tyZ8uDjtLU/tn4/PSooknbyR+zZ
rla1y2h3f+TMTDacOJEW+CPMJvL2yb600B9rO09OW9aWzvLHmnM3zaq/c3+S
549RLsmbj7yji/zhv69+eHMNXeoPT0+HR1Uv6Gp/hN7oYWumdIM/yr7PtVN7
SasE4P6gpH/9Xyn3PwFobaNX46y0TgA63Cl+eFXZ3zAAubqR8ROf0giAb0FZ
SGU5bR2AWZc7an29RjsFQFu0KFf9JO0egJHlTqO+7aAFAXj5uyztVhgtDMDF
rPM3Xq+kswKw1L7g/HlTZf4B8FwwZ8SHbsr8A3Dbefk5jdoJzD8ABi0niq6f
pqsD8HrbbcGxWLohAOJnvWqW29Mqgfg9ufzyosG0RiBqJmfkaTRyf6gTiLyB
S8+rXqINA3Hx+pydYiGNQLjF5cd3cqKtAzF/Tuui84a0UyA0h963fNaSdg9E
aofQhKyH3J8KAjHsU277cbm0MBAzrr1ddC+czgqEvNPJioPL6bxA7NTtekp9
Il0UiCvdT7SYrk2X/u96y3nnfnM/XB2IfINQ0x8v6IZAlKkunRZ6i1YJwvW/
aZ++n6U1grC+1alFX/NonSC8HmYU1SqXNgzCuMbUt9sP0QjC5UlNFt1O0tZB
mBTRdHLXFdopCMu2LW5eV0W7B+FJ1g9Xl1+0IAiJT2+tFfdX5h+EG09aWZyz
UuYfhGvOBuv3BSvzD0K1sXH+11PK/IOQa+rno/9DmX8QZH2CTI9N4vuuVjzP
17iW7yOU+/8g5I1YKTIoU+7/g1FhP+nR7YHK+gdj+86oN1O20jrBKFNvf73l
LdowGFZHpwsPDlJ+/8HwthYGvghUfv/BWCIw1Vj2SPn9B8O4RZP3yzHK8R+M
ZdprIuYkK8d/MHxjSuoj3ivHfzDqbaWf42ZzvskKRr/S85Xu++m8YGxauzRh
cTvl/BeMdmEtji1xVc5/wUiqdF0quaWc/4JxbHjglvaGnD8bgtGrtnjQUQmt
EoIHDt1urvlFa4TgV3Gf0d+cOF/rhEBV2/bjgBLaMAQztgbl3tbkeoAQvLB9
OU1gRVuHILJ3ncPHYNopBJVZbVvcP6r8+ycEN0Rn2la/ogUhkOUajr7UXfn3
jyJ+9teLQ8zprBBM7D/f66qHcv0LQZefj9etyFCufyF4/8L+y4WryvUvBJ8O
dv934YNy/QuBW9Wx4VO6cj1tCMGO/IunBxjRKgJcOiKImruIVhNgUcbzq/uU
f39pCPB9fJa8WyytJYBou30Pz0xaR4Ap62I3ZR+j9QVwMPj4K/kSbSiA8dDU
zwPu0iYCNM2TJS6soCGAX0FYme4z2lKAzP6DzbOraWsBjE60vvPiOW0vwLec
QwM+V9JOAnxy8HN/W067CBB63ENYeYN2V1y/sm7X23O0ryJf9TW7DQ4r9x+K
/F5ua1+6nY4RIGfKTt220cr9iAAnN8Veau9OywV4nxjv29dOuT8RYJXedKcA
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
tWLCjM/29PsU9Gi7PKSFK92QArO2kaK+AXSjYvzt8eg6I4FuUry/NzvdfTLo
PylYc3zsx+OHaRUJPp8+l/PzAq0qgWzo4KMW92g1Cf55qutkvKQ7SFDtfmDE
z6+0hgSzqx3HLW29j+NfgrEBLYsu9aS1JJj8o9h/lD7dR4KEYa2m7pxA60gQ
XTVFU8uK1pVgVfEDA8kyWl+CZe9syntspodLkPbxWnRGCG0oQS+9uscGItpI
gjspR9wv7qJNFM874+l3x3zaVIK6Yt/ura/SkCDiY7VL/iPaXIIWXTIiN9XR
lhLsFV39YPibniOBx05Jl+YOORz/ErgE3Zld0Y+2kaAguNuTQkPaXoJZDceq
c6fRyyR4Mb/Vihwb2kkCv5GTjY8402sU8U53HH3Rl3aR4O3uoT2fxdEbJegU
uexQ6wzaXQL1Atu744/QXhJcez5+pddF2leCzTvO2p29TwdKkO9Un9fhDS2Q
YEr71PUuTXSE4vpjS/zvqO/n+Jdgk/32u5P70gkShI7qPvH0KFoowXdsX2E2
jZZIUKSTeeiGDS2XYGqgYJrTOjpdAt+5N1/+8aOzJLBcUtS8I4HOluDkiC/n
zTPpHAmW313b+v1ROlcCPZWeieJiOk8CTB1SZ/yIzpdg/u62iffr6AIJfC6Z
33H5QxdKcK+tad2XTgc4/hWW/27nNoAulkDapszxyVi6RIKXW8eNGzOTviVB
/Zg5+l72dKkE6zZIJu5wpcslGL63XdPhQLpCgq87HvnuSaKrFO/DvMYhNIuu
VoyfVxbHph2jaxT1Ni3/U3eZrpXgnc2vbr4P6PcSBPvM0P/4hm6Q4LpXt4K5
TXSjBJcbP4XJ2x3k+Fd8D1Khd2kv+o/i/Wm7RPwwoFWkOOUyMqyzGa0qhd7A
8h/a82g1KS5KGrprraA7SNE9Y2CuujutIcX67PfmXwR0dyl2rt406q6I1pJi
iGPrjJ276D5S3JTpnVh/nNaRYsGRhuwhxbSu4n5T0k5UltP6Urj827Eq6jU9
XArbTrGu+t9pQykcx05/fqlNLse/FHcm7tS306RNpFB1m/32zRDaVIp04c77
W0xoSJG27lRcsyVtLsWqVwtc4pfQllLMaHHQTcuVniNF+897zPb509aK+Av6
tjWJp22kGHyyKf3GdtpeCpPZ3/0dc+llUkiso+5/KaSdpMgutDgUdZteI8Vi
m14ttZ/RLlL83XrxQc5HeqMUb7e0sTJupt2l0NX5vO9c50Mc/1J0eqtmP1WH
9pXCLzOz5oIhHah434cnvTeZSgukuPam/6DcBXSEFDWzfBdpr6JjFPfrUbxE
4EknSHF8x5V+L8JooRRHU9YJJ6XQEimMfGZtS95Ny6V47/Ks19PjdLoUQcP0
3g8qprOkcMgrfb26nM6WIuT5vZr0GjpH8f5H/Lp1p5HOlWLm/tWJP1UPc/xL
8a1Nefe+Peh8KSZY1M2foEcXSOFp/GDIPGO6UPH9bpsbu3QGXSRFZ+Of7isX
08VSZK7+9G3FWrpEisahNQ523vQtKe5lyTUtI+lSKazmutweI6XLFd/3nQQj
rT10hRTR/5z+NuXTVYrv8aV/4YNiulqKokl1zw+X0zVS9DD9ezyihq6VYqjn
8Y12jfR7Kfb1KRsxRPUIx78UC7VNezR2oxul6HLW2Oz8ILpJqljfay9EjqX/
KN6v75YTs6fTKqnIHWVv3HERrZqKfXNt7W6votVS4a2bPibek+6QivSqimcz
w2iNVLTrucBLRUx3T8WK4Q/bFeyktVIReOx6/qajdJ9U9G8TFDPgIq2Tiv3H
98rvl9K6qdjV1uF3eDWtn4rIyD6XxjTQw1MxP3Lsv+fNtGEqul31qL7SNo/j
PxVzBv7rsL0zbZKKl47j4900adNU+I2evWp6fxqpMGjxdFvPIbS5Ir+ORRPr
RtKWqfCpmmBxdhw9JxUu4qqrCZNp61RkHBpTtHwmbZMK4+WN40fOo+1TsfzF
5TH/FtPLUjG6z8aTt5fTTqmYuNzvWvpaek0qus9rct2wiXZJRUq/PdkTvOmN
qTgUesS3bRDtnorXFU/qyyNor1TINlo270ygfVMxXORxZrOEDkzFkZEn+k1K
pwWK92vlPqptNh2Rihy9xk9lB+mYVGgsVFu94zidkIqLFb3j15+lhanQt/zs
anSZlqTizAfL1s03aLkiXrbzsutldHoq7pyY55nyhM5KRV5ZzuzlL+nsVHh8
6fJ2cD2dk4qKc2tnN3ymc1NxskTkffonnZeKOuFa17AWRzn+U/HmVJCBVTu6
IBVmacFnunWhC1PhYO6lXaVFF6Wix4NfVtk6dLGi3jaOCzbq0yWp+DtiiYGR
IX1LUd+jkU9+j6dLU+E2drfT5Sl0eSoG2/07H2dBVyjqMWbKjwXz6apU7Og/
TV3bjq5OxRKT2F/PHemaVJj3TCnZ60zXKuqR9c1r02b6fSpKr05XMdpKN6Ti
g+9v119BdKPifQyadbIokm5KhY3XxJqoRPpPKgRjQr7NkdIqMuw5tau+awat
KsOdaRHFFdm0mgzRt4LCd+TSHWQQryzVX5NPa8jg1MHlxNBCursMQUcmDvt0
mdaS4dXy3dH5N+k+MugNb3vH7z6tI8PdQZP/Tq6kdWVY2b+0h+orWl+GyRGa
2tfr6eEyzPAd2TbpC20og2pw95cLf9FGMow7bXxQs+Uxjn8ZPLe+WFXVjjaV
wSRscdudXWjIkBAYlrZWmzaXYXXyV+1hA2hLGWqvaMZ+1KfnyLD+nfnbY4a0
tQwNvj+MfUxoGxk227b3ngTaXoZ/80P2NFvQy2TYdP78tcvzaSeFP3WujLaj
1yjiay2utlpBu8gguZpc0XkdvVGGLuE6xfc30+6K50uv3SXbSnvJ0Ph3pPfS
YNpXhrcNGZP6R9GBMhTMvP7tZSItkGHNhFfZe6V0hAxT/k2b5ZpBxyieb4v+
yxF76AQZrp556/Y5lxbKUHzt4Nf8fFoig3ODyybfQloug3lSv6eTiul0GZLE
BtOab9JZMvTKrMq4dJ/OlqHP11MNkZV0jgxH/oyeOOsVnSuD/N8evw7v6DwZ
Smwdjtz9QucrvgdZbaX4F10gw+LAQc2LWx7n+Jdh/Hj1XtrqdJEMnb3mjqjq
QhfL0CZH0yRTmy6R4Xi/YRNXDaBvyTDm9lgjvaF0qQxzup8YXGtIlyvq//J4
l4MmdIUMIz4e/74JdJUMvb+LHxha0tUyDNI9d/jrfLpGhm0DxoedtKNrZbh9
s/t8vxX0exlGzt/cw3Qd3SDDC9dxD/5tphtl0ErfnnxxK92kqEef6eYRwfQf
GSw7bvsyM4pWkWPDzQ/b2iXRqnJ0zn9qdktKq8lhFT+xKimD7iBH/YpS7wV7
aA05OlTkte9+iO4ux4TxnTMe5tNacvh+zxuWVkj3kSPPOOz40mJaR46egzua
9LtF68rxeJZjQfV9Wl+OXud0jXdX0sPlaPna4fDaV7ShHL3djg/Sf0cbyRGg
NVpa/4U2kaNKs3PLQ79oUznUXFxc3Vrmc/zLcWzXyzuj1WlzxfUnDo5q7EJb
ymGzf3DCSW16jhxtD0ys8R1AW8sx7rbzhElDaRs5/OdI4/4a0vZymIpVH10w
oZfJMX7u8v5hoJ3kGDoldbW5Jb1GjrNRkt1trGkXOeZOyKwusaM3yvE32aFX
/AraXY74CZMXzF1He8nxr2tNeGc32leOlZY7j93bSgfKUfNK41lKMC2QY/SI
/m1so+gIRbyfewy0kugYOX5qPJ73REonyBGz87xbegYtlGPzmxFJjntoiRyG
u77s1zlEyxX1cpx1+WU+nS6H5clOj7ML6Sw5BFYB75yL6WzF+/UI+6N/i86R
o/WMf+3f3adz5Wjlmqt9qJLOk6PYaL+u2ys6X46rH92Hj35HFyjixXcZ8/UL
XSiH7Skr4xO/6CI5PK6sGufT8gTHvxyV8blGE9TpEjkixlcb/u5C35KjyebC
sHPadKkcPdx/DgwZQJfLET3ytubUoXSFHJ5+2u1ajaar5Jhi++BHsQldrXg/
k/e+igJdI8fM4/tvW1rStXLcsH53Qt2afq8YH3/q0m/Z0Q1yqMy7E5q0gm6U
I7lNx7XW6+gmOSbZBFh0daP/yDHrU6J++VZaJQ0FKtvUUoNp1TS0Erq/sYui
1dKg06LionYS3UHhgInplVJaIw2Tt2d4Z2TQ3dNg2/Ps3BV7aK00NB9+pTvg
EN0nDTXX1/5+mU/rpMHUaGVZdiGtm4Y2cp39zsUnpvwfxT4nYg==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.0006969037928594735, 
           10.15162464224402}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxd3HtUjGsbBvCRUESDEMIgJGGEhGyDEMIghDAR2oRBCGHklIRBCGGQjPM4
D8I4ZwuDkMNmkJTtMAhJ+FzPXP742v/s9Vv3cz/Xe7/3vHutbe21a4+Y2HeU
nUQi6VZSIsHfbX9Z20v+/y/F/9OhiKVF7FLErkXsVsSyIq5TxO5FXL+IPYrY
s4i9irhJEcuLuFkRexdx8yJuUcQti9iniFsVsW8Rty7iNkXctoj9irhdEf9V
xO1p2Wnb3xW03GbNH/uy3oFWsP7H/qx3pANY/+NA1jvRStb/uC/r/nQQ6388
gPXOdDDrfzyY9S50COt/PIz1rnQo6388kvUAOoz1Px7Nejc6nPU/Hst6dzqC
9T+ewHoPmzVq1mnJZNYDWZ/COi2ZynpP1qex/sfTWe9Fz2D9j2ex3pv3zWH9
jzWsK21WzLNZQWtieP6P59tsok0L2N+H/YvYT5sWs/9PfQn7aclS9vfl/fHs
pxXL2U/LtOz/45Xs72ezfBX7acVq9tPKBPbTmjXsD7LZsJb9tHUd+2nVevbT
lg3s72+zOon9tHQz+2nTFvbTaTr2D7DZuJX9tGkb+2nzdvbTOcnsH8i8FPbT
ATvZTyfq2U/n7GJ/sM3Be9hPZ+5lPx2+n/20vYH9g2zOohV0+kH202mH2P/H
h9k/mHlH2E/nH2U/7X6c/XSYkf1DbDacYD/tcIr9dHQq+2n7M+wPsVl3lv10
ion9dNw59tPTzrN/qM2TL7CfnnmR/fSqS+ynjZfZP8zmN1fYT/tcZT+9/B/2
0wXX2D+c811nP13hJvvp4Wb204pb7FfZ3PS2zTLa8w7vo5tn2KyiA+/yfjry
ns06ev995tH5mTZb6IEPmR9q8z+PmE/3+Zf5tPUJ82029bMw32aF3zPm26zx
fs58nm/1gvk8H5jF/BE2T3rJfFqfzXybJR9fMd9mU+9c5vP8hdfM5/meb5hv
s+b9W+bz/N73zB8prDpvZb7NmtMfmG+zLu0j8202ZX1ivs2WCp+Zz/NBX5hv
s2zPV+bbLHH9xvww2/mkAubbbGpTyHybNXk/mG+z6tov5ttstUjO2PJtlr4t
ZrPJZmWZ4jZbbJa0s7dZMsqWP7+EzTKbDZaSNitstvR3sFlls8NLR5s1Nrtq
yzDfZt9BZZlvs76jM/Ntjt4pZf5oYbWpPPNtNr6twHybs+QuzLc5fWkl5tsc
LKnCfJtNWlfm26xqX435NlvLuTF/jC3fribzbd5WTsZ8m3c1q818m+dH1GG+
zdfO1WU+6y3qMd9m37T6zLe54jwP5ocL5470ZL7NdaZ5Md/mwaebMF9YUX+L
nPk2t//RjPnCpg9TmzPf1l/tVwvmC8sOzvdh/t+w+eOzVsyHLdEX3vkyX9St
++a2Zr6w4Z/ptEZYssnM8zqbW2zkfSZhResfLZkvbErx5vNIxor67k3ezLe5
5VvOoxDW9BzGeVTCkpQyf/Jt59s7d2K+7Xyz3r2ZL2wqd3AQ84V1hR3CmD8O
tuzqM4H5wh63Fk9lvrBqifts5tvc5WUM84WlxRMXM1/YaJ4Tz3xhvf6olvnC
8Xauq5kfAUf/02cN84XzqvZdx3xh5cSy65kvHG6Ys4H5woFldm5kvrCx9rIk
5gvr0/02MV9Y+vMKLRkP+8d13cx8Yf20h7RCOO3d9i3MF84ZH6ZjvrDios9W
5gsHTx60jfnCYX8/2M582/3/nt7B/Alw4sqSeuYLZ6Tv2c184ZD2un3MF779
7G8D84XPPK12iPnCHj0eHWa+cHyt5KPMFx7sPvE48yfCTuk+J5gvPK3Ml5PM
t/kvfSrzhaObdTvDfOE6k+6eZb5w+NwdJuYLBzXuf475wnbG77REDWssSedt
lgqPudnuAp9HuOG0LFoufLfkuot8PuH5yUMu2awUvqLwvcznFd4T633FZrWw
67neaXx+4UdTEq7arBWedb/4Nc4j/EWyJd1mg3B0y7AbnE94ibqB2WazcLEW
Xrc4r3CbI363bbYK3xvZ/w7nnwR3rjklg/MLp7dcfZfzCzuOOnyP8wtvO3Hr
PucX1i58k8n5haep7B5yfuHMDhUecX7hG8bqjzm/8JeWtf7l/MJ9OtZ8wvmF
70yr/pTzw5qCymUtnF+40GkFbRbne0dVesb5Rf1NzW20VdRf7/J5zvknw1O3
ZdBSWDNv7OwXnF8418M7i/MLN9/+iVaI/gOlzr/k/MJrUpOyOb84Xzk45hXn
F550T53D+cV52ddRuZxfeNLK4a85v3DhhSH/cX7hLMmgN5xf3BdfcsBbzi9s
vt3nHecXfry+x3vOL/q9R9a2cv4pv226Mn8jLYU1dq1cPnB+4alpS2k5LKl6
x+4j5xf9Dm1n0krhqhU/0SrRf2LmhE+cX/RfjXlLa4S/1JyUx/nF+RhZAa0T
ntdiyWfOL853sdT8wvlhhVfUKdos/K7c8K+cX5yvpXLM5/yirjadoCWRcKT7
xG+cHzZ5dPEo4Pyi7vnoBS2HNePP6b5zfnF+uMuwQs4v6sWaVP/B+YX/2nyf
VovzB2Srf3J+WFJmTc9fnF+crz6nuOSsbX5xfvzp4bRBnDcZTtEmUc/YWKWY
zWbh2GdTaIu4r2yxW7RVeMPSpnY2S6ZiPktlLS2FNZ28P9EyWDIhdFBxm+Xi
fKnqF2gFbHqeJre3WSnqkivbaJWwdHjVEjarxX3bziTQGpH37JVLSZu1wuW2
rqd1on9fRJ1SnF/kdU/YT5vEfV392zlwftF/bPd12iL6ezgNd+T8oj883UpL
pqG+NSKmNOeHTe9iK5bh/KI+IWM7LRf1z67NnTi/8Pc252il8MyOvcpyflhT
YcxDWi28rerocpxfnH9r95HWivr2T3OcOT+sapBdUsr5YUvlI71pEyyLCdhA
m2Hdwh/ZtEX0T6jjU57zC+/4vpiWTEdelukxLYUtkxNbVOD8sCRv+QpaDisW
LHtLK2DZoH69KnJ+2KSacZBWifvLzKvswvnF+XavommNuP+EdxatFefvF/So
xPnFfUNyDtMGWLftcPXKnF9YX2c+bRbPN83hNW0R/tpFWYXzi/sv3jlKS6KQ
3+ZsNVfODyuetplLy2CZ24YXtBxWOXYPqMr5YVONC/toJawbNMulGucX52f+
G02rxf1DOr+iNbCl469+1Tm/eJ6DXS/QOljzoFtLN84v8lKq76ZN4r5ax2vX
4PziPsdPG2mL6N8z17Um5xce8HYtLZkh3u/pyrU4P6zKmLqOlsHSYwOdZJwf
Vrct25NWwAa7s8toJWwdOvgGrYJ13zLK1eb8sMbHqzetEV47agWtFef9tTdp
nXD/K851OD8sW9NcSZtgbfkyK2mzyPdfdpu2wIqfhS51Ob+47+SGYFoyE8/f
desmWgorDvhn0TJYrjrk5c75Ycn48tNpBazMm3eBVorzn6pVqMf5YYtD9gha
DZuXPDhKa8T50ndK1+f8sLT72lBaJ/r975ygDbBqZLOKDTg/LBs4eDxtFvVT
kjTaIhz4vI4H54c1s6/MpiWzftvUNSaTlsK6KW+9G3J+2NzsbTwth7Uxk7Jp
BawYNbO9J+cX9RVuibQKVpvnW2k1rKphDWjE+UV+6L6ttBbWpDt+p3WwLKFX
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
vpV3nf0fazuifA==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2HuYzPX///F32tgKTdmyRTUVtSQmkS3K5JB1qAZLmxyGNq1amYqsnIaW
1iEmxyUxFVqHGIVWpFFLK6eplCXVVMomaiqxIv2uz+txf/2u6zv+cd2u5+v5
er6O7/d79oZBw3o8Xs1xnM7VHed//+tfoq3zf/95/y9Tk+xKclqS05NcP8nu
JN+Y5AZJvjnJGUlunOQmSW6aZE+Sb09y8yTfkeQWSW6Z5DuT3CrJmUm+K8l3
J7l1ktsk+Z4k35vktkn2/l8Hk+zclxRPstMuKZ5kp31SPMlOh6R4kp2OSfEk
O/cnxZPsdEqKJ9nJSoon2emcFE+y0yUpnmSna1I8yU63pHiSnQeS4kl2HsTu
DxRPsvMQziRu7SXuwx1kr3UW7a27yVFrH/ndcQ/yrbPJt+5NvnUO+T1wH/Kt
+5Jv3Z986wHk95SDfvKtB5JvPYh868fIz8a55GNnMPnWT5BvPYT8XuQ/Sb51
PvnWT5OPvQHye+NnyMfBZ8nH0efIx84I8h8m/3nycXAk+TY+inzsjCY/h/Zj
yMfeceRjJ0i+9QTyH8ETycfuF8nH/kLyrSeR30cOTyYfx18iH3unkG/jU8l/
lPFPJx87M8jH8Znk40SI/L7EXyEfJ2aRj11zyMfeueT3o/488nF8PvnYu4B8
HF1Ifn/WYxH52L2YfBxfQj6uDJM/gPG+Tj52vUk+zlxKPg4sI9/PeJbLbuwu
oT9cvEL2Y88q+sfx1XIYR9ZQD2dF5Djuto76A+Xcd6iPp79LfVy+nvq4/kbq
48L3qI9TN1EfL3+f+ti/hfqD5Myt1MfXRKmPG22jPu76EfXxix9TH+8roz5u
sYP6eP0n1H9M9u2kPr50F/Xxz7upj3/aS308KUZ9Obj6M+rjY59Tn/b37ad+
rrzuS+rjew9QP5f8Curj0kPUp/2qw9TH27+lvuydFKc+/vB76j8u1/mR+rLz
4hHq48t/pr7sjx6lvhyf/Qv15eiMX6lP/oYT1KfeRQnqD1Z+5z+oj1f+SX3Z
detJ6suBPX9TX/bNPU19OTT5DPVlz7Kz1JedU/9S/wnj1LbOVtWXC16/QPbK
oYYXyn550d4UOSjnhqvLYTm2OFWOyuf2XCLH5SO315KdPOPMvZdRXy7rcTn1
5XaHr6C+3GBiGvXlq7xXUV9uWSud+vLJg1dTXy54uR71h2g81a6l/v8c3NW4
xnXUN/FohxzsN/a+vpz2QePg/mL6C6u/PrG61JeXnGA+cfnZBqyn86Sx79jB
e1Rf7uq47lV9+Y+/3bJf3nXoVjloHPxoSAs5LMf+bS1HjaOtctrJceV/3raT
7Dxl2s9e2012G7u/faA79Y2dvFHZ1Ff7XXsfpr6xd3nbR6mv9k0396e++vPX
HUh943iPjwdRP9+0H/dwLvWNvf0+fZz6xv6BdZ6gvnFw+K151DcOj6g1hPrq
b+VGHFV/V9/yJPXV3/aB2Blq+nsjH7uN46192GvsrV4X++Vxu+k/qPymY2x9
eYfH1lf7QX8x3rix02gXdp5W/APsNo6e2YO9xs7tDv35jYPNHrb1FW/xla2v
/vKDjDeq+KKcp6iv/j/w51N/mPGKBUOpb+yUVxtGffnbbgHqGwf/a/IM9Y39
Ta57lvrG4Yb1nqO+vL3+cOqrv2NXj6B+wOQvqvG87DJ2jzyI3QHNd+JI2WMc
dp/EXuP4JzcUyD7jaKvzxP3GzvSxOKD8wFz6Dyr/o3sYT0jtuzzD+MPy0KbM
NyI/9TvrF5W/e2uwHJN9rQYwX/mrhQ/JCTk89SLu/zPGy090l13GwfP7B/I8
ktvufFL2GHt//fIZnk+Kf9j4edmn/m73vcDzSg61GCcHjONnfwzy/DJ2Dx43
UQ6p/5QjL/I8U/8rXJPkiHH4yQsm83xT+5HrcUz1jmW8xPNOntcfJ1Tvm17Y
efZ/jr5yGXYZB3+ZTn9uxSfvo77HOLzgYCHzN3ZfsYbx+oydL33Mxy9X7GC+
AfV3ZxPWI6j4samsV0jx4lLWM2zs3Vj2LPPX+P4bO5T5K//Vpx9n/vIPf/dh
/nKTSzoxfzlY2ojz/5zx4mo8b13y+mX9OP/GwedG8nz0yF/04b571f7MUO6v
z9j7Xk97X+WXJnB+A8rf5uW+BhX/djYOKX7veHuf5ZSLccQ4eiqT/qLKH5RO
vZjG88NjjCeu/N038jxKKP7UZO6LM9zEz7zF+8A1XPlt7fzlny7uxfzlm1d3
Zv6y55o7mL9c2TGD/Sd+YUf2Xz49i/sWlP9plsP+y/8+2J/9l9ue5D5G5JtG
57L/8sBNg9l/2b86j/2Xd3bn/ibk6FtPcf5HGF/zdj7nX545kPPllj/ejj1y
l6+xV561FPvk9xtgv/zCAPoPyL/nUD8ov3Ql4wvJPy5g/GH5wDHmF5GfqcV5
j8onqj/G/OXVh/3MX3Zl9GP+8oxc1tt53jhjVE/mL2fHuzF/uW9JO+Yvl3zk
Yf5ycF0t9l+OfdOK80/+xo6cf7lBdZ7HQfnn/T05/3KXdXzfhOUX/urD+Zd/
eIbzGZXv/Y/vnZh8d759/suhKcQTcp/GfTn/I43Lbs7h/Mun+vfg/MvOGMbv
kf2f1uH8y3Pu6sD+y7XvfJj9l688OYj9l2s5dv/lMTHeJyHjYKKPff4p/ket
0ey/4v0OjGf/jb2de/C8jRlH26zj+RxX+8/O8zxPqL339insf4GJ/3rvNPbf
2Lv2upfZ/wL1Vz6D/Vf7ZteE2H/55TXYZxyPXfcK8zd2pw3BAcW/mYaDyq85
GYcU390bhzWe4n/pP2Lsb/0Cjip/74KZzF/jnXac8ceV3+h35pcwdkYvs/Mf
ZeJ70uz7zzj4Z3vWz614s9YTmL/intQxzF+O9RjB/I2dfl9z3/3y4U+4fwE5
PJffM0E5fcQjnH/5koT9nlT/8zL5HopQ74JRnH/5kVbjOP/KzxgwgfMvf3/v
i5x/edTaQs7/C2Z+W5ZP4vzLa+tN5vwbR5dWxx7j4JMDae+VX76F/nzGzobe
E7n/it/47XjuvzzjKOMPyhO+su8/5dcey++PsFw+n99TEXlxc55vUeV3nMf3
QUxeOm8s+6/xRwrYz4T8yz1T2f/RZr5Tq3GeXMbhv76exf4bu88tmcv+G0en
ty9m/5V/YvNC9l/xtP8Wsf+KV0tZwv6r/8KBYfZf7avVe53zr/YtV+OwcWBR
nTc4/8bOMB+OGvuLBuGY4o90wXHj2OFUnFB8/hL6d8aY/Nku7DL25vVnfG7j
+JB0xu8xdhq1fo35G0dr3PYq8zcOjjvF+viNw97wPOZv7L7kjjnMXy56z95/
1X87n+dNWP3VCXBfI6r//FT2Myp3WMjzMCbvncXzMy4X3Md9TMjR2Y8w/7HG
3o78vnfJWUe5j2656gDfSx55zcynOf/y1xdwfn3yiNncV79c8A8OyK/Y+xyU
v+/B91xInvwmv2/C8tIJfH9G5Pwt/D0gKrvTGjN/5rOE76e4HCx4mvnLGwIj
mf844++u4PvcZRzs+pp9/in+5/2sv0fxtP94vnrlKX3YP5983+rZ7L+84jj3
JyD/XYfzEZTXXcP9CaneD2c4T2E5YxXnLWIcrcjgPEaVX70V5zVm7H1gM44b
xydez/lOqH2rQfb8jzf9tZ9oz79xeOc47DaOt3kYe4y9z12KvYp/8Cr1fMqv
djH2j9f8Vyxm/qp3vhrzCaq/Mzcx35Dav1NnAfOXrzrE/YnIs8dzf6Lq71BN
nlcxY2fIlbwP42r/zYU87xLy26fYXydo2v9xnvuTKn8xgPvjkisH832aLpcN
78H6yFVOF53HDDkyyf5eknt15fdJprytDb/3vXLJv/z9IEvuWDCa+ySvXzhG
zpFrP4z9cvTNF+Q8+exo+/cGeXSc+1kgb4nYv9/I3nJ+3xQx/nhn9kMO3sL8
i+VHfuf+hOXSz/g+KJFbO0XsF36S51mpcTR9NPsVlTtu536Uy+eqs/8x5R+6
g/dJheLxtpz/uPzlZZzHSrXvnWuf94pvLn5TrjKOp65Yyv5P+J/ddWYtY/+N
nZndl7P/xtGLf8bpxt4DD77F/hv7z0zDGcbxGouxR/1fOxlnKn9XR+xV+yu/
o/8sxZ/Nxj7j4KcljC9H9UZ/x/j9imedY355xuH2F+KA2r9VxfoUKL4ubt+/
mm+t8axnkfq7pzn3M6TxTP2B51Ox2reez/MrrPaDHuZ+lih+phH3M6L1S1zJ
fpfKbW6036/Kn7RqOvsvj3ia521M/m8B3+8V6n/PXfb7Xu6cw/d/pdpPP8/z
PCE/1gJXyb0c7Ew0XvIETjV26j/NeXYpXvsq/r6TLscG8Pcgt9oP7cx5z1D8
1r18b3vwzzyPMuWr2rMeXuXH9rFeWYoHQ/PZf2OvZzTrn6P2VYXsj9847O7O
fuYZ+1/4kf0OGEcfeo7zUCA/8A/nJ2jsvuFZzluRvGg/5zOk8fxSbwX7r/yd
7Vay/6q3u8Mq9l/jGXndavZf8d57cKnyjz/0Nvuv+b22DJcrPm0vjql+4S5c
ofjR13Bc/S/uhCs1/it2US+h/m++FVepvyZPMV7nRTPe/TOYT6qxU2ch83UZ
B6u9UsL+G/s/GWnvv3G0oAfrl6F4WkPuq0fx0X+x/pnG3tHbeD55qT+L/cpS
vc5P2fep3Ok13p85cmCC/b5W/5umcj7y5Lej3M+A5jOmMeepQPGte3neBhXv
9C7nr0g+d5jvl5D86UO4WPmv1cZhzWdQPVwi//M8jmi8zW6g/1L191o69aNq
P6sPz49ytb/gR8YbU/vgat4HFWqfG+F7Ia7xXHSU+1Cp9ikNWL+E2nd/nPWt
Uv/H3mH9nULjdqnch1S5zM/+uYzjn79nn//Gzo5UzoPb2H/8Qc5LRqHmM4nz
5DEO1ynhvGWq/bl1nEev6t2xhPObpXjj/DXsv5xy1Vr2X/VXLcR+1dtXhfOM
PSfqRth/fD0uMI5tSMNB4+iKE+QXyQ1m4JDmf6gmLtZ8WtrxheWUtYy/ROMZ
UWHvv7G72nHmX6r+/CdYn6jyh8ZZv3KtxzU7Wd+Y5v/4Ku5bhdx9GvsRV38/
5rNflarXIJv9TKi/Kzva97/Gt7a93f9Jpv3unpyPVGPnslGcH5dxdMJQ3o/p
xsE+13Mf3cbeS2py/jLUfsmd3E+P4hVhzmum+r+7K/bKrVriLLXv2c/+nlTc
uw3nKH6yn73/qre1GfXzFH+ouf3eVn65n/EXyL/0se9/Y//hK5l/kXG407f2
97jaZ6xjvYpVb8w01jOs+INPst4lWs+1XdiPiLy5EftVqvxXUtjPqNYzuwKX
azyN3rD7bxxvP4DzUaH46Zqcn7j8eQmuVL33PZy3hOLV3sRVGm/Befv8n2za
92vHeU019vZ/GrsUf3EiTjcOXj8eu43j5bk4w9j/UAvsMY5u/s3ef+Nwt7nY
K49qhLPU/5+rmY9PXnwDzjF2Fk5hPfyK33aU9cpTve1tcED+ZTrrW6D8FofY
j6DiD95i3/+a/4nn2b+Q4uW72N9i5c/JwGG1/20m56FE7buk4IjG9/lLnJ9S
+f769u836u+njzhv5XLfMTim/j7JwhXy1ltwXPVz0+33v+Kjr7a/d+UJjezz
X/7wfvv79yVTb+Awe/+Ngy+9bn8Py49+jdPl6+oxfrd85wCcYexttRx7jKM/
/YYzVa9lJuvjVft7J+Astb9zJ/Yp/vhlrHeO4lf1tN//8quzcZ767xDDAeUP
TGU/C9T+gdY4qPYj83CR5vPETLv/yv9sLS5W+zk7cVjecRiXKP+dX+z9V35F
Apeq/Y9/4qjaL7XxcsVr/Ipjiqf8iCvU34KDOK72m/fZ57/m120HTih+xVZc
JS97DztFxvnv2t9/8sJ19v1v7PW8g9Pl6huwW96/CWcYB9tE7fef4l98gjON
ozfHsFftd1TgLLnL99in8fSx65kjb7Dr5Vf7O0/jPMUrzuGA6q26gPtdoPFU
XGTvv9rPvNjef/VXoxYOyQUuXCzXScNh9X9BOi5RfGB9HFH/3hvs85/1vRlH
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
3ELxj/JwpvqvOwy30XzWPo69Gl9RN9xB9f+6CWep/5nHqd9N8ey3sE/5k3rh
bNVfU8V8cxSfPgv31XiqN8R+za/eO6xfrnywNc5T+0fL2I98jWfHAzigePtD
7Odw7aeTjwvU/uaL8Bi1/+wtzkdQ9S7ojQs1/kmX4yLW92vO33TF39yIQ6r3
6ht4jua7PIyLle9bhxfJx/bjsPJnXkq9pYrf1AuXaL+6r8Or1f7F65lPRPHv
F+P1Gl+XpqxPqfp7ZDfeovk/NZL1jSq+6jb2o0zrcf0JXK7+17zL/u7W/jcZ
z/mIqb/eD2zl/mt8B+p9yP3XeNpX4sOqVzsnyv2Xh5biI8a+f+ps4/4bh0YN
wceNPdvfwwnjwFf/4pNa/713f8T9V/zsUHxO4/tyHnZm/c8RZwNOMY52Lsep
xp6lMVzT2HfrXuxSvME2nGaccFbidGNv7hRcX27gx27jYOdmuIFxKLWK+WQY
B97bjJsoPzoae4xjs+/CLYz94VOsZ6bceT1uo/wfn8Ne1Vt7J+6g+a87y35l
Kf/QHNzN2Hn7buyTl//G/mcr/+t1OEf1ThfivmqfmYf9xuHxj+JceVB/nCff
FcD5yveEcEDj832Ah6vejFO4QO132/GOUX8/FOGg8t/6Dhdqvc9cx3oUGbuy
u+Ppcv/JOKT1W/QBnqPztMSufzHn63b2Z5HOT/98HDZ255Tgpep/6hFcovV8
yc35WK3zcvBRHNH5OzMXr1e8uz2fpZpv25SPuf9qX7cVjmp9Gg3GZTpPn4Zw
ueIDNuLdWp8+X+GY1rtLAu/X/L66sIz7r3iZCx/Wep25CsdVb5z1Ea3HhMtw
pebfsxo+bhx/+nfqJTTfJw/gk6p36n1cpfXctxCfU/76kdiZbdbnsR44xTg2
81acauz8fCGuaeypddjef+PQivX2/ivfP8Pef2PfN0Ps/Tf2xjrZ+28c/TPD
3n/jYLXaOEP1Pzht779c8bO9//LZr+39V/+bDuBMeeYh3MbY/b09X17VP3MK
dzCOX3I59bOM/Y3vwN0U9/XDPtXvNRNnq79K+/zMUX7xxaxfX8V3+rBf49v2
Gs7V+Ers/uap3uyO7H++1mf6YhxQf6+cwcPV32u9tnP/Nb5l6/AY9f9qzR3c
f41v2OO4UP1dvhkXKX9EzU+4/8qfnYNDyh++GM/R+O74BhfrfF2YVs79J94O
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.0489984338148588, 0}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageMargins->0.,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Print",
 CellChangeTimes->{3.8278436644402385`*^9, 3.827843830649116*^9, 
  3.8278440299007187`*^9, 3.827844140011175*^9, 3.8278442682770324`*^9},
 CellLabel->
  "During evaluation of \
In[336]:=",ExpressionUUID->"2daba1a7-2cf4-4930-a372-75272d2ee16e"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
r6qY+qch9pDux9RzTP3TMP2A5u/VpUz909CalN6SU8jUPw23k8prdzPjvUwR
r/+AtD1ZTP3TMDeqZPoeZrzJ0rAiuXZ9TjhT/zQ8vGrz3Z65/tSnwS8u6Ivc
ial/GpJGSR4q2zD1V8Q3X8uvWsnUPw1tmw97jWXOp440bBYbpFoaMfVPw7r6
wHU7xjP1T4eFlbzSmjm/VdIxXtnF5Wpfpv7paI8/6KnRg6l/Og569K5bwlyf
2ekY5Zg/bUU7c/1PxwmZXkH/N8z1Px2HFzRv4D9nrv/p6CiMC7/yiLn+p2N3
iCyy8i5z/U/HgchLgwV1zPU/HYHlVQfMmPuHbTp441OV31Yz9/90rJm6559Z
FXP/T8cb3fl/9WTM/T8dI/fNtJtUydz/02HWcT/j3wXm/q/Y/t8xK4LPMff/
dCTahSeGnmHu/+l4fse0acBJ5v6fjkWDj3FtSpn7fzp6LPRe6XuEuf+n42bL
CvgfYu7/6WjJ+rV7237m/p+O2T9d37jsYe7/6XBY8DxLZydz/0+HafSThR5i
5v6fjs21cyR3BMz9Px33Xzh39Etn7v/pMJJsVfsvnrn/p+O7plprdDhz/09H
l2XjwEpf5v6fji1+uy7UOzH3/wwcq4pcct2auf9n4NTshkely5n7fwZ81/wz
ipvN3P8zYCIZV6/H/P3DzkBZUXWndChT/wwsqv2H+p5M/TPgoGE+7kM7/X1o
koHWmYLlxk/IyIDW2buj+taQzRT9bW4dvl1KtsxA8b0ePyp3kG0zMHN/aNO3
ZDInA3MNwxcEBpA9M/AspLfBcEeyfwZs9OSXbpiRwzPAS3w4zoP5e5ubAe9V
fW8+HkPmZWDb26UvdPqSBRmInu9s7PON+fs/A65/kqp+vGT+/s+ArrWD7vTb
zN//GYh82rU87ALz938GTszMUFMrJpdnYKltlYy1gyzLwPUhmU7rM8i1Gajf
OPd4ewy5PgMNq+5PvhJAblTk56E/45Y7WZ6BHRssmjQdya0ZSK61n3zBmtyR
AbvDlSUNq8ldGdg3ZlNJuBmZxUegXuvpXUvJKnywfswI7b+YrM5H3U2rwq0g
a/FR6Ns+xnohmc2HmXqwf+QCsj4f6i/50rPzyUZ8bJo5sUWZsQkfq85WGkUx
z2fgw29VJGYwNuOjyVP6fQ1jSz7Mh+1Kb2Zsy8fEB3FZncz2OHzcEI2+5cjs
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
55LZ2+GRdW/S2iNkne3o/2f5vxtVuxf+D2xBC7k=
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
7VvV2b93JUnI3+nxtPdqtv+TMNchp/CuBdv/zPkN/23tvYTt/yTM6vHvwRsT
tv+Z+skchalz2P5PwmitHveM9Nn+T4JMYYlo0GS2/5Ogl29iumsc2/9JMMme
+ebFSLb/k/B63fo7tf+x/Z+MhoUrVDz7s/2fDPXvSZeO9GT7PxlOhQ6/BL/Y
+38yivy/X+vZxt7/k7FwhXLz0Dfs/T8Zu6w5gqtP2ft/Mi4UrJvd5x57/0+G
rPF2aVMle/9PxlfJLJWV7P3VLBnlW2srVx1l7//J2L0+7lNLAXv/T0byzY/u
Q7LY+38yhio87P84kb3/J0OZ/zJvVih7/09Gs0X2teke7P0/Gb1ex7y5a8/e
/5NR8LvPR9WV7P0/GXg9a0ovsPf/ZPjvMJy5X4+9/yfjP5OR5/6yzzv5zPnX
H3IZMpi9/ydjyqRDVZ847P0/Ge+4wdOFbezzXzJOul3L+fucff5LRlPtqyzj
avb5Lxklg9+ttrnIPv8l403LtsOLitnnv2TM5+nPUclln/+ScXpiUMyFZPb5
Lxkm7U/7rQxhn/+SIbgo3V7lyj7/JWPki0feU23Z578UqAk0R8SYss9/Kdil
Ou3cTX32+S8FS38N7uw/lqyegvKZK5qWDSJzU1CodnBXahf7/J+C4z8GBz78
wD7/pyA8fNy6qezzumEKdry6mppVxT7/p+CoWN1e9Qz7/J8Ct9Pczv372ef/
FMT4vd+1KpN9/k9B2CX300Ni2ef/FLzLcV781Yd9/k/BRNM+U9/y2Of/FBRv
uOHRvpIcnAKRb4XjCBMyn8lnoOqfddPIghQcHvT9U+kosjAFJyYObZk6gCxL
wVjHo0VVnez7XwoyV0SMTG5l3/9S0L6y5ntQA/v+l4In38WRstvs+18K4hZO
6/m1nH3/S8Gsf5vckovZ978UaKS3v3XZxb7/pcDiveRFSgb7/peCt/6ZNZ18
9v0vBSZr7i0q92Xf/1JQV5n28pYT+/6XgteqWs5T1pI7UqBZNTv5mTmZk4pD
dbeUGo3ISqlQn9I7bTL7vquSikuORx9eGUdWT0VdU8KH3cPIXObzBwZsusi+
P+uk4uLoV5nDOWS9VPSdy+tT3M6+/6eiJLLFxv8d+/6finWtM223NbLv/0x9
3VVa6bXs+38qlM/M0Hxcxb7/p+LugTBVc/Z9n5eKxrP7TZ6eZN//U+F4+/fh
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
HUx+/fYk2yuROyXgHE2t2niE9mNxMuF0tta90JKskIka4RUz/c+030uJ8VTz
XZ8yyMqMFZZ11uqy+8UyoVQzYM7pPNpPppYJeUfM487HtP9MPRP8X1vG+KuR
NTKh05Hwepgl7V/jZsJGfLd/Syztf9PKhEfLz1/vymi/nE4mTHWnxE1qpf11
UzKhAQPbi6PY/XiM9fI8r1jSfj0D5nhXK6vXhdP+PsNM3I/yv3noEO0PNMpE
pkFN1cMHtL8QmRhwSzS4Zw+yaSbEiz04ZpNpv6JZJgS1yhsu2dB+R4tMKO8a
Ny44gvZLWmXC9ub00LD9tP/SJhMIn7X7xm3av2mXibJvgW/WfqP9oBszUfg5
on3gcHZ/KGOVt68yw2h/qlMmDE0azpdeof2xbplouaH7bmAf2n/rkQm7/mbT
9M1ov7F3JoJPla87FU/7p/2Z/pnmetvkEu3vDmbaX2N7z/R22k8enok2nYBT
fuPZ/eeZ8H6sndSwiva3xzH1J/hycr/R/nlBJvSMs/67O5f236dmwqph34jy
ENrPL2TyPdWv7VcJ/T5AJhPvlMjU5Qr93oAsE02meSG6Q7Vo/DOf72c+wPiC
Oo1/5nr5nPMnzo9+T2EfU//cnob+3vR7T4WM+ySmGvek36MpYtrTXz654Cn9
fkRJJnKfZ2SVl9PvVZRmomLM7rWPVk3vdhmTn8HSjQ1LZ3a7nLn+6o5YDMSc
bsszkT+2YcmAufO7XcF8Plhj0bkd6HZVJtTPuLx/L1vY7dtM+WcXk41S027X
MOdnEjb8TtaSbtdlwm1q68Y/ErNu1zPjI9pUo1C0rNsNTPsXXqrKTbfodhNz
/J+/bhYnr+h2cyZ4uhFvny206nYLU3+XxfgnJqu63cqMV5+n95caWXe7jam/
c/p0HcPV3W7PRNGzC55RM2y63ZGJVlP+Putpa7rdyfSfhuLCAzq23eZkwcxu
wYAIzbXdVsgCL/hTy8ORdt1WykL8Fespx9XWdVs5CxudTjT3GbC+2ypZ4ASk
VT1Q2NBttSy4xc/49l8nWT0L8kquz9mvG7utkQVt7QiLcy323eZmwdNM+kCx
cVO3tbJQevDM4eT7Dt3WyUL67+opQ7fwuj0lC/te3ShzaSDrZWGWqrr7+DWO
3TbIQkNnrILJHbJhFqy6cvN2m27uthFT7tA7Y8Z5MrLAd0+LaNHb0m3TLOBQ
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.015072088276127712`, 
           0.03003995116318685}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
1e3n9uuH/wGtZDw4
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Q1aTQWetxZ5as1Nlx+iitRCM+HZAdIWuXosXbTPHaz1UxndG6k1/rKpRxnfG
kzxLA88GZXxndPv7M3vhL2V8Z0z2ibur1fI+4zujaURW45u2dJYzPItatmho
Txc5o076oiSgE13tDMN/DtHvO9Mq69CqUO3OFQ1aZx1+NCxyOdGFxjps83x3
akc32mkdbhvbDtuvqYy/Dm77V+9f2F8Zfx1cW0R9iBqujL8O8cUFkwqnKuOv
w8O1NuU9Vinju6C09AriRMr4Ltiw2WuZ2gNlfBe4JmxzThpTzvguGDF7gluv
o7TABYEfTpy3sn/A+C5IVl3WRzDqIeO7oLfNmFEWpo8Y3wV91+e9mi+oYPz1
0KtuXxP/4zHjr8eEToGT58gqGX89VFrePx03/ynjK/xQU96l03PGX4+FQ1u8
fO5UzfjrUdHCapvDyBeMvx7uydfaLa2nq9djVk3790NELxnfFR1HuO+p7P+K
8RU2OnShk4SGK3ob3/3x9h3t5Iojr0MsxINrGN8V4n9N9t/N6SxXBJvNPuY+
my5yxc3eq6YNM6OrXWHZ5n3DIz1aZQM+Zd8e2NCJ1tmApn4/HuxvRWMDviQm
SDU6004bsCK42nP1JGX8DXj9y2pEoUgZfwPmr7ba8UL7NeNvQElhxEzzJ3T1
BkSXi271rnjD+BtxLXLP792atYy/EdscozID0+sYfyN2eLitNHZ9x/gb4fKp
d1XHyA+MvxHWQ05/fP3lE+NvxMLI5RUdHT8z/kZYJL9o/PntC+NvhG3FxNV6
JY2MvwnL52fbW1R9Z/xNcI/zn2U88Sfjb8KRyXljzet+M/4mWO2/X1/y6R/j
b8IO9QVxi4e2+O/v1qxNaDw2ND1QvdV/LtqEP4WeDed7t/7P1ZvwdU3MlfHL
2vLv3M3YpykvOXq93X/W2YzYp9aqd506/GdsRozK9282fTv/Z6fNuCJf4Db9
r8Z/FmzGbpNdfwr8ujL+ZtxrV6OT3KI7429G5M57CxaKezD+ZvxY8SZJPlST
8d0w+4b14j/FWozvhofiA2+6r+rF+G5wd9cc6favN+O7oXhy44p4WV/Gd8Ny
1+f5NcP6M74bHhRuWqi6VIfx3XAhOTtsRe8BjO+Gyiv2xzMe0Cru2GW+0kk3
duB/1nDHqaXnPPOMB/F53LHubI2lbSVt6I5+UcKR/v66fD53tA82NbzWTe8/
W7ujyzXLAv0c2skd/fseP1ViMvg/u7tjzrxTJV2u0QJ3mGoOO3LMZsh/Frrj
gcqEvB2v6Cx3LCr5N6j1Vv3/nOeOsPypLmadhjI/d8zUCnm7+zBd6g5X1z0G
W5cMY77uKNg4cddpDYP/3OCO7u8XNhk8pFU8YHS+o83Ug8OZvwdm67m8Gioa
wfw94PXSR/44ZiTz98CUx5p1nVJGMX8PtE69eM7A3pD5e2CLm19mbAPt5IH4
uPFXz4pHM38PvNiUZnJj8hjm74GWRRPKDzfSQg8sqT/otTR/LPP3wI9zKzcU
BRkxfw+cT27jf8/amPkr2h19cmNGjGP+HvjzaOLYt93GM38PnLF40v1bKxPm
74G13ufsi/7SKp442+/Mq6UtJjJ/T1w9YVj6tNMk5u+J5QdenFg22JT5e8L3
/J7h7yzMmL8nht7aPUi0ZTLz90SXYvOc6funMH9P7Hz6JH2zF5i/J96Yvk7t
oD2V+Xvi4tx/9bMu0UJPFPaI7PrWbRrz90Re64quaQOmM39PCEWBdeqP6CJP
DPa+JnqabM78PREQ6b1/r9UM5u+Jv43/+n5sN5P5e6Jy79x9BjdolS3IW/1u
8pV4C+a/BX/TXw/QmGfJ/LdAy2bEscUas5j/FnQqqZtYdY/GFkxOvX68QTSb
+W9B3yUXT3yab8X8tyAi28xtVvs5zH8LEtvd3hB6mRZswak9GZkGvnOZ/xZ0
uVmzp1Z/HvPfgrtFm1NXPaDztuDbu86wCprP/LegvXGz5kgNa+a/BWOj8i2H
r6Crt2DhpO26MQfphi1QX1SxfPQ3WsULlWXDFvU3XcD8vWC2JahgvoDW8cI7
z9lply7Shl6w/7ijeKvKQubvhT7TJ2qtM6WtvfDL5+qUWG/ayQvd+gyX3D5I
u3vB6cOlgP7PaYEX/J89LVzbeRHz98IhYYJjmCmd5YXjhV3rFjjTeV5o922d
zoEEusgLiyvnl9ofoUu90Ft/x9FBd+hqxfUTqmffqKUbvBBd4vG+XTOt4g2h
z7rEXRo2zN8bMxt7aC7tS+t4Y8wNk6WqerShNwZoLL7qP4SGN+JumS/bp0tb
e2P048HRgj60kzeaHo5t1b4z7e6Nv5nWjx3+ML7AG4/XOP5LqVHm740DszI+
1V1T5u+N+Gu7CzL2KvP3RsCwr0d+CZT5K+IdnTFzoZ0yf2/I9h7++WOoMn/F
9e0LBZN/8n03eMNJdYf21iu0ylbM0TN6+y6J1tiKx+EFPesX0zpbMaV3i5SC
XrThVvj4iTV2POX3gK0YYLzY6MUO2nor5s0KWXfdkXbaijaVfU/u6Eu7b8X2
vcFtcyr5/Qm24kpt6mD9NFq4FSvrr2k62NJZW/HAZ/KKzd3ovK1o7TW9T4+d
yu9/K4rUl/6W9KZLFc/f78uViFSOl+qtWGZ0bmeLrnTDVqhX3YNOEsebig/8
3i0Y/1Gd1vBBenKmhWcMx6eOD8rdI3bntqENfZD2xkAkj+T4hg/Wq2suNGxN
W/vA9WbTkS2RnA+cfFCxcNGrTW1odx9cqV622CSG84fAB0N2TMMvdVroA41V
fpGvkzj/ZPlgYBvd+2O603k+6DW764Z+2zlfFfnAKutgmzeD6FIftDvf9vC1
w5zfqn0wyr5dxxamyvnPB6l7lxXcucn5UcUXge3//HJ1pDV8Mf647awOjZxP
dXxxd2CH8a8SaENf9P/RIVF7KA1flORb1ZWVcD629sWv0av+jthIO/mitijN
amY32t0XW1u0Ehmf5/wu8EXb0gP+3TfRQl/ULejs/qu/cv73xemShMV/HnJ9
yPPFjrOthg4T00W+2Nx9x9b4BXSpL4oCh7bs3YOu9sXY3J5Jl6q4/jT4oiwk
u6V9Dq3ih9QWtR4ZPrSGHxwNxD7TZ9M6fvDW/Z39oT9t6IeADdppmxu4vsEP
E0V7pG57aGs/fPL+0dDeUbn++eHrs1313tq0u59ifh8lr3vI9VLgh7dB8ofH
pLTQD2OMd5caLaaz/PB86DX9r93pPD/o3za7v72c62+RHzakPbfoLKFL/XB0
uPmw1Yvoaj9YjXGYVt2VbvBD3OfdEb/KuJ6r+OPj7MzHMyW0hj98hn1p42FH
6/gjwe3opzF9leu/PwrP2f+d84b7A/hj8tyZ8uDjtLU/tn4/PSooknbyR+zZ
rla1y2h3f+TMTDacOJEW+CPMJvL2yb600B9rO09OW9aWzvLHmnM3zaq/c3+S
549RLsmbj7yji/zhv69+eHMNXeoPT0+HR1Uv6Gp/hN7oYWumdIM/yr7PtVN7
SasE4P6gpH/9Xyn3PwFobaNX46y0TgA63Cl+eFXZ3zAAubqR8ROf0giAb0FZ
SGU5bR2AWZc7an29RjsFQFu0KFf9JO0egJHlTqO+7aAFAXj5uyztVhgtDMDF
rPM3Xq+kswKw1L7g/HlTZf4B8FwwZ8SHbsr8A3Dbefk5jdoJzD8ABi0niq6f
pqsD8HrbbcGxWLohAOJnvWqW29Mqgfg9ufzyosG0RiBqJmfkaTRyf6gTiLyB
S8+rXqINA3Hx+pydYiGNQLjF5cd3cqKtAzF/Tuui84a0UyA0h963fNaSdg9E
aofQhKyH3J8KAjHsU277cbm0MBAzrr1ddC+czgqEvNPJioPL6bxA7NTtekp9
Il0UiCvdT7SYrk2X/u96y3nnfnM/XB2IfINQ0x8v6IZAlKkunRZ6i1YJwvW/
aZ++n6U1grC+1alFX/NonSC8HmYU1SqXNgzCuMbUt9sP0QjC5UlNFt1O0tZB
mBTRdHLXFdopCMu2LW5eV0W7B+FJ1g9Xl1+0IAiJT2+tFfdX5h+EG09aWZyz
UuYfhGvOBuv3BSvzD0K1sXH+11PK/IOQa+rno/9DmX8QZH2CTI9N4vuuVjzP
17iW7yOU+/8g5I1YKTIoU+7/g1FhP+nR7YHK+gdj+86oN1O20jrBKFNvf73l
LdowGFZHpwsPDlJ+/8HwthYGvghUfv/BWCIw1Vj2SPn9B8O4RZP3yzHK8R+M
ZdprIuYkK8d/MHxjSuoj3ivHfzDqbaWf42ZzvskKRr/S85Xu++m8YGxauzRh
cTvl/BeMdmEtji1xVc5/wUiqdF0quaWc/4JxbHjglvaGnD8bgtGrtnjQUQmt
EoIHDt1urvlFa4TgV3Gf0d+cOF/rhEBV2/bjgBLaMAQztgbl3tbkeoAQvLB9
OU1gRVuHILJ3ncPHYNopBJVZbVvcP6r8+ycEN0Rn2la/ogUhkOUajr7UXfn3
jyJ+9teLQ8zprBBM7D/f66qHcv0LQZefj9etyFCufyF4/8L+y4WryvUvBJ8O
dv934YNy/QuBW9Wx4VO6cj1tCMGO/IunBxjRKgJcOiKImruIVhNgUcbzq/uU
f39pCPB9fJa8WyytJYBou30Pz0xaR4Ap62I3ZR+j9QVwMPj4K/kSbSiA8dDU
zwPu0iYCNM2TJS6soCGAX0FYme4z2lKAzP6DzbOraWsBjE60vvPiOW0vwLec
QwM+V9JOAnxy8HN/W067CBB63ENYeYN2V1y/sm7X23O0ryJf9TW7DQ4r9x+K
/F5ua1+6nY4RIGfKTt220cr9iAAnN8Veau9OywV4nxjv29dOuT8RYJXedKcA
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
tWLCjM/29PsU9Gi7PKSFK92QArO2kaK+AXSjYvzt8eg6I4FuUry/NzvdfTLo
PylYc3zsx+OHaRUJPp8+l/PzAq0qgWzo4KMW92g1Cf55qutkvKQ7SFDtfmDE
z6+0hgSzqx3HLW29j+NfgrEBLYsu9aS1JJj8o9h/lD7dR4KEYa2m7pxA60gQ
XTVFU8uK1pVgVfEDA8kyWl+CZe9syntspodLkPbxWnRGCG0oQS+9uscGItpI
gjspR9wv7qJNFM874+l3x3zaVIK6Yt/ura/SkCDiY7VL/iPaXIIWXTIiN9XR
lhLsFV39YPibniOBx05Jl+YOORz/ErgE3Zld0Y+2kaAguNuTQkPaXoJZDceq
c6fRyyR4Mb/Vihwb2kkCv5GTjY8402sU8U53HH3Rl3aR4O3uoT2fxdEbJegU
uexQ6wzaXQL1Atu744/QXhJcez5+pddF2leCzTvO2p29TwdKkO9Un9fhDS2Q
YEr71PUuTXSE4vpjS/zvqO/n+Jdgk/32u5P70gkShI7qPvH0KFoowXdsX2E2
jZZIUKSTeeiGDS2XYGqgYJrTOjpdAt+5N1/+8aOzJLBcUtS8I4HOluDkiC/n
zTPpHAmW313b+v1ROlcCPZWeieJiOk8CTB1SZ/yIzpdg/u62iffr6AIJfC6Z
33H5QxdKcK+tad2XTgc4/hWW/27nNoAulkDapszxyVi6RIKXW8eNGzOTviVB
/Zg5+l72dKkE6zZIJu5wpcslGL63XdPhQLpCgq87HvnuSaKrFO/DvMYhNIuu
VoyfVxbHph2jaxT1Ni3/U3eZrpXgnc2vbr4P6PcSBPvM0P/4hm6Q4LpXt4K5
TXSjBJcbP4XJ2x3k+Fd8D1Khd2kv+o/i/Wm7RPwwoFWkOOUyMqyzGa0qhd7A
8h/a82g1KS5KGrprraA7SNE9Y2CuujutIcX67PfmXwR0dyl2rt406q6I1pJi
iGPrjJ276D5S3JTpnVh/nNaRYsGRhuwhxbSu4n5T0k5UltP6Urj827Eq6jU9
XArbTrGu+t9pQykcx05/fqlNLse/FHcm7tS306RNpFB1m/32zRDaVIp04c77
W0xoSJG27lRcsyVtLsWqVwtc4pfQllLMaHHQTcuVniNF+897zPb509aK+Av6
tjWJp22kGHyyKf3GdtpeCpPZ3/0dc+llUkiso+5/KaSdpMgutDgUdZteI8Vi
m14ttZ/RLlL83XrxQc5HeqMUb7e0sTJupt2l0NX5vO9c50Mc/1J0eqtmP1WH
9pXCLzOz5oIhHah434cnvTeZSgukuPam/6DcBXSEFDWzfBdpr6JjFPfrUbxE
4EknSHF8x5V+L8JooRRHU9YJJ6XQEimMfGZtS95Ny6V47/Ks19PjdLoUQcP0
3g8qprOkcMgrfb26nM6WIuT5vZr0GjpH8f5H/Lp1p5HOlWLm/tWJP1UPc/xL
8a1Nefe+Peh8KSZY1M2foEcXSOFp/GDIPGO6UPH9bpsbu3QGXSRFZ+Of7isX
08VSZK7+9G3FWrpEisahNQ523vQtKe5lyTUtI+lSKazmutweI6XLFd/3nQQj
rT10hRTR/5z+NuXTVYrv8aV/4YNiulqKokl1zw+X0zVS9DD9ezyihq6VYqjn
8Y12jfR7Kfb1KRsxRPUIx78UC7VNezR2oxul6HLW2Oz8ILpJqljfay9EjqX/
KN6v75YTs6fTKqnIHWVv3HERrZqKfXNt7W6votVS4a2bPibek+6QivSqimcz
w2iNVLTrucBLRUx3T8WK4Q/bFeyktVIReOx6/qajdJ9U9G8TFDPgIq2Tiv3H
98rvl9K6qdjV1uF3eDWtn4rIyD6XxjTQw1MxP3Lsv+fNtGEqul31qL7SNo/j
PxVzBv7rsL0zbZKKl47j4900adNU+I2evWp6fxqpMGjxdFvPIbS5Ir+ORRPr
RtKWqfCpmmBxdhw9JxUu4qqrCZNp61RkHBpTtHwmbZMK4+WN40fOo+1TsfzF
5TH/FtPLUjG6z8aTt5fTTqmYuNzvWvpaek0qus9rct2wiXZJRUq/PdkTvOmN
qTgUesS3bRDtnorXFU/qyyNor1TINlo270ygfVMxXORxZrOEDkzFkZEn+k1K
pwWK92vlPqptNh2Rihy9xk9lB+mYVGgsVFu94zidkIqLFb3j15+lhanQt/zs
anSZlqTizAfL1s03aLkiXrbzsutldHoq7pyY55nyhM5KRV5ZzuzlL+nsVHh8
6fJ2cD2dk4qKc2tnN3ymc1NxskTkffonnZeKOuFa17AWRzn+U/HmVJCBVTu6
IBVmacFnunWhC1PhYO6lXaVFF6Wix4NfVtk6dLGi3jaOCzbq0yWp+DtiiYGR
IX1LUd+jkU9+j6dLU+E2drfT5Sl0eSoG2/07H2dBVyjqMWbKjwXz6apU7Og/
TV3bjq5OxRKT2F/PHemaVJj3TCnZ60zXKuqR9c1r02b6fSpKr05XMdpKN6Ti
g+9v119BdKPifQyadbIokm5KhY3XxJqoRPpPKgRjQr7NkdIqMuw5tau+awat
KsOdaRHFFdm0mgzRt4LCd+TSHWQQryzVX5NPa8jg1MHlxNBCursMQUcmDvt0
mdaS4dXy3dH5N+k+MugNb3vH7z6tI8PdQZP/Tq6kdWVY2b+0h+orWl+GyRGa
2tfr6eEyzPAd2TbpC20og2pw95cLf9FGMow7bXxQs+Uxjn8ZPLe+WFXVjjaV
wSRscdudXWjIkBAYlrZWmzaXYXXyV+1hA2hLGWqvaMZ+1KfnyLD+nfnbY4a0
tQwNvj+MfUxoGxk227b3ngTaXoZ/80P2NFvQy2TYdP78tcvzaSeFP3WujLaj
1yjiay2utlpBu8gguZpc0XkdvVGGLuE6xfc30+6K50uv3SXbSnvJ0Ph3pPfS
YNpXhrcNGZP6R9GBMhTMvP7tZSItkGHNhFfZe6V0hAxT/k2b5ZpBxyieb4v+
yxF76AQZrp556/Y5lxbKUHzt4Nf8fFoig3ODyybfQloug3lSv6eTiul0GZLE
BtOab9JZMvTKrMq4dJ/OlqHP11MNkZV0jgxH/oyeOOsVnSuD/N8evw7v6DwZ
Smwdjtz9QucrvgdZbaX4F10gw+LAQc2LWx7n+Jdh/Hj1XtrqdJEMnb3mjqjq
QhfL0CZH0yRTmy6R4Xi/YRNXDaBvyTDm9lgjvaF0qQxzup8YXGtIlyvq//J4
l4MmdIUMIz4e/74JdJUMvb+LHxha0tUyDNI9d/jrfLpGhm0DxoedtKNrZbh9
s/t8vxX0exlGzt/cw3Qd3SDDC9dxD/5tphtl0ErfnnxxK92kqEef6eYRwfQf
GSw7bvsyM4pWkWPDzQ/b2iXRqnJ0zn9qdktKq8lhFT+xKimD7iBH/YpS7wV7
aA05OlTkte9+iO4ux4TxnTMe5tNacvh+zxuWVkj3kSPPOOz40mJaR46egzua
9LtF68rxeJZjQfV9Wl+OXud0jXdX0sPlaPna4fDaV7ShHL3djg/Sf0cbyRGg
NVpa/4U2kaNKs3PLQ79oUznUXFxc3Vrmc/zLcWzXyzuj1WlzxfUnDo5q7EJb
ymGzf3DCSW16jhxtD0ys8R1AW8sx7rbzhElDaRs5/OdI4/4a0vZymIpVH10w
oZfJMX7u8v5hoJ3kGDoldbW5Jb1GjrNRkt1trGkXOeZOyKwusaM3yvE32aFX
/AraXY74CZMXzF1He8nxr2tNeGc32leOlZY7j93bSgfKUfNK41lKMC2QY/SI
/m1so+gIRbyfewy0kugYOX5qPJ73REonyBGz87xbegYtlGPzmxFJjntoiRyG
u77s1zlEyxX1cpx1+WU+nS6H5clOj7ML6Sw5BFYB75yL6WzF+/UI+6N/i86R
o/WMf+3f3adz5Wjlmqt9qJLOk6PYaL+u2ys6X46rH92Hj35HFyjixXcZ8/UL
XSiH7Skr4xO/6CI5PK6sGufT8gTHvxyV8blGE9TpEjkixlcb/u5C35KjyebC
sHPadKkcPdx/DgwZQJfLET3ytubUoXSFHJ5+2u1ajaar5Jhi++BHsQldrXg/
k/e+igJdI8fM4/tvW1rStXLcsH53Qt2afq8YH3/q0m/Z0Q1yqMy7E5q0gm6U
I7lNx7XW6+gmOSbZBFh0daP/yDHrU6J++VZaJQ0FKtvUUoNp1TS0Erq/sYui
1dKg06LionYS3UHhgInplVJaIw2Tt2d4Z2TQ3dNg2/Ps3BV7aK00NB9+pTvg
EN0nDTXX1/5+mU/rpMHUaGVZdiGtm4Y2cp39zsUnpvwfxT4nYg==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.0005173392251874092, 
           7.278598932815522}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, 
                  GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxd1nt8y+cXB/CMouoW96AjKIoiKDKKoAiKoCOoiSpKXYIiqgiKoAiKso6g
qGLLKKpuQVFWBB1lLkERFEFZdcXP58nHH7/6Y3u9X+c5zznne/LM6oZOGTim
mEQi6VVSIsG/3X9cnSX//0f1//QsYmkRVyliWRF7F7G8iOsVsU8RNyxi3yJu
UsR+Rdy8iBVF3LKIWxVx6yL2L+I2Rdy2iNsVsbKIfyri9kXcoYgDirhjEXcq
4s5FrPp/G4tY0qVIvIglXYvEi1jSrUj8u+Un3P8OpBVuG79byXh3WsX4dwcy
3oNWM/7dQYz3pDWMf/dAxtV0MOPfPZjxXrSW8e8exnjv/7fxu0MY70P/wvh3
6xgPokMZ/+4wxvvSYxn/7nDG+9ETGP/uiYz3p6cwThv1jGvoqW6raMl0nv/u
SLdt38/PYP4AxmcxnzYamP89HsX8745m/kB6HvO/28h82kHbvnsB8wfx/CLm
0/IY5tO6xcynLUuYH8z7ljKfVi1jPm1ZznxaF8v8n1lvFfNp22rm03Yz87/H
1zB/MONrmU871jGflq5nPq3YwPwhbus3Mp+2xTOfVmxmPm39lflazvsb82n7
FuZ/j1uYTyu2MX+o277bmf/dO5hPqxKZT2t3Mn+Y28ZdzKdtu5lPe+5hPq1P
Zv5wt517mU+H72c+7fkH82mdlfkhbqv/ZD6tPMD87z7IfDowhfkjeN8h5tOx
h5lPpx9hPl3lKPN/cTsyjfl07jHmf4+fYD4tO8X8kW5PsDGfDj7NfDroDPNp
zVnm69wem+62nDad4330yfNu6+iSGbyf1l1020LbL7EeHZzptoN2XWb9UW7v
usr6dJqd9WnrNdZ323joOuvTl26wPs+/zWJ9uslN1qdn3mL9ULdvZbM+3e8O
67ttvPcP6zO+5B7r070fsL7bqvUO1mf++oesT+96xPqj3ecvPmZ9tyVfc1jf
bWOvp6xPJz9jfbrec9bnfSkvWJ8elcv6PN/0NeuHCdu8XKzvtlH6lvVp33es
77Y8+D3ru+2Iy2N9tyW5H1if8eH/sj7zn+az/hhhS2wB67ttG1DI+m472n1h
fVouOemu77b0px/ctrjtObaY2za3jXuKu+1wW1OihNuSscKGOSXdlrutKu/p
tsptT1tpt3Vu69eVYX16RTnWZ/7eCqzvtvI/Keu7bVJWYv1xwhmrK7O+25HF
q7K+22M3VGN9nu8jY3231Y1qsr7bXs28WZ/nR9Vmfbf1Y+SsHy5c+0hd1ne7
TOP6rC9srH/Sh/XdHmJoyPru85WG+LK+O24ObsL6wqrSoX6s7/bS0c1Zf7y7
3+oK1od11uvnaJWImyrWb8n6wuYXNWmjsOrHXTxvEbZFbGzB+sLGSV2asb67
Xo849ieZIOIXyrJ/ubBkawznU7kdMbMR67v9NIj3Gd1OvtCG9d33NdjbhfWF
VR43glhf2JG2dzDrRwjfz9OxvrCqXo1w1he29QrWs76w9Jr/DNZ3x5fHRLG+
sOkPTyPrCytOXF/I+sJJjxcvZv2JsLKil4n13T7aZznrC2dv6xjL+m4/ub2S
9YWd6XVXs76w9+jyZtYXvtt2Iu0QDolKoSWTYE9XHi0XVq/ttIb1hS0zEmmd
sHlK+7WsL5ydVnkd6wvLIrrEsb6wfpp9PesLZ0y8sJH1J8OGag02s76wbaEj
gfXdbvdyK+sLe5TbvI31hWVvg3ewvrC1R+2drC/s+f71LtYXDjtpS2L9KXC0
YlUy6wt7jhu4j/WFsz95/s76wjHFfv+D9YUD/bdaWV/YoQ75k/WFXYfKH2B9
Yd8/U2mJHlYO+OWg21Lhfu1KpLAf4cJ3B2mFsG3K1EPsT1i+PvCw2xrhwZX9
j7BfYYOqR6rbeuH2Ocaj7F8484YzzW2z8MegBcc5j3C0b5+TbluF19auZ+N8
wo5DrU+7bRcueXLwGc4rvL3l0rNuu4TH+p1O5/xTRT9tfjjP+YVT+gde4PzC
w94szeD8wiUfX7zI+YWTe3j+xfmFyy/uksn5hYOmRl7m/ML6aMsVzi8cXXju
KucXvtpyup3zC3etU+wa5xdeM2sNbRNW1a9/nfMLX6h6lHYID2718w3OL9y0
8ydaMg2edX9XFucXbr9o5N+cX9hzmM9Nzi/8Q92PtEr48/usW5xfeGg9Wzbn
Fz7Q/PBtzi981/PQHc4vbJ+Q9g/nF27cLP0u5xcePst+j/ML/5F57z7nF/7g
8fIB54eNu7bOcXB+Ee+QK3nI+UVc2mYxLZku9hHh+YjzTxf5fy6n5SJ+bkLZ
x5xfeF/gKlolzhdvVTGH84v48wEbaJ1wv6u1n3B+4eHn9tJG4VItOj3l/MJ5
D27SFnF/oXHmM84v4o1X/Ojk/MIBHTNpuzj/x/KFzzm/8MNSqhecX5yPuV/8
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
Q3vDfe/3aU7L4QP3RyhpH3jqzSldN536H0yM/uU=
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2HuYzPX///F32tgKTdmyRTUVtSQmkS3K5JB1qAZLmxyGNq1amYqsnIaW
1iEmxyUxFVqHGIVWpFFLK6eplCXVVMomaiqxIv2uz+txf/2u6zv+cd2u5+v5
er6O7/d79oZBw3o8Xs1xnM7VHed//+tfoq3zf/95/y9Tk+xKclqS05NcP8nu
JN+Y5AZJvjnJGUlunOQmSW6aZE+Sb09y8yTfkeQWSW6Z5DuT3CrJmUm+K8l3
J7l1ktsk+Z4k35vktkn2/l8Hk+zclxRPstMuKZ5kp31SPMlOh6R4kp2OSfEk
O/cnxZPsdEqKJ9nJSoon2emcFE+y0yUpnmSna1I8yU63pHiSnQeS4kl2HsTu
DxRPsvMQziRu7SXuwx1kr3UW7a27yVFrH/ndcQ/yrbPJt+5NvnUO+T1wH/Kt
+5Jv3Z986wHk95SDfvKtB5JvPYh868fIz8a55GNnMPnWT5BvPYT8XuQ/Sb51
PvnWT5OPvQHye+NnyMfBZ8nH0efIx84I8h8m/3nycXAk+TY+inzsjCY/h/Zj
yMfeceRjJ0i+9QTyH8ETycfuF8nH/kLyrSeR30cOTyYfx18iH3unkG/jU8l/
lPFPJx87M8jH8Znk40SI/L7EXyEfJ2aRj11zyMfeueT3o/488nF8PvnYu4B8
HF1Ifn/WYxH52L2YfBxfQj6uDJM/gPG+Tj52vUk+zlxKPg4sI9/PeJbLbuwu
oT9cvEL2Y88q+sfx1XIYR9ZQD2dF5Djuto76A+Xcd6iPp79LfVy+nvq4/kbq
48L3qI9TN1EfL3+f+ti/hfqD5Myt1MfXRKmPG22jPu76EfXxix9TH+8roz5u
sYP6eP0n1H9M9u2kPr50F/Xxz7upj3/aS308KUZ9Obj6M+rjY59Tn/b37ad+
rrzuS+rjew9QP5f8Curj0kPUp/2qw9TH27+lvuydFKc+/vB76j8u1/mR+rLz
4hHq48t/pr7sjx6lvhyf/Qv15eiMX6lP/oYT1KfeRQnqD1Z+5z+oj1f+SX3Z
detJ6suBPX9TX/bNPU19OTT5DPVlz7Kz1JedU/9S/wnj1LbOVtWXC16/QPbK
oYYXyn550d4UOSjnhqvLYTm2OFWOyuf2XCLH5SO315KdPOPMvZdRXy7rcTn1
5XaHr6C+3GBiGvXlq7xXUV9uWSud+vLJg1dTXy54uR71h2g81a6l/v8c3NW4
xnXUN/FohxzsN/a+vpz2QePg/mL6C6u/PrG61JeXnGA+cfnZBqyn86Sx79jB
e1Rf7uq47lV9+Y+/3bJf3nXoVjloHPxoSAs5LMf+bS1HjaOtctrJceV/3raT
7Dxl2s9e2012G7u/faA79Y2dvFHZ1Ff7XXsfpr6xd3nbR6mv9k0396e++vPX
HUh943iPjwdRP9+0H/dwLvWNvf0+fZz6xv6BdZ6gvnFw+K151DcOj6g1hPrq
b+VGHFV/V9/yJPXV3/aB2Blq+nsjH7uN46192GvsrV4X++Vxu+k/qPymY2x9
eYfH1lf7QX8x3rix02gXdp5W/APsNo6e2YO9xs7tDv35jYPNHrb1FW/xla2v
/vKDjDeq+KKcp6iv/j/w51N/mPGKBUOpb+yUVxtGffnbbgHqGwf/a/IM9Y39
Ta57lvrG4Yb1nqO+vL3+cOqrv2NXj6B+wOQvqvG87DJ2jzyI3QHNd+JI2WMc
dp/EXuP4JzcUyD7jaKvzxP3GzvSxOKD8wFz6Dyr/o3sYT0jtuzzD+MPy0KbM
NyI/9TvrF5W/e2uwHJN9rQYwX/mrhQ/JCTk89SLu/zPGy090l13GwfP7B/I8
ktvufFL2GHt//fIZnk+Kf9j4edmn/m73vcDzSg61GCcHjONnfwzy/DJ2Dx43
UQ6p/5QjL/I8U/8rXJPkiHH4yQsm83xT+5HrcUz1jmW8xPNOntcfJ1Tvm17Y
efZ/jr5yGXYZB3+ZTn9uxSfvo77HOLzgYCHzN3ZfsYbx+oydL33Mxy9X7GC+
AfV3ZxPWI6j4samsV0jx4lLWM2zs3Vj2LPPX+P4bO5T5K//Vpx9n/vIPf/dh
/nKTSzoxfzlY2ojz/5zx4mo8b13y+mX9OP/GwedG8nz0yF/04b571f7MUO6v
z9j7Xk97X+WXJnB+A8rf5uW+BhX/djYOKX7veHuf5ZSLccQ4eiqT/qLKH5RO
vZjG88NjjCeu/N038jxKKP7UZO6LM9zEz7zF+8A1XPlt7fzlny7uxfzlm1d3
Zv6y55o7mL9c2TGD/Sd+YUf2Xz49i/sWlP9plsP+y/8+2J/9l9ue5D5G5JtG
57L/8sBNg9l/2b86j/2Xd3bn/ibk6FtPcf5HGF/zdj7nX545kPPllj/ejj1y
l6+xV561FPvk9xtgv/zCAPoPyL/nUD8ov3Ql4wvJPy5g/GH5wDHmF5GfqcV5
j8onqj/G/OXVh/3MX3Zl9GP+8oxc1tt53jhjVE/mL2fHuzF/uW9JO+Yvl3zk
Yf5ycF0t9l+OfdOK80/+xo6cf7lBdZ7HQfnn/T05/3KXdXzfhOUX/urD+Zd/
eIbzGZXv/Y/vnZh8d759/suhKcQTcp/GfTn/I43Lbs7h/Mun+vfg/MvOGMbv
kf2f1uH8y3Pu6sD+y7XvfJj9l688OYj9l2s5dv/lMTHeJyHjYKKPff4p/ket
0ey/4v0OjGf/jb2de/C8jRlH26zj+RxX+8/O8zxPqL339insf4GJ/3rvNPbf
2Lv2upfZ/wL1Vz6D/Vf7ZteE2H/55TXYZxyPXfcK8zd2pw3BAcW/mYaDyq85
GYcU390bhzWe4n/pP2Lsb/0Cjip/74KZzF/jnXac8ceV3+h35pcwdkYvs/Mf
ZeJ70uz7zzj4Z3vWz614s9YTmL/intQxzF+O9RjB/I2dfl9z3/3y4U+4fwE5
PJffM0E5fcQjnH/5koT9nlT/8zL5HopQ74JRnH/5kVbjOP/KzxgwgfMvf3/v
i5x/edTaQs7/C2Z+W5ZP4vzLa+tN5vwbR5dWxx7j4JMDae+VX76F/nzGzobe
E7n/it/47XjuvzzjKOMPyhO+su8/5dcey++PsFw+n99TEXlxc55vUeV3nMf3
QUxeOm8s+6/xRwrYz4T8yz1T2f/RZr5Tq3GeXMbhv76exf4bu88tmcv+G0en
ty9m/5V/YvNC9l/xtP8Wsf+KV0tZwv6r/8KBYfZf7avVe53zr/YtV+OwcWBR
nTc4/8bOMB+OGvuLBuGY4o90wXHj2OFUnFB8/hL6d8aY/Nku7DL25vVnfG7j
+JB0xu8xdhq1fo35G0dr3PYq8zcOjjvF+viNw97wPOZv7L7kjjnMXy56z95/
1X87n+dNWP3VCXBfI6r//FT2Myp3WMjzMCbvncXzMy4X3Md9TMjR2Y8w/7HG
3o78vnfJWUe5j2656gDfSx55zcynOf/y1xdwfn3yiNncV79c8A8OyK/Y+xyU
v+/B91xInvwmv2/C8tIJfH9G5Pwt/D0gKrvTGjN/5rOE76e4HCx4mvnLGwIj
mf844++u4PvcZRzs+pp9/in+5/2sv0fxtP94vnrlKX3YP5983+rZ7L+84jj3
JyD/XYfzEZTXXcP9CaneD2c4T2E5YxXnLWIcrcjgPEaVX70V5zVm7H1gM44b
xydez/lOqH2rQfb8jzf9tZ9oz79xeOc47DaOt3kYe4y9z12KvYp/8Cr1fMqv
djH2j9f8Vyxm/qp3vhrzCaq/Mzcx35Dav1NnAfOXrzrE/YnIs8dzf6Lq71BN
nlcxY2fIlbwP42r/zYU87xLy26fYXydo2v9xnvuTKn8xgPvjkisH832aLpcN
78H6yFVOF53HDDkyyf5eknt15fdJprytDb/3vXLJv/z9IEvuWDCa+ySvXzhG
zpFrP4z9cvTNF+Q8+exo+/cGeXSc+1kgb4nYv9/I3nJ+3xQx/nhn9kMO3sL8
i+VHfuf+hOXSz/g+KJFbO0XsF36S51mpcTR9NPsVlTtu536Uy+eqs/8x5R+6
g/dJheLxtpz/uPzlZZzHSrXvnWuf94pvLn5TrjKOp65Yyv5P+J/ddWYtY/+N
nZndl7P/xtGLf8bpxt4DD77F/hv7z0zDGcbxGouxR/1fOxlnKn9XR+xV+yu/
o/8sxZ/Nxj7j4KcljC9H9UZ/x/j9imedY355xuH2F+KA2r9VxfoUKL4ubt+/
mm+t8axnkfq7pzn3M6TxTP2B51Ox2reez/MrrPaDHuZ+lih+phH3M6L1S1zJ
fpfKbW6036/Kn7RqOvsvj3ia521M/m8B3+8V6n/PXfb7Xu6cw/d/pdpPP8/z
PCE/1gJXyb0c7Ew0XvIETjV26j/NeXYpXvsq/r6TLscG8Pcgt9oP7cx5z1D8
1r18b3vwzzyPMuWr2rMeXuXH9rFeWYoHQ/PZf2OvZzTrn6P2VYXsj9847O7O
fuYZ+1/4kf0OGEcfeo7zUCA/8A/nJ2jsvuFZzluRvGg/5zOk8fxSbwX7r/yd
7Vay/6q3u8Mq9l/jGXndavZf8d57cKnyjz/0Nvuv+b22DJcrPm0vjql+4S5c
ofjR13Bc/S/uhCs1/it2US+h/m++FVepvyZPMV7nRTPe/TOYT6qxU2ch83UZ
B6u9UsL+G/s/GWnvv3G0oAfrl6F4WkPuq0fx0X+x/pnG3tHbeD55qT+L/cpS
vc5P2fep3Ok13p85cmCC/b5W/5umcj7y5Lej3M+A5jOmMeepQPGte3neBhXv
9C7nr0g+d5jvl5D86UO4WPmv1cZhzWdQPVwi//M8jmi8zW6g/1L191o69aNq
P6sPz49ytb/gR8YbU/vgat4HFWqfG+F7Ia7xXHSU+1Cp9ikNWL+E2nd/nPWt
Uv/H3mH9nULjdqnch1S5zM/+uYzjn79nn//Gzo5UzoPb2H/8Qc5LRqHmM4nz
5DEO1ynhvGWq/bl1nEev6t2xhPObpXjj/DXsv5xy1Vr2X/VXLcR+1dtXhfOM
PSfqRth/fD0uMI5tSMNB4+iKE+QXyQ1m4JDmf6gmLtZ8WtrxheWUtYy/ROMZ
UWHvv7G72nHmX6r+/CdYn6jyh8ZZv3KtxzU7Wd+Y5v/4Ku5bhdx9GvsRV38/
5rNflarXIJv9TKi/Kzva97/Gt7a93f9Jpv3unpyPVGPnslGcH5dxdMJQ3o/p
xsE+13Mf3cbeS2py/jLUfsmd3E+P4hVhzmum+r+7K/bKrVriLLXv2c/+nlTc
uw3nKH6yn73/qre1GfXzFH+ouf3eVn65n/EXyL/0se9/Y//hK5l/kXG407f2
97jaZ6xjvYpVb8w01jOs+INPst4lWs+1XdiPiLy5EftVqvxXUtjPqNYzuwKX
azyN3rD7bxxvP4DzUaH46Zqcn7j8eQmuVL33PZy3hOLV3sRVGm/Befv8n2za
92vHeU019vZ/GrsUf3EiTjcOXj8eu43j5bk4w9j/UAvsMY5u/s3ef+Nwt7nY
K49qhLPU/5+rmY9PXnwDzjF2Fk5hPfyK33aU9cpTve1tcED+ZTrrW6D8FofY
j6DiD95i3/+a/4nn2b+Q4uW72N9i5c/JwGG1/20m56FE7buk4IjG9/lLnJ9S
+f769u836u+njzhv5XLfMTim/j7JwhXy1ltwXPVz0+33v+Kjr7a/d+UJjezz
X/7wfvv79yVTb+Awe/+Ngy+9bn8Py49+jdPl6+oxfrd85wCcYexttRx7jKM/
/YYzVa9lJuvjVft7J+Astb9zJ/Yp/vhlrHeO4lf1tN//8quzcZ767xDDAeUP
TGU/C9T+gdY4qPYj83CR5vPETLv/yv9sLS5W+zk7cVjecRiXKP+dX+z9V35F
Apeq/Y9/4qjaL7XxcsVr/Ipjiqf8iCvU34KDOK72m/fZ57/m120HTih+xVZc
JS97DztFxvnv2t9/8sJ19v1v7PW8g9Pl6huwW96/CWcYB9tE7fef4l98gjON
ozfHsFftd1TgLLnL99in8fSx65kjb7Dr5Vf7O0/jPMUrzuGA6q26gPtdoPFU
XGTvv9rPvNjef/VXoxYOyQUuXCzXScNh9X9BOi5RfGB9HFH/3hvs85/1vRlH
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
3ELxj/JwpvqvOwy30XzWPo69Gl9RN9xB9f+6CWep/5nHqd9N8ey3sE/5k3rh
bNVfU8V8cxSfPgv31XiqN8R+za/eO6xfrnywNc5T+0fL2I98jWfHAzigePtD
7Odw7aeTjwvU/uaL8Bi1/+wtzkdQ9S7ojQs1/kmX4yLW92vO33TF39yIQ6r3
6ht4jua7PIyLle9bhxfJx/bjsPJnXkq9pYrf1AuXaL+6r8Or1f7F65lPRPHv
F+P1Gl+XpqxPqfp7ZDfeovk/NZL1jSq+6jb2o0zrcf0JXK7+17zL/u7W/jcZ
z/mIqb/eD2zl/mt8B+p9yP3XeNpX4sOqVzsnyv2Xh5biI8a+f+ps4/4bh0YN
wceNPdvfwwnjwFf/4pNa/713f8T9V/zsUHxO4/tyHnZm/c8RZwNOMY52Lsep
xp6lMVzT2HfrXuxSvME2nGaccFbidGNv7hRcX27gx27jYOdmuIFxKLWK+WQY
B97bjJsoPzoae4xjs+/CLYz94VOsZ6bceT1uo/wfn8Ne1Vt7J+6g+a87y35l
Kf/QHNzN2Hn7buyTl//G/mcr/+t1OEf1ThfivmqfmYf9xuHxj+JceVB/nCff
FcD5yveEcEDj832Ah6vejFO4QO132/GOUX8/FOGg8t/6Dhdqvc9cx3oUGbuy
u+Ppcv/JOKT1W/QBnqPztMSufzHn63b2Z5HOT/98HDZ255Tgpep/6hFcovV8
yc35WK3zcvBRHNH5OzMXr1e8uz2fpZpv25SPuf9qX7cVjmp9Gg3GZTpPn4Zw
ueIDNuLdWp8+X+GY1rtLAu/X/L66sIz7r3iZCx/Wep25CsdVb5z1Ea3HhMtw
pebfsxo+bhx/+nfqJTTfJw/gk6p36n1cpfXctxCfU/76kdiZbdbnsR44xTg2
81acauz8fCGuaeypddjef+PQivX2/ivfP8Pef2PfN0Ps/Tf2xjrZ+28c/TPD
3n/jYLXaOEP1Pzht779c8bO9//LZr+39V/+bDuBMeeYh3MbY/b09X17VP3MK
dzCOX3I59bOM/Y3vwN0U9/XDPtXvNRNnq79K+/zMUX7xxaxfX8V3+rBf49v2
Gs7V+Ers/uap3uyO7H++1mf6YhxQf6+cwcPV32u9tnP/Nb5l6/AY9f9qzR3c
f41v2OO4UP1dvhkXKX9EzU+4/8qfnYNDyh++GM/R+O74BhfrfF2YVs79J94O
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.024667499030556428`, 0}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageMargins->{{0., 33.636363636363654`}, {21.818181818181756`, 0.}},
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Input",ExpressionUUID->"1e227e83-2fe2-46e7-\
985f-fd77759490df"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
/ZUvHWvAIQvEKCheUDptN80nzxTDp//h7Y2WZKEYGtuyW5rraX66RIz72tPV
fIRkuRizjT687JhNzmfas/kT/6uO5r8XiNGtx5BrNkJyoRjn05/YXZpDLhLD
P37thhlvaT79ETGKx1ptPCAglzDHu/vpgaCJ5FIxBj4Idd5QQfP1y8SwNB1y
+6U7+bwYKcsendzym+b7K8SYOPcM71AOuVyMYaO81pweRa4QQ5gUd9rqJK0n
uM042Q43wa43EMP6zqwuF2/ReoRqMcy15NxHXHKNGNUlITbaD2l9wwumPYNy
1xfLyUomv7uPbH5/h9ZH1DH9T3O0cKINuV6M34HnTA9fpvUWX5jr49SFXmNN
yY3M+fE9cOhqKa3faBEj3e0Sd/AUchvTvyYeSqxdQutD2sWQj+ZkBM+h9SSc
XLRuW7WnbAytP+mei6acV/nuqrReRSUXVwV1d54303oY1Vz0e1iQ++UprZ/R
yIVOveY7r6u0/kY7F6VFn/+7W0Lrd3RyUeV/aPufPbTeZ1guhBf8Ci9vpfVC
ermwevlwfnUurS8akwuj0msp+jm0Hkk/F42W75tfptH6JYNctD2Z7aGfSOud
DP/XvtMBYRStjzJi9n80+Hx7Pa23MsmF4VnB6761tD7LjNmfdu/U889pPReY
48sx1tFX0vowq1zoRQfG13ym9Wg2jM9s177XTusnl+QCUzQfP1On9ZjcXCgc
n8q9RtJ6UAdmf6k1Q7auofWtzszx9KhRjfWj9bWuueCIW5I2xRhT/2fqWxkt
88qZTv0/F/wu/xnHONN6YR+m/arZi2ccHUv9Pxc844AvNtOGUf9n4vv2M+mm
aR/q/8z+XHdM/dWd/r+g8Fwo7096M8KO1vtH56JA3+TnpRBar83PhYaiTsc4
XL/TScz20+9LlroYdlrAtCfoPrM+x6jTmUw8KxPdLz816bSQ2Z+b5GSk4dxO
S3Kh0nsx52IFOi1njt+m58nKjvmdzs+F/yOt/PNY0OkCpr5PYtianIWdLmTO
T0U38ZmGRZ0uYs6Hb+trV96STh9h4psx+vqwOrtOlzDtSb/16/iP2+nSXLT/
aLKHqn2ny3IRLrSL2s9b0enzuSi6NXrUnDMOnVbkomZV/zEdao6dLmccMW2I
t49Tpyty4Xz8qntjuXOnb+divuFvTd1xqzpdlYv9CT17SjNXd7qaOX6NmTeu
/3TtdE0uJsxR6a/n5dbpF7nYyU+7sPnR2k4rc/FwLSdu125ep+tycWnx6l77
Hdd1uj4XoyZOWt6o4t7pL7mYeHzM4bFl5EYmnnjhLanH+k635OLAhUWbpqp7
dLotF3Znf33VOEtuz4Ua/434t7tnpzkSeB297/pJ1avT3SVIaTznPPM0WUUC
28tbNT+t8e60qgStypLJht18Oq0hAS/He1TSPrK2BK9u31n50Mq30zoS7Bm3
bF/Ca/IwCSru8J3cozd0Wk8CZXrHlpSBGzs9RgLfQ0ev/Swh60sQ4aKzwXrJ
pk4bMO1tCdSZVU82lGBMr2XnXiZu7rSRBNEZj1fqj9jSaRMJImNnVAacJptJ
8F+H7fCrS/w6DQl09omvXHtNtpJg92D10zam/p22Yc7H5NDK2SnkJRKcWPfm
lOsDMleCieUrqk31AjrtIMH5Hx/2jPcnO0tQ9XXhmeFXyK4S3PIbt//6gMBO
8yR489E5p2AD2UOCrAk3J9kpyD4SHJ23trJ6YFCnN0nwvrUwdvsWsr8EKn+K
4mdXkIMlSJ/zcsC8McGdDpfA9VIQTyORHC1Bi8ePEQ/ryHwJVq2d9tBnUQj1
f+Z4Z5rNCCwhCyTQlgqHrx0cSv2fyX/TDz9xIlkoQftz05atDWSJBPojk+au
XxVG/V+CPg0r0nCDnC/ByNsWBw/NDKf+L4F7xt6XDfvIhRIMM51xiaMTQf1f
gkMtviGRGeQjEvx6e2HPqQ5yiQTPHcJOfwyKpP7PXB82UUsWfSCXSaA37tEn
XZco6v8SmLyKG9xcQVZIsCsod2u+cTT1fwkyok1HrttDrpAg8fV/iTdUY6j/
S9C9v/3xpaHkKgm4ZyacG1hLrpbg7Fbfg4+tY6n/S5DwObzbvyPkFxLszHua
1aoRR/1fAnGCTIsbSK6TYGXmG7WaKnK9BOXP3CctH8in/i9BuIXscTdLcqME
V2d+U7m9hdzCXD/T9xxs30puY/LFCfv7uJzczuTrQ/KvDd/InDz0ddlTmjk4
nvp/HhY7TTX9Np+skocjGzQ+2W8kq+bByNtMd5+YrJGH4NPHa7qfJWvn4bmu
d8PpV2SdPHw5OvrNgO4J1P/z8HX3mdMJE8h6efBZxOc7LSOPyQN/3Ya4ZyFk
/TyMTf7ze9oOskEepiy8e9n1GtmQOb7HnHNGDWSjPHBm7N8VOyiR+n8e8oXz
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxV3HlYjN//P/BBEkJ6hxBGkqwlIaSeCEWRJFnSRCtp39dpn/ZZqpkoyhqK
EEIYFFmLQkhCCCGEUPzuz9Xr/l7Xzz+ux3Xm3K/7dc59uu/7zDkzdrOXtXNP
Dodjrsjh/O//7n9tJpz//x9e1U54m/ent3E3laA55aNRhoo2WQWjl2VMDH1v
SFZDQteEg8PnLSGrI2bNEVm75yqyBpxCXv7p0l9H5oJfOnbKl1mOZE3MeTI2
94fIhayFA4cKz14o8iBrY9XEmlkXK3zIOpDv/SKYmxVAnoSALxGnOqpCyFOQ
uuvlKk3HSPI0+OvOMfQ7Fk3Wg/LhpV7nHePI0yF94uPU2yyRrI8GzcLaz5uT
yTPA33xggMbJNLIBGpb56UpzheSZuBawJe1NqJg8C24r1Ytr/DPJs/Hn+4Wq
I8nZZEPkHN/uUl0uI89B4449FzL77yTPxezxocNtg/LI82D9pd+Z2Zx8shFK
Cp/N3r26gDwfS2JeLhh8eg/ZGP0+fpx8ccI+sgnWrhg/41HhfjLAlQWnpc85
2G0+MHe/8+ZhTwqpfAHO6i/N2J98mMoXoPz32YvblxdR+ULYqz+5uV/jKJUv
xOnhvXzj/h6j8kVQcHxUlt9RQuWLcEAwvCb593EqN8XohhKbUb1PUrkpdvc9
tDdAvZTKF0N41+fccYNTVL4Yf29sVm1bd5rKl6B2GPf0SsEZKl8CXmmISdul
MipfitDB01994Zyj8qW4Nt84JmD5eSo3Q8Xys6m5u8up3Ayn7TLGJ3VdoHJz
aHVo9drkfInKzVEpmbt09zY5lS/DAt5g94MTL1P5MiQvaL71uJXMWY6hw3+M
Nz91hcqXw/FrV5pS7FUqt4C9T2bSZNsKKrfAiF6/vlZOq6RySyi9Cx7cqnyN
yi3Rcm9/zok2MmcFPl/I2zPtyXUqX4GDvp4lATeqqHwlzngZn827eIPKVyL2
q9O4C2dvUrkVwpZZ3n1/7la3YQWrKZtUjK/cps9bYdqyESfvVt/pttwKtV+K
Bp56dZfqr8KB4hHf+v6tpvqroGWhvd4vo4bqr0Li7Ow8/XH3qP4qNGrM72F1
jsyxxsPrdgqPbe5TfWuoClP8nn4l862xOY6/1Tmzlupbw/BMl0X8nDqqvxoq
ZYr3zF+SsRoLm6MUr6Q/oPqrEZe63bLL+CHVXw3dx2PX9f9G5tjA7vm1BZ2H
H1F9GwwdGxXc5FJP9W1w++vn6irtx1TfBurtt4KvvSdz1qC1Z+agDyeeUP01
CCz+L8cs6inVX4NPfaz4X1Y2UP01SFtklduh9Yzq2yK4eY+hz18ybGERFzzS
q6GR6tui7tf4WMVLz6m+LWyC/FS1VzdR/bXI/hq+Y9INMtZi0uU+Z3YueEH1
18I3yzIprpwsX4u3XwtD2+a8pPp2iDmxYf6Hs2TYofKn+22+0Suqb4ei5VZe
Fy6T5XbI8F5XXmzeTPXXwVJ/fu6mOjLWYdM4ueUzx9dUfx3e+c5xnf2VLF8H
M82PD0Pj31D99Sg5/PvNqZFvqf56bDeJWfSzlMxfj9+Ptf5Yrmqh+uuxzC00
5kYbmbMB/kUGZ0Mk76j+BiyeYvrBc857qr8BS1UyHpx9SZZvgGW8feG2jA9U
fyNyx7YrZ5u0Uv2NcC4MnLz8G5m/EW0SUXHe4Y9UfyM8NO3k+c6fqL49dg+U
jnDT+kz17bFnupGC0lsy3x51RyqO3LRto/r2mH4mp0K1nMzZhFXz1Ne6jvtC
9TdBP+LkxdpUMn8TTPbsOrKlgyzfhILKtvHjXL5SfQeMOjBXPPohGQ54mapS
utnsG9V3QMay48c7y8lyBwhFo4f+ntFO9XnwTejx0K2YzOXh6JB/q9dO/E7H
4+Gx1YwtdQfJPB4u8q5aftb5QcfnIczofP2ZInI+D1vrlpgZz/hJ8XjQt/7l
JCknN/FgVxsWVWXWQfEd0XHDPujzIzLXEeETt18asfUXxXdEnP39Lfb/yDxH
WPGuD74l/U3xHfH1NTSCZ/yh+Ez9fGlMyH2y3BGHtd1/Nvt3UnxHLBuo/K5m
RBfF34wlt9wFNhVk7mZ8jWqsTvT5S/E344l2QEqs5j+Kvxn8HUu3OD4i8zej
qF7vyygzTvdzU/5mqBhbL5AeIMsZ99N6MqlPj243bYZx2nH/t+5kzhbkLwta
2XCXzN0CxcMxBsNn9ew2tsAwfDz/6G4ybwvcRmWOL+7fq9v8LZjS3nZKO5Sc
vwVaq/Vcp34gy7cg1XbqyLpNChR/C+4vNnKZ9oDMccLNf0XZVit6U3wnLHFS
ubDyJhlOqBGNLl1grkjxnaCs/3Li/FtkvhPUXPcdXGfVh+I7obBH+s5j9WS5
EwSrhJvtnJQovhPaHNxXeX4jc5xRl7/gknJCX4rvDLOFY1SsNPpRfGc0DAu/
tOY0mecM08LYbUY2/Sm+MzonHnk+7gc5nyn/T8admqtM8Z3B/Xk9MHTJAIrv
jClf60J0v5M5LlDiLR7pUziQ4rtAkGd83Jk3iOK7QONHf/6OgSoU3wUGUr+x
cV5kvgsa3LvUe9eS811we8nquBlzBlN8F9RwSxZp7yE3ucBoxIFf7QNUKb4r
/LNW9y0LJ3NdkRnqKRJ8IsMVGhcUXPhb/qP4rnAS7eh77imZ74oW6w/7rdaq
UXxX8Hf3V+Y9JMtdUe/5uFJh3RCK74qafQUrNj4nc9zgJp69K959KMV3gzCv
Ys2en2S4Qb0p6b/HScMovhsM716/uI6rTvHdULXy/DOn8+R8pr6H8nXbDcMp
vhsEdyR/TnFGUHw3yLQfb0cRmeMOFcWvVZ82jaT47pDNTt7QPFyD4rujPvD1
p6WNZJ477OaKGlWKR1F8d3iHGd5+nDCa4rtDqSDYp3rbGIrvjqrv2Usap3Ip
vjtarvMuDz5C5mwFj6sxedrUsRR/KxQmf+/56CQZWzHhY8nxEmNNir8VH0RG
41zvkPnM50uT7h13GEfxt6JM7dDsNd/J8q0wOx4gH5uuRfG3Qj5V269t4niK
vw28gDEBeVVk7jbo9c5v++uuTfG3gXNxxL1nAyZQ/G3g6uz98P4kmb8NTe4N
M05u0KH428Df0rpsp8JEis+U33T+8qyY3MQcz8GwNs12EsX3AP9A5NicLjLX
A5g3JvhOwWSKz9it2eLpgikUn7Fjqv+6BjKfsfio9U2vqRTfA5w/fz0O/CbL
mfJTxyI9w6ZRfCbe8D2VV9vInO3gLBDExqzTpfjbwd/0zaq+lIzt4BUZf9Tp
oUfxt4N7vqLwM5fMZ1zfFdUyh5zPfP7hcAcXC7J8O5pyDng/syM3bYfQ0n10
nQOZ4wnubPnFu45krifyQ+t857DlYMoLx/Rcy9bnMeUHzz6dY8nG90TJkOqk
6/PZ+J4I9trucGUiG98T+p0xlrUqbHxPNLx/3Wfsa8qP44WSzgETOHls/l7g
79xYNc2Mzd8LNZcOGPq+pvbieSG/13NzVz8y3wvcm++exrex7e8F7Ass0t3A
tj9zvLtHr986Tv3V5AXOrpX1r79S/3K8wdca9NZsFFnFG/KVIzcr67HXA1N+
dKClcBJdP3pM+QXN9z7KdL3BGxytodv4D+h6tWLs9+r36Xi6nnnM5xeFLDEe
Rde/N1PuFRIdkMuOH2/ghff0Hgo03oRMvKt6kjOH2PHM1D9UN/wql/4+lDCf
f3M3ocCb/h7JmePlvv/ulUd/D2uY+osvHXRZS3+/m5jyh3Fv5oHuR21M+aMZ
Y/hd7P3fhzkf24Ge3vR8qMIYE6+6frxzsTt/H9TMV+ni1rZ3W88H+GbT+vlP
z0vd+TMuuhZqnd6/21Y+4D/UGPBaWbXbPB/kyznQtxjabW/m82dNF5+PGdFt
PuO+w6QtR0d3W+gDbl/xmzbXsd3OZ+ornRlS7juu2yU+kKe7Lu0ZPL7bch/w
9h0TaQVP6HYN4435zsf8Jna7iTme5O6zNdsmd7vNB02Ltsz65DC12xxf8F89
e7vNWrfbKr7AyM4l7wv0us31Ba8uvTZ7x/Ru6/lCb+yR1OMSfcrfF0Jdy0FZ
aTMof1+oTN7j4y8woPx9UTPy8znbuJmUvy86vh/NGxE9i/L3hZ3kzqTYyNmU
vy8ydz5VMw03pPx9UdYS5dIvdA7l7wul6eO/RgXNpfx90Xx46p5l/vMof+b8
z4zJ7+ttRPn7Qn3ax1HWW+dT/r5ou/XHqnizMeXvB2wQDs6xM6H8/cD3Kxt5
bTwofz8IB+WYRuWR9fxgeHjDdcP/FlD+fij0FUwtTyBb+THXe0Tm059knh84
8f7lXi4LKX8/tO1bu8PmPpnvB+7ofjNd5i2i/P2g4jL5YGQBOd8PJYOeRwco
mFL+fsgfPjyW60SWM5+PrI5bIyfX+EHAnRX7UX0x5e8H7+CWDVXbyW1+MBPG
ptVcJHP8oTfrntPf/ksof3/UK9Zy7NaQuf64Hew14OsOsp4/lMKFzz82kOEP
9U+ux4NGLqX8/bHo5NGfFbZkHmPRiXeqGWRvf7R+5I3cX0Hm+yP55MXWqz/J
Qn/4x6xIOqdjRvn7o7lh1/y6teQSf9g1/Bm9Lp4s90db31iX5OPkGn8UBtds
2N1AbmLOr6lD76qiOeXvD06qu90QPTInADWDxH2P2JFVAtBx+Nk9EZ/MDYDK
t8yg+wfJegGwM1181e8uGQGoOtasENFOtgqATEllQcfwZZR/AJSuTPv2zZjs
HQCu7ZnpcVvI/ADw9TtfXEkkCwOg3vvi9btHyPnM+WRh/41qckkATNPW6z78
RpYHoFAoezdUfTnlz8QrLN9z1IjcFIBl3++1XHYktwVg0piIH8GJZE4gojhn
knscJasEYkqFTYLwAZkbCP6uVc5b/pL1AtHQa+7pyzoWlH8gWkqupP61IVsF
Qk9iWxgSS+YFwu30zdLdpWTvQJgdcA1taSHzA8F19BhRy7Wk/AOR39kz8vlG
cn4gOItX+CTkkUsCIVcZZTDjFVnOlF+f8sx42grKPxAlT7zvfIwkNzHn7zA/
y/MBuY0pjxyS9Hj6Sso/CLznf4P0MskqQRD6/7ba1EnmBkFv2F//kTOtKP8g
tGywrTzvSUYQnConpjQfJlsFoePKscjN78i8IPiabNb4O3EV5c8c7/xjaZQH
mR+ExQXWDidKyMIgeCe2r3H9Qc4PwpnmDYcD5ltT/kEofr464Vw8WR6EkIFR
/4ZVk2uC4Bl9v9Bv+GrKPwgr/t0fd8qJ3BaE3Jjf4ytLyJxgYFxGQFoXWSUY
hseHzfq9zIbyD4bG1qHLO2VkvWBYvRM3prwlIxgGfb9+PTRrDeUfDO4H50Re
ApkXDLXF8oLLD8newVC3Uf7zeoIt5R+MjofpLz6EkIXBKPk3LvHHbXJ+MPRK
PE9MHbuW8g9G1bs/KRcCyfJgtOluHf7wDrkmGKZPjeoOadtR/sFo8n3RujWa
3BaMhvhhq5Y2kjkh+D3dfo/T/HWUfwhOSPPnPdtF5obgJr9deqnneso/BHMX
zq0Y5E5GCNIqTmrcvEe2CkG630jvN0YbKP8QCMtn99twmOwdgqgjaV5jRmyk
/EOQOmdp5bRUsjAECZ7B95M49pR/COIibD0Mg8glIcgd/FlhWRtZHgKzwsqJ
D7ZtovxDULZusu/3d+SmENSZ7553Y6sD5R+CqqT7Zz0/kTmhaEp7eoI/l0f5
h8Ilv/Df8igyNxQtxuuFBZVkvVD0O/NuXMIAR8o/FIfX9Mn+bUu2CkVqhv2e
PwVkXihGu527HP2J7B2KzWOaxkcbbab8Q3Hu8tNn71LIwlCsWP1ifGEDOT8U
ixYc+bpv2hbKPxSu/2X7XIsmy5njn+25s+0BuSYUMZOSDvSe7ET5h2LK7UWb
3/DJbaGYsXyJj+8jMicMKvdMkgTTnCn/MPSf5lOpmEDmhkGpU2vqrWdkvTDc
qUkKKp3pQvmHYeD4V5y9aWSrMCj4PD4d8prMC8NRI/vzo+e7Uv5hqJjzwS4s
k8wPQ9zk4uawD2RhGNLbljoPWuhG+YehsaCX+wQZuSQM700OKJR9JMvDUHjU
uP7MQnfKPwwn/rgrcaXkpjCI38jHtr4nt4XhosW9N8ONt1L+4Wh4PXXEISFZ
JRz8/tN4O1+SueEQ/PFf2z5jG+UfjrjO+JazcWSEo93kanV7HdkqHEl5B8tK
tDwo/3CMf83d/8eP7B2OzIHlzc1XyPxwfPv87UzY4O2UfzjMpDYKdx3I+eGQ
Pfdb9raYXBIOnaYdb6r/kOXhWHQoPTfV3JPyD8cY9b0uo6XkpnAUlWYIYprJ
beE4JPRpPjHdi/KPwMQL7dkHIskqEZjPuya3vkXmRuB63rq6B/29Kf8IjLnp
27t2OhkRuLlUfVbuWrJVBNqNIsdMiyDzItCisG914h6ydwRmDfRwLbxO5kfg
n/vxl5JWsjAC+jH9flsO9qH8I3Bo/eLBDTPJJRFwcTsy0HQ9WR4B9XPR2SmR
5JoI/M0dZX9mD7kpAoV3KwtuXiO3RUBx/sje19+TOZH4OMayqGigL+UfCfUB
HeGh+mRuJDRcDvpMsyXrReL5o7mdlSFk/K/8W4BxHtkqEk1jXhzIkpN5kVA+
q+l88xXZOxLjynOXPVP0o/wjoWmd63lvIlkYCe3hF/4UWZDzI1FxusI7xItc
EomezufNF4nJ8ki0+LVMGH6KXBOJuvGap/vVk5uY+ItDIif8IbdF4kyK1e+I
0f6UfxSGzr7VNGIhWSUKk17326vkQuZG4cSbQ71WJpP1otB2fOSFr0fJiMKm
8dNMvteSraIgXpSw1+YXmReFj4PCeiqPCaD8ozBOunah2mIyPwr7cn9aOG8j
C6NQM/GL1U8ROT8K5vZd56+WkUsYP590rfI5WR6FlA3fC38rBlL+UfjpefyY
4zRyUxQqKnaYda4ht0Xh8KrVY+9GkDl8KKatXfhsP1mJj4bbnGH6d8kqfIw9
Osbo0Q+yOh9Wj2f8qB8TRO3DR9ZaKzNTc7IOH+ddmprH+5H1+LiW8bR3Uh7Z
kI8fA0Z8Cawigw/h17DjP76RzfhobtHSGsANpvbkw3fiWvULFmQ7PmSm+zf3
CSXz+NiR8az+/UGyGx+m5W7TnB6SvflQy+g6s713SLeD+TjnZ6jxz4DM58M7
ZXmvAc5kAR9bJ5x8LcgiC/lY0rxV0/EaWcaH1ojFPtE/yfl86LToFdfqhHa7
kI+2URllWE8u4WPvxHjz4ynkMj7maUeEDLxAlvMxfvrskQs/kav4yDgubJ01
Joz6kw/JLe/K+pXkej6e9F/fqMYnNzH9E9ti/OQYuYWP5OJ7FiOek9uY/H6a
2d4YEN7tDj72v6pvaJxH5kSj2fSv3xp3slI0xvfcN39SNlklGuuufzLdeIWs
Ho3vdZPaPnwkc6Mxd739kSfqEdT/0dDYkntm0iKyXjRUGrYPfe5BNoxGj/33
/P9kkRGNxfmZ/eMuks2iwfNy9ol4Q7aKxuD5zzxbB0RS/0fjiNbplgcGZF40
zjr9p2SygewWDbvN4bumRpO9meNdW36y8AA5OBojzt3tKrtF5kcj2KZ0jHsb
WRANgw22uyvVoqj/o6Guf7GswZAsi0aRQuKwixvJ+dF4mKKXFMonF0ZDNbV5
77h95JJonEhV2HzrOrksGncVRp2J/UCWR2Nl5X/DjvXhU/9H40Dwi9unhpNr
opFW/IzTOJlcH42uxzcsdY3JTdGo7xP+uMSK3BKNttU/bdy3kNuiwdGY8GdT
ILkjGmEFA7KlSWRODPpkpqSo55GVYlAZkfP+TQlZJQYKf3V8+lSS1WNwIyIg
PPIxmRuDXeFBNSs/kXVi8FR3wLTIXtHU/zGQ1drL+w0nG8YgZb6eqH0aGTEY
82DWHMPFZLMYHN/o9L56A9kqBr2Xv6w66Uu2i2HuB+68J0lkXgy4Pff3m1NA
dotB5CahfkUZ2TsGB966hnjVkINjoDXh4+2pLWR+DDAiKvHLP7IgBjqqpSeK
hsVQ/zPxQ+9ErNIly2Kg1mHy8v4Scn4MpjgXWY/fRC6Mwcr3arNNAsglMchs
/K48PJVcFoPN6yP1i/eQ5Uz8yoi4n2XkKqb9e//uar9LronBN+sY373N5PoY
+N/jePX4TW6KwYoPc0wHDoql/o9BbvQP3ZvjyG0xUKn8lTPLkNwRA7Fc3drW
gsyJxf19j49N5ZGVYrHntGHkFT+ySiwGf+WdHZlIVo9Fx5ND2gt2kLmxcNl8
+MfcYrJOLAw0d4UOlpP1YqG9xrD99n2yYSyuX54XGPCajFi4W3y+r9pBNouF
bmlBalG/OOr/WLxf43/VfBTZLhaF20eN+aJL5sXCrufxo4ULyW6xGNRZfilg
Ddk7Fo3WV49vdCMHx+JEH69aXhiZHwvTXyqWcelkQSwmV9/TriogC2Mxf3js
limnyLJY9Jx2YWxJFTk/Fqobqy6saiAXxuLDhYPvB7aRS2LxdsDSyuZe8dT/
sbh9g/+xehhZHgvxTs3i25PJVbEItz0165EJuSYWIwx+/vuwmlwfi6fjD41U
ciM3xWJs//vJE8PJLUw+dhqzVwrJbbG4YvL5WvA+ckcs5vnPWXGgjMyJg1aD
Us/622SlOIToHPk14AVZJQ6fb3n/W/qdrB4Ht8P93eP7JlD/xyHukcLHilFk
nTjoP1P0UdAn68Uh/9LgOiwhG8ZhSqfT9YD1ZMRBT3FYdZ4n2SwOF+8MTjsR
Q7aKw92+MxcXZ5Pt4uCT0xmWeJjMi8OM0z3D510ku8XhTtr34op7ZG/m/AQ7
L415TQ6Ow6/GmqJlHWR+HOSeZWWm/ROp/+OQOGcKb+BosjAOP6JMlx/SI8vi
sLmpc7b6InJ+HB7uda7ZtIZcGIfAC1vdol3JJXGw0forjgshlzHtfariiEcK
WR6Hoo9TvOfnkavioNsadfrXUXJNHK6Mvmu1V06uj0N0TtfAeffJTXHo2Lq2
Tv6K3BLHPD+UHp3xndwWhxb7xPciRQH1fxxGtH0Y9XgYmROPsoqXUxQnkpXi
sefO9ZVD5pJV4nEnkqfVczlZPR7jK+RPr28gc+NR+k4l3tGDrBMPwbvBjjfD
yXrxsJgXpfs3lWwYjx8Gkzf/yiUjHltVx847W0Q2Y+rv1H02r5xsFY8VCv62
/Ftku3iEl9geTXhC5sXDzi7n88p3ZLd4+BxQmdz4k+wdj2cp5zwMFJOo/+PR
41gvka0amR+P1MOuPc01yYJ47L/wwllFjyyMx660atPj88myeESfDK7WXU7O
j8fgy9+OZ9iRC+Nh1SPve60zuSQelZrrPv31JZfFo1pJNEmVT5Yz7Tl1y5aB
aeSqeMw6NjHgWw65Jh5cXUMH+QFyfTz4xr02+50kNzHnP+/vvH5ycks8zpVO
jY+5TW6Lh37wJLUn9eSOeOzYHmE56DWZk4Cjwx3Mx34hKyXAXTH40aAuskoC
vgdO9HuqlEz9n4ApBcYz4tXI3ASss1a4NJBL1knAQz/nVaGTyXoJuG7w8PTN
WWTDBLTqJyzptZCMBBidmXN5giXZLAFrPrb1M7IjWyUgvbXw2qItZLsECG7a
tCzwJPMSUNdlwDMMIbsloGSrw5cJcWTvBPxInDRZJYMcnIBDE1b4f84h8xNQ
afVg2NV9ZEECZleeX554jCxMgAJ/z4zZ58iyBJjX3G2+XUHOT0D9bfgvqCYX
JsDsWLpG2mNySQL0diLq4CtyWQIeXDLtSPxIliegdoCtkvZPclUC2ntLDoZw
Uqj/E3DkxRVZWF9yPZNfeev+8arkpgTc+11Y5zuC3MLEX8xLctAktyUgMKH3
gXcTyR0JKA9/la8yncxJxGhjT+mD2WSlROxu7bSaZ0xWScQnrQjdJaZk9UQk
Px369485mZuIQTKb/C0ryTqJ2LjS+1icDVkvEV+1NP+6rCMbJsIzLnqS6iYy
EhHLdzVK20w2SwS31sWh0YVslYgun/XH+m0j2yWCb16sMdSLzEtEumnjll5+
ZLdEKKvsVq0LJHsnQs0kJ1cQSg5OxMvB58K4kWR+Ino/UV2zI5osSITvuatD
2uPIwkSUjIjvNVlAliVi5zG7h/NSyPmJ0JdceamZTi5MRNTrDfYNQnJJImqC
3u51kpDLmPY204gpyyLLE/HCbPCWB1JyVSJOFC3yOpvD9n8i3BKcJFt2sv2f
CJu1Q0Nrc9n+T8SuuNC4vrvY/k/ErPHNVYq72f5PhKFy8YQ7rDuY+srLHRzy
2f4XYH2h7+DLrJUEmDZpyuEfrFUEOF25c3zvArb/BdixYVn1F7acK0D16p39
rrDWEWDq31V6Yaz1BAi/Mzxck7WhAAt/V/e9wJ4PBPiY8+vuStZmApwSVkme
s/lYCTBQs/ahN2s7AaKCfu3uw5onwBpu5cqDeWz/C3BFkBVkzdpbgHMV06v7
sQ4W4ED/PrjHth9fgJtDI5UPsBYIUF/56auAtVCAms9/LUNYywSYu1uiHcg6
n4k3cTAiWRcKmPHnOkjIukSAfVm6hw+xLhNA26zpWBVruQAXX7ya+551FdMf
jiZt/3e+NQKUtA6ZNIF1vQB/2w/qzmPdJIAPL8xpEesWAZ4UTl1txLpNAIdJ
59I0WXcI0KD/wvsrG4+ThB8XxXUHWSslYdP7DyXzWaskwcl34/1i9vpTT8IU
1d3FbTvY/k+C5ofEiC72etVJwr2uXeU3ZWz/J+HErdKWFez1bZiEvOJ9XtHs
9Y8kmL5/5raBHR9mSXi3JLDjETt+rJLwSyHboT2N7f8kiLuK3x5LZvs/CRU+
i670T2T7Pwmd60o/9Itl+z8JwnD1oSfY8R6cBO7Dlyl92L8H/CRENAzvVA1g
+z8Js1959n3G/n0RJiF1QpDIcyvb/0lQkEhOVzux/Z8EW5cvnxUd2P5Pwogt
7VvV2b93JUnI3+nxtPdqtv+TMNchp/CuBdv/zPkN/23tvYTt/yTM6vHvwRsT
tv+Z+skchalz2P5PwmitHveM9Nn+T4JMYYlo0GS2/5Ogl29iumsc2/9JMMme
+ebFSLb/k/B63fo7tf+x/Z+MhoUrVDz7s/2fDPXvSZeO9GT7PxlOhQ6/BL/Y
+38yivy/X+vZxt7/k7FwhXLz0Dfs/T8Zu6w5gqtP2ft/Mi4UrJvd5x57/0+G
rPF2aVMle/9PxlfJLJWV7P3VLBnlW2srVx1l7//J2L0+7lNLAXv/T0byzY/u
Q7LY+38yhio87P84kb3/J0OZ/zJvVih7/09Gs0X2teke7P0/Gb1ex7y5a8/e
/5NR8LvPR9WV7P0/GXg9a0ovsPf/ZPjvMJy5X4+9/yfjP5OR5/6yzzv5zPnX
H3IZMpi9/ydjyqRDVZ847P0/Ge+4wdOFbezzXzJOul3L+fucff5LRlPtqyzj
avb5Lxklg9+ttrnIPv8l403LtsOLitnnv2TM5+nPUclln/+ScXpiUMyFZPb5
Lxkm7U/7rQxhn/+SIbgo3V7lyj7/JWPki0feU23Z578UqAk0R8SYss9/Kdil
Ou3cTX32+S8FS38N7uw/lqyegvKZK5qWDSJzU1CodnBXahf7/J+C4z8GBz78
wD7/pyA8fNy6qezzumEKdry6mppVxT7/p+CoWN1e9Qz7/J8Ct9Pczv372ef/
FMT4vd+1KpN9/k9B2CX300Ni2ef/FLzLcV781Yd9/k/BRNM+U9/y2Of/FBRv
uOHRvpIcnAKRb4XjCBMyn8lnoOqfddPIghQcHvT9U+kosjAFJyYObZk6gCxL
wVjHo0VVnez7XwoyV0SMTG5l3/9S0L6y5ntQA/v+l4In38WRstvs+18K4hZO
6/m1nH3/S8Gsf5vckovZ978UaKS3v3XZxb7/pcDiveRFSgb7/peCt/6ZNZ18
9v0vBSZr7i0q92Xf/1JQV5n28pYT+/6XgteqWs5T1pI7UqBZNTv5mTmZk4pD
dbeUGo3ISqlQn9I7bTL7vquSikuORx9eGUdWT0VdU8KH3cPIXObzBwZsusi+
P+uk4uLoV5nDOWS9VPSdy+tT3M6+/6eiJLLFxv8d+/6finWtM223NbLv/0x9
3VVa6bXs+38qlM/M0Hxcxb7/p+LugTBVc/Z9n5eKxrP7TZ6eZN//U+F4+/fh
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
HUx+/fYk2yuROyXgHE2t2niE9mNxMuF0tta90JKskIka4RUz/c+030uJ8VTz
XZ8yyMqMFZZ11uqy+8UyoVQzYM7pPNpPppYJeUfM487HtP9MPRP8X1vG+KuR
NTKh05Hwepgl7V/jZsJGfLd/Syztf9PKhEfLz1/vymi/nE4mTHWnxE1qpf11
UzKhAQPbi6PY/XiM9fI8r1jSfj0D5nhXK6vXhdP+PsNM3I/yv3noEO0PNMpE
pkFN1cMHtL8QmRhwSzS4Zw+yaSbEiz04ZpNpv6JZJgS1yhsu2dB+R4tMKO8a
Ny44gvZLWmXC9ub00LD9tP/SJhMIn7X7xm3av2mXibJvgW/WfqP9oBszUfg5
on3gcHZ/KGOVt68yw2h/qlMmDE0azpdeof2xbplouaH7bmAf2n/rkQm7/mbT
9M1ov7F3JoJPla87FU/7p/2Z/pnmetvkEu3vDmbaX2N7z/R22k8enok2nYBT
fuPZ/eeZ8H6sndSwiva3xzH1J/hycr/R/nlBJvSMs/67O5f236dmwqph34jy
ENrPL2TyPdWv7VcJ/T5AJhPvlMjU5Qr93oAsE02meSG6Q7Vo/DOf72c+wPiC
Oo1/5nr5nPMnzo9+T2EfU//cnob+3vR7T4WM+ySmGvek36MpYtrTXz654Cn9
fkRJJnKfZ2SVl9PvVZRmomLM7rWPVk3vdhmTn8HSjQ1LZ3a7nLn+6o5YDMSc
bsszkT+2YcmAufO7XcF8Plhj0bkd6HZVJtTPuLx/L1vY7dtM+WcXk41S027X
MOdnEjb8TtaSbtdlwm1q68Y/ErNu1zPjI9pUo1C0rNsNTPsXXqrKTbfodhNz
/J+/bhYnr+h2cyZ4uhFvny206nYLU3+XxfgnJqu63cqMV5+n95caWXe7jam/
c/p0HcPV3W7PRNGzC55RM2y63ZGJVlP+Putpa7rdyfSfhuLCAzq23eZkwcxu
wYAIzbXdVsgCL/hTy8ORdt1WykL8Fespx9XWdVs5CxudTjT3GbC+2ypZ4ASk
VT1Q2NBttSy4xc/49l8nWT0L8kquz9mvG7utkQVt7QiLcy323eZmwdNM+kCx
cVO3tbJQevDM4eT7Dt3WyUL67+opQ7fwuj0lC/te3ShzaSDrZWGWqrr7+DWO
3TbIQkNnrILJHbJhFqy6cvN2m27uthFT7tA7Y8Z5MrLAd0+LaNHb0m3TLOBQ
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.014479006567161007`, 
           0.03243659327145977}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {180, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
HQTK3r2Z74peh7teud6iD/NdISyZe31vA13sCs2APKV/7X/Md0WLHieuHxMK
mL8a3W4oI9d8pgWrcXTp3dz16/syfzU6eC1ardGmH/NXw7TnMcXYLFq0GkYL
5pn1H9af+auxdvxg3Y8ldPFqfLsTpFa0agDzV6P+V2j73LYDme+GO1WClBMF
tMAN7ZZZnursOIj5bogNG9/ieNfBzHfD1kMmd/eV0yI35JQc/PI2yYD5bmjM
3vBn6bwhzHdDhmPQpLLuQ5nvhp7Jd49+e06rucP6h/Je7NFhzHfHWP9uyndJ
hsx3x6rlbXvFrBzOfHeM8Ek/FDV5BPPdETTaNEBTdyTz3RFgc2WL0ze62B0d
vO2KotcYMd8dvrlzT2Tcp9U88GbAvLkL5oxivgeMrX7OzTpFwwOms95sXzJi
NPM98LPoQ+fRO2iRB2Y4Z5r+6TOG+R5I9Vnc0X4DXeyBLidejlypbcx8D6we
P++tfSKttgbJr3fbezbQgjU49C5EOgdjmb8GQWpb+0/2pp3W4PWXYYKH62jR
GjTOk7Y9N4rOWQPJettOuvv5ecVrED7m5nODh3yemjU4o6iesO4Mn19tLaxP
Nt0Ys/T/+q+Fkb/W+e1reX9Yi1eGJz1cr3A/Tmsx2d7hYNCz/9v/Wpxu1WV6
1LX/e//Wqn5/uWocNJXve/Fa6NtFRsx9zu9rzVq06XgxcewY/vtKzRNtj8fo
rv3Av48Enjjaf2LJAs17Zv/yPbHz8YQJA9a1+Pd7oZMnGowHeln+0PpnkSdO
Pi9wOvBd559zPGG2LyJhVJngn4tVnzfk+ftTioH/XOMJx33dO7wzGMbfM72w
aWnhfZ+HRv8s8MI0I/FLvVPG/wwvnKqcMzp7+gTme+GzybD5xrFmzPfCdPmQ
wxsxjfleeGHyO9Zr00zme+F398mre1nPYb4Xdgx/9/f4knnMXwevDcpXk25Z
MX8drI8MVn/UbRHz16Gz76e0/Z6Lmb8O0WYWKTF3ljJ/He6/XGTQbG7H/HW4
G3X/b9YFB+avw15ze7cnZo7MX4emF7lTlI+dmO8NryVbdGp1VzLfG8fUqx89
XbKK+d7IqYlppZS4MN8bL4OPdD5a7sp8b8gEk25ltXFjvjfy+p6y8J3hznxv
XBzi6WmS6MF8b7i9sKu3v7OG+UK8P6bbUTjS85+1hHC2yrUuz/bi8whR219n
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
AdlY/9Yo6vDjrvgfBKGXPQ==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1: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
Q1aTQWetxZ5as1Nlx+iitRCM+HZAdIWuXosXbTPHaz1UxndG6k1/rKpRxnfG
kzxLA88GZXxndPv7M3vhL2V8Z0z2ibur1fI+4zujaURW45u2dJYzPItatmho
Txc5o076oiSgE13tDMN/DtHvO9Mq69CqUO3OFQ1aZx1+NCxyOdGFxjps83x3
akc32mkdbhvbDtuvqYy/Dm77V+9f2F8Zfx1cW0R9iBqujL8O8cUFkwqnKuOv
w8O1NuU9Vinju6C09AriRMr4Ltiw2WuZ2gNlfBe4JmxzThpTzvguGDF7gluv
o7TABYEfTpy3sn/A+C5IVl3WRzDqIeO7oLfNmFEWpo8Y3wV91+e9mi+oYPz1
0KtuXxP/4zHjr8eEToGT58gqGX89VFrePx03/ynjK/xQU96l03PGX4+FQ1u8
fO5UzfjrUdHCapvDyBeMvx7uydfaLa2nq9djVk3790NELxnfFR1HuO+p7P+K
8RU2OnShk4SGK3ob3/3x9h3t5Iojr0MsxINrGN8V4n9N9t/N6SxXBJvNPuY+
my5yxc3eq6YNM6OrXWHZ5n3DIz1aZQM+Zd8e2NCJ1tmApn4/HuxvRWMDviQm
SDU6004bsCK42nP1JGX8DXj9y2pEoUgZfwPmr7ba8UL7NeNvQElhxEzzJ3T1
BkSXi271rnjD+BtxLXLP792atYy/EdscozID0+sYfyN2eLitNHZ9x/gb4fKp
d1XHyA+MvxHWQ05/fP3lE+NvxMLI5RUdHT8z/kZYJL9o/PntC+NvhG3FxNV6
JY2MvwnL52fbW1R9Z/xNcI/zn2U88Sfjb8KRyXljzet+M/4mWO2/X1/y6R/j
b8IO9QVxi4e2+O/v1qxNaDw2ND1QvdV/LtqEP4WeDed7t/7P1ZvwdU3MlfHL
2vLv3M3YpykvOXq93X/W2YzYp9aqd506/GdsRozK9282fTv/Z6fNuCJf4Db9
r8Z/FmzGbpNdfwr8ujL+ZtxrV6OT3KI7429G5M57CxaKezD+ZvxY8SZJPlST
8d0w+4b14j/FWozvhofiA2+6r+rF+G5wd9cc6favN+O7oXhy44p4WV/Gd8Ny
1+f5NcP6M74bHhRuWqi6VIfx3XAhOTtsRe8BjO+Gyiv2xzMe0Cru2GW+0kk3
duB/1nDHqaXnPPOMB/F53LHubI2lbSVt6I5+UcKR/v66fD53tA82NbzWTe8/
W7ujyzXLAv0c2skd/fseP1ViMvg/u7tjzrxTJV2u0QJ3mGoOO3LMZsh/Frrj
gcqEvB2v6Cx3LCr5N6j1Vv3/nOeOsPypLmadhjI/d8zUCnm7+zBd6g5X1z0G
W5cMY77uKNg4cddpDYP/3OCO7u8XNhk8pFU8YHS+o83Ug8OZvwdm67m8Gioa
wfw94PXSR/44ZiTz98CUx5p1nVJGMX8PtE69eM7A3pD5e2CLm19mbAPt5IH4
uPFXz4pHM38PvNiUZnJj8hjm74GWRRPKDzfSQg8sqT/otTR/LPP3wI9zKzcU
BRkxfw+cT27jf8/amPkr2h19cmNGjGP+HvjzaOLYt93GM38PnLF40v1bKxPm
74G13ufsi/7SKp442+/Mq6UtJjJ/T1w9YVj6tNMk5u+J5QdenFg22JT5e8L3
/J7h7yzMmL8nht7aPUi0ZTLz90SXYvOc6funMH9P7Hz6JH2zF5i/J96Yvk7t
oD2V+Xvi4tx/9bMu0UJPFPaI7PrWbRrz90Re64quaQOmM39PCEWBdeqP6CJP
DPa+JnqabM78PREQ6b1/r9UM5u+Jv43/+n5sN5P5e6Jy79x9BjdolS3IW/1u
8pV4C+a/BX/TXw/QmGfJ/LdAy2bEscUas5j/FnQqqZtYdY/GFkxOvX68QTSb
+W9B3yUXT3yab8X8tyAi28xtVvs5zH8LEtvd3hB6mRZswak9GZkGvnOZ/xZ0
uVmzp1Z/HvPfgrtFm1NXPaDztuDbu86wCprP/LegvXGz5kgNa+a/BWOj8i2H
r6Crt2DhpO26MQfphi1QX1SxfPQ3WsULlWXDFvU3XcD8vWC2JahgvoDW8cI7
z9lply7Shl6w/7ijeKvKQubvhT7TJ2qtM6WtvfDL5+qUWG/ayQvd+gyX3D5I
u3vB6cOlgP7PaYEX/J89LVzbeRHz98IhYYJjmCmd5YXjhV3rFjjTeV5o922d
zoEEusgLiyvnl9ofoUu90Ft/x9FBd+hqxfUTqmffqKUbvBBd4vG+XTOt4g2h
z7rEXRo2zN8bMxt7aC7tS+t4Y8wNk6WqerShNwZoLL7qP4SGN+JumS/bp0tb
e2P048HRgj60kzeaHo5t1b4z7e6Nv5nWjx3+ML7AG4/XOP5LqVHm740DszI+
1V1T5u+N+Gu7CzL2KvP3RsCwr0d+CZT5K+IdnTFzoZ0yf2/I9h7++WOoMn/F
9e0LBZN/8n03eMNJdYf21iu0ylbM0TN6+y6J1tiKx+EFPesX0zpbMaV3i5SC
XrThVvj4iTV2POX3gK0YYLzY6MUO2nor5s0KWXfdkXbaijaVfU/u6Eu7b8X2
vcFtcyr5/Qm24kpt6mD9NFq4FSvrr2k62NJZW/HAZ/KKzd3ovK1o7TW9T4+d
yu9/K4rUl/6W9KZLFc/f78uViFSOl+qtWGZ0bmeLrnTDVqhX3YNOEsebig/8
3i0Y/1Gd1vBBenKmhWcMx6eOD8rdI3bntqENfZD2xkAkj+T4hg/Wq2suNGxN
W/vA9WbTkS2RnA+cfFCxcNGrTW1odx9cqV622CSG84fAB0N2TMMvdVroA41V
fpGvkzj/ZPlgYBvd+2O603k+6DW764Z+2zlfFfnAKutgmzeD6FIftDvf9vC1
w5zfqn0wyr5dxxamyvnPB6l7lxXcucn5UcUXge3//HJ1pDV8Mf647awOjZxP
dXxxd2CH8a8SaENf9P/RIVF7KA1flORb1ZWVcD629sWv0av+jthIO/mitijN
amY32t0XW1u0Ehmf5/wu8EXb0gP+3TfRQl/ULejs/qu/cv73xemShMV/HnJ9
yPPFjrOthg4T00W+2Nx9x9b4BXSpL4oCh7bs3YOu9sXY3J5Jl6q4/jT4oiwk
u6V9Dq3ih9QWtR4ZPrSGHxwNxD7TZ9M6fvDW/Z39oT9t6IeADdppmxu4vsEP
E0V7pG57aGs/fPL+0dDeUbn++eHrs1313tq0u59ifh8lr3vI9VLgh7dB8ofH
pLTQD2OMd5caLaaz/PB86DX9r93pPD/o3za7v72c62+RHzakPbfoLKFL/XB0
uPmw1Yvoaj9YjXGYVt2VbvBD3OfdEb/KuJ6r+OPj7MzHMyW0hj98hn1p42FH
6/gjwe3opzF9leu/PwrP2f+d84b7A/hj8tyZ8uDjtLU/tn4/PSooknbyR+zZ
rla1y2h3f+TMTDacOJEW+CPMJvL2yb600B9rO09OW9aWzvLHmnM3zaq/c3+S
549RLsmbj7yji/zhv69+eHMNXeoPT0+HR1Uv6Gp/hN7oYWumdIM/yr7PtVN7
SasE4P6gpH/9Xyn3PwFobaNX46y0TgA63Cl+eFXZ3zAAubqR8ROf0giAb0FZ
SGU5bR2AWZc7an29RjsFQFu0KFf9JO0egJHlTqO+7aAFAXj5uyztVhgtDMDF
rPM3Xq+kswKw1L7g/HlTZf4B8FwwZ8SHbsr8A3Dbefk5jdoJzD8ABi0niq6f
pqsD8HrbbcGxWLohAOJnvWqW29Mqgfg9ufzyosG0RiBqJmfkaTRyf6gTiLyB
S8+rXqINA3Hx+pydYiGNQLjF5cd3cqKtAzF/Tuui84a0UyA0h963fNaSdg9E
aofQhKyH3J8KAjHsU277cbm0MBAzrr1ddC+czgqEvNPJioPL6bxA7NTtekp9
Il0UiCvdT7SYrk2X/u96y3nnfnM/XB2IfINQ0x8v6IZAlKkunRZ6i1YJwvW/
aZ++n6U1grC+1alFX/NonSC8HmYU1SqXNgzCuMbUt9sP0QjC5UlNFt1O0tZB
mBTRdHLXFdopCMu2LW5eV0W7B+FJ1g9Xl1+0IAiJT2+tFfdX5h+EG09aWZyz
UuYfhGvOBuv3BSvzD0K1sXH+11PK/IOQa+rno/9DmX8QZH2CTI9N4vuuVjzP
17iW7yOU+/8g5I1YKTIoU+7/g1FhP+nR7YHK+gdj+86oN1O20jrBKFNvf73l
LdowGFZHpwsPDlJ+/8HwthYGvghUfv/BWCIw1Vj2SPn9B8O4RZP3yzHK8R+M
ZdprIuYkK8d/MHxjSuoj3ivHfzDqbaWf42ZzvskKRr/S85Xu++m8YGxauzRh
cTvl/BeMdmEtji1xVc5/wUiqdF0quaWc/4JxbHjglvaGnD8bgtGrtnjQUQmt
EoIHDt1urvlFa4TgV3Gf0d+cOF/rhEBV2/bjgBLaMAQztgbl3tbkeoAQvLB9
OU1gRVuHILJ3ncPHYNopBJVZbVvcP6r8+ycEN0Rn2la/ogUhkOUajr7UXfn3
jyJ+9teLQ8zprBBM7D/f66qHcv0LQZefj9etyFCufyF4/8L+y4WryvUvBJ8O
dv934YNy/QuBW9Wx4VO6cj1tCMGO/IunBxjRKgJcOiKImruIVhNgUcbzq/uU
f39pCPB9fJa8WyytJYBou30Pz0xaR4Ap62I3ZR+j9QVwMPj4K/kSbSiA8dDU
zwPu0iYCNM2TJS6soCGAX0FYme4z2lKAzP6DzbOraWsBjE60vvPiOW0vwLec
QwM+V9JOAnxy8HN/W067CBB63ENYeYN2V1y/sm7X23O0ryJf9TW7DQ4r9x+K
/F5ua1+6nY4RIGfKTt220cr9iAAnN8Veau9OywV4nxjv29dOuT8RYJXedKcA
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
tWLCjM/29PsU9Gi7PKSFK92QArO2kaK+AXSjYvzt8eg6I4FuUry/NzvdfTLo
PylYc3zsx+OHaRUJPp8+l/PzAq0qgWzo4KMW92g1Cf55qutkvKQ7SFDtfmDE
z6+0hgSzqx3HLW29j+NfgrEBLYsu9aS1JJj8o9h/lD7dR4KEYa2m7pxA60gQ
XTVFU8uK1pVgVfEDA8kyWl+CZe9syntspodLkPbxWnRGCG0oQS+9uscGItpI
gjspR9wv7qJNFM874+l3x3zaVIK6Yt/ura/SkCDiY7VL/iPaXIIWXTIiN9XR
lhLsFV39YPibniOBx05Jl+YOORz/ErgE3Zld0Y+2kaAguNuTQkPaXoJZDceq
c6fRyyR4Mb/Vihwb2kkCv5GTjY8402sU8U53HH3Rl3aR4O3uoT2fxdEbJegU
uexQ6wzaXQL1Atu744/QXhJcez5+pddF2leCzTvO2p29TwdKkO9Un9fhDS2Q
YEr71PUuTXSE4vpjS/zvqO/n+Jdgk/32u5P70gkShI7qPvH0KFoowXdsX2E2
jZZIUKSTeeiGDS2XYGqgYJrTOjpdAt+5N1/+8aOzJLBcUtS8I4HOluDkiC/n
zTPpHAmW313b+v1ROlcCPZWeieJiOk8CTB1SZ/yIzpdg/u62iffr6AIJfC6Z
33H5QxdKcK+tad2XTgc4/hWW/27nNoAulkDapszxyVi6RIKXW8eNGzOTviVB
/Zg5+l72dKkE6zZIJu5wpcslGL63XdPhQLpCgq87HvnuSaKrFO/DvMYhNIuu
VoyfVxbHph2jaxT1Ni3/U3eZrpXgnc2vbr4P6PcSBPvM0P/4hm6Q4LpXt4K5
TXSjBJcbP4XJ2x3k+Fd8D1Khd2kv+o/i/Wm7RPwwoFWkOOUyMqyzGa0qhd7A
8h/a82g1KS5KGrprraA7SNE9Y2CuujutIcX67PfmXwR0dyl2rt406q6I1pJi
iGPrjJ276D5S3JTpnVh/nNaRYsGRhuwhxbSu4n5T0k5UltP6Urj827Eq6jU9
XArbTrGu+t9pQykcx05/fqlNLse/FHcm7tS306RNpFB1m/32zRDaVIp04c77
W0xoSJG27lRcsyVtLsWqVwtc4pfQllLMaHHQTcuVniNF+897zPb509aK+Av6
tjWJp22kGHyyKf3GdtpeCpPZ3/0dc+llUkiso+5/KaSdpMgutDgUdZteI8Vi
m14ttZ/RLlL83XrxQc5HeqMUb7e0sTJupt2l0NX5vO9c50Mc/1J0eqtmP1WH
9pXCLzOz5oIhHah434cnvTeZSgukuPam/6DcBXSEFDWzfBdpr6JjFPfrUbxE
4EknSHF8x5V+L8JooRRHU9YJJ6XQEimMfGZtS95Ny6V47/Ks19PjdLoUQcP0
3g8qprOkcMgrfb26nM6WIuT5vZr0GjpH8f5H/Lp1p5HOlWLm/tWJP1UPc/xL
8a1Nefe+Peh8KSZY1M2foEcXSOFp/GDIPGO6UPH9bpsbu3QGXSRFZ+Of7isX
08VSZK7+9G3FWrpEisahNQ523vQtKe5lyTUtI+lSKazmutweI6XLFd/3nQQj
rT10hRTR/5z+NuXTVYrv8aV/4YNiulqKokl1zw+X0zVS9DD9ezyihq6VYqjn
8Y12jfR7Kfb1KRsxRPUIx78UC7VNezR2oxul6HLW2Oz8ILpJqljfay9EjqX/
KN6v75YTs6fTKqnIHWVv3HERrZqKfXNt7W6votVS4a2bPibek+6QivSqimcz
w2iNVLTrucBLRUx3T8WK4Q/bFeyktVIReOx6/qajdJ9U9G8TFDPgIq2Tiv3H
98rvl9K6qdjV1uF3eDWtn4rIyD6XxjTQw1MxP3Lsv+fNtGEqul31qL7SNo/j
PxVzBv7rsL0zbZKKl47j4900adNU+I2evWp6fxqpMGjxdFvPIbS5Ir+ORRPr
RtKWqfCpmmBxdhw9JxUu4qqrCZNp61RkHBpTtHwmbZMK4+WN40fOo+1TsfzF
5TH/FtPLUjG6z8aTt5fTTqmYuNzvWvpaek0qus9rct2wiXZJRUq/PdkTvOmN
qTgUesS3bRDtnorXFU/qyyNor1TINlo270ygfVMxXORxZrOEDkzFkZEn+k1K
pwWK92vlPqptNh2Rihy9xk9lB+mYVGgsVFu94zidkIqLFb3j15+lhanQt/zs
anSZlqTizAfL1s03aLkiXrbzsutldHoq7pyY55nyhM5KRV5ZzuzlL+nsVHh8
6fJ2cD2dk4qKc2tnN3ymc1NxskTkffonnZeKOuFa17AWRzn+U/HmVJCBVTu6
IBVmacFnunWhC1PhYO6lXaVFF6Wix4NfVtk6dLGi3jaOCzbq0yWp+DtiiYGR
IX1LUd+jkU9+j6dLU+E2drfT5Sl0eSoG2/07H2dBVyjqMWbKjwXz6apU7Og/
TV3bjq5OxRKT2F/PHemaVJj3TCnZ60zXKuqR9c1r02b6fSpKr05XMdpKN6Ti
g+9v119BdKPifQyadbIokm5KhY3XxJqoRPpPKgRjQr7NkdIqMuw5tau+awat
KsOdaRHFFdm0mgzRt4LCd+TSHWQQryzVX5NPa8jg1MHlxNBCursMQUcmDvt0
mdaS4dXy3dH5N+k+MugNb3vH7z6tI8PdQZP/Tq6kdWVY2b+0h+orWl+GyRGa
2tfr6eEyzPAd2TbpC20og2pw95cLf9FGMow7bXxQs+Uxjn8ZPLe+WFXVjjaV
wSRscdudXWjIkBAYlrZWmzaXYXXyV+1hA2hLGWqvaMZ+1KfnyLD+nfnbY4a0
tQwNvj+MfUxoGxk227b3ngTaXoZ/80P2NFvQy2TYdP78tcvzaSeFP3WujLaj
1yjiay2utlpBu8gguZpc0XkdvVGGLuE6xfc30+6K50uv3SXbSnvJ0Ph3pPfS
YNpXhrcNGZP6R9GBMhTMvP7tZSItkGHNhFfZe6V0hAxT/k2b5ZpBxyieb4v+
yxF76AQZrp556/Y5lxbKUHzt4Nf8fFoig3ODyybfQloug3lSv6eTiul0GZLE
BtOab9JZMvTKrMq4dJ/OlqHP11MNkZV0jgxH/oyeOOsVnSuD/N8evw7v6DwZ
Smwdjtz9QucrvgdZbaX4F10gw+LAQc2LWx7n+Jdh/Hj1XtrqdJEMnb3mjqjq
QhfL0CZH0yRTmy6R4Xi/YRNXDaBvyTDm9lgjvaF0qQxzup8YXGtIlyvq//J4
l4MmdIUMIz4e/74JdJUMvb+LHxha0tUyDNI9d/jrfLpGhm0DxoedtKNrZbh9
s/t8vxX0exlGzt/cw3Qd3SDDC9dxD/5tphtl0ErfnnxxK92kqEef6eYRwfQf
GSw7bvsyM4pWkWPDzQ/b2iXRqnJ0zn9qdktKq8lhFT+xKimD7iBH/YpS7wV7
aA05OlTkte9+iO4ux4TxnTMe5tNacvh+zxuWVkj3kSPPOOz40mJaR46egzua
9LtF68rxeJZjQfV9Wl+OXud0jXdX0sPlaPna4fDaV7ShHL3djg/Sf0cbyRGg
NVpa/4U2kaNKs3PLQ79oUznUXFxc3Vrmc/zLcWzXyzuj1WlzxfUnDo5q7EJb
ymGzf3DCSW16jhxtD0ys8R1AW8sx7rbzhElDaRs5/OdI4/4a0vZymIpVH10w
oZfJMX7u8v5hoJ3kGDoldbW5Jb1GjrNRkt1trGkXOeZOyKwusaM3yvE32aFX
/AraXY74CZMXzF1He8nxr2tNeGc32leOlZY7j93bSgfKUfNK41lKMC2QY/SI
/m1so+gIRbyfewy0kugYOX5qPJ73REonyBGz87xbegYtlGPzmxFJjntoiRyG
u77s1zlEyxX1cpx1+WU+nS6H5clOj7ML6Sw5BFYB75yL6WzF+/UI+6N/i86R
o/WMf+3f3adz5Wjlmqt9qJLOk6PYaL+u2ys6X46rH92Hj35HFyjixXcZ8/UL
XSiH7Skr4xO/6CI5PK6sGufT8gTHvxyV8blGE9TpEjkixlcb/u5C35KjyebC
sHPadKkcPdx/DgwZQJfLET3ytubUoXSFHJ5+2u1ajaar5Jhi++BHsQldrXg/
k/e+igJdI8fM4/tvW1rStXLcsH53Qt2afq8YH3/q0m/Z0Q1yqMy7E5q0gm6U
I7lNx7XW6+gmOSbZBFh0daP/yDHrU6J++VZaJQ0FKtvUUoNp1TS0Erq/sYui
1dKg06LionYS3UHhgInplVJaIw2Tt2d4Z2TQ3dNg2/Ps3BV7aK00NB9+pTvg
EN0nDTXX1/5+mU/rpMHUaGVZdiGtm4Y2cp39zsUnpvwfxT4nYg==
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.00032706492094903373`, 
           4.716501253710357}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {540, -185}, {Center, Center}, {360, 360}], 
    InsetBox[
     TemplateBox[{GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}, {{
             Directive[
              PointSize[
               NCache[
                Rational[1, 120], 0.008333333333333333]], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]]}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]], 
             LineBox[CompressedData["
1:eJxd2HuYzPX///F32tgKTdmyRTUVtSQmkS3K5JB1qAZLmxyGNq1amYqsnIaW
1iEmxyUxFVqHGIVWpFFLK6eplCXVVMomaiqxIv2uz+txf/2u6zv+cd2u5+v5
er6O7/d79oZBw3o8Xs1xnM7VHed//+tfoq3zf/95/y9Tk+xKclqS05NcP8nu
JN+Y5AZJvjnJGUlunOQmSW6aZE+Sb09y8yTfkeQWSW6Z5DuT3CrJmUm+K8l3
J7l1ktsk+Z4k35vktkn2/l8Hk+zclxRPstMuKZ5kp31SPMlOh6R4kp2OSfEk
O/cnxZPsdEqKJ9nJSoon2emcFE+y0yUpnmSna1I8yU63pHiSnQeS4kl2HsTu
DxRPsvMQziRu7SXuwx1kr3UW7a27yVFrH/ndcQ/yrbPJt+5NvnUO+T1wH/Kt
+5Jv3Z986wHk95SDfvKtB5JvPYh868fIz8a55GNnMPnWT5BvPYT8XuQ/Sb51
PvnWT5OPvQHye+NnyMfBZ8nH0efIx84I8h8m/3nycXAk+TY+inzsjCY/h/Zj
yMfeceRjJ0i+9QTyH8ETycfuF8nH/kLyrSeR30cOTyYfx18iH3unkG/jU8l/
lPFPJx87M8jH8Znk40SI/L7EXyEfJ2aRj11zyMfeueT3o/488nF8PvnYu4B8
HF1Ifn/WYxH52L2YfBxfQj6uDJM/gPG+Tj52vUk+zlxKPg4sI9/PeJbLbuwu
oT9cvEL2Y88q+sfx1XIYR9ZQD2dF5Djuto76A+Xcd6iPp79LfVy+nvq4/kbq
48L3qI9TN1EfL3+f+ti/hfqD5Myt1MfXRKmPG22jPu76EfXxix9TH+8roz5u
sYP6eP0n1H9M9u2kPr50F/Xxz7upj3/aS308KUZ9Obj6M+rjY59Tn/b37ad+
rrzuS+rjew9QP5f8Curj0kPUp/2qw9TH27+lvuydFKc+/vB76j8u1/mR+rLz
4hHq48t/pr7sjx6lvhyf/Qv15eiMX6lP/oYT1KfeRQnqD1Z+5z+oj1f+SX3Z
detJ6suBPX9TX/bNPU19OTT5DPVlz7Kz1JedU/9S/wnj1LbOVtWXC16/QPbK
oYYXyn550d4UOSjnhqvLYTm2OFWOyuf2XCLH5SO315KdPOPMvZdRXy7rcTn1
5XaHr6C+3GBiGvXlq7xXUV9uWSud+vLJg1dTXy54uR71h2g81a6l/v8c3NW4
xnXUN/FohxzsN/a+vpz2QePg/mL6C6u/PrG61JeXnGA+cfnZBqyn86Sx79jB
e1Rf7uq47lV9+Y+/3bJf3nXoVjloHPxoSAs5LMf+bS1HjaOtctrJceV/3raT
7Dxl2s9e2012G7u/faA79Y2dvFHZ1Ff7XXsfpr6xd3nbR6mv9k0396e++vPX
HUh943iPjwdRP9+0H/dwLvWNvf0+fZz6xv6BdZ6gvnFw+K151DcOj6g1hPrq
b+VGHFV/V9/yJPXV3/aB2Blq+nsjH7uN46192GvsrV4X++Vxu+k/qPymY2x9
eYfH1lf7QX8x3rix02gXdp5W/APsNo6e2YO9xs7tDv35jYPNHrb1FW/xla2v
/vKDjDeq+KKcp6iv/j/w51N/mPGKBUOpb+yUVxtGffnbbgHqGwf/a/IM9Y39
Ta57lvrG4Yb1nqO+vL3+cOqrv2NXj6B+wOQvqvG87DJ2jzyI3QHNd+JI2WMc
dp/EXuP4JzcUyD7jaKvzxP3GzvSxOKD8wFz6Dyr/o3sYT0jtuzzD+MPy0KbM
NyI/9TvrF5W/e2uwHJN9rQYwX/mrhQ/JCTk89SLu/zPGy090l13GwfP7B/I8
ktvufFL2GHt//fIZnk+Kf9j4edmn/m73vcDzSg61GCcHjONnfwzy/DJ2Dx43
UQ6p/5QjL/I8U/8rXJPkiHH4yQsm83xT+5HrcUz1jmW8xPNOntcfJ1Tvm17Y
efZ/jr5yGXYZB3+ZTn9uxSfvo77HOLzgYCHzN3ZfsYbx+oydL33Mxy9X7GC+
AfV3ZxPWI6j4samsV0jx4lLWM2zs3Vj2LPPX+P4bO5T5K//Vpx9n/vIPf/dh
/nKTSzoxfzlY2ojz/5zx4mo8b13y+mX9OP/GwedG8nz0yF/04b571f7MUO6v
z9j7Xk97X+WXJnB+A8rf5uW+BhX/djYOKX7veHuf5ZSLccQ4eiqT/qLKH5RO
vZjG88NjjCeu/N038jxKKP7UZO6LM9zEz7zF+8A1XPlt7fzlny7uxfzlm1d3
Zv6y55o7mL9c2TGD/Sd+YUf2Xz49i/sWlP9plsP+y/8+2J/9l9ue5D5G5JtG
57L/8sBNg9l/2b86j/2Xd3bn/ibk6FtPcf5HGF/zdj7nX545kPPllj/ejj1y
l6+xV561FPvk9xtgv/zCAPoPyL/nUD8ov3Ql4wvJPy5g/GH5wDHmF5GfqcV5
j8onqj/G/OXVh/3MX3Zl9GP+8oxc1tt53jhjVE/mL2fHuzF/uW9JO+Yvl3zk
Yf5ycF0t9l+OfdOK80/+xo6cf7lBdZ7HQfnn/T05/3KXdXzfhOUX/urD+Zd/
eIbzGZXv/Y/vnZh8d759/suhKcQTcp/GfTn/I43Lbs7h/Mun+vfg/MvOGMbv
kf2f1uH8y3Pu6sD+y7XvfJj9l688OYj9l2s5dv/lMTHeJyHjYKKPff4p/ket
0ey/4v0OjGf/jb2de/C8jRlH26zj+RxX+8/O8zxPqL339insf4GJ/3rvNPbf
2Lv2upfZ/wL1Vz6D/Vf7ZteE2H/55TXYZxyPXfcK8zd2pw3BAcW/mYaDyq85
GYcU390bhzWe4n/pP2Lsb/0Cjip/74KZzF/jnXac8ceV3+h35pcwdkYvs/Mf
ZeJ70uz7zzj4Z3vWz614s9YTmL/intQxzF+O9RjB/I2dfl9z3/3y4U+4fwE5
PJffM0E5fcQjnH/5koT9nlT/8zL5HopQ74JRnH/5kVbjOP/KzxgwgfMvf3/v
i5x/edTaQs7/C2Z+W5ZP4vzLa+tN5vwbR5dWxx7j4JMDae+VX76F/nzGzobe
E7n/it/47XjuvzzjKOMPyhO+su8/5dcey++PsFw+n99TEXlxc55vUeV3nMf3
QUxeOm8s+6/xRwrYz4T8yz1T2f/RZr5Tq3GeXMbhv76exf4bu88tmcv+G0en
ty9m/5V/YvNC9l/xtP8Wsf+KV0tZwv6r/8KBYfZf7avVe53zr/YtV+OwcWBR
nTc4/8bOMB+OGvuLBuGY4o90wXHj2OFUnFB8/hL6d8aY/Nku7DL25vVnfG7j
+JB0xu8xdhq1fo35G0dr3PYq8zcOjjvF+viNw97wPOZv7L7kjjnMXy56z95/
1X87n+dNWP3VCXBfI6r//FT2Myp3WMjzMCbvncXzMy4X3Md9TMjR2Y8w/7HG
3o78vnfJWUe5j2656gDfSx55zcynOf/y1xdwfn3yiNncV79c8A8OyK/Y+xyU
v+/B91xInvwmv2/C8tIJfH9G5Pwt/D0gKrvTGjN/5rOE76e4HCx4mvnLGwIj
mf844++u4PvcZRzs+pp9/in+5/2sv0fxtP94vnrlKX3YP5983+rZ7L+84jj3
JyD/XYfzEZTXXcP9CaneD2c4T2E5YxXnLWIcrcjgPEaVX70V5zVm7H1gM44b
xydez/lOqH2rQfb8jzf9tZ9oz79xeOc47DaOt3kYe4y9z12KvYp/8Cr1fMqv
djH2j9f8Vyxm/qp3vhrzCaq/Mzcx35Dav1NnAfOXrzrE/YnIs8dzf6Lq71BN
nlcxY2fIlbwP42r/zYU87xLy26fYXydo2v9xnvuTKn8xgPvjkisH832aLpcN
78H6yFVOF53HDDkyyf5eknt15fdJprytDb/3vXLJv/z9IEvuWDCa+ySvXzhG
zpFrP4z9cvTNF+Q8+exo+/cGeXSc+1kgb4nYv9/I3nJ+3xQx/nhn9kMO3sL8
i+VHfuf+hOXSz/g+KJFbO0XsF36S51mpcTR9NPsVlTtu536Uy+eqs/8x5R+6
g/dJheLxtpz/uPzlZZzHSrXvnWuf94pvLn5TrjKOp65Yyv5P+J/ddWYtY/+N
nZndl7P/xtGLf8bpxt4DD77F/hv7z0zDGcbxGouxR/1fOxlnKn9XR+xV+yu/
o/8sxZ/Nxj7j4KcljC9H9UZ/x/j9imedY355xuH2F+KA2r9VxfoUKL4ubt+/
mm+t8axnkfq7pzn3M6TxTP2B51Ox2reez/MrrPaDHuZ+lih+phH3M6L1S1zJ
fpfKbW6036/Kn7RqOvsvj3ia521M/m8B3+8V6n/PXfb7Xu6cw/d/pdpPP8/z
PCE/1gJXyb0c7Ew0XvIETjV26j/NeXYpXvsq/r6TLscG8Pcgt9oP7cx5z1D8
1r18b3vwzzyPMuWr2rMeXuXH9rFeWYoHQ/PZf2OvZzTrn6P2VYXsj9847O7O
fuYZ+1/4kf0OGEcfeo7zUCA/8A/nJ2jsvuFZzluRvGg/5zOk8fxSbwX7r/yd
7Vay/6q3u8Mq9l/jGXndavZf8d57cKnyjz/0Nvuv+b22DJcrPm0vjql+4S5c
ofjR13Bc/S/uhCs1/it2US+h/m++FVepvyZPMV7nRTPe/TOYT6qxU2ch83UZ
B6u9UsL+G/s/GWnvv3G0oAfrl6F4WkPuq0fx0X+x/pnG3tHbeD55qT+L/cpS
vc5P2fep3Ok13p85cmCC/b5W/5umcj7y5Lej3M+A5jOmMeepQPGte3neBhXv
9C7nr0g+d5jvl5D86UO4WPmv1cZhzWdQPVwi//M8jmi8zW6g/1L191o69aNq
P6sPz49ytb/gR8YbU/vgat4HFWqfG+F7Ia7xXHSU+1Cp9ikNWL+E2nd/nPWt
Uv/H3mH9nULjdqnch1S5zM/+uYzjn79nn//Gzo5UzoPb2H/8Qc5LRqHmM4nz
5DEO1ynhvGWq/bl1nEev6t2xhPObpXjj/DXsv5xy1Vr2X/VXLcR+1dtXhfOM
PSfqRth/fD0uMI5tSMNB4+iKE+QXyQ1m4JDmf6gmLtZ8WtrxheWUtYy/ROMZ
UWHvv7G72nHmX6r+/CdYn6jyh8ZZv3KtxzU7Wd+Y5v/4Ku5bhdx9GvsRV38/
5rNflarXIJv9TKi/Kzva97/Gt7a93f9Jpv3unpyPVGPnslGcH5dxdMJQ3o/p
xsE+13Mf3cbeS2py/jLUfsmd3E+P4hVhzmum+r+7K/bKrVriLLXv2c/+nlTc
uw3nKH6yn73/qre1GfXzFH+ouf3eVn65n/EXyL/0se9/Y//hK5l/kXG407f2
97jaZ6xjvYpVb8w01jOs+INPst4lWs+1XdiPiLy5EftVqvxXUtjPqNYzuwKX
azyN3rD7bxxvP4DzUaH46Zqcn7j8eQmuVL33PZy3hOLV3sRVGm/Befv8n2za
92vHeU019vZ/GrsUf3EiTjcOXj8eu43j5bk4w9j/UAvsMY5u/s3ef+Nwt7nY
K49qhLPU/5+rmY9PXnwDzjF2Fk5hPfyK33aU9cpTve1tcED+ZTrrW6D8FofY
j6DiD95i3/+a/4nn2b+Q4uW72N9i5c/JwGG1/20m56FE7buk4IjG9/lLnJ9S
+f769u836u+njzhv5XLfMTim/j7JwhXy1ltwXPVz0+33v+Kjr7a/d+UJjezz
X/7wfvv79yVTb+Awe/+Ngy+9bn8Py49+jdPl6+oxfrd85wCcYexttRx7jKM/
/YYzVa9lJuvjVft7J+Astb9zJ/Yp/vhlrHeO4lf1tN//8quzcZ767xDDAeUP
TGU/C9T+gdY4qPYj83CR5vPETLv/yv9sLS5W+zk7cVjecRiXKP+dX+z9V35F
Apeq/Y9/4qjaL7XxcsVr/Ipjiqf8iCvU34KDOK72m/fZ57/m120HTih+xVZc
JS97DztFxvnv2t9/8sJ19v1v7PW8g9Pl6huwW96/CWcYB9tE7fef4l98gjON
ozfHsFftd1TgLLnL99in8fSx65kjb7Dr5Vf7O0/jPMUrzuGA6q26gPtdoPFU
XGTvv9rPvNjef/VXoxYOyQUuXCzXScNh9X9BOi5RfGB9HFH/3hvs85/1vRlH
ld+zCS6X72mOY+rvykxcofj0e+z7X/Pp2Q5Xqv019+OE2i/MwlXyrM7YmWLa
l9t4qnG0hs13ybfcZ7//1N51N3bLn3rs9788qyH2GDu/2PXJNPYuvhR7Ff/8
vN1/+Ye/7P7LvY/b/dd4PrHnwa/4zhN2/+U9Z+z+q73rMrv/ik9qavdf8U05
dv81vs9etvsvB/fY/Vf7enV5n4QVf2cILlH8tjIcUfyphryPSuWs6Tiq8aw4
jcvlwGDebzGtZ8EB+/5XflFn+/5X+w6b7ftfbnirff/Lz82373+Nz/v/3/9T
TXxEP/v+N45WvGPf/3LGOfv+Nw42asX3rlveOBBnGHt3j8Ie5c8ZizNVb+hT
2Cv/fZ/9/ld/1zrYp/68y6ifo/Z33o799LeU+eQp/+R/rEdA8TEdcYH66ziS
9QzKtYpZ/yKN9+RK+/tf8fx37f4r3sA+/8KKX7jefv+p/lXr7ftffnmTff8r
v6Sc92lU41v2E9+j5YqH0+zfs5V/6h2+ZyvUfvAwvnfj8sJcvocr1X7afL6X
E3JaTVwl/1PG72Vnmsn/42OcahxcfDHtXXLxXJyu9t0HU8+t+KWj7Pe/4p/u
ZLweeVUj5pNpHF1Tw/79XPk5Z+3vf7Uvd+z7X+3P1LHvf/kHj73/8sSe7E+e
+jtq/z4RUH9NF7K/BYqP22j3X754J+ejSO1r7eU8heT4Ns5bsXzp65zPsLE3
L4/fgyVytyv5vRjR+N5chkuNwxfW5PdnVO2/bYnLFe/lwzHj+LJHcYWxv3MO
jiueuB9XKn9sBk6o/9NnqV8lt34FO9PN/IfWwanG0cGTmI/L2FvvGPNNV/tJ
Hez9V/vQfPv9L1/8M+vnUfsFze33v7FTNp719ir+6z72I0vu3RD7VL/lRPYv
R/nLKtlfv+qt7YPzlH+//b4PKP+OIfb5r3gN+74PKn7xZvv9p3iDoP3+U72j
Ofb7T36xo73/an/AukTjGfOI/f5TfN94+/2n+D/2+yuq/i6w3yfl8seP2Pe/
8qtvs+9/+m/JfONqX74BVyo+3st6JTS/FvtxleL5w1hf52XjZS779z+560bs
kjf0Z//Sjb3uVPv7T/G3Inb/jYOde9vnv9r/dMo+/42dTiHOl1fxlm7OX5by
C5din7F/Xi3Oc47aN7kP+xXPzMd5irtm2L//KH7rcvv3H7nBevv3H41n83u4
SD4QwSH19/ISXCzfXIjDmn+DAbhE/Xe5HUfUX9PT9v7Lk8fhqPIfO8t6lMsf
BXBM7SPf27//an1u627//qv4DR+x/pWKt29l//6r8V77rn3/q/1/rez7f4Zp
/98ndv+NnT9y7f7Lj9rzka72z+zi/LiNvbXn27//yeufwx7lzxmIM42jc/zY
q/76BOz9V7xLyN5/5U/7EOeo/2r/2t//ivfqxPjy1N+xRfb9r/jfZ+37Xy4c
xPyDctg+74tU/4l7Wb+Q3NSe72K1n3Gjff4r/tQc+/c/xf9JYf8iiq98Dpcq
3iCOo4rf2oXzUK75LViHY8bx6y+1z39j94nW9vlv7D//pH3+yynF9vkvz/sI
V2l9Wh7DzkxTv1ftdey/sfN4U+wy9u/vjNPl6/zYbRzfFcAZyn9hNPao/bfj
caa8ayz2Kr/FCJyl8TQfjH1yte44x9ideif2G3s/uRLnqf/vE/b+K35Zub3/
Gt+1i+z9V/ujQ+39Nw4/eq+9/8bBEbXt/ZcnbGV/wvLKx3CJ6pXUtu9/xbds
s/uveJ3xdv81v5Ise//V/g63vf8ab1oNXCE/dN7ef/U3szrxSvV3m81PqL+7
u+Iq5U96CTsh0/6N/ThF/vN2+z1gHFyyGNc0dmL2+8Wl+Nf2eyVN+ZsX4nS1
X/4Lrq/41jb2/BiHr5uNGxj7v/zVnie1P97xHbmJcXxIGHvU/0P/4BbG7td6
vMt50/h6leA2aj/uH+yVb85aL3dQ+6EhnCVP/xx303gP1trA+dR4992Hs9W+
9tM4R+37z8J9Nb41a7Df2HvFxzhX/ZXvw3nKb/Ulzlf7P7/AAcU37MbD5cej
uEC+MILHaHzhRTio8XR+CRfKpwO4SO0L++Dp7GcHHFL8WDM8R/v1YX1crHjB
pXiR8rPPsZ5hje+l3/FS1b//J1yi/S7/Bq9WvOdBHFF+iwq8XvXKDuFSrVe/
7/EW5T98HEcVr27HU6b4JhfjLdd8NjXGu7U/D3XBMfmDYXi/5tfxVVyh8dy4
Bx/WeKddtJH7q/orO+Ajqjd/Kq5U/70O4OPqf0fj97jfckkhPqn2rxzBVYr/
1rlUPqf1PPcudl4x49t3wybuv3G00yycauxNT3mf+2/sLxuBXcbxpT/hNGPn
r+6buf+Kf1WK6xu7x6Rv4f6rXoNhuIHid23GGeqv+1ncRPXvavoB9984/HcP
3ELxj/JwpvqvOwy30XzWPo69Gl9RN9xB9f+6CWep/5nHqd9N8ey3sE/5k3rh
bNVfU8V8cxSfPgv31XiqN8R+za/eO6xfrnywNc5T+0fL2I98jWfHAzigePtD
7Odw7aeTjwvU/uaL8Bi1/+wtzkdQ9S7ojQs1/kmX4yLW92vO33TF39yIQ6r3
6ht4jua7PIyLle9bhxfJx/bjsPJnXkq9pYrf1AuXaL+6r8Or1f7F65lPRPHv
F+P1Gl+XpqxPqfp7ZDfeovk/NZL1jSq+6jb2o0zrcf0JXK7+17zL/u7W/jcZ
z/mIqb/eD2zl/mt8B+p9yP3XeNpX4sOqVzsnyv2Xh5biI8a+f+ps4/4bh0YN
wceNPdvfwwnjwFf/4pNa/713f8T9V/zsUHxO4/tyHnZm/c8RZwNOMY52Lsep
xp6lMVzT2HfrXuxSvME2nGaccFbidGNv7hRcX27gx27jYOdmuIFxKLWK+WQY
B97bjJsoPzoae4xjs+/CLYz94VOsZ6bceT1uo/wfn8Ne1Vt7J+6g+a87y35l
Kf/QHNzN2Hn7buyTl//G/mcr/+t1OEf1ThfivmqfmYf9xuHxj+JceVB/nCff
FcD5yveEcEDj832Ah6vejFO4QO132/GOUX8/FOGg8t/6Dhdqvc9cx3oUGbuy
u+Ppcv/JOKT1W/QBnqPztMSufzHn63b2Z5HOT/98HDZ255Tgpep/6hFcovV8
yc35WK3zcvBRHNH5OzMXr1e8uz2fpZpv25SPuf9qX7cVjmp9Gg3GZTpPn4Zw
ueIDNuLdWp8+X+GY1rtLAu/X/L66sIz7r3iZCx/Wep25CsdVb5z1Ea3HhMtw
pebfsxo+bhx/+nfqJTTfJw/gk6p36n1cpfXctxCfU/76kdiZbdbnsR44xTg2
81acauz8fCGuaeypddjef+PQivX2/ivfP8Pef2PfN0Ps/Tf2xjrZ+28c/TPD
3n/jYLXaOEP1Pzht779c8bO9//LZr+39V/+bDuBMeeYh3MbY/b09X17VP3MK
dzCOX3I59bOM/Y3vwN0U9/XDPtXvNRNnq79K+/zMUX7xxaxfX8V3+rBf49v2
Gs7V+Ers/uap3uyO7H++1mf6YhxQf6+cwcPV32u9tnP/Nb5l6/AY9f9qzR3c
f41v2OO4UP1dvhkXKX9EzU+4/8qfnYNDyh++GM/R+O74BhfrfF2YVs79J94O
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
              "]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}, {{
             Directive[
              PointSize[0.006944444444444445], 
              AbsoluteThickness[1.6], 
              RGBColor[1, 0.5, 0], 
              Dashing[{Small, Small}]]}, {}}}, {{}, {}}}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False},
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             StyleBox[
             "\"Trajectory Difference [mm]\"", 12, StripOnInput -> False], 
             TraditionalForm], None}, {
            FormBox["\"Points\"", TraditionalForm], None}}, FrameStyle -> 
         Automatic, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
           GrayLevel[0.4, 0.5], 
           AbsoluteThickness[1], 
           AbsoluteDashing[{1, 2}]], ImageSize -> Medium, 
         Method -> {
          "OptimizePlotMarkers" -> True, 
           "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               (Identity[#]& )[
                Part[#, 1]], 
               (Identity[#]& )[
                Part[#, 2]]}& )}}, 
         PlotRange -> {{0, 1609.}, {-0.010255352884996682`, 0}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
        TemplateBox[{"\[ThinSpace]", "\" \"", 
          FormBox[
           
           TemplateBox[{"\"After\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "120"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm], 
          FormBox[
           
           TemplateBox[{"\"Before\""}, "LineLegend", 
            DisplayFunction -> (StyleBox[
              StyleBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], 
                    "Grid"]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                  False, GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
                 "Grid"], Alignment -> Left, AppearanceElements -> None, 
                ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
              FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
              False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "]"}], 
                   "}"}], ",", 
                 RowBox[{"{", #, "}"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", "True", "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
            Editable -> True], TraditionalForm]}, "RowWithSeparators"], 
        TraditionalForm]},
      "Legended",
      DisplayFunction->(FormBox[
        GridBox[{{
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {2, 1}], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction->(FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "Above"}], "]"}]}], ")"}], 
        TraditionalForm]& )], {900, -185}, {Center, Center}, {360, 360}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageMargins->0.,
  ImageSize->{1100, 300},
  PlotRangePadding->{6, 5}]], "Input",ExpressionUUID->"a6c0a425-8552-43af-\
9f4c-87d9d98d10c3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Results", "Subsubsection",
 CellChangeTimes->{{3.8273085765488877`*^9, 
  3.827308578416298*^9}},ExpressionUUID->"49c87c31-920d-4a7d-bbec-\
22bdbb2e2a21"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s1", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Points\>\"", ",", "13"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<|Field Difference| [%]\>\"", ",", "13"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<By\>\"", ",", "14", ",", "Bold"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField2", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s2", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}], "+",
                  "i"}], "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Points\>\"", ",", "13"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<|Field Difference| [%]\>\"", ",", "13"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<By\>\"", ",", "14", ",", "Bold"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField2", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "[", "deltaField2", "]"}], "/", "3"}], 
                 "+", "i"}], "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s3", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", "*", 
                  RowBox[{
                   RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
                 "+", "i"}], "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Points\>\"", ",", "13"}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<|Field Difference| [%]\>\"", ",", "13"}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"PlotLabel", "\[Rule]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Bz\>\"", ",", "14", ",", "Bold"}], "]"}]}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{"Orange", ",", "Dashed"}], "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}], 
       "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
       RowBox[{"ListLogPlot", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"deltaField2", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"2", "*", 
                  RowBox[{
                   RowBox[{"Length", "[", "deltaField2", "]"}], "/", "3"}]}], 
                 "+", "i"}], "]"}], "]"}], "/", 
              RowBox[{"baxis0", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "*", "100"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], 
             "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"s1", ",", "s2", ",", "s3"}], "}"}], ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "10"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1200", ",", "300"}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8249101350562754`*^9, 3.824910164400641*^9}, {
   3.824910205165992*^9, 3.824910211228835*^9}, 3.8249103140847063`*^9, {
   3.8249103969586773`*^9, 3.824910512244092*^9}, {3.8249105652070637`*^9, 
   3.8249107109034615`*^9}, {3.8249107758973136`*^9, 3.824910819813551*^9}, {
   3.824910865984995*^9, 3.8249109632099705`*^9}, {3.82491100035645*^9, 
   3.824911001774688*^9}, {3.82491103794319*^9, 3.824911133420697*^9}, {
   3.8249112296836233`*^9, 3.8249112567284555`*^9}},
 Background->RGBColor[1, 0.85, 0.85],
 CellLabel->
  "In[278]:=",ExpressionUUID->"d0cf4c33-88c5-4cb7-95c5-a100a6ab6a02"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}], 
           LineBox[CompressedData["
1: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
r+3goj2uKvPLJka/hwvDhVOvd9J8Q4qHFVYlz24YsHUZHiTV5gfPBlA9wMNm
i0O2nbsZfVUe1BJ9Yh8sY/er83Aj7JnRzlfMfjV5mNjw4UsN/V6ly+urdzK+
Zq1i+414mG85c+anDsqfPKzL2bzlXA/DVjwoxrSqPKyhfMrDGR8TqZ3+zJ+d
eCjWFQ7qX0LzFR6aA1b+OOXNcAAP6T9U/0naQPGWhweK61y85jIcx4PcaANL
QQjDXB7sLL6YTy9g7yHh4Y6yQ74NzdczeZhzVt+shuYNOTwM7Tlf8PIL6Z+H
HY8Pvu9P8+kCHparNVVO6aV+jYf4DfMly6aQ/nmwrIp9+8CA/JeHg6b9dhtN
Y/vreSic3WVuOIviGQ/uv0uTNKgeaeIha2jg/fwppH8eoj2z+hXdYPK38tC2
+HnIsAoWbzt46DCVXRp5gflzDw9lSpY/X5VR/OPjb/k9k6Ht7D4ZPr4O2r75
yw+aB/HRMvKR49bX7D5VPowe1VvPTqb6mA/ZCV7zHbXZfZp8LDkRmHH3f/MS
Pvbe2qxv8ZjtN+JjmcdM3ptKyh981L+48HnuP2zdit/Xz61IHeVO+YSPiX7v
jv6kfO7Eh/ez9Edd9HuvBx8vxx13LTrP3ieAjwMzp9tFT9b4D3P4kFtZMzR6
AZt/xvEx8s0L+RU7J/+HuXz0ptYEJpmx8xI+5k0ze3/Ym/GTyYf9fquijT6k
fz5k3m+cpfWF+jM+2ocr6sjsZesFfKSGL5nyWpn8n4/F17Ll810ZLuVjdfrF
t470fUklH09rHDX+qrH1ej6St8zLtUwh/fPRnNPlcZW+72nq40feN0VXneI7
H8b5Vu4rRGx/Kx/fZo3cM4TyZwcfWVMSlitdYPL09N23SGOw/Wqa/wlQZyKr
svEm6V+AEMNg6/Qy9h4KAuxUXFNgtYvVx6oCWG/5t9qulNmbugAvsw627l3O
7tMUYP34vVdTgtl+XQF2Jagpzm5n/BsJYOmzOryKvr+CAA6/aoOM/Cn+CzB+
WcRVN3/WP9oK8EXqml7oXdK/AKNmtUu9oe8VPASo6V735kMXxX8BKvsZugq0
KN/20Z/9YVrnQ/J/AWYpbZ0SxaH5owB6ejaPrUlfEgE+e+nPkxnN5MsUwPvT
BYuS2cyecgT4s2bTvrcRbD1PgLlq8UucxpD/C2D/qLAo4X/1mgAH44LcAgSk
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
fjEnHV83jDh74vhU/B83Znf8
            "]]}}, 
         {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {}}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1: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
3360
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 6.796811262409466},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"|Field Difference| [%]\"", 13, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox["\"Points\"", 13, StripOnInput -> False], TraditionalForm],
          None}},
      FrameStyle->Automatic,
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Automatic, Automatic}}, {{{{6.907755278982137, 
            FormBox["1000", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             
             TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {16.11809565095832, 
            FormBox[
             
             TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {20.72326583694641, 
            FormBox[
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.420680743952367`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {23.025850929940457`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.328436022934504`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {16.11809565095832, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {20.72326583694641, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.420680743952367`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {23.025850929940457`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.328436022934504`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
      GridLines->FrontEndValueCache[{Automatic, 
         Charting`ScaledTickValues[{Log, Exp}]}, {
        Automatic, {{6.907755278982137, 
           Directive[
            AbsoluteThickness[0.1]]}, {11.512925464970229`, 
           Directive[
            AbsoluteThickness[0.1]]}, {16.11809565095832, 
           Directive[
            AbsoluteThickness[0.1]]}, {20.72326583694641, 
           Directive[
            AbsoluteThickness[0.1]]}}}],
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{49., 5.000000000000057}, {39., 16.500000000000043`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"By\"", 14, Bold, StripOnInput -> False], TraditionalForm],
      PlotRange->{{0, 819.}, {6.796811262409466, 22.360487495868274`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], {180, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}], 
           LineBox[CompressedData["
1:eJw9e3k81dv3/mlQmlBRdBs06yYd6ZYSngYRlaG6SdExZnY45vFMnKOREpqP
dKVJkkrzKeoiolmD0kVJiU8DSsPX72XtX//0etp7vfdea6/1rLX2Po13C3Lw
7M3hcIz6cDj/7++eP23mXbf/2C2d33Gd/gEl2maPP2z4RFgVQ9NealSnNRPW
QPaxztS/t9cR1sRjRdOb4VcqCWuj12H/y846wYRH45zhEHdf/5vmPVgXFzQt
T2w/XE54As74LdLMTLlDeBIWH5hScWFbJeEpmFgz9l3Dr0eE9SC/kLt0TmUD
4T9hrb7tm+uWb4T1cTYm693dQ3WEDTBvsfHumqFDlT2YixHeu4+Y7vpI+zPE
BBP38vbW/wjPQnbg55uhBi8IGyE51NL67d1HhGdDYXby/EyvasJ/YbjNmFe7
zUoJz8E1Qchj6403Cc/F4oKfonNvrxA2xqvNYxFy7wLheWjsPHhxnew84flY
uDdxDSfhMmET6AeZePctKCa8AMfNvdSza8oJmyLfR8X8YWsFYTPc3j3GoejH
YdLfHNwVYZdujmLnCZjsCT1++a/GHiwEZMMSqo4tfE3jC3FndkJF7761NL4Q
Sxsff8KQpzS+CEd1BJ0c0xoaXwTVxwO3l74kzFmMx9nhBr2WP6PxxXBbeDXq
luw5jS/Bg3uXPvsOJfsKl0D9gKbtr042bgFRccSZ6OeEhRa4mD/ryY7r7DyW
wiGhwWFpxisaX4qHz72e8yzY+Vni/cUlUdxwpp8lhk3NmXBS8o7GrVDV3LV4
VPRvGreCxbIyzdRw5s/LsF7XyKK4i+whXAavhO29cZaNW8N9g1pgUTOzjzXK
L4Z/LdjI9m+DpuZJUTnWTH8btN4ze2cyhDBnOZarC6LNssiewuU47PtlRMxC
Zr8VqFz5fnTzcfI34QqYdryOfTz9Po2vxOvmyePLl1K8CVfi8k3JsBNi5n+2
sBw6elvN0X9p3BbttzQm6c5g/mIHrQPyfyNSSR52kGm9Cak0v0vz7ZCuL225
uo3WU9phm8N3taoxzL/sUaIScmeZeQnJ26P2fNV964UXSd4exz4NMTlkcJrk
7eH8+cf0d5UnSd4BwYou5XqbQpJ3wOsYrbkvVK6SvAO+j1kw4tVKih+lA7Jf
LRntJKf1OKtQ9OJrxRT7WyS/Cli+dULHK8LCVfie9nvaeCOyh3IVdhVkvF01
gPTjrEbaqj+y3I89IPnVyHWfOvnvMubPq7EtbV/+xTnkb8rVeJES6Jo8idl/
DY7XTGgo0a0n+TXIub/RJI/5j3ANFpmtKpgyhMmvgZnKgSLNI09I/m9onHv7
qO/zhyT/N/Rn23iVaRIW/g3JJwMvq3zCyr+hGfDw/S3mD5y1UOmc3mRl8Zjk
1+KPY3rDtywmLFyLDq/st1mfaL5yLdTrLOoVo2ic44iYfkf6vz9D+4Ejcjpj
96+dzuLNESa/xmX8fkLxpXREmlI2SUedxdc61IbH/zIYw/RfB6fvT3UOSgkL
16Gw5VvJyPkUP8p1mNn5SH00l8WvE5JWR4Se0KL9wQnLBJEfskqYPzshoPzW
WPM0Ok+lE65kFt6L2nOD5NdD8K6u+rqWkuTX46Pahv/qZ1wj+fUY9Sza3vvT
JZJfj5PDQyaFb2T8ugFmFjlxRzMKSH4DXNKC7qcIz5L8Buj5/rlicw3xtXID
3mX/L0qioHjiOKPDx0enX/09kndG9cKOxJldzH+cUbi9xOQqr4XknfG+1PDX
k0iWH10Q0DWwMW0Mk3eBbe1Gbakhiz8XJLr4zRo5pIzkXSDYFX6fO/M2yW/E
dKHlz18ywtiIPxcv+XD0Nvm7cCPy8v5LrfyX4l25ETqO+etDWln887BBEO+j
PEXzdXmY3LRgXn06i2ceYiyDNlu4kH15PKzebhl99xrZQ8jD1+DtWiNtaFzB
wzQXfsXIcnZePHx8/HrIvTziizoewlcOC1KsJH05rvgg9m96nktY1xUm7hv6
35lK8QVXGDbfulo8lsZ5rkj9y96hdSblW6Er0sb8XiVXEFa4ItfAp2lfH4pn
pStOf0x9eERJ/l7nCrcitUa1zYx/3TCoLG59mj7xt64btjw7ODK590ta3w2S
yddGzOxP4zw3jK60PvnwPuNzN/xz1jE1TUTnrXDDR7fT536bUTwp3SC4NOuJ
UEC4zg2xt0+pBLJ8yXHHIN/3rzUsaFzXHWc4wx7f6zpD67ujuCqr5axqA63v
jhKtaw0jG1i+ccfs7Ldm+XPY+u44vnX8ZochjC/ccTp1X310J9mvzh1pm/q3
/6XG+MsD50//aF4SSfbS9cC3vPhGq8EsHj1wasWuoIY2wjwPpPd7rOb/nOUj
D7hMXN0ayuJX4YGmtJ+P3grY+h6QDJrHP6NN43UeCOSbJo++y/jPE6jQOvpo
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
+D5p3ffbk4i/uEJ0xHFuh7+l+tZYCM0tfqqpaey9QojGmLKKrGUUH1ZCKEJu
Nh/lP+zxFzshtCr/MX++lvjIUYgRDYc404ew+xghmi+3FX9xo3j0FuJA51Yn
3UyyH18I+ygz5SFb4p9IIYqGCBtjfNj9iRCJnwxF5/aT/eVCrDk9aYnKYeKz
FCF21DnFGhdTvskUYuqIXdcdnlO8K4QIC1805KAd8WOuEGv/uPS8qIvlKyGW
LrN+wCujfFYkxOxXExd+i2X1ixA//g1MDFxI+bVUCFO/Ng3L74SrhZBmNByd
+w/J13R/LyZV5jTrM52vEA59SmtPGDT14CYhWmNSwubOpn6pTYiTS7sSar+S
fKcQ213yM6rWs/5fhAkRS9tcbcieqiKYyq5OPxFD9tEQIdZran52K9lXW4SW
Tq39YwtZfyjC8Ytr1k5YTlhPhLv311xft5v6Sa4IN6Onew1TEDYWIdLmVYmR
M3vvEkEy4ajhQAvK11YiXB5tNTY3gt0niPBvydOs+K1UbziKkPl1irWmH91P
8UR4Mi1l2OC1VM95i9DUERkVX8PqLRHun5ngEhlH9VKkCJO95hxyncruz0V4
ntlm/6Y3rS8XYZ1H+WvuD3YfIUK5qVGQ0xHSL1OEldo2T996svcmEQ7cbRnq
Y0k4V4TxqQuyjk1k/boIGbIjNf1GEx8XidDXOvEGZyLr30VwLyxT/aeF+KJU
BH7Gst5jDrN+XgSvrNSzQXyaXyNCsOt5fVEofb9OhNGyi3N33qTzaxKhvW1/
3/lT2H2PCB6O51MrbpJ8pwgv7Dmv5wjY/bMYdclNlpbpNK4qht76vZ3XZ7B8
IEbR6pHTIjYTP2iLUSY+kpOoTvyh2y3fK/p1y1biCz0xUuon2hXWEz9xxegw
GlQ1xpzFvxjzxr6tfZdPfAkxXCTCeP0kkrcSo1ThGK5vSf2xnRhf/v1o0eRG
fOMoxtD7S+OGTiZ+4Ykx5UhM2Mh04m9vMWKyzw85WUJ8yRfjx4ujg05eIn6J
FONkzvS8T27s/VKM+emzFzxi/ZNcjNHuazuWD6LzTBHDZOyKUXkjSD5TjP7q
x+fJC9j9VPd+Qi1uTKglnCtGQ9i1jcfTaX6+GONfOlogmr5XJMbR6V+3VlWw
9xExqu1tXEo76PxKu+0zY/qhq8WEq8V4B5X6K9tpfo0Yto9W2lcsZO8pYjj1
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
ugu2hDOTcVr4VPzoGUf5f18x+7c=
            "]]}}, 
         {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {}}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1:eJw1W3dczf/3bxiFuDSkpEv4ZCUimT2NKMK1UqlcpUSp2751G7fuTEZkRORa
SVYke1yrMiIVqq9y7ewQReLX7+G8/OPx7LzWOa+zX+/b1zd0vr+OlpaWna6W
1v///+9fg6NxgvfiuC9GavoDzOR3ruv9MSSsB9Oxc0e102d0DsIcG+8+1TIh
bIRnmz5vcnLtRdgU+UG7/F9G9CDcGyb8vMMzgzmEuXAzihZ9dGS4H5a5df4Q
cbs74f4Yvle843OdMeGB6H4x85hRV0vC1tjrw3l43dqU8GAMlu25I6zsTHgo
PDodjEyY34GwDawt03jX/PUI20Lg3Od4lw0Mj4Dj09Atc2UMj0RfXpdHfZcw
bAftnjcPXajqSHgUKnZ47vZ8zdYfjeJvtec+5rQnbI/FT/Ve3BnRjvAY/M16
3LlTmg5hB1RHXDRrKtEiPBZbxhz/z3binyv/8Dgcrzuyf1hGC+HxyH/9fJHL
85+EJ+C84pbrtN4MT8TkdQt0n35oJjwJK5zSXv76zbAjPlydGhb1nWEge0xX
zvefhMWA1wSL66UmbL3JcItrXztqF2HxZPhlhgVUjv5F9CkYr856ctWglehT
0LCv85v46r9En4ozw0cPXcPX/sefeCpct966/WIH438auPVPc3oG6BJ9Gg5v
MLBoOERYywnl75/9eBzF6E6oe9Ua8U6L0afj/ZsKgwnraD3xdDzccNTSZjxb
fwaGzFfcud6B0WfA3/3R9q82jO6Mi17WioabXYjujKrpf+oLIpvo/C7oMMXi
kH74D+LPBeotPXsFn/xG9Jm46H+GM0TTQPSZ2H5sZUfjIR+JPgu9mnW7x/x8
S/RZyK2vejfhwRuiuyLH3s43z/Q10V3xpuz1k5uLXhJ9NppsqpzsFj4n+my8
PbBCKRquIfocDDh440JU7hOiz4Fel4Mdv16tIfpcLLpVeu+s6n9Enwuzo2f2
XuU/JToPPcZU8Tv/pfXBw/94X+rHx76n8TwUulp+8Rl14R9W8yDubnX4Yp86
mj8PVY22T7o+fkbz58FnovOmX4Po/OJ5uPVm29itfsSveh7WCRZ6Fj+j9bXm
Y03ay/jadJIf5mOW8uCHmvYkX3Eb1h5U+ulSI82fj0mTzQpmuX2n+Qtg1k63
y83zRMcC5Dfv75o/gs1fgNwrObVLZ3yh+Qug1s+xjrD4TPMXIqfDvZeXdn2g
+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
/NhJPdX/B4xu6eM=
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, -6.670523455537707},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"|Field Difference| [%]\"", 13, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox["\"Points\"", 13, StripOnInput -> False], TraditionalForm],
          None}},
      FrameStyle->Automatic,
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Automatic, Automatic}}, {{{{-4.605170185988091, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.01\"", 0.01, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             TagBox[
              InterpretationBox["\"0.10\"", 0.1, AutoDelete -> True], 
              NumberForm[#, {
                DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox["1", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox["10", TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.0106352940962555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{-4.605170185988091, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {0., 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {2.302585092994046, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {-9.210340371976182, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-8.517193191416238, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-8.111728083308073, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.824046010856292, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.600902459542082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.418580902748128, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.264430222920869, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.1308988302963465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-7.013115794639964, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.907755278982137, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-6.214608098422191, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.809142990314028, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-5.115995809754082, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.961845129926823, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.8283137373023015`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-4.710530701645918, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.506557897319982, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.659260036932778, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-1.2039728043259361`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.916290731874155, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.5108256237659907, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.35667494393873245`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.2231435513142097, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {-0.10536051565782628`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {0.6931471805599453, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.0986122886681098`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.3862943611198906`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.791759469228055, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {2.995732273553991, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {3.912023005428146, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.0943445622221, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.248495242049359, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.382026634673881, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.499809670330265, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {4.605170185988092, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.0106352940962555`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.298317366548036, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {5.521460917862246, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
      GridLines->FrontEndValueCache[{Automatic, 
         Charting`ScaledTickValues[{Log, Exp}]}, {
        Automatic, {{-4.605170185988091, 
           Directive[
            AbsoluteThickness[0.1]]}, {-2.3025850929940455`, 
           Directive[
            AbsoluteThickness[0.1]]}, {0., 
           Directive[
            AbsoluteThickness[0.1]]}, {2.302585092994046, 
           Directive[
            AbsoluteThickness[0.1]]}}}],
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{49., 5.000000000000057}, {39., 16.500000000000043`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"By\"", 14, Bold, StripOnInput -> False], TraditionalForm],
      PlotRange->{{0, 819.}, {-6.670523455537707, 2.6967875204314273`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], {540, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}], InsetBox[
     GraphicsBox[{{{}, {{{}, {}, 
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}], 
           LineBox[CompressedData["
1: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
            "]]}}, 
         {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
          AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], Dashing[{Small, Small}]}, {}}, {
          {RGBColor[1, 0.5, 0], PointSize[0.0055000000000000005`], 
           AbsoluteThickness[1.6], 
           Dashing[{Small, Small}]}, {}}}, {{}, {}}}, {{}, {{{}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6], 
           LineBox[CompressedData["
1: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
m5mK7YfSFp4ezXB2KoovzsjaGm+E/wP2QJpL
            "]]}}, 
         {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
          0.0055000000000000005`], AbsoluteThickness[1.6]}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}, {
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.0055000000000000005`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{0, 9.560425956820364},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
          StyleBox["\"|Field Difference| [%]\"", 13, StripOnInput -> False], 
          TraditionalForm], None}, {
         FormBox[
          StyleBox["\"Points\"", 13, StripOnInput -> False], TraditionalForm],
          None}},
      FrameStyle->Automatic,
      FrameTicks->FrontEndValueCache[{{
          Charting`ScaledTicks[{Log, Exp}], 
          Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Automatic, Automatic}}, {{{{11.512925464970229`, 
            FormBox[
             
             TemplateBox[{"10", "5"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             
             TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {16.11809565095832, 
            FormBox[
             
             TemplateBox[{"10", "7"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {18.420680743952367`, 
            FormBox[
             
             TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {20.72326583694641, 
            FormBox[
             
             TemplateBox[{"10", "9"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {23.025850929940457`, 
            FormBox[
             
             TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
              SuperscriptBox], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {14.508657738524219`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {14.914122846632385`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.201804919084164`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.424948470398375`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.60727002719233, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.761420707019587`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.89495209964411, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {16.012735135300492`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {16.811242831518264`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.216707939626428`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.50439001207821, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.72753356339242, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.909855120186375`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.064005800013632`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.197537192638155`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.31532022829454, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.11382792451231, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.519293032620475`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.806975105072254`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.030118656386467`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.21244021318042, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.36659089300768, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.5001222856322, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.617905321288585`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {21.416413017506358`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {21.82187812561452, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.1095601980663, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.33270374938051, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.515025306174465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.669175986001726`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.80270737862625, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.920490414282632`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {23.7189981105004, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.124463218608568`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.412145291060348`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.635288842374557`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.81761039916851, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.97176107899577, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.10529247162029, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.223075507276675`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.328436022934504`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.423746202738826`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.51075757972846, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.590800287401994`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.664908259555716`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.733901131042668`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.79843965218024, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}, {{11.512925464970229`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {13.815510557964274`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {16.11809565095832, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {18.420680743952367`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {20.72326583694641, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {23.025850929940457`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.01, 0.}, {
             AbsoluteThickness[0.1]}}, {9.210340371976184, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {9.903487552536127, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.308952660644293`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.596634733096073`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {10.819778284410283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.002099841204238`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.156250521031495`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.289781913656018`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {11.407564949312402`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.206072645530174`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.611537753638338`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {12.89921982609012, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.122363377404328`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.304684934198283`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.458835614025542`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.592367006650065`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {13.710150042306449`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {14.508657738524219`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {14.914122846632385`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.201804919084164`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.424948470398375`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.60727002719233, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.761420707019587`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {15.89495209964411, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {16.012735135300492`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {16.811242831518264`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.216707939626428`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.50439001207821, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.72753356339242, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {17.909855120186375`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.064005800013632`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.197537192638155`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {18.31532022829454, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.11382792451231, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.519293032620475`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {19.806975105072254`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.030118656386467`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.21244021318042, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.36659089300768, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.5001222856322, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {20.617905321288585`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {21.416413017506358`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {21.82187812561452, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.1095601980663, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.33270374938051, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.515025306174465`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.669175986001726`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.80270737862625, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {22.920490414282632`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {23.7189981105004, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.124463218608568`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.412145291060348`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.635288842374557`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.81761039916851, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {24.97176107899577, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.10529247162029, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.223075507276675`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.328436022934504`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.423746202738826`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.51075757972846, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.590800287401994`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.664908259555716`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.733901131042668`, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}, {25.79843965218024, 
            FormBox[
             TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
             AbsoluteThickness[0.1]}}}}, {Automatic, Automatic}}],
      GridLines->FrontEndValueCache[{Automatic, 
         Charting`ScaledTickValues[{Log, Exp}]}, {
        Automatic, {{11.512925464970229`, 
           Directive[
            AbsoluteThickness[0.1]]}, {13.815510557964274`, 
           Directive[
            AbsoluteThickness[0.1]]}, {16.11809565095832, 
           Directive[
            AbsoluteThickness[0.1]]}, {18.420680743952367`, 
           Directive[
            AbsoluteThickness[0.1]]}, {20.72326583694641, 
           Directive[
            AbsoluteThickness[0.1]]}, {23.025850929940457`, 
           Directive[
            AbsoluteThickness[0.1]]}}}],
      GridLinesStyle->Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]],
      ImagePadding->{{49., 5.000000000000057}, {39., 16.500000000000043`}},
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Exp[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
        StyleBox["\"Bz\"", 14, Bold, StripOnInput -> False], TraditionalForm],
      PlotRange->{{0, 819.}, {9.560425956820364, 22.936596328451824`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, 
        Charting`ScaledTicks[{Log, Exp}]}], {900, -116.24611797498106}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212}]}, {}},
  AspectRatio->Full,
  ContentSelectable->True,
  ImageSize->{1200, 300},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.824911130087823*^9, 3.8249111361817884`*^9}, {
   3.824911232790889*^9, 3.824911259900016*^9}, 3.8249119765876665`*^9, 
   3.824912803774558*^9, 3.824913850134773*^9, 3.8251495637704144`*^9},
 CellLabel->"Out[281]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQt0ndd1HojizZcetivLjlsrnjrjpnFGU0+ndvNyJnbi1NM66Zo27kpz
Ry5bhRmHjYK4i0pNm7gkyAuSAAHwAZEEHxAFkBRFgiAJ8U2Cgh6wJdqITC8j
ekxoVrXoVXgtqotLwy5pef2z9/722ef85/7/vRcgqaixsWT6vv7XOXt/+zv7
df7Zl76y5N8v/dJX/mjxl+77rbYvPbTkjxb/2X2/+Sdt9FHD36qraxytq/tb
v3BvHb1O6urwv/hvjP5X/vFPP30nPn2B/21Irh4vPrhzil628Pt75D3+isev
ys/dL/yL1Gs9QL+Y2llPb+oa7HC5+pffwWv98Tt0rUczR7GZ33+Ifx8c+mB0
ncwL8ovw1tzr4Exl43h7rxaP5O27WoWxfF/qjHyEHFz9evyiCWd0l8mUxdtz
lcyxu6VXqThm7tSpU9V2nXo+QxPmBn/0aaVnui3XWvoOXWtPPIoPqpo/WPcz
GVCRO20VQcVNmjzZn7yD13roHbrWcKYsNvD7DwdwURU43OXKvw1vMHiZqdHv
1HVjfXgnrput9XLlu1KHV7N3x48XxaK1ytemFP6Ctdjxd+q6mSN9m69bYaQb
7OR1d0ff86F/NodjvjLLYx6vdHf8dPwYs7m7isfk3F3uMWV359EnGOGWjCt9
bQ7HfH2WxxxL8lnxT96nv8r/NjqF4DH7P/iTBlOROtGMZoxm+Lv6siN/jT9p
pR+Zka78+1+RT0x16aPy35R/8ssJLLlXedaQWo783Z+gZ/0XP0HP+rdFkuWq
zd5suhe/nqSxVNBrYfnvyl+Ibtzpn7uGQ+p+iY95D78PqCi/rOFgHEu/D+y+
nKWGY7/wE/30v/MT/fTvC+S//Ay/wZ/fFZDRpPw35Z/I/TSYLgItFtGPajm4
zp7G2CxGsuYrv8dzu2CdV/XYL/x0DFQXfrLHINKISB0/k6hu2wIh+kH5J063
A7XEJWs5GMdGI08vazlWrOLdanDdU9Z0x6YLP5FPb1rwE/n0lS3CZ/nzO+w+
qmqT3ge+CB5+Nvq/0/FON+w16r//IpiyOduBv/lPnof+f/OfPJT5HCaY4mb6
sgZ+Jee8C3pYOx0sZ4O1X9EfW+2X5S++8BM/AhVXAz8RIwBdyPHtLAjX2GZX
wp9lrLp/jT9pDbQudUBVHwA9dC0r+V+p4Tc1+3X+xj1njk/nb9xzwp+TRH+3
yuP5T/glXemf0v9+S1//dvCaP7/DfinuZByufm//fr68H7nwcqH45PTlH9U1
Rt/fdZPv7/4f4fgmvKchoP+GT32vbl70q89E72WUmu39zLX/jw4sPfqNRe+G
p6nleLrdgSMv3vTsyvM24dnx0YO8tK5l9N4NozDH42d7PuicCYnqXP7vF0Tv
FyY/1eS5aDJL+Jw0efm2p3+qyT/V5HeLJv9K9P0/reX9rdGEtr7zv1Xlav9Y
3tN95kiirNob3nr7xzpm9VXGqJqMVXv6347e/3w0Z3+npjm6TyfGeaNq4Xzl
nzS94zPd9/jF2zzTL77yXyvONE63bMtTf60zTY8zm5m+J+WCnNN6NRsL/dzy
h/8z/a+e3tc1GMxqbkf+qOD712eu61N9W95PTL2ms/DF6KnjWYnPx//cK59d
ufrf9Jh/UOPI1OLDKv+ER6aRTg79OHbsGK5CLyp8goHbtbfSb376yU8/+ekn
t/aTrY+NCUK1fGXDkwQQhFykg29c/+/4cR3r8W8mWQgFBnBrEcqfcxYIVTW0
VP5JNeyGXbYxUkuU//7z/E8TPTuMMhlDWlLUAflpXPRXMRvIRn4/Br9V5ar/
OBr3u6LvQ/tcyzz8bpXr/Xb0/udrmrO/y//ey0N/fOrW2JZqVvfn5DObjbrG
m5yHd06+P8z/vt+5NW+KnuSs1bJGirjJX+NIubfxCP19/Q5+TcfPVQxuET+/
JXpfNn7Hnn51juP3N0Pj4/Vu7ZJHv6lx5GQmm8hg0SEYj1j++g9N3UZNfeee
EU+DMy9efSL1jLy+ne0zflfeY+To37pP35LnnZvmFHc+O4ux4bdNwdPTr8XG
zkZreMSqac0deq2Y91TTlk8E16F/694bfX+rtYfOoTIxJ8mKRvHWyJV/+lsj
V5PynnR5+NT3+OXvB0/OZ/3renJ+Gz8xzv3W2z9+9bVr/PKT0QikLdrNahSO
X9p9Fq4F9d3GGnZrRopjZLdD027WPsUah3s+OflXRL9pHtQDdKs1EDJpvvMc
mYTA1j7SOD9b9duhjbgGYYW+j2XzJkeCVjz88sN43OnDyfgKfvmpRGU0NTL0
jLdxZLTS6+lSMigQFPvsq42U8OZG+N8g+rdmrKrpM8YKfnNnhcLv78RzjT6Q
tNf539OPu4afJ8Z5S8b2Vut3Q3TPWXPBb2vS80Zc99jxp5OrU3LmxslLP8As
0RhU0/XZoe9z0ZPclzf6NHQiNbdBsn9PnhH3gNuoZTzLZLuR8JCtXd9XSSMw
biQv9MmStacJJ2+NdL+T4yVRpZrGqzW4K4+C+Vc5jVuZ7EmmdvPL98sZcVUe
v977MH4Hzv0lhI6ucTPjBx9F7eiQ5qjZ6NB511zH2/NrAr1gnG8WFT5TdV4a
Es+4a8GDD+AReu9TjM+bJ3peMnmDT16iz28FPvj5ei462st7r7wUqWh84/p/
p+9JWl585b/OTeJxxcoSj7uAQitCXB5nC3zjmsbk8ItaNGA1RunpV+n0dPd1
/7DSSPcscyPdRD8nDoDP+bgwSjx3rQhHmdc52aMMOaJr0w8xyrReuH2jTP/p
KNMQE7pduzzHUcZV6e5VnjF6/P7+bHluovUy3dC5F67o727NKNeGPfb8FbAH
syJ31URMBuYZE6MI5OOgc5kZ4Uep398sKmXMKgl6+axenP5h5qxmoRWsMmkB
Hfrmjbfq/l402/fw+2b7vU37/YEU8NpUmGgTzSvdPp6Dx3F+dLWbwzHc+5Wr
/42uQSBV94vuPd0A3+uvR3MPDXz9m6PTh7v8XNPo4PtbMNeSSSDH0/X1+xei
uczVyGjucF98R9U0shBcgX8fz5me35jBe4O5Mo0N+JzNHb3xd3Fr9PV3g7Mw
2vxidO/ZczawaQu98XOGe6X/CE7YD1jLnHmGgLvhZ7iZuSKuYjbK33/MBmqc
G7NR8dzcE30f2rCBvWfdaqIJU4c7Jegqm63ZaVaMqndXmbWm6Pe1oW48q+A6
uISMjcwOEQMEdcqiQtmaCJ911uzeTtSF9YiloZrmZqNvVWnpaGWD5eYtA41j
qRGpaqVnoiHGTzHWA6WvuXVVkyGgznE1rL6d+o/3+fpv8dGUpNBd6VVvVlKy
ccBW7PRfa/CLV1+7VjbT/ytmoEJOHo/vLBCCTMPYEpvLCgjxHv5nHnwxxDtB
OnA6nu7e+3AvzcY88YJo881hRk0z22gzS1f9MM7QvTY1t7QyfQfmFl4EP7d2
Xza3+AXfQebczq+chTcvNbvwYmTNLhAjeftGsvV+mmNUEledXVuP4rFyZ5fM
o03zu8AipGY/9vnfmSkNFoEkgjd3aSBeRsct7T47R5vgfTfZNiGUHtXXq1O8
xDI252e0ujSVZ47EWbLZdgPXYOufgyHm0arVbkDaCN8ypG3dKi9tyM6kUaAl
A70g4/LOWA/4RZjWErmll/dFUiiY02yzQzJEnxIi/p1I1v6RvKcv6EE8h6ff
JpKrrO8rSx1nm2GcabwQNlBpjbHHS1M59jTYE9FMXR4vkx7HLz+RJTVRptg8
vat3Tb7eu+OTFvukc/sYBImzBd+xq3598xgm01/1P2/6DWjm3M54zKUgP35o
7HY/R/knzeEn9C8tGUVf7sAjQnu7OjeAI9Mn0N9Ng1wfSi9oPN4FUlH+yfzo
uQy8/nrupzFlqxkDakRHW51UQUeYWpq0THRsAcYXpOIMziH5WYSM9Ul2/gkQ
E3Hmm0JGeEkykDG2q/9LkmjX0mq5m76ee+dUfJZCcBUe02z+Rq9Gtq2fbv94
ir/xGIudaw15T+IsKD2mPFMzZsysDX0bc7VFdhXkPf1MdJdz85XGHK6avGRy
uhZ7NiREEf1gv2Fs/5Xd7TkWypSf3/5D4seYLbvD9z4TK5aq28buIimk29fn
iuXnfkxEtaxYL55TO+lF/NyV+F6+VE5f+i5T/7EJzLTHaYTIaEorSCfRIEgn
Vr2hdFbjdosiuZq9tLLHek5cz88V3UjI4vjLD+IK5kuADJovkS49dxm0VWuN
yIbVZSxTpHe2YiCp1syUPN9Cfj5xo46V9hEq84fWhmrTk0xiR/YfUFTzSKLr
BFIB+KGwTrCxx5Dj50vXnUhmpnWdYLNF7xavPkFqk410c5SdbY/yUc9OVfRF
8PooT1ZonY7ykRplRbyBWNzTOZozJIXfNgajV7uE2LVUQuqdp45zkvoev+jm
la/wKxAT65559fjO41fLJPfWzTrsw3uCObVppQeQsZwH0aA//ACPi4BQmXc6
nnXcyesz13HOOnhkkhvXeE1NqFtbrXIsFbXYv3pauP9sIC0+Ihr7MmgKTHoa
nPToL1qiI2J/d7k0NUYjkiVL5aiDXI7bZ/lCGcQzwa/IOZXxHf4SZPBq0IY4
Az0rWTKOG1aTSZmzeXa8CSe/IQB9uqT+0Vql9EDxAQyaufu8lNZm51BjzFls
9cG9B1J77TLfzPiKOUptiGXnXriiUjr46VhKLfdfo58flfkwT2FBUixUTnwm
LaL3Edf3804v5iaZNB5I2JwD2oVVxKRT2ZLWoFQpScq+xwjSkRo3+nwtMtY4
/Rff5u+Lv08TJjLUnBIusXW1ypY8cytxgsQ512BWIFjZ6Bfkdd92OeKreLa/
VUhqyKe8PPmVzEcDaefHayqkc4JqlCSNn7Wt3pu8ciIvKwEyRCsdJCHN0WIS
DNOYiRc2cWaIrX9jkrKaacjKqT3DzOVLExbPvDarD54yV5oujxMpeq/NQCBN
i8qlia59ccP/tby4CeEcXFqlxN/X/4Sz0ZlJSqZ2632/01JWycampa58jZll
a+NczY8Gv/dSCDqEKU8fH0cVcLxfSS+qLKXFXTSU1aK4jD+Nt93+qkRjfulf
EQ2igpyxVg2TYxn+1ehqsHSICccyzaNeLtNRBMGE+x+kZZjUzWSY8JOOBebi
Un6lg+WWdgPx9/X+2mR636YMmWYvxD2zkWE5imUwByl3fDJHZrORMpbRODvF
R2PemymjnpdGMkqGLSWja0eIs+YhaZZsZqOnrU+crDXz4zpZo9Emc9aUZHv3
sjESZ6xFnl6bfG9whPnNvBzBkqscJYn5JHCAzrt9XSsWtn8mQ26YEUAO/fo2
zlW/KTnKxb7a5Mh7JnLkaPhUSo6QwZUhR/TRbLldNWnic9QiTQWJEWZ1k/F+
7Wxp4pVHpjQ1TH+L3w+OPFe2bq0sSxa7RML1HGUJyFaLLLUmtcbdec5qtKeZ
XrG521NaKYQy1mQylqCzBu4CVt9Lmr/qguC9z3+dsNr8MDt1dnLnvXmzsbC+
6iyysE2WC1gI1gIiq8SKr10G/6TFTLXOR7VZWA2dH3kxT4bPDPH3w6fy17ng
Z2NLgnVu4IOLpVxv6PL4zF+pbe8/NCVZMZGU51heXG3uUk/jOAcE3X2okL1m
Cf14tSBmM/2jvtBXTjDwXp1yGmO+pOZAln3kwl/z3gqy7XMFsmWbv49l++My
T6G3Vv78bk+pTsLBznTi63VrlyyNABLDJ2RI3GRWOC3hLocQCzoyqJVtOyFC
BhpXleT940DjZkRIvADnrKVz5FcOAPpDZPUqxPsBVQ6lq8nr6sVpeR15gUfl
B1fSq5/RB3JWP/jU1ot18x6Uve9cWEfRd9Zr8NcmOV0oA70z5dv7rZdve1rw
utWssciP5I6cfTh5+8b88KloTRfKOstCbbLu+zdA1klkQllXHlcqdibTh2Me
+oEqI9YIaSwLiDXkfF6foQ/VLMULgcTm64XVXxeQ0Rkj/vurPMnfzZz7glVa
z0pvnnhW54rYiVbky1w02+8r65GPysIprR7Nek4xbKRFI6kjFCn2Avzv2Xqz
9sugbHqXXTtO8qg9uyetN6R3t9VrYHlps2U5MtbsCzWnPY+G6M78lO6QGroy
jESoTuwVUQ2StVq+BkGKYg0qWCaZl81Yg8ZXxBr0CzLv5VkLDTmfZ2mIZIHF
eToubtG4a++7Ku9mbp80RU9XV//uuK/b9gk/nwh++MU7n/01i0w1Q+BZ32t3
d/e76XluTT4ZYfCXVj1piXuZWYJESG2kGN/U9tTn8jRvb+a0Ammcfn6Cvy/+
qSGRXyMIFvo1Sbkpyo69eVuEsFPKFhGFoTeowI1tUbwmyY6/DXY+rE+ka5pt
t9Y25XA2rBAzbFHM2WB7poOqoa7h53Wd7b0oitpWlavM7e0b7Hig97XZHR/b
r83uILO7it2Jsoobcj6vhZlJVaGNA4/Ot4I599wMMudze4DwGs25ygtY7lHZ
Gl0h7T+aJfNqhJ8sW/Jj7pXUFsGhpZjJe9J1L00tvaA7J1n33cW9vOsaxnK/
s9cwAxs3Zsj76+MDZfLualDgaVKJcsvLuhbwV0dg9eqz04N6eu7sOHQs/1Zl
q/cO+X995npa/uEjJHnHyPat752VvCOxLV/etbN6przfW2V8WpzcZ/GwBdlZ
pUHm6az0ATS1qj6IT/LN5weVm8f6cE+VJ/rZzBmfrd7grlhvzj6cqTfBEbiC
r9iWMZ9v+oJgsuqLuBxpIOp5GJoseqIef+Qoe3+by3jL052F+NGNa31bhnAl
1Z7tp/neDnflxIoCrfE7OzXYsrTuY9laM1v/7eaPzTEeCu0KM1QJdFS7Iulv
4kt03pVc5xv3XtzS2q2z0jGfxxbXUqV0rG8/TUMFHcsczYVQjGxvwIKMjrFJ
EqbW5ugYIW5Kx34zGtNsz7GvIMz0HLdEOsnfSO4msRpdxXO2TgWdzByBn6ui
k9VYHa7nM+c+UEVnRx/IZHnzM1ie7L6AsDm8kj7DpjmQHLMBLZbjipYmxvsS
xIeWrD2Nj6rxvti3ntJ1WpOndL1rzOn6tcsE9Cld33lBdZ2vwDlU2YzwZnX+
ZuN+0Gl0SjHiDJ1uMZ3mv6tTPAKDn8Z9N2A45GA8L5jwD3+Yo9nwFNes2cG+
JLFPu5peI/JY1s049UmDP0cFXbZ60JS99Lr6e1V1c2T/gQIydW61boYdlb0u
ernO1MWGiTNn9PfNkSYucM9iT+E1rCHSiWwNNP6PX4W8sRFcaWn3WVqOxBr4
oVloHIsKrv7W2z+mj6zelDWwWOz+a9RAyxqtFiXN1sAw+8Y0sDWlgVO7CURh
PvWeybqGnkKyg/z1lZdzdNDf8+3Wwb83d31aAJk06YI+AXuWbz7NddVxhXIt
upS/VsP1eX+gGnXosXWpUcnWIb7za5en2z9eow75zgtBhHW+RZRDncIqnb6S
WWuyrMjKbNW8ytn6hAxYlhXTp7birpQ+7WJvDbEN06fcNd9s9Ajx1zNn8tir
6VUcj62NrVrW+uSlH5hezc/Tq6SCHz7WLgQz87XLV+nkaNeGT9xW7aqNebZZ
N95M5rlg2ZanijufLdfGmRNr9Onnoo2zZ514Oh6tGrV0V3uspYUg9zTmnJG6
1q6tgS/GayvwQLVVZIjoa7a2xnn/Ofwz0l7zcKTuLNDeG9faOtJrT2jvS9/H
GVvYPgl/4z/kGxG3q81CfjxzBtV7Q5qsFtEqArMjzz5uFVvEDydqfdAjSFeU
Zq3wheZpo/nBtHbDooczbf7RteyIdKzHPktZ7kNrbeg56MBQ9pwmg02q9mbG
oWP9/ftZ+tocZq2R4NHVLkYaCX8MZCGWPd/lpZr+xd0vKlnBW6FfMmatZl8y
NatgnbBr0qwWyx9dvPpEEnBL9upPPDtVcB6datzyfZAR4k20QJraPfEt0cpY
h1hDRFubzRNU3DjKjz95VrVn/+9YjpplSc/F5++1pUr82XtGsrXFH1+uLVwv
ZJWmBVS8qrZcnVI3/5WXU9oytdvNKzw2tq6bsD73ch+tmHfOqxU0MXcbdIJY
BRwicn30+uMEsdJHVXlGH6jatyzUFlrGR9rie6ZX0hYStlTuWa1+/FgrfO21
eKTpnAuztKNx4vgRPq57kMYy7BHl9SOVe5SlH3q/mAVwjWr6AeRCW5zZ6IfP
t1L9cIhJh3r9wB2zxy9DP9rWH03pR5DD6fUjzRer6UXteRphbAwjwd6wavww
W2+MtZHeyHgHejPhut43aVbTFQ4xsndTGSMiaNevpnXHvJ0Tth8RdAeqYbpj
Qht2jox0Z3zFTPv7VXf2/86sdAfPAN35bDQ2Wdww7kMU91X8TKBv1vgrtXIc
OXi0auf1ubE/r01pPcQzsrcfmYeaFdwz9Eb73W2950hBGqLjW4PrSTWwsDQw
3cmnLqS0LtZKnJ2rBn12PLRSZXNmGinokBrlh5gNrLcGDn8bYSgiS3Ll+cYP
4TJB5xMMJ32VLdN+9FK+k2uX1RdWSZ9ZGmELrHrTvKRQ6slTRxxndPtV8F8V
qzcf8ppyoz8oW/LWHAf0vpWXvh8wSR8H9HVxlWwiI5Y8zwLjcdBt04lIuxtM
uzUy6PVYpKUJviebTdVmnIW7UEvnW9NmyAZNJB3AkWQgChEZnbOGcs0mJp7J
KauO54ejo6D/lqVr+i9Zitp1HV/BesJDh89lLxs5H46/su+hMm2+p6a7imN/
d7oRUZ3+P+eg4xOuct/peN9+jF+b2/0BvzMMaQ1rURJXoknKW0m3WbbuNt1G
5Uuoy/gX1pnbnUpKRbkuW+InvUYaBH2l8Xx0oE/cOnluuuxlUTtFyNorpctd
8uj7Nt1Undrk088VUl5OMr1hnKE2jTS/8ALrpmMaiSUf4hGBRoqXiHOnszUS
2AUuaBqpu/h4qxSzQkO8ss5SqpNTu2d2fIFHcdNBZsS1WVvSHhIIxKNCbQv3
dRBtm19wUWh78eZL5xcXDy8vbiJxy9sD5s7g3rO0R7MbaI1DonXjWl1o8bh+
M65RaKxFuzaPzEW76MM5aVeLsbiCFMSEs9hoHSIJluqDX0O9/C7sql/Icqqm
X7QOucN+P3144hvfrcvXLkRRUtqFUSPt8meF919nw+Jx6Yqsn1Nhy+/cG1vX
2mL+uEOvp7RaP7n2S1l6OhuW7PXWMklMb2mu6BuwGtOwZhJBGFNaFyZCleMK
tTh6GOpzwTJ4WJ+x4hgZ3A4vUmRf83W5MdKX2Nsaa3Er5hjxvJrYsuSx+17d
dGlckywcfcg6F0eZP5PWf9uc7thRXt9ebP9Ujv6XW1H/XL8WXSNmzvWhvBNv
C3GBkTTOasF7wtBUfk0ZPhzZh/PbljsxPoQMe0B3cHIM2+PAzeAEvKEgzB4n
TCI4UlKGE579xhqwwHAgwg31WOXghrxxKwjcPXiTx42R0dPVcCPq7u7fZ9e0
6bVdVwnJ1aVfuXwVaHOV7tHxmbMtf4wopUfG2taNJhmIElp+9jR9OKkNQVC+
P5Pa64iGZXwF/Ll0AvVQIROBRj7251bFDlppCze3IFJNPKAxebqkPODRb8To
8aEqMxBXaZWjC9gBqsyhbWGlNI/E76TRArumE6ws7niSqcL+3yGLFc/iB6vc
10eSbDaBnvjMMuGrh/aCp80dRQriuquAIpv/uCAlZrkoApZhPhGGj8vjVlRf
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
6XSIFEXt5o+u2Wy8+cNX1csNP9L01j8opPhUbDslq6PcdtrKmnt1iO0ku5SE
tpOTSkPbiTNx7cxcbOexo6dVem33MLOdzMC1RhD72Kj/v6rNtJ6EvfdVspn0
b8pmEiBENtM8p/PQUNfbzFdOVLSZk2c5XlLwK1Szd41mQ2c2fAKf9K9eQfAN
o6k2c/rwQMeywGau7k3ZTITDy20mxJn0dmTV/12QZD3fUsSFpmKbGe8GfgcQ
O1w2yQvtPuOsZ5Ik5b9piM6ttcDOjlqFH34HiszdjPkpK3tigaJg7PgB41em
J7YV+5zSvxaCKohHspplzfbDRpZW17m09sEXnEscyT1s7cx0vCKN9zX/WPQ9
KntsHQDw0ogwfOilYMvhbDus2RSvyfYivfeZHZa4feL+ADzwvPDsdN4VmWf4
eVtsTc/uo8g++8y2yD6T1ME+L159HBYOcUvtEXJoQzJL+6xxy6tTFoZLAhNt
fYoaiA9wA6stozk2WiDR2ehF0KElqwTjznTTkvDgjj610eII5jSIUWTa1jMw
zNNdCeTaqA02V7BWTizr3Gc2mn94eRx1UHCJqNq7PpDNZKDxkRrob6mlpzvT
cTvyouIBKS8Nv+sBu5DRqvMuPaFk6aiTvfj7bzyxBA+NsfzSqic9Ujyuu3Sr
x4fGPWWxlxS12/CdSdpiJ133FlwPH/bBzkzDYpP95d386h1mKUahFhppYW2d
BxFLVlCWslRXZ0MfidhNb/zdwHyP6PjJzuJqqWkOpffakjVjDWa7JbmKTuJi
xIe4xW1GVS9sNyIcmu/24IN1zVW6WaZsec+Qs+WoSdx/QG05LNCy9VqKpLbc
Y4za8rVbsZFshi1H/iw8wifPax14a1i7TN+BhhtPKfXurWzNmxevPBJZc9xJ
mTXv2oVd150kiM1/dfp7Odbc+7izrLnjolj1YsrpZVffnumuz/ZtH5FLJpUs
+ut/xauittXDalWv/L9sMjQjKdOiq/TduIZbr7M4epPZdLYyxcN1TYFltyea
B7JcsHQhtyuEWfamMCbKvY/CKkZv15E6lwR2/Vjng0BrYxk+p1XX064aE4aE
LSPuca+mZgApFpLY49r0L7FfuITUuhN8y24ZzW4cdCeP7FqPfPmHdaPv3bKZ
zBR/V273y3/Dc8qeVRnRu82C6ourUz/q/jgxptCPj69gX6RrnuCkPyaMWocf
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
LIXvIkfKso+QEicue/cES9SBq5zvAWVQFm2aHN2GqaFPru23dIXHREbUQ6br
6GKaNa559SmOomMiyeNVIhs9okS2sgQrDiKDpJQuL0GCiZVPPRyR9RWWoK6R
sJdfKPs5j1NpOItm0IpxPcFeqd2yXP7EA4OwUPQnYLIl3TyK7qHoBaJRLVfB
Xahkvao+1+AhVkYe2H28tbhfPudzHKJFFSAa7fpZHPiInjl9Ps1YtIazQxXN
d0pV9EaRDO8jR05+TI+V4D2YGcmmTs9ZYDNE/+aje3kdohyVWfeT6lRGa23f
1/JUxu93eUeGyuh/Q7+Tp7LPPmAF/Yvc63WlInctUJnv32rg6TBcNKvEYIJL
47R4CKmzvl9SnctkZyd34HOftkDiSxtj9X1gBC0i01owtShJNqG/dYkG+CXX
zaDrIsNFVlf+qtYrh2mFQe0gnlu4krt/d6JU/IvCxmNmI2rwV14HWeffawcn
qKrg0DMNOiUNuruXf3T5ZP5dYb3We+W5hjtdZ5ydpSNC98mREPkEMr45UgO1
cnTPO2PqPPBKwvNF3RsgKp94Ftw8+14/FSOHRjuJwGoq9Ijn5xqaGV/DpBZi
ch2N/j4NOIwjWoVbpdtnjoDV9/x+8yaNN7b8sY8Ur0uhTVoq+SxAnYue+VVR
Z2KWuc6ZX14tWQ9jiQA1BrYWb+qcdvs6Eo8wF5FVgKmGZ1sTeYuZn98IOftO
aXTj7nFro7l5aU8nDCYRUobP2ubQ1t0HDQ9C7/vG3mcS6YCnWjx9xWUesPQ9
SkNcBex8Zn4Nne7sKeY5bWIvW/+xwY05TsMBzNRRDk6UDp1UThMswKFZ34bt
SLUvbp98SE6DPTFO+3Rcux5zmirRWuQEwFHYzHfNDSwK37j7/jU10VM9hGpK
alM9bJqQpU9mWeIF5PACqQ2OvZFIVablPzXRB2hDmPXsrunVM2ck63ffCCFb
sLw2OfKkpr3zvK17aoper27S1Tm5e1Vi8bvK8bRLP+S5den4nlmIzTOxtDae
6zWd2dZ+LomYDY/fapfroCmlAZiVpbKe7RlmIz+lngA2xRVdkSAHMIjPIX9d
fhuiZHmeA4lNjNshfcgJVxJzBxzv58tITNSdfMQCiZFRVhLbeibJkFjnPq/8
L+9+iWQmfIor89XFVUrD27YriWmOnz0Rukj/InUSW75HYSIisWaOmJWT2KGT
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
aaTSEOy745nWiNIckIrpVDbCXKm2/VhgM1dFNpTmr0e/rszhFGNWmbcibs3w
4BM5AkLGXiqN39WiSAUjh+aczqxXYxmdffYB68j6+Cir0hWbcCF3NAprlj5g
39c0j1s5U8YC+ICsJIyJq3K6gIIyxKubYj/C3h+TVHelGBHsqPEeplYvmrup
/VNl/BVjWLY0hB6j8wp7XLeflKnWFYJr+AQ+9cuQqeuj67kD/a+jsTLToYzT
lSJYs/bK6t9LgsJA1H857n6EnsSs0g+u86oD+gKWSPPrOg6qZaL3wZ+qzYEW
QRoVzuaYLhZdhrWyiH2Nn/ka06Ftn3lTIXay5FLSq9yNHDjrU2txtox35qyP
mOa8G46wFs0a041smu767cQiP6ll1hG+0bf0uHFNeLaSScLfq2INP2hMuVuX
NaudSPF8USeE5yx9Qufyg+b853NrxBnvxvrfvfYPlh2QYTys5KuSDfvRPWx5
U2ElSFfRIk3yjNe7L40YjwcFZk+/v3SGAZ7Wss5/jC/xHb/d+tG+LftcC8NI
7+zzKABIRf0vkeN+YwHZMnodbS2YES+pGnmT2h6h4aQi6Zl+BR4tJqfFzBud
tSCZBfho7Tr2UKQn1zIL6ZkgEH6/EKKPiZcOSufLuLBSSe8eTx9yt7ourZaq
dPJ1ZTx6GTHeEQnWbx4niKUvCn0npi9OZhiPPoNAJpGm16kXkhZWoEXk9Lo/
YAsyxruBwHg03WU7nmfVuW5Z21y3uwLjhZ4dA/txCvwY+A7qCwSbN392kz/2
5PlYcSqHd7aW7ShQd1L0ofT7lo4RxAHpTriLoGd6yjvhcLi1098DuV2uHpTv
t8HGAt/X+npHnSnIzsuEqkTdQHiaEepeIfSdr0h49XQ9fYUlLatkJ3b97MCq
9rn+ZPEPA72Coyz3Xxs0OcOHpTwyefT14mWjZZRHDq3w7cUdRnnF/cWeIXg/
UB53kwapebxx5oPbrBAJymPlPznPNl2uHOXVJqpVVk+zyZs+t3YMWRy3ib5A
R4qxnf3KdytLXsg/14gkh3fV6W7a2lsloqlBly10V1Na/ddxl2OlMuDdSOFp
m8FcwIgTB7MJ3KWdAztbvzj5IltIArw4gzuRpH/NzV3FO+BwGsqEJ1sL7Qyo
MY9DT+OOXROXCa/7uJ7crpLsM8tNzseJa9lLtKn8hLyiOQToUhMdk0YjGMTJ
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
a9ZhjJjXz5IBBGES1ZJ5o0eHlD3aMVQkzEfzhLlt/Y2h/0g3R+4OCZEja38w
sJG/4BwJnQGoTCeeCvwhUYaIt6BGjW5InrmCRzkLbcp2DmO2ABvzBGiLqCKS
eXC+hDCPqSxq5ApRY8mvTmbjTu8WqBkmaQXurFIhaznlRv9ga9H31Vp5Szxl
SYyP7hHLoKUX5k3o+fTRPdpGJEbuWsVAk0ySnem3mtt26GlQRSI0qRUsnOVF
7ETXTvy5YuHAntPy7gsKfSe8W9WSZbwvn35J24/1beCJvHj52OD2YT0bdEuR
SpmmZ8ShPCiqG83zJTjG1Iq5PguhYv6AFeN2Btp5zJ966Pyi9QwH/0ZtDccr
aS5JzveVLX+BZ2NRuUdQFUFWGHg0vrtPFW3wFIgzaTvYxg0G40qxf1z9L/mx
eL1oiNzpKCNm1dFoFaa1boI420n+Bt1ySkcn82xJvg1s6bn6CTSTJYTmWfqe
2ax87GPGP8PXH90Dn8/zvQ+Cw4TZOL3y6Ph8PKnpIxykKhS6FxdGbgwu0kkk
4Rf63DxzytpbwO8tlX4f/vxdjpGiCMnasw338Ikm50xiHDy/03RqalxAshJz
ejQmz5z/E//nsYfrPW35eyDSvIKWWhhf7Q2YNZFaHWIgaYj/NXq7g8kz5xJp
VpQELRveymLXrVlhPUMejY/yUzE7W4qHdVovG8XUBFjq2l/7OZy6WIV3Xeva
iSvtXyIbs7SwPmR1LVkt0cBt59RmIMEokSMtjQZKIdq1w6vtbGb42Xj2WDTw
9j9h2wA5Mo8GAijVEb7hGrs1xa7tMQfXa+dh2tG9y25zYJ9qDaqiyvhFiwb6
+ajn8ob3v3ZT7yr0yc3ocV5mgAq1uaZzirREPIcoPih1u5OvvIm4LE1ttlVX
rdADSYpyCgbt3RAfbPbZifigWibsWck6a1W+eG+6AmOhx7BMoU7TuorPhxYv
O0DOP44PesJeNj6Y1UaoU8+Ryyt1O2HZssJ9Gi0M9bcYK1pV+e4uiBaixW1Q
msyf41bkNrWt7mFV953r3+/cUvvYNscRQqLBSf6UlgkOcTGQMbxwRGz1k+cv
+lackzWhxWfMdu2nt+OyOW9NyPdSb2sMGKifs7j9BVqD+HTcwVwrx0KSg1bV
jZx4DZ+Iq2bFN41qVSQ2UwFrdmUTRjapVZ84yGkeCG0FFaQ8s83s+OMMs63s
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
fsRrs2IUpNy+4zx6tFplWxU77yePauezdXUawNzwRMbOF1aU2XkpGejb+1Jq
dp42yqYPdbDMzq/8ltp5aVvsdp4rWiC3aBr4NrKtnfu4wlt3keJvOeoMKz9S
eLq0YxNm5P3bN21PX8XKo/YfyUXmqPO1/66GTZv2XLWajZjPujI7T28qKkVp
xs7LuXdxRR9mA/8F+Ws/3U01I0u1ndzOR7ZQ+UzOzBwV3dIP7DmNLF7tMobz
Te4DpfkO2drwGs2MVovOGidQ43BLbnvtKHacs+T9T+HCYoWO7N7Zr57s8/mi
RlfxcjSQw75dc4jQGLqtUq72/6wGMaNVXLlqR6rEaFyRyUT295vyqvsf/Vdy
djd/dMhsvIzPQN9A1sZb/ThXzzo26Cto4hxdzF/+emo+EL703+auY1ZLLqLX
/OOMJX807kOtx6RX9+IgZWD4RbfkqnarPUmty9Td96/Bkt/42czDW3Keo3df
+LPEkhJR9t7SrdpAky8ez9gb7wRWzZ5LLgCvOTnUtO5f0RSP7HnnPnAHDiqq
2XPJdcnb87GJy2bP5UnTbKSByZz97T6uXJJIJ9LUdafnRis2suTW6d4suVSG
jJ+78rEteemQ9pSOLLk91UsH1s5iyTPnfzLSrCv5MSx5fcaYkHnT3p5Nasi9
uSAidWbIc3a8bxM3CRno6mQ9EXHFtGpojwjBd7XjrStGYU7cjkNOmO04ziKv
rPkaz1c56cN05+p71O7gUEkqZ+TdNMWr8A3a6qkS3Ef3tKczXtE1rEpw3FE1
0TiregicIV5r/1fY4mdVHd2wH+v3Z8Ynxhhgqy0us+g4140sOhoQyb9i/3G1
6KoLfOYcTaSRkSMwFS77ya+VnYRbdHxW2I82xHPetIgsE9ftO3Ql48h7o404
ObMPDyyOyB3qfla8o/dmcQX7PJoB2BHE5L6kc/eNiyf+n/auNcauqzpPfcee
sdOGJKUQSgKUZ0pbFQoUftBCQRQIVKSVQKGIUaq0yBWyFEyrUJLAjD32tZPx
M7bjV2zHGb8Ge+x4jD0xjh05Cq6SNCZ1yCiJhTOF2AhHdZAVRUp+nO69vrXW
fpy97zl3bKcGZRQ5c8+cc+5+rPXt9V6M92sOhHg/FXh/sveqGO8fsjV/512G
al6FJIaGlTimcDl0CjNDRi/jvcbPlvH+47jDq5WawXqsltFqgPV/G63xh4FU
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
J42wztET+O3kj7dZ84XZ0UujHY4tk/FJ62c8hBQGVPhigqLsx5iSaloMyepr
f41P9K/we/8K9KHVf/r6DIiVunUwVUm1a44T5m63hp7SZ3CJvqR5QeYMdvmb
RG+dsG/5drl2KY6/V2KNOyahIYyUpRC0BI1JvFgXakqZf80ntKW0ubQZGnv6
uZDG0CVDrQzwXfo0NrzncEhj1KTNRs/ijdP7d/Gekbez08Uo9nak8Yo9ks+P
CzUp96eoqQY+KdXE+IQujk6+I5zKUYtaQhiDyHrPvjKHQahe/PBRkYnVVvsX
KZpgb7fz1EyQIqRLT44i9v44pAivT7TZWyOdjT8zFmgnj+2VCqCwPqcoAqut
5MC2MNeXnddN4k75fU5OCeiBziSmB5WUmB40fuEfznH/b1P+oYiOkmRUpgdb
IaImPcB+ie7c5kwBPcDCZ+NbP19r/83fUcpuwvtP8cW6/0G0pWbtc7PEJD3E
XqmhlQt6/Fhrpof5w3l64J5CTA+DG1Pr5uhBvUBleoj10MzpU5s+auqNKs9k
9Ebd+ST9dLrTJ6sTojF7TDt3P9hSB3T5o3FeS+a8Ido6OfaoufEfk9T0Xl7E
vL/8khS9TeE8UDOL/m4r7YzexHIDqnTFdGYkLs6418raUzzacX4Qpq07dgtt
oXeHT1sczce0JTkTdWkLJyed+/8S0U4cmVF11mS0LvNuREhX1Xq1I7Zo/WFQ
AGWPNxdu5PV4t7de9jOfJqiAXLQ+Tawc9rX8flf4ReMICd5x8WBpK8JLi3I2
Q7e/6xrTVrXr40/aeLiZAz8M9CQb019/1w0dap0nt+vfwx6TnubsTmjmmNtj
ayfcFe3tIr5upVTPZ6xSLsuPWlsbu6dlSWX3JJQ4t3s0b0uLXy18L21518p2
qJa7ZrhSmmsznyJG3PEpPK/7H+cdGz/1azMYl/vlpJKGN3Jng0HNX/t32rEp
umNonGU2jG0iUX6z2ylGIrWh1NQ74O1jvcNy099VcN25Wg7jGN0UV2cp46ln
SsiObHuXVxFbToHs6Hds/WSM7EIprZG9wr81jal6gh4GkimsH4xMgId+cFd9
27x9iiSwCi8EwdmCu7ZVeovuvHMNTDHOW4SeJTOb2/w3Aoryfo0updx/bVrQ
MAdQW/6rzm/O2QHKufAejtjf45c1vig8Lq/pFUcLi+fdDlBwO8fe2otlrBfk
ipxPKRllW0b/zaCX6tsBeh17smMTfUb8uj1P01IGnX5te0+mRO/iE+wUdWNG
ND+l3vEJpnkhfIIRVIwODYqdTWwtwYl1c/86PrFYltYTS6PIUSLDAOwbivAk
4HwUaVnlxWIFtovgRKqyhCX2KmuryOyV5jfyXsEe4faqQiJ8D/aqTV9ArNWQ
fCPVzo10dej7iAfhjpRGfs/sCllkm3MWy65sYadqUN/QSkgsP6DGUqHyQ7w7
IJJXXy7tTk15AnG0NS1P9mNNeaLSbhlzLu+u+m95d7XWbCxHxN9L7+vU3a/U
AOtb6GNrCMu2qI+96waJKT/4YLjzaufgnUfnTt35J3YstFaoB+91O89WJd55
WJHyO6+e7Ut1PBOzIU2QD6OdQhbA+C9OMx+ePnZwbOfAK2f/N8OH5JMr2a1j
PuO5Ur84+ytzGepMxWutFhte64ViwXO1tRFHG8V4eXP/3sTWLusPEq7JrJl+
j715UuHrQFif2FKbWZ/t17M0zevzXz9jm2ywPk6bwfos2SrrozmI2fVB76WO
PylqoUrL9WsDRbJaSQ5FPoHvR5ye+f4q1Ph89DnWdnxaja2k8V6gbmHUS620
9i+98Au79st3seaTX+tAl69Ni80FG2bM3pKjxcRaaRc5ezHGOm/+gZUvll0Y
E2FtKiReHpU8bEwzr4Vq1fgeZ0nH/VG0TnktNNY1R1e6BuZR++vi1nSCuZvT
Lz/32P78xmjXeKbat4dnOiyVr9xMFw3yMgYUB46decfumbeTEaYeh50cXTi2
8uu2H/b5sQA3B9bNnLe9SHBaSv+3H4MVHC/r+VWcJhycjlALVtnlbWGV92wv
SVduldE9mKUZ+FXOnuLnDTExXRyrWDWmozmLmf5q8hJwx6zGBOnp0PfDmbqo
jKqZqr+jaqYf5YfyFvDOIuAlXYMKXtKsyrbnrlXOA9TQuaP3u+1N0e7cq3gp
pm1amwprcRyvUZO/dBXb5C/yLVvN84Lwl8bB8MprfWCO+g87X9DKU+B/buUN
XvcPZqmuwqJr3zm5Hevc61d++650+VfMv815K741657XPqvg9SvndCVlm/sE
fQ51nrbOCWmIymjz4gu/MgeikadboBUq3OfRCphcC60iX0J8DvBpOX8lnz01
JYbVg22vxqeSs71x1n3NpVQlIiNh1tbh4hPpIzyUauvmBM9GXbM2z0bVBi7I
2ahRIaybaIwO/NzOXvOuaH1javpL+88llRbHjvNEUboq9mJb/IUYBzPDq3UF
wC884+Y21mHsjCcZleXJ6D0iW1bZ1kpzXDSIfs1Z+0lqbqG9JDMnWDae3Zeb
0+yNLEumuGaS2dE/raCtKv9oPR5wlqF2/a+8MtRB+PxZPPLyImJ7eTW1mihW
c0Vz1qZFsxyFzNkcU0haz3Kzj/cfq99KW3lDQCEnf9g0uoLVi6spBCvh/Crn
dcwVWsSlyV101n57sR7vXhftJ+elqh2/XbSfIP1qLlkV/ZZXp3yOSGX0qu9u
D9ftP7FMEs/W/hPHISZHHEkD9htzmbOvX3n9yutXLvorfn3x844hlPlYS4aG
FhwiDAuOJY9DajT1TokYSc/3qVD1PjqVasjEtBrdvudFb0hk6LV7XtSTfVKr
XPvcaCkNN8LZndp7t9KC+XM8u9Q4zu+IPxaOxxXhPsfxxJrNtef4OY7RlijW
8/093fxeWhcjARw9erSou1vx5/R3nSttvhYr2/6sJv59JD1ODTpRhCxfGkG7
I/p8myNy695IUNjl0ee4un27n8/1fa/181JTLMaBeFcutnGf7+er3hdTFSFK
zVO+3bX8TVubdp/Pc2grZLzYZvFaP98usl9s4///5thzXa/ftPmfP64szMVr
+Yywv3/B+91eh6ZVRD97Xr/6Glw9Yf/t1GqIfBoNJK/aHwru6niuAAPgDvnz
QPKq/fkEPTVu/23oX2lECxLX3BM/pb9q3Bnp5ZbGWC3hGGdVIunpvgk8Myv1
TKffInryN8IqkduS46O7ur25yxJqM6Petp+I5zOZx0ZP0N2d+bFpzJ5650LZ
WreYvq9DRziB5/rSz3X5z7l9Hq49Rnqmb+9R/O9U7TGmnsuMsTvsfOfod0eN
XebvOYU/41rrXU49kdzlroCLZFgd6VERFUxzhONmEfLj9yf4XDynmK8gb7kd
3p7ZYeK/S/zuxv736NUOHeuEny5TCT092X/a/KozkQ5kQ3VGbq+ECyQvrTPy
iqcrRo6HzMiBSgoVrVCpoRtM3zCnxj1zK+65L0+HFW9K3dOsuGd3cbGcmb8d
Vzt+5/8A0nIK5A==\
\>"],ExpressionUUID->"8ec937c6-cdcc-4a23-893e-c6e06a136465"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<> RMS (By) Difference from Reference Before [%]: \>\"", ",", 
   RowBox[{"RootMeanSquare", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"deltaField", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}], "+", 
           "i"}], "]"}], "]"}], "/", 
        RowBox[{"baxis0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "*", "100"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", "deltaField", "]"}], "/", "3"}]}], "}"}]}], 
     "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8251496285431967`*^9, 3.8251496476124954`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[283]:=",ExpressionUUID->"d622a103-1149-4f63-9360-a91f0569bb39"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> RMS (By) Difference from Reference Before [%]: \"\>", 
   "\[InvisibleSpace]", "0.9567283007316599`"}],
  SequenceForm[
  "> RMS (By) Difference from Reference Before [%]: ", 0.9567283007316599],
  Editable->False]], "Print",
 CellChangeTimes->{3.825149649512224*^9},
 CellLabel->
  "During evaluation of \
In[283]:=",ExpressionUUID->"ae87281c-f95d-4553-83b6-b083448c0f43"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<> RMS (By) Difference from Reference After [%]: \>\"", ",", 
   RowBox[{"RootMeanSquare", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"deltaField2", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "deltaField2", "]"}], "/", "3"}], "+", 
           "i"}], "]"}], "]"}], "/", 
        RowBox[{"baxis0", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "*", "100"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "[", "deltaField2", "]"}], "/", "3"}]}], "}"}]}], 
     "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.824913206778594*^9, 3.8249133484005814`*^9}, {
  3.825149659393632*^9, 3.8251496617472415`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88],
 CellLabel->
  "In[284]:=",ExpressionUUID->"186cf002-cd27-4a30-9c54-389ff408400b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"> RMS (By) Difference from Reference After [%]: \"\>", 
   "\[InvisibleSpace]", "0.6552896851154385`"}],
  SequenceForm[
  "> RMS (By) Difference from Reference After [%]: ", 0.6552896851154385],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8249132744938498`*^9, {3.82491332036887*^9, 3.8249133493224115`*^9}, 
   3.8249138507597294`*^9, 3.8251495643562045`*^9, 3.825149667697055*^9},
 CellLabel->
  "During evaluation of \
In[284]:=",ExpressionUUID->"f80253fd-2c9a-4909-b0ff-7ce27137cee5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{681, 716},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 492, 7, 50, "Text",ExpressionUUID->"47550fd9-e148-430d-bac8-bf68dc26d950"],
Cell[1053, 29, 2816, 43, 200, "Input",ExpressionUUID->"8f8fa6f3-b1f2-47b9-abdc-d401b423527f"],
Cell[CellGroupData[{
Cell[3894, 76, 305, 5, 67, "Section",ExpressionUUID->"f0f8bf98-657c-4b1f-92c8-1c5d521f1b9c"],
Cell[CellGroupData[{
Cell[4224, 85, 870, 18, 102, "Input",ExpressionUUID->"904abf40-f477-4c0b-b095-f826ea8dd055"],
Cell[CellGroupData[{
Cell[5119, 107, 2486, 38, 22, "Print",ExpressionUUID->"95bf2c4f-4432-43a2-842f-1c09eb4b3827"],
Cell[7608, 147, 2319, 33, 22, "Print",ExpressionUUID->"83dce6aa-533b-4ae0-824e-2c627c19c09a"],
Cell[9930, 182, 2335, 34, 22, "Print",ExpressionUUID->"5eece199-eaed-42b9-96e9-6464267ac985"],
Cell[12268, 218, 2330, 33, 22, "Print",ExpressionUUID->"3e8d7dec-1673-4a2e-8316-f25ec7d8fe72"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14659, 258, 156, 3, 67, "Section",ExpressionUUID->"d495606d-db3e-4327-800e-37b87def99b6"],
Cell[CellGroupData[{
Cell[14840, 265, 161, 3, 53, "Subsection",ExpressionUUID->"7968760e-7e14-4292-a93a-37de75888bb9"],
Cell[15004, 270, 6334, 165, 63, "Input",ExpressionUUID->"4de94087-7d08-4952-a3bf-d422348e590b"]
}, Closed]],
Cell[CellGroupData[{
Cell[21375, 440, 215, 4, 37, "Subsection",ExpressionUUID->"86d862a3-7228-447a-994a-c0ea2fb460ce"],
Cell[21593, 446, 28460, 618, 2895, "Input",ExpressionUUID->"8b35d002-f204-4654-be7b-0fb3b8cc4461"]
}, Closed]],
Cell[CellGroupData[{
Cell[50090, 1069, 156, 3, 37, "Subsection",ExpressionUUID->"939428c6-80d4-4260-b6fb-5e07ccc2dd00"],
Cell[50249, 1074, 21932, 468, 1508, "Input",ExpressionUUID->"f2af3dae-2ee7-4f04-a789-dee6206c21ea"]
}, Closed]],
Cell[CellGroupData[{
Cell[72218, 1547, 218, 4, 37, "Subsection",ExpressionUUID->"7bb6b9a7-0eb4-48a9-9663-a968f03552af"],
Cell[72439, 1553, 20575, 464, 1266, "Input",ExpressionUUID->"7cf568b2-81c2-4395-a0a0-cce32b4669ed"]
}, Closed]],
Cell[CellGroupData[{
Cell[93051, 2022, 222, 4, 37, "Subsection",ExpressionUUID->"36142c27-0180-4fb9-853e-a4ac966b8e5b"],
Cell[93276, 2028, 32350, 719, 1866, "Input",ExpressionUUID->"aa76783c-9a09-4d9d-b783-a6b23c341d8a"]
}, Closed]],
Cell[CellGroupData[{
Cell[125663, 2752, 153, 3, 37, "Subsection",ExpressionUUID->"7cc8aa33-713b-409a-a59c-5a291ffe9b0c"],
Cell[125819, 2757, 2298, 50, 246, "Input",ExpressionUUID->"2670db60-f0f6-48be-b5d1-3d2a40d0c796"]
}, Closed]],
Cell[CellGroupData[{
Cell[128154, 2812, 159, 3, 37, "Subsection",ExpressionUUID->"3a1c57ba-3d25-468a-b4b3-ee2dc43ecba4"],
Cell[128316, 2817, 12870, 280, 63, "Input",ExpressionUUID->"d09847d2-6cb2-454c-a394-bc709c181b67"]
}, Closed]],
Cell[CellGroupData[{
Cell[141223, 3102, 259, 4, 37, "Subsection",ExpressionUUID->"3e7f9d32-2704-4dfb-b8fb-68079dc25ea9"],
Cell[141485, 3108, 18046, 416, 63, "Input",ExpressionUUID->"562ce821-5f81-4eee-807a-c3e9358f7efa"]
}, Closed]],
Cell[CellGroupData[{
Cell[159568, 3529, 223, 4, 37, "Subsection",ExpressionUUID->"f260791b-f3c8-44a1-8ce1-26e57eaa8278"],
Cell[159794, 3535, 14846, 339, 63, "Input",ExpressionUUID->"460fe1ee-a20c-44ec-921e-33931c850ad0"]
}, Closed]],
Cell[CellGroupData[{
Cell[174677, 3879, 165, 3, 37, "Subsection",ExpressionUUID->"2cf67b0c-1ee7-4e02-a6ae-64ddc54d0799"],
Cell[174845, 3884, 3591, 94, 63, "Input",ExpressionUUID->"d10344bd-52a2-48c0-8b72-994f277e50de"]
}, Closed]],
Cell[CellGroupData[{
Cell[178473, 3983, 268, 4, 37, "Subsection",ExpressionUUID->"faa59fe0-a9c4-4183-a71f-989f28f713e4"],
Cell[178744, 3989, 31743, 763, 63, "Input",ExpressionUUID->"8614a3de-9787-4b7f-ab5e-e7953186da18"]
}, Closed]],
Cell[CellGroupData[{
Cell[210524, 4757, 166, 3, 37, "Subsection",ExpressionUUID->"6b9ae53d-05df-4acd-9548-4d2927a75f68"],
Cell[210693, 4762, 6761, 165, 63, "Input",ExpressionUUID->"7698bc73-2626-4fea-857e-9b0ea079399b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217503, 4933, 154, 3, 67, "Section",ExpressionUUID->"349400e8-5d87-4d72-9d46-2c9cf6d73b23"],
Cell[CellGroupData[{
Cell[217682, 4940, 162, 3, 53, "Subsection",ExpressionUUID->"a6df555e-cc77-4bd1-93ff-bdfa9c1a8598"],
Cell[217847, 4945, 16096, 362, 969, "Input",ExpressionUUID->"d35b1919-e84b-40d4-bb30-8607724457d2"]
}, Closed]],
Cell[CellGroupData[{
Cell[233980, 5312, 212, 4, 37, "Subsection",ExpressionUUID->"1c4dab10-d656-443c-96ed-ef526ce5eece"],
Cell[CellGroupData[{
Cell[234217, 5320, 169, 3, 44, "Subsubsection",ExpressionUUID->"01188d9e-e89a-4e7a-aa99-ad36e02e6086"],
Cell[234389, 5325, 1278, 29, 146, "Input",ExpressionUUID->"b0b6952c-138a-4fc0-bed1-ddafa75d5c7f"]
}, Closed]],
Cell[CellGroupData[{
Cell[235704, 5359, 170, 3, 36, "Subsubsection",ExpressionUUID->"4b33fc45-3751-4b71-b5b7-6ce20c53eeb0"],
Cell[235877, 5364, 1185, 29, 126, "Input",ExpressionUUID->"332a0f9a-a9fe-4360-88d8-d49c6a7809c2"]
}, Closed]],
Cell[CellGroupData[{
Cell[237099, 5398, 168, 3, 36, "Subsubsection",ExpressionUUID->"6686a1f4-ca73-44fd-b187-b78de872a767"],
Cell[237270, 5403, 386, 9, 45, "Input",ExpressionUUID->"e954b047-7e69-48c6-85a4-67423456ebd2"],
Cell[CellGroupData[{
Cell[237681, 5416, 1174, 28, 86, "Input",ExpressionUUID->"b15c2a30-5531-4198-b9af-255e774e9d50"],
Cell[238858, 5446, 837, 16, 56, "Print",ExpressionUUID->"a6585820-0637-467b-920c-19e083804ce9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239732, 5467, 1188, 31, 86, "Input",ExpressionUUID->"93612d4c-16cb-440d-8db2-ace856ac2bb5"],
Cell[240923, 5500, 10916, 219, 317, "Output",ExpressionUUID->"b0618199-d9f9-496e-aa3e-8df72d7d1185"]
}, Open  ]],
Cell[251854, 5722, 455, 10, 45, "Input",ExpressionUUID->"95df70a2-de47-4492-92a5-e72fe8c7d462"],
Cell[CellGroupData[{
Cell[252334, 5736, 6285, 156, 486, "Input",ExpressionUUID->"bbb6240a-a82c-497f-8d84-f1247fdb2772"],
Cell[258622, 5894, 144234, 2443, 238, "Output",ExpressionUUID->"92e5cd28-baa0-4ac5-bb9d-e9d7958c28fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402893, 8342, 2267, 49, 126, "Input",ExpressionUUID->"3ba7f16c-8ed7-4746-895b-4c4f9e635207"],
Cell[405163, 8393, 74137, 1257, 267, "Output",ExpressionUUID->"f0af3729-72a3-4e0f-897a-5103192d77ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[479337, 9655, 1429, 27, 66, "Input",ExpressionUUID->"0dee7d21-b501-4b82-8c96-053710499d60"],
Cell[480769, 9684, 65913, 1105, 195, "Output",ExpressionUUID->"61a9fd29-8f5f-446e-8599-2a6b7dedc350"]
}, Open  ]],
Cell[546697, 10792, 242, 4, 35, "Text",ExpressionUUID->"ba30ea82-eced-407f-8b14-e2092d733c08"],
Cell[546942, 10798, 877, 15, 45, "Input",ExpressionUUID->"c70e8c6e-6fd8-4332-a726-59b344ffd05b"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[547868, 10819, 233, 4, 53, "Subsection",ExpressionUUID->"ef70ef16-bbb9-43dd-9335-1b0808cb37c1"],
Cell[548104, 10825, 332, 9, 44, "Input",ExpressionUUID->"1623f315-ff44-437f-bc69-964582aae034"],
Cell[548439, 10836, 1853, 44, 186, "Input",ExpressionUUID->"e613e100-fc56-4911-a412-150419a58812"],
Cell[CellGroupData[{
Cell[550317, 10884, 780, 17, 66, "Input",ExpressionUUID->"f04abf64-1f36-4464-82ee-a62391758bcd"],
Cell[551100, 10903, 121265, 2122, 307, "Print",ExpressionUUID->"ed90721c-041f-4b6c-a8c4-a9f34a9413d9"]
}, Open  ]],
Cell[672380, 13028, 970, 19, 66, "Input",ExpressionUUID->"3c96820c-329c-4841-917f-6e44a4477cd3"],
Cell[673353, 13049, 392, 9, 45, "Input",ExpressionUUID->"1d12864d-3637-444a-a6fd-e7022cb8df9e"],
Cell[CellGroupData[{
Cell[673770, 13062, 3707, 94, 226, "Input",ExpressionUUID->"c683d2ce-7e07-46c2-9fb8-fd8bc8bfac3e"],
Cell[677480, 13158, 69809, 1202, 290, "Output",ExpressionUUID->"17758429-6b59-476f-8ae5-d6afe34979f5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[747338, 14366, 357, 5, 37, "Subsection",ExpressionUUID->"2edc69f2-2481-4bd7-bc6f-b513072e0d67"],
Cell[747698, 14373, 1068, 18, 45, "Input",ExpressionUUID->"51970c01-f619-4545-9077-87159e95ab32"],
Cell[748769, 14393, 1365, 30, 66, "Input",ExpressionUUID->"c9a8538f-04dd-4dbf-8412-99f003dc1c35"],
Cell[750137, 14425, 1635, 38, 106, "Input",ExpressionUUID->"1c22e0b5-9f9c-48ea-92a8-998802b6fe3a"],
Cell[751775, 14465, 1833, 41, 166, "Input",ExpressionUUID->"392e52f6-4c00-45eb-9e78-fcedfc261635"],
Cell[753611, 14508, 419, 8, 66, "Input",ExpressionUUID->"3e9235f3-a0ed-410c-98e0-c64bc76a605c"],
Cell[754033, 14518, 845, 21, 66, "Input",ExpressionUUID->"bf5d013c-c6d3-4e28-ab6b-be92052e2047"],
Cell[754881, 14541, 1020, 19, 66, "Input",ExpressionUUID->"51e023db-7d3b-4d29-acbb-602a2aa5c31b"],
Cell[755904, 14562, 445, 11, 45, "Input",ExpressionUUID->"fcb31fea-df92-4bb5-ab88-2af0685af375"],
Cell[756352, 14575, 582, 14, 66, "Input",ExpressionUUID->"25c4fe18-7f3c-4d35-b037-28c4d811dab1"],
Cell[CellGroupData[{
Cell[756959, 14593, 1951, 49, 106, "Input",ExpressionUUID->"33d210a6-b692-486b-80fb-bdac5b04cf24"],
Cell[758913, 14644, 72249, 1230, 254, "Output",ExpressionUUID->"d339fcc2-2cf5-4851-9b5a-ac3bd3e52884"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[831211, 15880, 225, 4, 37, "Subsection",ExpressionUUID->"e9bdc5e7-67b0-4003-af87-8cf661efeb9d"],
Cell[831439, 15886, 1432, 38, 86, "Input",ExpressionUUID->"ff6b6569-181a-4447-85a0-73565e8bc607"],
Cell[CellGroupData[{
Cell[832896, 15928, 4962, 134, 286, "Input",ExpressionUUID->"d717ccd7-e3e0-43c9-bde5-7b458df1258b"],
Cell[837861, 16064, 82728, 1486, 296, "Output",ExpressionUUID->"dbcc727b-a2e2-4a31-aa4d-59996ecffc4a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[920638, 17556, 167, 3, 37, "Subsection",ExpressionUUID->"0b10e8fd-91fd-4ee4-82bf-f717418c7b2a"],
Cell[CellGroupData[{
Cell[920830, 17563, 3251, 65, 146, "Input",ExpressionUUID->"ef9530d1-7df5-41c2-88bd-949d4ef6be77"],
Cell[924084, 17630, 14652, 279, 206, "Output",ExpressionUUID->"8db3df49-a1cd-41e2-ad2f-c4eb20da6d0b"]
}, Open  ]],
Cell[938751, 17912, 303, 7, 45, "Input",ExpressionUUID->"efdf3924-1aaf-4e1f-b567-25ae70670d28"],
Cell[939057, 17921, 3721, 74, 326, "Input",ExpressionUUID->"aa3e9c16-54a5-460d-a5ed-e4f32a23a8d9"],
Cell[CellGroupData[{
Cell[942803, 17999, 2258, 38, 45, "Input",ExpressionUUID->"2add3be3-7ad7-43ea-b6b6-930aa80b0754"],
Cell[945064, 18039, 6189, 123, 147, "Output",ExpressionUUID->"e9d1d442-71e7-4058-9869-9453324288cf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[951302, 18168, 322, 5, 37, "Subsection",ExpressionUUID->"63cb7b68-69b8-493f-a136-c9025ac39c97"],
Cell[951627, 18175, 2454, 58, 206, "Input",ExpressionUUID->"c7a983f6-9028-4f60-be21-de82ab631ee7"],
Cell[954084, 18235, 2052, 46, 206, "Input",ExpressionUUID->"132cd346-b542-43ac-8a5c-e18de6bd0000"],
Cell[956139, 18283, 475, 10, 66, "Input",ExpressionUUID->"22da4846-beb0-4db9-b777-184eec0da713"],
Cell[956617, 18295, 1130, 22, 66, "Input",ExpressionUUID->"b5fe7c81-3cac-4227-a06f-524617374df8"],
Cell[957750, 18319, 1509, 39, 86, "Input",ExpressionUUID->"f669df04-440c-4c4c-99b0-cc0d37b1db28"],
Cell[CellGroupData[{
Cell[959284, 18362, 5184, 138, 286, "Input",ExpressionUUID->"60500423-26a0-42a3-b065-af9ba141ddde"],
Cell[964471, 18502, 83968, 1511, 317, "Output",ExpressionUUID->"51588866-9c9b-4af3-bdd1-678199b096bd"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1048488, 20019, 172, 3, 37, "Subsection",ExpressionUUID->"52a31b18-3abb-4b43-a313-51b7683ce30e"],
Cell[CellGroupData[{
Cell[1048685, 20026, 8577, 227, 406, "Input",ExpressionUUID->"56f3f8d6-9db2-441b-a4e2-38ea50fadda0"],
Cell[1057265, 20255, 161032, 2865, 317, "Output",ExpressionUUID->"fe6c046d-194b-4369-9749-d7e758799231"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1218346, 23126, 168, 3, 37, "Subsection",ExpressionUUID->"b4ea1913-0aab-4746-9fef-dc68cce1680d"],
Cell[CellGroupData[{
Cell[1218539, 23133, 225, 4, 44, "Subsubsection",ExpressionUUID->"2f5937a7-667a-488e-9d97-1d5c96cccd99"],
Cell[1218767, 23139, 9133, 224, 526, "Input",ExpressionUUID->"fa2f29cb-8673-4a75-b874-402e25a586d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[1227937, 23368, 227, 4, 36, "Subsubsection",ExpressionUUID->"684cf7d0-b34f-4bec-9f2e-08aa88cdd059"],
Cell[1228167, 23374, 10364, 237, 1146, "Input",ExpressionUUID->"24f19aa5-dc5b-4ccd-b23b-92f1d28d8cad"]
}, Closed]],
Cell[CellGroupData[{
Cell[1238568, 23616, 254, 4, 36, "Subsubsection",ExpressionUUID->"36ea4445-886a-4d60-a172-9e94f217a41e"],
Cell[1238825, 23622, 7410, 163, 946, "Input",ExpressionUUID->"a0a1b2c9-f9ce-4c00-9b43-5715da7fcca1"]
}, Closed]],
Cell[CellGroupData[{
Cell[1246272, 23790, 227, 4, 36, "Subsubsection",ExpressionUUID->"0afb5ab9-4024-4412-8ead-36a45d21d195"],
Cell[CellGroupData[{
Cell[1246524, 23798, 1045, 21, 86, "Input",ExpressionUUID->"3e1cd939-9f54-4675-be9f-e0ca07b6637d"],
Cell[1247572, 23821, 159272, 2838, 307, "Print",ExpressionUUID->"5b1be564-c4bf-40db-b25c-bc4514d98720"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1406881, 26664, 1485, 29, 86, "Input",ExpressionUUID->"bbc154df-6935-4795-99d2-9797bbf46750"],
Cell[1408369, 26695, 159763, 2842, 307, "Print",ExpressionUUID->"6308529b-3739-439a-8061-e1fdbbb433b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1568169, 29542, 977, 23, 86, "Input",ExpressionUUID->"7b170a30-6963-418f-8f1f-f79297008b5f"],
Cell[1569149, 29567, 159660, 2841, 307, "Print",ExpressionUUID->"f69346fe-2dde-4e09-b8eb-527459085f81"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1728846, 32413, 1039, 21, 66, "Input",ExpressionUUID->"cb111e97-a5e7-459e-8219-e4f0e2bc9c03"],
Cell[1729888, 32436, 159510, 2851, 307, "Print",ExpressionUUID->"daaaa6dd-ce07-4880-b758-84dc85c810c3"]
}, Open  ]],
Cell[1889413, 35290, 324, 5, 51, "Text",ExpressionUUID->"e0b7606e-a423-4b8f-af0b-0bf13c73965d"],
Cell[1889740, 35297, 730, 12, 45, "Input",ExpressionUUID->"b891c696-d424-48d3-a141-c30fb6d8e39a"],
Cell[CellGroupData[{
Cell[1890495, 35313, 1067, 21, 66, "Input",ExpressionUUID->"f05bf206-aebe-41d6-adca-f3829c34c920"],
Cell[1891565, 35336, 161854, 2888, 307, "Print",ExpressionUUID->"2daba1a7-2cf4-4930-a372-75272d2ee16e"]
}, Open  ]],
Cell[2053434, 38227, 161482, 2880, 335, "Input",ExpressionUUID->"1e227e83-2fe2-46e7-985f-fd77759490df"],
Cell[2214919, 41109, 161071, 2873, 313, "Input",ExpressionUUID->"a6c0a425-8552-43af-9f4c-87d9d98d10c3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2376027, 43987, 165, 3, 44, "Subsubsection",ExpressionUUID->"49c87c31-920d-4a7d-bbec-22bdbb2e2a21"],
Cell[CellGroupData[{
Cell[2376217, 43994, 9092, 225, 506, "Input",ExpressionUUID->"d0cf4c33-88c5-4cb7-95c5-a100a6ab6a02"],
Cell[2385312, 44221, 220124, 3784, 290, 123499, 2200, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"8ec937c6-cdcc-4a23-893e-c6e06a136465"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2605473, 48010, 939, 25, 66, "Input",ExpressionUUID->"d622a103-1149-4f63-9360-a91f0569bb39"],
Cell[2606415, 48037, 424, 10, 20, "Print",ExpressionUUID->"ae87281c-f95d-4553-83b6-b083448c0f43"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2606876, 48052, 990, 26, 66, "Input",ExpressionUUID->"186cf002-cd27-4a30-9c54-389ff408400b"],
Cell[2607869, 48080, 548, 12, 20, "Print",ExpressionUUID->"f80253fd-2c9a-4909-b0ff-7ce27137cee5"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

